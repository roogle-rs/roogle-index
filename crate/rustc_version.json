{"root":"0:0:1767","crate_version":"0.4.0","includes_private":false,"index":{"0:125:1671":{"id":"0:125:1671","crate_id":0,"name":"llvm_version","span":{"filename":"src/lib.rs","begin":[171,4],"end":[171,41]},"visibility":"public","docs":"Version of LLVM used by the compiler","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:97:1633","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"a:2:9534:2894-0:143:1640":{"id":"a:2:9534:2894-0:143:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:2894","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:143:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13721:55612":{"id":"2:13721:55612","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:47810:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11205:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11205:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3197-0:70:1620":{"id":"b:2:3197-0:70:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:70:1620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:1685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:24072:3172":{"id":"2:24072:3172","crate_id":2,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:24073:3171"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:24068:2754","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"2:3374:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:61:1741":{"id":"0:61:1741","crate_id":0,"name":"source","span":{"filename":"src/lib.rs","begin":[327,4],"end":[336,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"error::Error","id":"2:3272:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:850:2544":{"id":"5:850:2544","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"2:3372:222":{"id":"2:3372:222","crate_id":2,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9533:2895-0:70:1620":{"id":"a:2:9533:2895-0:70:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:2895","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:70:1620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3467:2957":{"id":"2:3467:2957","crate_id":2,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3469:1369"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6649:2747":{"id":"1:6649:2747","crate_id":1,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6650:57464"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3212-0:159:128":{"id":"b:2:3212-0:159:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:159:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:103:664":{"id":"0:103:664","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[90,16],"end":[90,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9157:2428":{"id":"2:9157:2428","crate_id":2,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8874:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13707:798":{"id":"2:13707:798","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:15883:1896"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:143:1640":{"id":"0:143:1640","crate_id":0,"name":"LlvmVersionParseError","span":{"filename":"src/lib.rs","begin":[280,0],"end":[293,1]},"visibility":"public","docs":"LLVM Version Parse Error","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:144:1728","0:147:1647","0:149:1650","0:151:1732","0:153:1652","0:155:1654"],"impls":["a:2:3376:224-0:143:1640","a:2:3405:2154-0:143:1640","a:2:9533:2895-0:143:1640","a:2:9534:2894-0:143:1640","a:2:3364:215-0:143:1640","b:2:3201-0:143:1640","b:2:3197-0:143:1640","b:2:3207-0:143:1640","b:2:2868-0:143:1640","b:2:4097-0:143:1640","b:2:2865-0:143:1640","b:2:3212-0:143:1640","b:2:3279-0:143:1640","b:5:6500-0:143:1640","0:157","0:56","0:58","0:60","0:186"]}},"2:3364:215":{"id":"2:3364:215","crate_id":2,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:162:1558":{"id":"0:162:1558","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[343,27],"end":[343,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"io::Error","id":"1:3803:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"b:2:3197-0:97:1633":{"id":"b:2:3197-0:97:1633","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:97:1633","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:1685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5575:2766":{"id":"1:5575:2766","crate_id":1,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5576:4969"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:59:664":{"id":"0:59:664","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[302,4],"end":[323,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3530:3144":{"id":"2:3530:3144","crate_id":2,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3532:1245"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13789:59769":{"id":"2:13789:59769","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:13332:2097","prim@char":"1:15883:1896","`DoubleEndedIterator`":"2:8717:121","str::rmatch_indices":"2:13792:59770"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:49939:2114","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:2090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5910:2096":{"id":"5:5910:2096","crate_id":5,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5912:183","5:5913:32567"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3475:3201":{"id":"2:3475:3201","crate_id":2,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3477:564"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8669:137":{"id":"2:8669:137","crate_id":2,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8671:688"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:151:1732":{"id":"0:151:1732","crate_id":0,"name":"MinorVersionMustBeZeroAfter4","span":{"filename":"src/lib.rs","begin":[288,4],"end":[288,32]},"visibility":"default","docs":"Minor version component must be zero on LLVM versions later than 4.0","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:50:1687":{"id":"0:50:1687","crate_id":0,"name":"version_meta_for","span":{"filename":"src/lib.rs","begin":[209,0],"end":[262,1]},"visibility":"public","docs":"Parses a \"rustc -vV\" output string and returns\nthe SemVer version and additional metadata\nlike the git short hash and build date.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["verbose_version_string",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:67:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:117:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"b:2:3212-0:70:1620":{"id":"b:2:3212-0:70:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:70:1620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:99:1637":{"id":"0:99:1637","crate_id":0,"name":"minor","span":{"filename":"src/lib.rs","begin":[96,4],"end":[96,18]},"visibility":"public","docs":"Minor version","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u64"}},"0:140":{"id":"0:140","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,55],"end":[147,59]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10801:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:117:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:141:718"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13801:59774":{"id":"2:13801:59774","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3405:2154":{"id":"2:3405:2154","crate_id":2,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3279-0:159:128":{"id":"b:2:3279-0:159:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:3272:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:2153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:4146:3182","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:159:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3281:2646"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"E"}}},"1:6219:2753":{"id":"1:6219:2753","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6220:3066","1:6221:3067","1:6222:7826","1:6223:54615","1:6225:54619","1:6227:54616","1:6228:54617","1:6230:54618"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10416:2754","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13715:53036":{"id":"2:13715:53036","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12796:1688"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10574:2446":{"id":"2:10574:2446","crate_id":2,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10575:664"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:851:1715":{"id":"5:851:1715","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3211:1431":{"id":"2:3211:1431","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47933:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3611:2155":{"id":"2:3611:2155","crate_id":2,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3612:583"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9534:2894-0:70:1620":{"id":"a:2:9534:2894-0:70:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:2894","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:70:1620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13723:55613":{"id":"2:13723:55613","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11205:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11205:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:3248:116":{"id":"2:3248:116","crate_id":2,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3249:59"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3203:685":{"id":"2:3203:685","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:41":{"id":"0:41","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[106,0],"end":[144,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:13271:1616","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:97:1633","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:42:127","0:43:1641"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13731:2130":{"id":"2:13731:2130","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:15883:1896"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49759:2105","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:184":{"id":"0:184","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"20:317:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:159:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:185:685"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:9154:2088":{"id":"2:9154:2088","crate_id":2,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8874:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:177:1754":{"id":"0:177:1754","crate_id":0,"name":"LlvmVersionError","span":{"filename":"src/lib.rs","begin":[360,4],"end":[360,43]},"visibility":"default","docs":"An error occurred in parsing a `LlvmVersion`.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:179:1558"]}},"2:9533:2895":{"id":"2:9533:2895","crate_id":2,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:6500-0:159:128":{"id":"b:5:6500-0:159:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10570:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:2153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6498:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:159:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:6502:1410"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13734:31542":{"id":"2:13734:31542","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"2:13735:31532"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:50063:2101","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:169:1724":{"id":"0:169:1724","crate_id":0,"name":"UnexpectedVersionFormat","span":{"filename":"src/lib.rs","begin":[354,4],"end":[354,27]},"visibility":"default","docs":"The output of `rustc -vV` was not in the expected format.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:171:1751":{"id":"0:171:1751","crate_id":0,"name":"SemVerError","span":{"filename":"src/lib.rs","begin":[356,4],"end":[356,30]},"visibility":"default","docs":"An error occurred in parsing the semver.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:173:1558"]}},"2:4146:3182":{"id":"2:4146:3182","crate_id":2,"name":"Provider","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4147:2646"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10811:147":{"id":"2:10811:147","crate_id":2,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10812:656","2:10813:1638","2:10814:57226","2:10815:57227","2:10816:57228","2:10817:57229","2:10818:57230","2:10819:57231","2:10820:57232","2:10821:57233","2:10822:57234","2:10823:57235","2:10824:57236","2:10825:57237","2:10826:57238","2:10827:1549"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:23768:15625":{"id":"2:23768:15625","crate_id":2,"name":"SimdOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23769:58037","2:23770:58036","2:23771:58038"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdPartialOrd","id":"2:23763:3173","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:4467:2049":{"id":"1:4467:2049","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4468:1638","1:4469:57475","1:4471:57476","1:4472:3974","1:4473:57477","1:4474:57478","1:4475:2234","1:4484:2514"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13759:31409":{"id":"2:13759:31409","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"self::pattern":"2:13332:2097","prim@char":"1:15883:1896"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:13124:2100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:2090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:110":{"id":"0:110","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,38],"end":[90,41]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2953:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:97:1633","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:111:421"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:86":{"id":"0:86","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,26],"end":[71,35]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2917:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:70:1620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:70:1620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:87:608"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:6187:54414":{"id":"5:6187:54414","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:13829:54417"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:14072:151":{"id":"2:14072:151","crate_id":2,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:14073:183","2:14074:151","2:14075:772"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6184:60421":{"id":"5:6184:60421","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:444:2094","`String`":"5:8472:220"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:444:2094","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8217:3723","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3207-0:117:1656":{"id":"b:2:3207-0:117:1656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:117:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:46:1673":{"id":"0:46:1673","crate_id":0,"name":"for_command","span":{"filename":"src/lib.rs","begin":[176,4],"end":[190,5]},"visibility":"public","docs":"Returns the version metadata for `cmd`, which should be a `rustc` command.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["cmd",{"kind":"resolved_path","inner":{"name":"Command","id":"1:7484:1612","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:67:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:117:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13821:59780":{"id":"2:13821:59780","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:15883:1896","self::pattern":"2:13332:2097"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:2090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13342:2090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13357:2091","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13357:2091":{"id":"2:13357:2091","crate_id":2,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13359:2482","2:13360:57994","2:13361:57995"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Searcher","id":"2:13351:2092","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10580:191":{"id":"2:10580:191","crate_id":2,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10581:664"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:81:414":{"id":"0:81:414","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[71,15],"end":[71,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:70:1620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:101:414":{"id":"0:101:414","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[90,9],"end":[90,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:97:1633","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9533:2895-0:117:1656":{"id":"a:2:9533:2895-0:117:1656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:2895","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:117:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:141:718":{"id":"0:141:718","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[147,55],"end":[147,59]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10811:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:108":{"id":"0:108","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,27],"end":[90,36]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2917:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:97:1633","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:97:1633","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:109:608"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13738:31527":{"id":"2:13738:31527","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:50081:2098","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3437:2846":{"id":"2:3437:2846","crate_id":2,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3439:183","2:3440:1368"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:65:1741":{"id":"0:65:1741","crate_id":0,"name":"source","span":{"filename":"src/lib.rs","begin":[385,4],"end":[395,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"error::Error","id":"2:3272:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6745:2740":{"id":"1:6745:2740","crate_id":1,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6746:55495"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8636:3303":{"id":"2:8636:3303","crate_id":2,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8638:2536"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3373:221":{"id":"2:3373:221","crate_id":2,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3364:215-0:97:1633":{"id":"a:2:3364:215-0:97:1633","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:97:1633","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2865-0:97:1633":{"id":"b:2:2865-0:97:1633","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:2153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:97:1633","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2867:1966"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:121:1663":{"id":"0:121:1663","crate_id":0,"name":"build_date","span":{"filename":"src/lib.rs","begin":[159,4],"end":[159,34]},"visibility":"public","docs":"Build date of the compiler; this was removed between Rust 1.0.0 and 1.1.0.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"2:13818:59779":{"id":"2:13818:59779","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:15883:1896","self::pattern":"2:13332:2097"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:2090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8673:152":{"id":"2:8673:152","crate_id":2,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8674:2424","2:8675:2427","2:8676:773"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13271:1616":{"id":"2:13271:1616","crate_id":2,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13272:127","2:13273:1641"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3459:3195":{"id":"2:3459:3195","crate_id":2,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3460:183","2:3461:919"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3405:2154-0:97:1633":{"id":"a:2:3405:2154-0:97:1633","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:2154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:97:1633","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8874:158":{"id":"2:8874:158","crate_id":2,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8875:2424","2:8876:928","2:8877:2492","2:8880:2493","2:8881:500","2:8883:2494","2:8886:2495","2:8887:2496","2:8888:2497","2:8889:2498","2:8891:2499","2:8893:2500","2:8894:2501","2:8896:847","2:8899:2502","2:8906:1721","2:8908:2503","2:8911:1700","2:8912:2504","2:8913:2505","2:8915:2506","2:8917:2507","2:8920:1321","2:8921:2508","2:8922:2509","2:8926:2510","2:8929:2511","2:8930:2512","2:8931:2513","2:8933:2514","2:8934:2161","2:8936:2515","2:8939:2516","2:8941:2517","2:8951:2518","2:8966:2519","2:8968:2520","2:8972:2521","2:8981:2522","2:8984:2523","2:8986:2524","2:8989:282","2:8996:300","2:9003:2525","2:9010:2526","2:9019:2527","2:9029:1021","2:9036:2528","2:9043:2301","2:9044:2298","2:9045:2303","2:9057:2302","2:9064:2300","2:9076:2299","2:9083:2529","2:9084:2530","2:9089:2531","2:9092:2532","2:9095:2533","2:9096:2534","2:9098:2535","2:9100:2536","2:9102:421","2:9105:2537","2:9108:1004","2:9111:2538","2:9114:608","2:9117:2539","2:9120:913","2:9122:832","2:9124:797","2:9126:716","2:9128:700","2:9130:2540","2:9131:2541","2:9139:2542"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:4097-0:70:1620":{"id":"b:2:4097-0:70:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:2153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:70:1620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3364:215-0:117:1656":{"id":"a:2:3364:215-0:117:1656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:117:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3212-0:143:1640":{"id":"b:2:3212-0:143:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:143:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23138:3421":{"id":"2:23138:3421","crate_id":2,"name":"SimdUint","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23139:57774","2:23140:1238","2:23141:1239","2:23142:57775","2:23143:57776","2:23144:57777","2:23145:57778","2:23146:57779","2:23147:57780","2:23148:57781"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3374:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23151:2754","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13362:2089":{"id":"2:13362:2089","crate_id":2,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13357:2091","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13795:59771":{"id":"2:13795:59771","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:848-0:70:1620":{"id":"b:5:848-0:70:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:70:1620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:850:2544","5:851:1715","5:852:2545"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:9143:2806":{"id":"1:9143:2806","crate_id":1,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9144:53041","1:9145:53042","1:9146:53043","1:9147:53044","1:9148:53045","1:9149:38745","1:9150:53040"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10416:2754","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:40:664":{"id":"0:40:664","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[101,4],"end":[103,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13771:1703":{"id":"2:13771:1703","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"str::rsplitn":"2:13774:55647","prim@char":"1:15883:1896","self::pattern":"2:13332:2097"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:49893:2121","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:2090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:134":{"id":"0:134","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,27],"end":[147,36]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2917:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:117:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:117:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:135:608"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:119:1659":{"id":"0:119:1659","crate_id":0,"name":"commit_hash","span":{"filename":"src/lib.rs","begin":[153,4],"end":[153,35]},"visibility":"public","docs":"Git short hash of the build of the compiler","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"b:2:2865-0:159:128":{"id":"b:2:2865-0:159:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:2153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:159:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2867:1966"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13752:2487":{"id":"2:13752:2487","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:47810:176","self::pattern":"2:13332:2097","prim@char":"1:15883:1896"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:2090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13342:2090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13357:2091","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13719:1719":{"id":"2:13719:1719","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:47810:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11205:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11205:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3165:75":{"id":"2:3165:75","crate_id":2,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3167:311"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:2153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"a:2:3364:215-0:159:128":{"id":"a:2:3364:215-0:159:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:159:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:6576:2753":{"id":"1:6576:2753","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6577:7827"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10416:2754","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3177:233":{"id":"2:3177:233","crate_id":2,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3179:128","2:3180:1431"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:75:1626":{"id":"0:75:1626","crate_id":0,"name":"Beta","span":{"filename":"src/lib.rs","begin":[78,4],"end":[78,8]},"visibility":"default","docs":"Beta release channel","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"2:13803:59776":{"id":"2:13803:59776","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"self::pattern":"2:13332:2097","prim@char":"1:15883:1896"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:2090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13342:2090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:13362:2089","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13727:2863":{"id":"2:13727:2863","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"str::slice_mut_unchecked":"2:13728:59762","`str`":"1:15889:1901","crate::ops::Index":"2:3672:2887"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"1:6841:2756":{"id":"1:6841:2756","crate_id":1,"name":"TcpStreamExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6842:54750","1:6843:54751"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10416:2754","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:1031:2773":{"id":"1:1031:2773","crate_id":1,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:1032:2544","1:1033:3715","1:1034:54413","1:1035:54414","1:1036:54415","1:1037:54416","1:1038:54417"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:120:1661":{"id":"0:120:1661","crate_id":0,"name":"commit_date","span":{"filename":"src/lib.rs","begin":[156,4],"end":[156,35]},"visibility":"public","docs":"Commit date of the compiler","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"2:3501:2845":{"id":"2:3501:2845","crate_id":2,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3503:183","2:3504:362"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2865-0:143:1640":{"id":"b:2:2865-0:143:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:2153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:143:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2867:1966"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:174:1714":{"id":"0:174:1714","crate_id":0,"name":"UnknownPreReleaseTag","span":{"filename":"src/lib.rs","begin":[358,4],"end":[358,32]},"visibility":"default","docs":"The pre-release tag is unknown.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:176:1558"]}},"0:128":{"id":"0:128","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,16],"end":[147,21]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:117:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:129:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13780:59767":{"id":"2:13780:59767","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:2090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13342:2090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13357:2091","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4752:2776":{"id":"1:4752:2776","crate_id":1,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4753:2425","1:4754:55505"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5505:2758":{"id":"1:5505:2758","crate_id":1,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5506:4969","1:5507:54447","1:5508:54448"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:112":{"id":"0:112","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,43],"end":[90,53]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","le","gt","ge"],"trait":{"name":"PartialOrd","id":"2:2963:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:97:1633","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:97:1633","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:113:1004"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:117:1656":{"id":"0:117:1656","crate_id":0,"name":"VersionMeta","span":{"filename":"src/lib.rs","begin":[148,0],"end":[172,1]},"visibility":"public","docs":"Rustc version plus metadata like git short hash and build date.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":["0:118:1617","0:119:1659","0:120:1661","0:121:1663","0:122:1665","0:123:1667","0:124:1669","0:125:1671"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:45","a:2:3376:224-0:117:1656","a:2:3405:2154-0:117:1656","a:2:9533:2895-0:117:1656","a:2:9534:2894-0:117:1656","a:2:3364:215-0:117:1656","b:2:3201-0:117:1656","b:2:3197-0:117:1656","b:2:3207-0:117:1656","b:2:2868-0:117:1656","b:2:4097-0:117:1656","b:2:2865-0:117:1656","b:2:3212-0:117:1656","b:5:848-0:117:1656","0:126","0:128","0:130","0:131","0:133","0:134","0:136","0:138","0:140"]}},"2:13830:59781":{"id":"2:13830:59781","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:5445:59781"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:50088:2109","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3453:3185":{"id":"2:3453:3185","crate_id":2,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3455:183","2:3456:1110"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3829:138":{"id":"2:3829:138","crate_id":2,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3831:691"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3824:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:14540:2951":{"id":"2:14540:2951","crate_id":2,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14541:57170","2:14542:57171","2:14543:57172","2:14544:57173","2:14545:57174","2:14546:57175","2:14547:2514"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13708:2488":{"id":"2:13708:2488","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13728:59762":{"id":"2:13728:59762","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:15889:1901","crate::ops::IndexMut":"2:3676:3275","str::slice_unchecked":"2:13727:2863"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9533:2895-0:97:1633":{"id":"a:2:9533:2895-0:97:1633","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:2895","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:97:1633","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3672:2887":{"id":"2:3672:2887","crate_id":2,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3674:183","2:3675:757"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:2153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:155:1654":{"id":"0:155:1654","crate_id":0,"name":"TooManyComponents","span":{"filename":"src/lib.rs","begin":[292,4],"end":[292,21]},"visibility":"default","docs":"Too many components","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"b:2:3197-0:143:1640":{"id":"b:2:3197-0:143:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:143:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:1685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6467:2761":{"id":"1:6467:2761","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6468:52961","1:6469:6763","1:6470:6764","1:6471:6766","1:6472:6765","1:6473:6767","1:6474:6768","1:6475:6770","1:6476:5011","1:6477:6773","1:6478:6774","1:6479:6775","1:6480:6776","1:6481:6777","1:6482:6778","1:6483:6771","1:6484:6772"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2862:98":{"id":"2:2862:98","crate_id":2,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2864:52954"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:2153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3376:224":{"id":"2:3376:224","crate_id":2,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10801:143":{"id":"2:10801:143","crate_id":2,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10802:718","2:10804:2439"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:164:1683":{"id":"0:164:1683","crate_id":0,"name":"stdout","span":{"filename":"src/lib.rs","begin":[347,8],"end":[347,22]},"visibility":"default","docs":"stdout output from the command","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"2:13827:54415":{"id":"2:13827:54415","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5519:2761":{"id":"1:5519:2761","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5520:1710","1:5521:54985","1:5522:4969","1:5523:54986","1:5524:3066","1:5525:3067","1:5526:54987","1:5527:1317","1:5528:54988","1:5529:54989","1:5530:54990","1:5531:54991","1:5532:54992","1:5533:54993","1:5534:54994","1:5535:54995"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3526:3160":{"id":"2:3526:3160","crate_id":2,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3528:363"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3215:128":{"id":"2:3215:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:39108:2035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:13745:55650":{"id":"2:13745:55650","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"self::pattern":"2:13332:2097","prim@char":"1:15883:1896"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:2090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13342:2090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13357:2091","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13739:55649":{"id":"2:13739:55649","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"self::pattern":"2:13332:2097","prim@char":"1:15883:1896"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:2090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:6500-0:97:1633":{"id":"b:5:6500-0:97:1633","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10570:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:2153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6498:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:97:1633","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:6502:1410"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13735:31532":{"id":"2:13735:31532","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"2:13734:31542"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:50072:2099","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13824:1651":{"id":"2:13824:1651","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"`FromStr`":"2:13271:1616","FromStr::Err":"2:13272:127"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47933:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"2:13271:1616","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:13271:1616","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2867:1966":{"id":"2:2867:1966","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10846:2434":{"id":"2:10846:2434","crate_id":2,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10847:147","2:10848:32769","2:10849:53172"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:181:664":{"id":"0:181:664","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[340,9],"end":[340,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10576:2447":{"id":"2:10576:2447","crate_id":2,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10577:664"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3207-0:159:128":{"id":"b:2:3207-0:159:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:159:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3376:224-0:159:128":{"id":"a:2:3376:224-0:159:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:159:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:183:685":{"id":"0:183:685","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["e",{"kind":"resolved_path","inner":{"name":"str::Utf8Error","id":"2:49733:1748","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Error","id":"0:159:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6573:2751":{"id":"1:6573:2751","crate_id":1,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6574:6881","1:6575:54797"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10416:2754","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:5425:2794":{"id":"1:5425:2794","crate_id":1,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5426:53078","1:5427:3804"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10416:2754","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13797:59772":{"id":"2:13797:59772","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2859:97":{"id":"2:2859:97","crate_id":2,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2861:1966"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:2153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:88":{"id":"0:88","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,37],"end":[71,40]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2953:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:70:1620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:89:421"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3835:3284":{"id":"2:3835:3284","crate_id":2,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3837:53843"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2868-0:70:1620":{"id":"b:2:2868-0:70:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:2153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:70:1620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2870:52954"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5567:2764":{"id":"1:5567:2764","crate_id":1,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5568:54742"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10416:2754","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3210:128":{"id":"2:3210:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"b:2:2868-0:143:1640":{"id":"b:2:2868-0:143:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:2153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:143:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2870:52954"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:4410:2047":{"id":"1:4410:2047","crate_id":1,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4411:3004","1:4412:55299","1:4414:55300","1:4415:55301","1:4416:2661","1:4417:55302","1:4418:54550","1:4420:55303","1:4421:2514","1:4422:2078","1:4423:2498","1:4425:2508"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13783:1981":{"id":"2:13783:1981","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:13332:2097","`DoubleEndedIterator`":"2:8717:121","str::matches":"2:13783:1981","prim@char":"1:15883:1896"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:49993:2116","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:2090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3174:136":{"id":"2:3174:136","crate_id":2,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3176:685"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3376:224-0:70:1620":{"id":"a:2:3376:224-0:70:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:70:1620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:57:685":{"id":"0:57:685","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[296,4],"end":[298,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["e",{"kind":"resolved_path","inner":{"name":"num::ParseIntError","id":"2:24527:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:160:1679":{"id":"0:160:1679","crate_id":0,"name":"CouldNotExecuteCommand","span":{"filename":"src/lib.rs","begin":[343,4],"end":[343,37]},"visibility":"default","docs":"An error occurred while trying to find the `rustc` to run.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:162:1558"]}},"2:23049:3379":{"id":"2:23049:3379","crate_id":2,"name":"SimdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23050:3171","2:23051:57774","2:23052:58022","2:23053:58023","2:23054:58024","2:23055:42144","2:23056:58025","2:23057:58026","2:23058:58027","2:23059:58028","2:23060:58029","2:23061:58030","2:23062:58031","2:23063:58032","2:23064:58033","2:23065:58034","2:23066:57824","2:23067:58035","2:23068:58036","2:23069:58037","2:23070:58038","2:23071:57775","2:23072:57776","2:23073:57777","2:23074:57778"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3374:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23151:2754","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13809:14120":{"id":"2:13809:14120","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:13332:2097","prim@char":"1:15883:1896"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:2090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:168:1558":{"id":"0:168:1558","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[352,14],"end":[352,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"str::Utf8Error","id":"2:49733:1748","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"b:2:3197-0:159:128":{"id":"b:2:3197-0:159:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:159:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:1685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5431:2795":{"id":"1:5431:2795","crate_id":1,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5432:4423","1:5433:53036"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10416:2754","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:147:1647":{"id":"0:147:1647","crate_id":0,"name":"ComponentMustNotHaveLeadingZeros","span":{"filename":"src/lib.rs","begin":[284,4],"end":[284,36]},"visibility":"default","docs":"A version component must not have leading zeros","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:48:1690":{"id":"0:48:1690","crate_id":0,"name":"version_meta","span":{"filename":"src/lib.rs","begin":[200,0],"end":[204,1]},"visibility":"public","docs":"Returns the `rustc` SemVer version and additional metadata\nlike the git short hash and build date.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:67:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:117:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:2870:52954":{"id":"2:2870:52954","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3432:2955":{"id":"2:3432:2955","crate_id":2,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3434:183","2:3435:270"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3168:74":{"id":"2:3168:74","crate_id":2,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3170:2481"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:2153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"a:2:3364:215-0:70:1620":{"id":"a:2:3364:215-0:70:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:70:1620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:56":{"id":"0:56","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[295,0],"end":[299,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ParseIntError","id":"2:24527:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:143:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:57:685"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3376:224-0:143:1640":{"id":"a:2:3376:224-0:143:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:143:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:92":{"id":"0:92","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,54],"end":[71,58]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10801:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:70:1620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:93:718"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3181:232":{"id":"2:3181:232","crate_id":2,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3183:128","2:3184:1430"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:118:1617":{"id":"0:118:1617","crate_id":0,"name":"semver","span":{"filename":"src/lib.rs","begin":[150,4],"end":[150,23]},"visibility":"public","docs":"Version of the compiler","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Version","id":"20:404:1618","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"2:3617:132":{"id":"2:3617:132","crate_id":2,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3619:383"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3620:133","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3212-0:117:1656":{"id":"b:2:3212-0:117:1656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:117:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3201-0:143:1640":{"id":"b:2:3201-0:143:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:143:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:173:1558":{"id":"0:173:1558","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[356,16],"end":[356,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"semver::Error","id":"20:317:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:186":{"id":"0:186","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:143:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:159:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:187:685"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:122:1665":{"id":"0:122:1665","crate_id":0,"name":"channel","span":{"filename":"src/lib.rs","begin":[162,4],"end":[162,24]},"visibility":"public","docs":"Release channel of the compiler","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:70:1620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"2:2884:105":{"id":"2:2884:105","crate_id":2,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2885:414","2:2886:416"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:58":{"id":"0:58","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[301,0],"end":[324,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10570:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:143:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:59:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10582:2449":{"id":"2:10582:2449","crate_id":2,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10583:664"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:4492:2046":{"id":"1:4492:2046","crate_id":1,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4493:57635","1:4494:57636","1:4495:57638","1:4497:2663","1:4498:57637","1:4500:1643","1:4501:1699"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"1:4410:2047","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:131":{"id":"0:131","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,23],"end":[147,25]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2922:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:117:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3506:3150":{"id":"2:3506:3150","crate_id":2,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3508:183","2:3509:1244"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9533:2895-0:159:128":{"id":"a:2:9533:2895-0:159:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:2895","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:159:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:95":{"id":"0:95","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,60],"end":[71,65]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:70:1620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:96:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13732:3245":{"id":"2:13732:3245","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:15883:1896"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49765:2104","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13762:55644":{"id":"2:13762:55644","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"prim@char":"1:15883:1896","str::split":"2:13756:1643","self::pattern":"2:13332:2097","`DoubleEndedIterator`":"2:8717:121"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:49807:2118","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:2090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13342:2090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13357:2091","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:124:1669":{"id":"0:124:1669","crate_id":0,"name":"short_version_string","span":{"filename":"src/lib.rs","begin":[168,4],"end":[168,36]},"visibility":"public","docs":"Short version string of the compiler","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"1:5553:2762":{"id":"1:5553:2762","crate_id":1,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5554:53060","1:5555:53061","1:5556:53062","1:5557:53063"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:136":{"id":"0:136","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,38],"end":[147,41]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2953:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:117:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:137:421"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3870:3289":{"id":"2:3870:3289","crate_id":2,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:2153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"b:2:3212-0:97:1633":{"id":"b:2:3212-0:97:1633","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:97:1633","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13777:59766":{"id":"2:13777:59766","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:2090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:43:1641":{"id":"0:43:1641","crate_id":0,"name":"from_str","span":{"filename":"src/lib.rs","begin":[109,4],"end":[143,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:67:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:13271:1616","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13351:2092":{"id":"2:13351:2092","crate_id":2,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13353:3238","2:13354:928","2:13355:59033","2:13356:59034"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:42:127":{"id":"0:42:127","crate_id":0,"name":"Err","span":{"filename":"src/lib.rs","begin":[107,4],"end":[107,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:143:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:107":{"id":"0:107","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,27],"end":[90,36]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3372:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:97:1633","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:79":{"id":"0:79","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,9],"end":[71,13]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3374:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:70:1620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"1:6241:2799":{"id":"1:6241:2799","crate_id":1,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6242:57599","1:6243:6841","1:6244:57600","1:6245:57601","1:6246:57602","1:6247:57603"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10416:2754","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:130":{"id":"0:130","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,23],"end":[147,25]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3373:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:117:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:135:608":{"id":"0:135:608","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[147,27],"end":[147,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:117:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3197-0:117:1656":{"id":"b:2:3197-0:117:1656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:117:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:1685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3518:3156":{"id":"2:3518:3156","crate_id":2,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3520:358"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:35":{"id":"0:35","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[66,0],"end":[66,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"semver::Version","name":"Version","id":"20:404:1618","glob":false}},"2:13710:59759":{"id":"2:13710:59759","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3479:3203":{"id":"2:3479:3203","crate_id":2,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3481:1111"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2922:125":{"id":"2:2922:125","crate_id":2,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2917:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:8742:2156":{"id":"2:8742:2156","crate_id":2,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8743:798","2:8744:2488"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8874:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2868-0:97:1633":{"id":"b:2:2868-0:97:1633","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:2153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:97:1633","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2870:52954"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8632:3301":{"id":"2:8632:3301","crate_id":2,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8634:2535"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:4099:1443":{"id":"2:4099:1443","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:46336:3183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6183:60420":{"id":"5:6183:60420","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:8472:220"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3405:2154-0:159:128":{"id":"a:2:3405:2154-0:159:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:2154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:159:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9534:2894-0:117:1656":{"id":"a:2:9534:2894-0:117:1656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:2894","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:117:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:12772:3708":{"id":"2:12772:3708","crate_id":2,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12773:2424","2:12774:58965"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:23238:2809":{"id":"2:23238:2809","crate_id":2,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23228:2754","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13826:3715":{"id":"2:13826:3715","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:137:421":{"id":"0:137:421","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[147,38],"end":[147,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:117:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:37928:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6647:2746":{"id":"1:6647:2746","crate_id":1,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6648:55466"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3364:215-0:143:1640":{"id":"a:2:3364:215-0:143:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:143:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3376:224-0:117:1656":{"id":"a:2:3376:224-0:117:1656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:117:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:90":{"id":"0:90","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,42],"end":[71,52]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","le","gt","ge"],"trait":{"name":"PartialOrd","id":"2:2963:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:70:1620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:70:1620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:91:1004"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10513:2049":{"id":"2:10513:2049","crate_id":2,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10514:1549","2:10515:55544","2:10517:2234"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3279-0:143:1640":{"id":"b:2:3279-0:143:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:3272:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:2153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:4146:3182","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:143:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3281:2646"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"E"}}},"b:2:3207-0:143:1640":{"id":"b:2:3207-0:143:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:143:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13756:1643":{"id":"2:13756:1643","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"`DoubleEndedIterator`":"2:8717:121","str::rsplit":"2:13762:55644","str::split_whitespace":"2:13734:31542","self::pattern":"2:13332:2097","prim@char":"1:15883:1896"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:49789:2119","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:2090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13802:59775":{"id":"2:13802:59775","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3522:3158":{"id":"2:3522:3158","crate_id":2,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3524:360"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:39":{"id":"0:39","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[100,0],"end":[104,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10570:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:97:1633","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:40:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10578:2448":{"id":"2:10578:2448","crate_id":2,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10579:664"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9534:2894-0:159:128":{"id":"a:2:9534:2894-0:159:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:2894","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:159:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:85":{"id":"0:85","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,26],"end":[71,35]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3372:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:70:1620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13737:59763":{"id":"2:13737:59763","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:50053:2113","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:165:1686":{"id":"0:165:1686","crate_id":0,"name":"stderr","span":{"filename":"src/lib.rs","begin":[349,8],"end":[349,22]},"visibility":"default","docs":"stderr output from the command","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"2:13342:2090":{"id":"2:13342:2090","crate_id":2,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13344:2092","2:13345:58585","2:13346:58590","2:13347:58586","2:13348:58588","2:13349:58587","2:13350:58589"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3200:1685":{"id":"2:3200:1685","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3174:136"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4485:2048":{"id":"1:4485:2048","crate_id":1,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4486:57325","1:4487:39155","1:4488:57326","1:4489:57327"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3907:3290":{"id":"2:3907:3290","crate_id":2,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13768:59765":{"id":"2:13768:59765","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"str::split_terminator":"2:13765:59764","str::split":"2:13756:1643","self::pattern":"2:13332:2097","prim@char":"1:15883:1896"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:49857:2122","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:2090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13342:2090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13357:2091","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:96:664":{"id":"0:96:664","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[71,60],"end":[71,65]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:14057:139":{"id":"2:14057:139","crate_id":2,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:14058:183","2:14059:1020"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3216:1430":{"id":"2:3216:1430","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47933:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13806:59777":{"id":"2:13806:59777","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:13332:2097","prim@char":"1:15883:1896"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:2090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:126":{"id":"0:126","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,9],"end":[147,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:117:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:127:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:62":{"id":"0:62","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[363,0],"end":[382,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10570:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:159:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:63:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:6498:228":{"id":"5:6498:228","crate_id":5,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6499:1410"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5563:2763":{"id":"1:5563:2763","crate_id":1,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5564:54985"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3103:3206":{"id":"2:3103:3206","crate_id":2,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:3102:2754","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:6163":{"id":"5:6163","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5976:1353","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:6164:60417","5:6165:2667","5:6168:60418","5:6171:60419","5:6183:60420","5:6184:60421","5:6185:2685","5:6186:54413","5:6187:54414"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3272:128":{"id":"2:3272:128","crate_id":2,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3273:1741","2:3275:2644","2:3276:2645","2:3277:2646"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Display","id":"2:10570:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:6339:2801":{"id":"1:6339:2801","crate_id":1,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6340:57764","1:6341:57765"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13829:54417":{"id":"2:13829:54417","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4097-0:97:1633":{"id":"b:2:4097-0:97:1633","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:2153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:97:1633","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3405:2154-0:143:1640":{"id":"a:2:3405:2154-0:143:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:2154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:143:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:6164:60417":{"id":"5:6164:60417","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:444:2094","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8217:3723","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:444:2094","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8217:3723","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2865-0:117:1656":{"id":"b:2:2865-0:117:1656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:2153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:117:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2867:1966"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:115:718":{"id":"0:115:718","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[90,55],"end":[90,59]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10811:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13748:2525":{"id":"2:13748:2525","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"prim@char":"1:15883:1896","`None`":"2:47810:176","self::pattern":"2:13332:2097"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:2090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:70:1620":{"id":"0:70:1620","crate_id":0,"name":"Channel","span":{"filename":"src/lib.rs","begin":[72,0],"end":[81,1]},"visibility":"public","docs":"Release channel of the compiler.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:71:1622","0:73:1624","0:75:1626","0:77:1628"],"impls":["a:2:3376:224-0:70:1620","a:2:3405:2154-0:70:1620","a:2:9533:2895-0:70:1620","a:2:9534:2894-0:70:1620","a:2:3364:215-0:70:1620","b:2:3201-0:70:1620","b:2:3197-0:70:1620","b:2:3207-0:70:1620","b:2:2868-0:70:1620","b:2:4097-0:70:1620","b:2:2865-0:70:1620","b:2:3212-0:70:1620","b:5:848-0:70:1620","0:79","0:80","0:82","0:83","0:85","0:86","0:88","0:90","0:92","0:95"]}},"0:180":{"id":"0:180","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[340,9],"end":[340,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:159:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:181:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3201-0:97:1633":{"id":"b:2:3201-0:97:1633","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:97:1633","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:0:1767":{"id":"0:0:1767","crate_id":0,"name":"rustc_version","span":{"filename":"src/lib.rs","begin":[9,0],"end":[417,58]},"visibility":"public","docs":"Simple library for getting the version information of a `rustc`\ncompiler.\n\nThis can be used by build scripts or other tools dealing with Rust sources\nto make decisions based on the version of the compiler.\n\nIt calls `$RUSTC --version -v` and parses the output, falling\nback to `rustc` if `$RUSTC` is not set.\n\n# Example\n\n```rust\n// This could be a cargo build script\n\nuse rustc_version::{version, version_meta, Channel, Version};\n\n// Assert we haven't travelled back in time\nassert!(version().unwrap().major >= 1);\n\n// Set cfg flags depending on release channel\nmatch version_meta().unwrap().channel {\n    Channel::Stable => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_STABLE\");\n    }\n    Channel::Beta => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_BETA\");\n    }\n    Channel::Nightly => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_NIGHTLY\");\n    }\n    Channel::Dev => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_DEV\");\n    }\n}\n\n// Check for a minimum version\nif version().unwrap() >= Version::parse(\"1.4.0\").unwrap() {\n    println!(\"cargo:rustc-cfg=compiler_has_important_bugfix\");\n}\n```","links":{},"attrs":["#![warn(missing_docs)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:35","0:70:1620","0:97:1633","0:117:1656","0:47:1520","0:48:1690","0:50:1687","0:143:1640","0:159:128","0:67:207"],"is_stripped":false}},"2:2917:185":{"id":"2:2917:185","crate_id":2,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2919:608","2:2920:913"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:2153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"b:2:3201-0:117:1656":{"id":"b:2:3201-0:117:1656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:117:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3484:3145":{"id":"2:3484:3145","crate_id":2,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3485:183","2:3486:958"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13717:310":{"id":"2:13717:310","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"`u8`":"1:15900:1910","str::as_mut_ptr":"2:13718:55615"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:138":{"id":"0:138","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,43],"end":[147,53]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","le","gt","ge"],"trait":{"name":"PartialOrd","id":"2:2963:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:117:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:117:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:139:1004"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:91:1004":{"id":"0:91:1004","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[71,42],"end":[71,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:70:1620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::option::Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:37928:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:104":{"id":"0:104","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,23],"end":[90,25]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3373:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:97:1633","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13709:59758":{"id":"2:13709:59758","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:159:128":{"id":"0:159:128","crate_id":0,"name":"Error","span":{"filename":"src/lib.rs","begin":[341,0],"end":[361,1]},"visibility":"public","docs":"The error type for this crate.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:160:1679","0:163:1682","0:166:1748","0:169:1724","0:171:1751","0:174:1714","0:177:1754"],"impls":["a:2:3376:224-0:159:128","a:2:3405:2154-0:159:128","a:2:9533:2895-0:159:128","a:2:9534:2894-0:159:128","a:2:3364:215-0:159:128","b:2:3201-0:159:128","b:2:3197-0:159:128","b:2:3207-0:159:128","b:2:2868-0:159:128","b:2:4097-0:159:128","b:2:2865-0:159:128","b:2:3212-0:159:128","b:2:3279-0:159:128","b:5:6500-0:159:128","0:180","0:62","0:64","0:182","0:184","0:186"]}},"2:13792:59770":{"id":"2:13792:59770","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"`DoubleEndedIterator`":"2:8717:121","str::match_indices":"2:13789:59769","self::pattern":"2:13332:2097","prim@char":"1:15883:1896"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:49957:2115","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:2090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13342:2090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13357:2091","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13718:55615":{"id":"2:13718:55615","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:15900:1910"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:139:1004":{"id":"0:139:1004","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[147,43],"end":[147,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:117:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::option::Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:37928:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:144:1728":{"id":"0:144:1728","crate_id":0,"name":"ParseIntError","span":{"filename":"src/lib.rs","begin":[282,4],"end":[282,37]},"visibility":"default","docs":"An error occurred in parsing a version component as an integer","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:146:1558"]}},"2:13786:59768":{"id":"2:13786:59768","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:13332:2097","prim@char":"1:15883:1896","`DoubleEndedIterator`":"2:8717:121","str::matches":"2:13783:1981"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:50011:2117","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:2090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13342:2090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13357:2091","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13716:59761":{"id":"2:13716:59761","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3405:2154-0:70:1620":{"id":"a:2:3405:2154-0:70:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:2154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:70:1620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:82":{"id":"0:82","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,22],"end":[71,24]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3373:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:70:1620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:123:1667":{"id":"0:123:1667","crate_id":0,"name":"host","span":{"filename":"src/lib.rs","begin":[165,4],"end":[165,20]},"visibility":"public","docs":"Host target triple of the compiler","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"b:2:4097-0:117:1656":{"id":"b:2:4097-0:117:1656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:2153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:117:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11205:218":{"id":"2:11205:218","crate_id":2,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:11207:183","2:11208:1719","2:11209:55612","2:11210:55613","2:11211:55614","2:11212:757","2:11213:758"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:2153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:11196:2754","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:105":{"id":"0:105","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,23],"end":[90,25]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2922:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:97:1633","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"5:852:2545":{"id":"5:852:2545","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:133":{"id":"0:133","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,27],"end":[147,36]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3372:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:117:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3471:3199":{"id":"2:3471:3199","crate_id":2,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3473:899"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:9534:2894":{"id":"2:9534:2894","crate_id":2,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:23102:3167":{"id":"2:23102:3167","crate_id":2,"name":"SimdInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23103:3171","2:23104:57774","2:23105:1238","2:23106:1239","2:23107:42144","2:23108:57820","2:23109:57821","2:23110:57822","2:23111:57823","2:23112:57824","2:23113:57775","2:23114:57776","2:23115:57777","2:23116:57778","2:23117:57779","2:23118:57780","2:23119:57781"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3374:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23151:2754","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:5906:2095":{"id":"5:5906:2095","crate_id":5,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5908:183","5:5909:438"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:2153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:3824:229":{"id":"2:3824:229","crate_id":2,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3825:183","2:3826:3284","2:3827:690","2:3828:375"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FromResidual","id":"2:3829:138","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3824:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:9161:3177":{"id":"2:9161:3177","crate_id":2,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Step","id":"2:8197:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:6185:2685":{"id":"5:6185:2685","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:8472:220"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:80":{"id":"0:80","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,15],"end":[71,20]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:70:1620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:81:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3614:131":{"id":"2:3614:131","crate_id":2,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3616:382"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3617:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3442:3188":{"id":"2:3442:3188","crate_id":2,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3444:183","2:3445:898"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3620:133":{"id":"2:3620:133","crate_id":2,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3622:183","2:3623:384"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3496:2844":{"id":"2:3496:2844","crate_id":2,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3498:183","2:3499:359"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13706":{"id":"2:13706","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:12785:1353","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:13707:798","2:13708:2488","2:13709:59758","2:13710:59759","2:13712:59760","2:13715:53036","2:13716:59761","2:13717:310","2:13718:55615","2:13719:1719","2:13721:55612","2:13723:55613","2:13725:55614","2:13727:2863","2:13728:59762","2:13729:55634","2:13730:55635","2:13731:2130","2:13732:3245","2:13733:2078","2:13734:31542","2:13735:31532","2:13736:1699","2:13737:59763","2:13738:31527","2:13739:55649","2:13742:1646","2:13745:55650","2:13748:2525","2:13752:2487","2:13756:1643","2:13759:31409","2:13762:55644","2:13765:59764","2:13768:59765","2:13771:1703","2:13774:55647","2:13777:59766","2:13780:59767","2:13783:1981","2:13786:59768","2:13789:59769","2:13792:59770","2:13795:59771","2:13797:59772","2:13799:59773","2:13801:59774","2:13802:59775","2:13803:59776","2:13806:59777","2:13809:14120","2:13812:55651","2:13815:59778","2:13818:59779","2:13821:59780","2:13824:1651","2:13826:3715","2:13827:54415","2:13828:54416","2:13829:54417","2:13830:59781","2:13832:2775","2:13833:59782"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:127:414":{"id":"0:127:414","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[147,9],"end":[147,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:117:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9533:2895-0:143:1640":{"id":"a:2:9533:2895-0:143:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:2895","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:143:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8717:121":{"id":"2:8717:121","crate_id":2,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8718:2482","2:8719:2483","2:8720:2484","2:8721:2485","2:8725:2486","2:8728:2487"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8874:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13815:59778":{"id":"2:13815:59778","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:15883:1896","self::pattern":"2:13332:2097"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:2090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13342:2090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13357:2091","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:129:664":{"id":"0:129:664","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[147,16],"end":[147,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3374:107":{"id":"2:3374:107","crate_id":2,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9534:2894-0:97:1633":{"id":"a:2:9534:2894-0:97:1633","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:2894","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:97:1633","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:45":{"id":"0:45","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[174,0],"end":[191,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:117:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:46:1673"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:4896:3306":{"id":"2:4896:3306","crate_id":2,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4897:2424","2:4898:58770","2:4899:2493"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:77:1628":{"id":"0:77:1628","crate_id":0,"name":"Stable","span":{"filename":"src/lib.rs","begin":[80,4],"end":[80,10]},"visibility":"default","docs":"Stable release channel","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:176:1558":{"id":"0:176:1558","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[358,25],"end":[358,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"2:4095:68":{"id":"2:4095:68","crate_id":2,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4096:1443"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"0:73:1624":{"id":"0:73:1624","crate_id":0,"name":"Nightly","span":{"filename":"src/lib.rs","begin":[76,4],"end":[76,11]},"visibility":"default","docs":"Nightly release channel","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"5:6168:60418":{"id":"5:6168:60418","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:8472:220"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:2090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3587:117":{"id":"2:3587:117","crate_id":2,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3588:226","2:3589:548"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13736:1699":{"id":"2:13736:1699","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:50043:2112","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:187:685":{"id":"0:187:685","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["e",{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:143:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Error","id":"0:159:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:179:1558":{"id":"0:179:1558","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[360,21],"end":[360,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:143:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"b:2:3201-0:159:128":{"id":"b:2:3201-0:159:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:159:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3463:2956":{"id":"2:3463:2956","crate_id":2,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3465:271"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:67:207":{"id":"0:67:207","crate_id":0,"name":"Result","span":{"filename":"src/lib.rs","begin":[417,0],"end":[417,58]},"visibility":"public","docs":"The result type for this crate.","links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"std::result::Result","id":"2:47933:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Error","id":"0:159:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]}}},"2:3512:3153":{"id":"2:3512:3153","crate_id":2,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3514:183","2:3515:1247"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:848-0:117:1656":{"id":"b:5:848-0:117:1656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:117:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:850:2544","5:851:1715","5:852:2545"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6645:2745":{"id":"1:6645:2745","crate_id":1,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6646:54485"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:7602:2034":{"id":"1:7602:2034","crate_id":1,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7603:54517"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:157":{"id":"0:157","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[279,9],"end":[279,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:143:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:158:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13712:59760":{"id":"2:13712:59760","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:13710:59759"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23175:3380":{"id":"2:23175:3380","crate_id":2,"name":"SimdPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23176:3171","2:23177:1260","2:23178:1285"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:113:1004":{"id":"0:113:1004","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[90,43],"end":[90,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:97:1633","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::option::Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:37928:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:102":{"id":"0:102","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,16],"end":[90,21]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:97:1633","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:103:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2868-0:159:128":{"id":"b:2:2868-0:159:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:2153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:159:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2870:52954"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3535:3164":{"id":"2:3535:3164","crate_id":2,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3537:1248"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:182":{"id":"0:182","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utf8Error","id":"2:49733:1748","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:159:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:183:685"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:844:227":{"id":"5:844:227","crate_id":5,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:845:2544","5:846:1715","5:847:2545"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8682:2157":{"id":"2:8682:2157","crate_id":2,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8684:2489","2:8686:2490","2:8687:2491"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13812:55651":{"id":"2:13812:55651","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:15883:1896","self::pattern":"2:13332:2097"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:2090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13342:2090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13357:2091","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6502:1410":{"id":"5:6502:1410","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13733:2078":{"id":"2:13733:2078","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:49775:2103","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:6500-0:143:1640":{"id":"b:5:6500-0:143:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10570:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:2153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6498:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:143:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:6502:1410"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:6165:2667":{"id":"5:6165:2667","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:8472:220"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:2090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13774:55647":{"id":"2:13774:55647","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:15883:1896","self::pattern":"2:13332:2097","str::splitn":"2:13771:1703"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:49911:2120","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:2090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13342:2090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13357:2091","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3405:2154-0:117:1656":{"id":"a:2:3405:2154-0:117:1656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:2154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:117:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3369:2153":{"id":"2:3369:2153","crate_id":2,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:71:1622":{"id":"0:71:1622","crate_id":0,"name":"Dev","span":{"filename":"src/lib.rs","begin":[74,4],"end":[74,7]},"visibility":"default","docs":"Development release channel","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"2:13765:59764":{"id":"2:13765:59764","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"str::rsplit_terminator":"2:13768:59765","`DoubleEndedIterator`":"2:8717:121","prim@char":"1:15883:1896","str::split":"2:13756:1643","self::pattern":"2:13332:2097"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:49839:2123","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:2090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13833:59782":{"id":"2:13833:59782","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:5443:59782"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:50106:2111","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:166:1748":{"id":"0:166:1748","crate_id":0,"name":"Utf8Error","span":{"filename":"src/lib.rs","begin":[352,4],"end":[352,29]},"visibility":"default","docs":"The output of `rustc -vV` was not valid utf-8.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:168:1558"]}},"b:2:2865-0:70:1620":{"id":"b:2:2865-0:70:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:2153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:70:1620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2867:1966"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3171:150":{"id":"2:3171:150","crate_id":2,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3173:1685"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:153:1652":{"id":"0:153:1652","crate_id":0,"name":"MinorVersionRequiredBefore4","span":{"filename":"src/lib.rs","begin":[290,4],"end":[290,31]},"visibility":"default","docs":"Minor version component is required on LLVM versions earlier than 4.0","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"2:14456:142":{"id":"2:14456:142","crate_id":2,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14457:283","2:14458:523","2:14459:286","2:14460:1087"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:60":{"id":"0:60","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[326,0],"end":[337,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["source","cause","description","provide","type_id"],"trait":{"name":"Error","id":"2:3272:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:143:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:61:1741"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3376:224-0:97:1633":{"id":"a:2:3376:224-0:97:1633","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:97:1633","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:185:685":{"id":"0:185:685","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["e",{"kind":"resolved_path","inner":{"name":"semver::Error","id":"20:317:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Error","id":"0:159:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3600:2430":{"id":"2:3600:2430","crate_id":2,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3601:550"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Deref","id":"2:3587:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:109:608":{"id":"0:109:608","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[90,27],"end":[90,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:97:1633","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:98:1635":{"id":"0:98:1635","crate_id":0,"name":"major","span":{"filename":"src/lib.rs","begin":[94,4],"end":[94,18]},"visibility":"public","docs":"Major version","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u64"}},"2:23763:3173":{"id":"2:23763:3173","crate_id":2,"name":"SimdPartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23764:1283","2:23765:1282","2:23766:1280","2:23767:1279"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdPartialEq","id":"2:23175:3380","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10570:120":{"id":"2:10570:120","crate_id":2,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10571:664"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5513:2760":{"id":"1:5513:2760","crate_id":1,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5514:4969","1:5515:7325"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:23435:3311":{"id":"2:23435:3311","crate_id":2,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdElement","id":"2:24072:3172","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23426:2754","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:23387:15606":{"id":"2:23387:15606","crate_id":2,"name":"ToBitMask","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23388:5920","2:23389:59187","2:23390:59188"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23380:2754","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:2963:186":{"id":"2:2963:186","crate_id":2,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2965:1004","2:2966:832","2:2967:797","2:2968:716","2:2969:700"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:2153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2917:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3812:3618":{"id":"2:3812:3618","crate_id":2,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:2153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"RangeBounds","id":"2:3743:3617","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:47:1520":{"id":"0:47:1520","crate_id":0,"name":"version","span":{"filename":"src/lib.rs","begin":[194,0],"end":[196,1]},"visibility":"public","docs":"Returns the `rustc` SemVer version.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:67:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Version","id":"20:404:1618","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:10563:110":{"id":"2:10563:110","crate_id":2,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10564:664"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3281:2646":{"id":"2:3281:2646","crate_id":2,"name":"provide","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["demand",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Demand","id":"2:4161:3181","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:64":{"id":"0:64","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[384,0],"end":[396,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["source","cause","description","provide","type_id"],"trait":{"name":"Error","id":"2:3272:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:159:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:65:1741"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10572:2445":{"id":"2:10572:2445","crate_id":2,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10573:664"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13729:55634":{"id":"2:13729:55634","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:13730:55635"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5497:2759":{"id":"1:5497:2759","crate_id":1,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5498:57419","1:5499:57421","1:5500:57420","1:5501:57422"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2868-0:117:1656":{"id":"b:2:2868-0:117:1656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:2153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:117:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2870:52954"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13730:55635":{"id":"2:13730:55635","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:13729:55634"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3201-0:70:1620":{"id":"b:2:3201-0:70:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:70:1620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:111:421":{"id":"0:111:421","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[90,38],"end":[90,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:97:1633","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:37928:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:163:1682":{"id":"0:163:1682","crate_id":0,"name":"CommandError","span":{"filename":"src/lib.rs","begin":[345,4],"end":[350,5]},"visibility":"default","docs":"Error output from the command that was run.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"struct","variant_inner":{"fields":["0:164:1683","0:165:1686"],"fields_stripped":false}}},"2:8197:3179":{"id":"2:8197:3179","crate_id":2,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8198:59090","2:8199:59091","2:8200:59088","2:8201:59084","2:8202:59092","2:8203:59089","2:8204:59087"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2963:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:87:608":{"id":"0:87:608","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[71,26],"end":[71,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:70:1620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3207-0:97:1633":{"id":"b:2:3207-0:97:1633","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:97:1633","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4097-0:143:1640":{"id":"b:2:4097-0:143:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:2153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:143:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3676:3275":{"id":"2:3676:3275","crate_id":2,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3678:758"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:2153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Index","id":"2:3672:2887","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3491:2843":{"id":"2:3491:2843","crate_id":2,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3493:183","2:3494:357"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:4097-0:159:128":{"id":"b:2:4097-0:159:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:2153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:159:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:146:1558":{"id":"0:146:1558","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[282,18],"end":[282,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"num::ParseIntError","id":"2:24527:1728","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:83":{"id":"0:83","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,22],"end":[71,24]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2922:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:70:1620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:63:664":{"id":"0:63:664","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[364,4],"end":[381,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13742:1646":{"id":"2:13742:1646","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:15883:1896","self::pattern":"2:13332:2097"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:2090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13799:59773":{"id":"2:13799:59773","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3447:3190":{"id":"2:3447:3190","crate_id":2,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3449:183","2:3450:563"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6186:54413":{"id":"5:6186:54413","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:13828:54416"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2953:179":{"id":"2:2953:179","crate_id":2,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2954:421","2:2955:2301","2:2956:2298","2:2957:2422"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2922:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2963:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3743:3617":{"id":"2:3743:3617","crate_id":2,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3745:58639","2:3746:58640","2:3747:55649"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:2153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:10584:2450":{"id":"2:10584:2450","crate_id":2,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10585:664"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:149:1650":{"id":"0:149:1650","crate_id":0,"name":"ComponentMustNotHaveSign","span":{"filename":"src/lib.rs","begin":[286,4],"end":[286,28]},"visibility":"default","docs":"A version component has a sign","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"2:13828:54416":{"id":"2:13828:54416","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6171:60419":{"id":"5:6171:60419","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:8472:220"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3207-0:70:1620":{"id":"b:2:3207-0:70:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:70:1620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:89:421":{"id":"0:89:421","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[71,37],"end":[71,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:70:1620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:37928:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3654:3276":{"id":"2:3654:3276","crate_id":2,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3656:242","2:3657:208","2:3658:58976"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:100":{"id":"0:100","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,9],"end":[90,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:97:1633","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:101:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13832:2775":{"id":"2:13832:2775","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:5446:2775"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:50097:2110","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:114":{"id":"0:114","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,55],"end":[90,59]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10801:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:97:1633","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:115:718"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:158:664":{"id":"0:158:664","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[279,9],"end":[279,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:97:1633":{"id":"0:97:1633","crate_id":0,"name":"LlvmVersion","span":{"filename":"src/lib.rs","begin":[91,0],"end":[98,1]},"visibility":"public","docs":"LLVM version\n\nLLVM's version numbering scheme is not semver compatible until version 4.0\n\nrustc [just prints the major and minor versions], so other parts of the version are not included.\n\n[just prints the major and minor versions]: https://github.com/rust-lang/rust/blob/b5c9e2448c9ace53ad5c11585803894651b18b0a/compiler/rustc_codegen_llvm/src/llvm_util.rs#L173-L178","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":["0:98:1635","0:99:1637"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:3376:224-0:97:1633","a:2:3405:2154-0:97:1633","a:2:9533:2895-0:97:1633","a:2:9534:2894-0:97:1633","a:2:3364:215-0:97:1633","b:2:3201-0:97:1633","b:2:3197-0:97:1633","b:2:3207-0:97:1633","b:2:2868-0:97:1633","b:2:4097-0:97:1633","b:2:2865-0:97:1633","b:2:3212-0:97:1633","b:5:848-0:97:1633","b:5:6500-0:97:1633","0:100","0:102","0:104","0:105","0:107","0:108","0:110","0:112","0:114","0:39","0:41"]}},"0:93:718":{"id":"0:93:718","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[71,54],"end":[71,58]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10811:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13725:55614":{"id":"2:13725:55614","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11205:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11205:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:5:848-0:97:1633":{"id":"b:5:848-0:97:1633","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:97:1633","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:850:2544","5:851:1715","5:852:2545"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}}},"paths":{"2:12796:1688":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"9:809:2929":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"16:7063:4252":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"2:3181:232":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"16:7110:4256":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"1:11196:3047":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:10851:2435":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"17:9746:7738":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"1:5553:2762":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:3392:2291":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"5:3366:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"2:49807:2118":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"17:10104:4530":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"1:4383:2653":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"2:49607:3549":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"2:49670:3552":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"6:5433:6670":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:22902:58577":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"17:12431:5187":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"5:1673:2426":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"2:37928:180":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"1:2466:1613":{"crate_id":1,"path":["std","error"],"kind":"module"},"17:12746:5238":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"18:790:4546":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"2:4146:3182":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"2:50088:2109":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"2:51653:3327":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:12077:213":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"1:4219:2683":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"1:11250:3123":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"17:11102:46316":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"17:13138:5402":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"6:1694:6192":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:7936:2499":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:15071:2866":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"1:3801:207":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"2:10566:110":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"2:5147:3486":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"12:2040:2836":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"1:2917:2661":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"2:37952:2297":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"6:3933:6263":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"5:7048:3716":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"1:15896:1906":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"1:15901:1911":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"2:24068:2754":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"2:13351:2092":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:13744:1612":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"5:8217:3723":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"2:10584:2450":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"5:8466:6911":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"1:11501:2425":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"1:1431:2836":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"5:4509:2425":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2:13342:2090":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"17:10266:4474":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"1:1489:2879":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"1:15900:1910":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"17:12607:5222":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"1:1483:2878":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"2:49893:2121":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"2:49957:2115":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"17:13573:5512":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"17:13529:5502":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"17:13522:5501":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"16:7155:4260":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"17:13565:5511":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"6:4135:6371":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"17:12557:5205":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"17:9466:4903":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"2:12228:3557":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"17:542:4119":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"1:8000:4679":{"crate_id":1,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"2:48808:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"19:0:1000":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"0:171:1751":{"crate_id":0,"path":["rustc_version","Error","SemVerError"],"kind":"variant"},"1:9563:4696":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockWriteGuard"],"kind":"struct"},"1:5730:3121":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"6:3920:6253":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:10570:120":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"6:4454:6478":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"16:6949:4405":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"17:9836:60698":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"2:4998:3484":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"2:9154:2088":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"2:48826:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"2:48152:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1:4143:3032":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"1:5746:3124":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"2:53675:7083":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"5:6851:2653":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"18:611:4557":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"1:10638:2805":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"6:6937:6900":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:1452:2873":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"2:47311:2688":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:13124:2100":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:47052:3401":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"16:5443:4081":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"0:70:1620":{"crate_id":0,"path":["rustc_version","Channel"],"kind":"enum"},"2:2277:3211":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"16:5566:4087":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"1:14894:2952":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"2:3102:2754":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"2:23102:3167":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"6:6114:6788":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"12:379:4008":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"16:6141:4234":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"1:11201:3048":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"2:50536:3572":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"12:2045:2837":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"16:4803:5674":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"17:9131:46313":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"1:8715:2896":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"12:856:2871":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"12:1238:4004":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"1:4258:2679":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"2:3463:2956":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"17:9676:60699":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"9:686:3868":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"7:85:43983":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"6:4179:6385":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"1:997:2804":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"2:23138:3421":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"2:50765:3378":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:14064:2682":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"16:3402:4111":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"17:9087:46312":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"17:10571:4467":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"12:1682:4015":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"5:2396:3836":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"17:12093:5118":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"1:14460:2036":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"1:5154:3045":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"5:8361:2012":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"1:10980:2103":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"1:11449:2931":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"17:13361:5456":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"16:3366:4373":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"12:162:4005":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"17:10364:4516":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"1:9526:3041":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"2:10039:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:11912:7172":{"crate_id":1,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"2:3479:3203":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:7599:2032":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"2:2044:2653":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"1:15232:3045":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"12:880:2837":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"17:13404:5464":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"17:10899:7766":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"6:4242:6390":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:50684:7021":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"2:49142:2929":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"1:10438:2972":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"17:11409:4971":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"1:2510:2640":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"17:13440:5478":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"2:8433:59161":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"12:1256:2883":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"17:2314:4517":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"6:607:6063":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"12:2404:60692":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"2:3369:2153":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"2:12772:3708":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"16:5516:4085":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"6:3877:6225":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"16:6381:4199":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"2:4783:2653":{"crate_id":2,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"2:47064:3402":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:11341:13719":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"15:248:4024":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"1:9427:54570":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"2:51853:3351":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"2:53411:3330":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"17:11457:4986":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"17:11381:4967":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"2:56677:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"5:1256:59203":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"16:7702:4196":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:52615:3325":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"2:24311:6915":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"2:53730:7088":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:48929:2444":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"2:3496:2844":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:3085:1614":{"crate_id":1,"path":["std","io"],"kind":"module"},"1:2152:2841":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"1:11409:2929":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"1:1146:10420":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"2:47916:38672":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"16:6490:4243":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"6:565:6040":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"12:1666:4014":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"2:3526:3160":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:10468:2974":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:47084:3404":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2:3171:150":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"16:4573:5666":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"2:51422:3342":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:25052:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"2:53794:7092":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:6924:13718":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"16:4351:5660":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"2:46785:3623":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"15:0:1876":{"crate_id":15,"path":["addr2line"],"kind":"module"},"17:11956:5093":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"1:3803:128":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"2:5034:3485":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"2:51570:7024":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"17:9275:4898":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"17:10643:4914":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"17:12646:5225":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"1:7734:2991":{"crate_id":1,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"2:3672:2887":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"1:4140:3031":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:11682:2120":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:4896:3306":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"6:5301:6598":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"16:7090:4254":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"1:5431:2795":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"2:3824:229":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"2:50516:3574":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:10217:4965":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"17:10503:4491":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"2:24400:3433":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"6:4402:6454":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"2:46667:2111":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"5:1710:2871":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"6:4067:6334":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:23291:3171":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"6:4055:6329":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:3829:138":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"2:14359:3308":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"14:189:7793":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"16:4775:5673":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"2:47331:7303":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:12087:2830":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"6:4088:6345":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"17:13147:5403":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"0:50:1687":{"crate_id":0,"path":["rustc_version","version_meta_for"],"kind":"function"},"1:15315:7178":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"1:9439:54569":{"crate_id":1,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"12:2280:2882":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"1:15884:1897":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"5:1502:2880":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"6:1727:6208":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:46645:3698":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"17:11615:5021":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"6:6856:6890":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:50520:3578":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"17:12442:5188":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"2:32640:58682":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum16"],"kind":"enum"},"2:2884:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:50674:203":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"17:11968:5095":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"2:5706:2074":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"2:51831:3348":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"2:50532:3571":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"2:3248:116":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"1:1578:2880":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"18:694:4562":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"5:1152:4651":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"2:46773:2060":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"2:11409:2426":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"5:4665:4654":{"crate_id":5,"path":["alloc","collections","vec_deque","spec_extend","spec_extend","WrapAddOnDrop"],"kind":"struct"},"14:231:3731":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"2:24364:6917":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"0:48:1690":{"crate_id":0,"path":["rustc_version","version_meta"],"kind":"function"},"2:46692:2110":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:49352:3713":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"2:3530:3144":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"14:244:7264":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"5:8373:2013":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"1:1592:2881":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"1:10496:10416":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"1:15886:1898":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"17:10913:7770":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"2:10811:147":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"6:5311:6605":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"1:11868:2030":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"5:8494:3729":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"12:2392:5919":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"17:13029:5360":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"16:2733:4109":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"12:353:7266":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"2:46944:3388":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"5:1276:3834":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"17:12957:5301":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"1:1477:2877":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"17:10028:7744":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"2:50777:3376":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"6:4005:6308":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"16:7079:4253":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"0:77:1628":{"crate_id":0,"path":["rustc_version","Channel","Stable"],"kind":"variant"},"12:777:2427":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"5:3462:2841":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:23238:2809":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"6:5229:6559":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:50512:3575":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"5:6340:3783":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"2:9157:2428":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"5:3948:2676":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"6:6153:6806":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"2:8022:3259":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"2:50053:2113":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"9:0:1871":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"1:8777:2892":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"17:12117:5120":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"16:4316:5659":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"2:3600:2430":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:4410:2047":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"1:8610:163":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"1:3060:3013":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"2:48859:108":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"2:53081:3358":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"6:4116:6361":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"5:8566:3779":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"17:13331:5451":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"17:2484:46399":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"0:166:1748":{"crate_id":0,"path":["rustc_version","Error","Utf8Error"],"kind":"variant"},"17:12620:5223":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"1:15895:1905":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"6:4277:6392":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"5:3104:2544":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"1:10695:119":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"12:2032:2425":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"1:2361:2590":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"1:8863:2912":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"17:11591:5017":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"2:39144:3843":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"1:11507:2934":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"1:11944:2425":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"12:843:2870":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"12:2269:2881":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2:46603:3454":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"13:121:44627":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"2:2213:1057":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"2:3870:3289":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"6:4485:6491":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"2:4:985":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"12:1147:2882":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"16:5374:4075":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"17:12237:5138":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"2:2391:2909":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"2:2181:583":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"1:13783:2028":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"5:8287:3727":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"16:7247:4219":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"17:10291:4477":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"2:5152:3487":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"16:6557:4245":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"6:6027:6758":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"16:7238:4205":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:2502:3307":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"16:2754:4108":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"17:12674:5229":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"2:6640:3392":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"2:3382:2289":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"20:490:2146":{"crate_id":20,"path":["semver","Prerelease"],"kind":"struct"},"6:5186:6541":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"1:11890:7317":{"crate_id":1,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"17:12573:5209":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"5:3106:6910":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"18:849:4551":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"17:12687:5230":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"16:5745:4098":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:51400:3354":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"2:13013:3563":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:7436:2024":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"2:8742:2156":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"17:11769:5057":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"5:8483:3728":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"5:1909:4651":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"17:11713:5039":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"1:14417:7326":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"17:13763:5581":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"2:3676:3275":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:10719:2676":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"16:7826:3273":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"6:6034:6762":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"12:815:2874":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"1:10643:3001":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"17:13557:5509":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:24415:6921":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"2:50735:3583":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"17:9361:4900":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"16:5923:4228":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"2:3512:3153":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"17:12634:5224":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"17:12157:5127":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"16:4689:5670":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"1:12228:2607":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"1:6467:2761":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"16:7184:4406":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"2:51801:3344":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"17:13539:5505":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"1:7834:2992":{"crate_id":1,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"1:15882:1895":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"1:14379:2755":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"0:73:1624":{"crate_id":0,"path":["rustc_version","Channel","Nightly"],"kind":"variant"},"1:14061:2680":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"2:39148:3180":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"1:15053:2859":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"17:510:7732":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"16:5948:4355":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"2:5078:2459":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"18:0:1879":{"crate_id":18,"path":["memchr"],"kind":"module"},"2:11668:2121":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"16:7721:4198":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"1:11905:54551":{"crate_id":1,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"17:10464:4486":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"1:15377:4032":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"5:7477:2427":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"2:46675:3693":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"2:25520:2630":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"6:5567:6711":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"17:10775:7763":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"1:10655:3003":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"2:48278:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"12:979:2879":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"12:1703:4016":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"17:10814:4459":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"16:4467:5664":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"6:6979:6908":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"1:8732:3092":{"crate_id":1,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"17:10558:7758":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"2:12328:4675":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"5:4765:4656":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"2:46615:3455":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"6:5582:6722":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:9534:2894":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"16:6549:4203":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"1:11270:3065":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"2:9655:2090":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"6:1680:6181":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"2:51530:3343":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"2:14420:203":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"1:15889:1901":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"11:0:1873":{"crate_id":11,"path":["adler"],"kind":"module"},"17:13721:5568":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"1:6241:2799":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"2:2859:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"1:11154:3112":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"2:51999:3331":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"6:1721:6205":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"17:9756:60700":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"2:13332:2097":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"5:8241:2836":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"2:3506:3150":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"2:8197:3179":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"6:5447:6675":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"6:533:6018":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"17:9259:4897":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"2:57973:7103":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"5:7753:3784":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"16:7659:4263":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"5:4036:4651":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"5:8232:3799":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"2:46594:7287":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"2:47992:2427":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"17:12660:5226":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"6:5974:6729":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"17:9579:129":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"1:15170:2786":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:48068:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"5:981:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"5:5976:1353":{"crate_id":5,"path":["alloc","str"],"kind":"module"},"18:837:2092":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:46097:2429":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:5978:3062":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"20:459:2145":{"crate_id":20,"path":["semver","Op"],"kind":"enum"},"6:5390:6654":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"16:3243:4366":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"1:15339:7179":{"crate_id":1,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"2:22881:58580":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"17:11985:5098":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"17:9431:4902":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"2:53695:7085":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:13607:2039":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"6:1669:6173":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:21:676":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"1:2914:3004":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"5:2328:3837":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"11:54:3991":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"2:51376:7023":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"2:24072:3172":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"17:11234:4505":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"2:56651:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:53473:3350":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:7602:2034":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"17:9291:4899":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"6:634:6078":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"1:10554:3843":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"2:50043:2112":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"2:9161:3177":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"6:6016:6753":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"2:11196:2754":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"6:4127:6366":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"2:51690:3312":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:32446:2632":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"6:6688:6889":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"1:14862:2029":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"16:3051:4418":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"1:15881:1894":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"2:51601:3335":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"17:10801:4458":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"5:1663:2425":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:12195:3556":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"6:4208:6387":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"16:7200:4204":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"2:6717:3393":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"16:7208:4261":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"2:56638:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:1447:2872":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"17:9396:4901":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"2:11589:2118":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"17:11212:4507":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"2:11696:3543":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"6:4416:6459":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"5:2284:3756":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"2:46858:2075":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"2:50106:2111":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:48194:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:15633:4707":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"2:52691:3332":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"6:5366:6642":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:3475:3201":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"6:618:6068":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"17:9883:60702":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"2:49775:2103":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"2:24539:2637":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:4492:2046":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"7:38:43976":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"2:2917:185":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"5:1626:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"17:13352:5455":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"16:3029:4361":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:52198:7035":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:1441:2837":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"1:10930:2036":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"2:10574:2446":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"1:15023:2857":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"5:4372:2426":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"5:2266:4653":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"6:4081:6342":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"16:5396:4076":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"2:13050:3564":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"5:8472:220":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"12:971:2878":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"2:49939:2114":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"17:8954:4465":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"2:24887:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"1:10942:2662":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"6:4321:6415":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"6:5240:6567":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"16:3686:5653":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"20:0:1617":{"crate_id":20,"path":["semver"],"kind":"module"},"2:46211:197":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"2:50285:3229":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"2:10580:191":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"2:3617:132":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"6:4440:6470":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"16:6433:4241":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"2:46588:2110":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"17:4157:4468":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"1:13928:4703":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"16:5784:4099":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"17:13452:5479":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"1:11256:3057":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"6:1662:6169":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"17:13167:5409":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"2:52167:7034":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"5:1533:2881":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"16:2813:4375":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"14:47:7793":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"17:11547:5008":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"17:12048:5111":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"6:6671:6880":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"16:547:4093":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"2:47286:7300":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"2:5214:3492":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"17:13917:5624":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"1:10794:2904":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"18:766:4820":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"6:5331:6621":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"17:10476:4490":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"16:4871:5676":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"17:9958:60695":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"2:47874:3626":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:47074:3403":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"2:3654:3276":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"9:27:3919":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"1:12014:2825":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"16:6159:4189":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"5:3428:2840":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"1:2651:182":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"1:853:2966":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"2:50417:2125":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"2:24388:2633":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"17:11907:5079":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"20:404:1618":{"crate_id":20,"path":["semver","Version"],"kind":"struct"},"1:14912:7177":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"0:163:1682":{"crate_id":0,"path":["rustc_version","Error","CommandError"],"kind":"variant"},"2:5529:3690":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"17:11937:5088":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"6:4075:6339":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:48871:128":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"6:4142:6373":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"6:539:6020":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"16:5460:4082":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"2:53871:7095":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:14142:2974":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"0:97:1633":{"crate_id":0,"path":["rustc_version","LlvmVersion"],"kind":"struct"},"2:46363:3274":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"6:6931:6899":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"17:9004:46309":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"12:1103:2880":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"5:3905:4651":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:10999:2778":{"crate_id":1,"path":["std","net","addr","SocketAddr"],"kind":"enum"},"16:4716:5671":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"2:3611:2155":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"16:5639:4089":{"crate_id":16,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"2:47105:3405":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"5:8406:2059":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"1:7314:120":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"2:52045:3316":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"5:5388:202":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"2:49911:2120":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"2:51446:3334":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"2:5224:2460":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"5:1547:2883":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"6:4379:6446":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"8:0:1870":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"2:3841:3286":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"18:811:4548":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"16:5959:4115":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"2:51356:7022":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"2:49152:7306":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"14:56:4986":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"1:7739:54575":{"crate_id":1,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"16:4840:5675":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"17:13377:5460":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"16:5326:4072":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:10846:2434":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:5753:784":{"crate_id":2,"path":["core","iter"],"kind":"module"},"5:4709:4656":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"17:13584:5516":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"1:14801:4706":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"2:53779:7091":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"6:5260:6580":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"12:895:3993":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"5:7312:2836":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"17:11603:5018":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"1:4256:2678":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"6:601:6060":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"2:23151:2754":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"1:783:4697":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"15:230:4023":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"6:1531:6084":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:3907:3290":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:5860:3054":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"1:15907:1917":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"2:48568:2446":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"18:661:4560":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"2:49121:2436":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"6:4386:6448":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"1:3070:3018":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:50097:2110":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:14795:4705":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"5:7891:239":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:53756:7090":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:14665:2031":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"17:11335:4461":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"5:3960:3809":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:50508:3573":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"5:853:109":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"2:50397:2124":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"6:5405:6656":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"1:1460:2875":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"1:14630:2602":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"6:1740:6211":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"17:9988:46361":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"1:7539:2028":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"17:9033:46310":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"2:14148:189":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"2:49689:3554":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"18:668:4561":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"12:0:1874":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"1:1601:2882":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"2:46963:3390":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:25019:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"16:6595:4200":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"2:52379:3345":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"5:3110:59340":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"17:11130:7223":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"1:12072:3084":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"17:9826:4489":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"6:6080:6781":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:8717:121":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"2:10523:135":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"1:4180:2681":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"6:4392:6451":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"5:5488:2653":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"1:15903:1913":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"2:3447:3190":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"16:2981:4370":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"16:3743:5654":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"1:14470:57633":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"12:2066:2840":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"1:8217:3808":{"crate_id":1,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"1:13413:54412":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"16:7754:4265":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"14:194:44655":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"1:12565:3001":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"2:46721:3695":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"17:10068:4474":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"2:22879:58582":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"17:10622:4912":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"17:10445:4859":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"1:10711:2674":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"6:4160:6384":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"2:23387:15606":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"16:6691:4247":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"17:13495:5494":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"17:13859:5607":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"2:48589:2448":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"2:50748:159":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"2:2263:3208":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:5567:2764":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:3522:3158":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"2:24513:2634":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"2:47033:3399":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:8860:3079":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"14:0:1875":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"1:7139:188":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"17:13196:5417":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"2:23768:15625":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"1:11088:2784":{"crate_id":1,"path":["std","net","ip","Ipv6Addr"],"kind":"struct"},"2:3103:3206":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"17:10187:7748":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"5:7207:4665":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"17:11945:5090":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"16:7051:4251":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"0:47:1520":{"crate_id":0,"path":["rustc_version","version"],"kind":"function"},"6:4315:6412":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"16:6679:4397":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"2:48832:134":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"2:49857:2122":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"2:49839:2123":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:14779:4704":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"2:47933:207":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"18:678:143":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"17:12026:5102":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"2:3372:222":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"5:4017:2837":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"16:5303:4071":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"5:8314:2427":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"0:71:1622":{"crate_id":0,"path":["rustc_version","Channel","Dev"],"kind":"variant"},"6:4410:6458":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"1:11238:2778":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"6:5982:6734":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"2:49597:3548":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"17:11142:4960":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"2:49759:2105":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"17:11822:5071":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"16:3461:4369":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"1:4476:55576":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"7:0:1496":{"crate_id":7,"path":["unwind"],"kind":"module"},"2:47849:2425":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"1:8295:2821":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"1:4217:2682":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"17:12003:5099":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"2:50384:3234":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"2:48893:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"2:48236:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"16:7295:4192":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"2:2188:6913":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"1:8288:2820":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"17:12360:5173":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"17:10058:4534":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"2:24788:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"1:15888:1900":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"1:5563:2763":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"1:10416:2754":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"17:10093:4529":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"16:6533:4388":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"16:5855:4102":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"6:612:6065":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"1:13481:2947":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"17:13938:5627":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"1:11134:7156":{"crate_id":1,"path":["std","net","ip","fmt","Span"],"kind":"struct"},"2:53535:3315":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"2:46231:200":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"16:5362:4074":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"5:8279:196":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"6:1764:6219":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"17:12170:5128":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"2:50528:3577":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"5:7935:4665":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"16:4599:5667":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"5:8308:2427":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"5:3395:2425":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"17:8929:46308":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"1:12053:3078":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:8636:3303":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:12596:7821":{"crate_id":1,"path":["std","sys","unix","fs","TimespecDebugAdapter"],"kind":"struct"},"1:2126:2836":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"16:7741:4264":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"2:24332:3437":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:11554:3540":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:2119:2425":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:23228:2754":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"12:928:2872":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"17:11754:5051":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"6:3960:6286":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:24:604":{"crate_id":2,"path":["core","env"],"kind":"macro"},"5:1729:2873":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2:46297:2006":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"20:505:2147":{"crate_id":20,"path":["semver","BuildMetadata"],"kind":"struct"},"18:712:2297":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"6:1576:6106":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"1:10665:2772":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"17:13708:5562":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"17:10530:4950":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"1:12558:129":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"16:5530:4086":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"2:52221:7036":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:1610:2883":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"6:6896:6891":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"6:5288:6592":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"6:672:39449":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"17:10136:7740":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"1:11854:2029":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"1:11034:2780":{"crate_id":1,"path":["std","net","addr","SocketAddrV6"],"kind":"struct"},"17:11256:4962":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"2:10513:2049":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"16:6099:4232":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:3376:224":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"1:10986:2119":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"17:13306:5443":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"16:2839:4356":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"1:1991:146":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"17:11168:7224":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"17:9873:7740":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"1:11048:2782":{"crate_id":1,"path":["std","net","ip","IpAddr"],"kind":"enum"},"2:49644:3384":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"16:6858:4401":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"1:7782:4679":{"crate_id":1,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"17:13271:5433":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:47302:7301":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"1:8545:3082":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"16:5176:5680":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"16:6468:4242":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"1:5425:2794":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"6:6914:6894":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"20:384:3855":{"crate_id":20,"path":["semver","error","Position"],"kind":"enum"},"1:10993:2112":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"17:8902:46307":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"16:7281:4191":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"17:9160:4506":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"16:4903:5677":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"16:6656:4395":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"1:10902:2691":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"2:24527:1728":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"12:1203:4003":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"2:46329:3288":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"17:13016:5353":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"17:13073:5392":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"2:50312:3230":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:3755:2906":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"2:46714:2109":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"12:432:4006":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"6:4020:6314":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"1:12082:214":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"2:5269:3493":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"5:7358:4651":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"11:46:5924":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"2:51708:7026":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"2:3518:3156":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"17:4008:7735":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"1:5505:2758":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"17:8849:4503":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"17:13472:5486":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"2:10563:110":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"17:0:1878":{"crate_id":17,"path":["object"],"kind":"module"},"1:15849:54592":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"6:513:6007":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"2:52537:3337":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"16:6190:4236":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"17:10925:7771":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"2:49699:3555":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"2:10801:143":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:32988:3300":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"17:10166:4911":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"6:4218:6388":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"1:15192:3044":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:46356:3273":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"1:2422:2608":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"2:14072:151":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"6:5178:6539":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:3614:131":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"16:6331:4020":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"1:1374:2425":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"16:6604:4246":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"0:143:1640":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError"],"kind":"enum"},"16:7169:4202":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"2:53657:3318":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:24240:3596":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:1105:7810":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"17:9716:60704":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"16:5273:4898":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"17:12892:5250":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"5:1751:196":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"2:51901:3336":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:3371:2673":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"1:14874:2030":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"16:5649:4091":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"2:47925:190":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"2:46370:2460":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"2:4095:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"6:0:803":{"crate_id":6,"path":["libc"],"kind":"module"},"16:2772:4382":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"17:10015:7743":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"16:5887:4104":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"5:844:227":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"17:1236:7734":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"1:2135:2838":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"14:250:5873":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"17:607:7733":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"12:2036:2427":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"6:6908:6893":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"2:2922:125":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"1:6841:2756":{"crate_id":1,"path":["std","os","net","tcp","TcpStreamExt"],"kind":"trait"},"6:5274:6591":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"16:7471:4183":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"1:2359:2589":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"6:4516:6501":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"16:4942:5678":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"2:51631:3323":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"16:7141:4259":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"20:425:2143":{"crate_id":20,"path":["semver","VersionReq"],"kind":"struct"},"17:9948:7742":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"16:5941:4229":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:47095:2665":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:10718:7808":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"5:2376:3853":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"1:11288:2752":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"17:13481:5487":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2:4841:3255":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"12:2419:2012":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"16:6482:4390":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"1:11245:3120":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"1:8281:204":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"6:1712:6199":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:1418:2871":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"2:24348:7278":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"2:25151:2635":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"0:147:1647":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","ComponentMustNotHaveLeadingZeros"],"kind":"variant"},"17:11579:5014":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"16:5289:4185":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"18:637:4809":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"1:1108:7812":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:46171:198":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:696:2962":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:24423:6922":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:56612:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"5:5962:4663":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"17:13507:5497":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"9:1020:3937":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"2:24821:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"2:23962:2808":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"17:12302:5147":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"2:47907:3628":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"2:49356:3712":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"2:47115:3261":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"6:6243:6865":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"1:5330:1615":{"crate_id":1,"path":["std","num"],"kind":"module"},"2:25118:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"2:8376:2687":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"17:9517:2103":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"12:559:144":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"5:8226:2427":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:50692:192":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"16:6012:4184":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"17:10048:7746":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"17:10975:7775":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"1:1261:144":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"1:4036:2690":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"17:9920:7741":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"5:4694:240":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"5:8271:2427":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"17:9326:4481":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"6:5247:6571":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"2:47984:2426":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"16:7100:4255":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"2:8669:137":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:10678:130":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"1:15388:4032":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"18:645:4559":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"17:13602:5519":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"18:704:4809":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"17:12262:5140":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"1:8096:2992":{"crate_id":1,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"2:14369:3584":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"12:399:4007":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"9:1075:3938":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"2:48575:2445":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"6:1606:6125":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:24477:38460":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"17:9646:60697":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"2:47024:3398":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"17:12482:5193":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"2:32592:3616":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"2:24169:3594":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"6:4526:6506":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"1:4428:2037":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:56664:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"5:3105:59343":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"2:3743:3617":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"6:4038:6323":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"16:5698:4096":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"6:5293:6593":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"1:14429:3003":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"2:48582:2447":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"2:3812:3618":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"0:153:1652":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","MinorVersionRequiredBefore4"],"kind":"variant"},"18:774:4809":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"2:49518:3542":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"6:3907:6243":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"17:10962:7774":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"2:53581:3333":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:15908:1918":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"2:51977:3328":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"17:11784:5063":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"16:6089:4231":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"2:49789:2119":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"1:15065:2865":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"1:15324:53095":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"1:11960:2427":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"17:9930:60696":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"1:1466:2876":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"17:13281:5434":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"16:5238:44732":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"0:117:1656":{"crate_id":0,"path":["rustc_version","VersionMeta"],"kind":"struct"},"17:10082:4528":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"1:11842:183":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"5:5906:2095":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"12:952:2877":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"6:5426:6669":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"5:8420:3623":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:46415:3465":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:39108:2035":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"10:0:1872":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"1:10648:2771":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"17:12348:5171":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"5:6562:2836":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"6:6184:6832":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"13:0:1868":{"crate_id":13,"path":["std_detect"],"kind":"module"},"17:13747:5577":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"12:869:2836":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"17:12770:5248":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"16:2905:4358":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"9:927:44080":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"17:10516:7222":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"16:6310:4238":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"5:1740:2874":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"17:11494:5001":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"1:10799:2677":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"6:4346:6426":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"17:13155:5404":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"2:23435:3311":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"5:984:3797":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"6:4230:6389":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"6:161:39116":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"0:149:1650":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","ComponentMustNotHaveSign"],"kind":"variant"},"1:6645:2745":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"2:47808:178":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"17:12512:5198":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"20:122:7847":{"crate_id":20,"path":["semver","error","QuotedChar"],"kind":"struct"},"1:15904:1914":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"2:3467:2957":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"6:1704:6198":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"2:10034:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:10703:3025":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"14:11:7793":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"17:13463:5483":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"16:5685:4095":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"1:7422:2023":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"17:13908:5622":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"2:46698:3694":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"6:6902:6892":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"1:10511:10418":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"18:136:52601":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"17:13515:5500":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"17:12417:5185":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"17:11628:5023":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"1:13245:3059":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"18:754:60708":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"17:10147:4909":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"5:1701:2870":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"5:7731:3783":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"5:5166:664":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"9:776:3917":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"6:6129:6794":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:49105:2437":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"6:3896:6235":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:52023:3313":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"6:5204:6554":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"16:5217:4113":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"9:234:3895":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"17:9064:46311":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:11477:2100":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"16:3340:4107":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"6:6135:6795":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"17:13899:5618":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"17:10874:4947":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"18:152:52602":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"18:866:4553":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:14540:2951":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"6:4493:6493":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"1:4485:2048":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"2:11627:3541":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"17:681:4965":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"17:10253:4439":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"1:15253:3052":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"17:11085:4509":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"2:50072:2099":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"0:159:128":{"crate_id":0,"path":["rustc_version","Error"],"kind":"enum"},"1:11177:3113":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"5:2619:3840":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"16:2792:4110":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"17:13293:5437":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"17:1311:4535":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"12:2052:2838":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"17:10211:7750":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"6:1912:40423":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"17:10240:4436":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"1:6647:2746":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"17:11017:128":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:23437:3171":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:12030:2826":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"1:7470:2026":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"6:5541:6696":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"6:1626:6139":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"17:11797:5067":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"12:1162:4001":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"6:6120:6790":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"17:12209:5133":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"2:49618:3550":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"12:2412:5922":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"17:11354:4460":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"6:6205:6846":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"2:7159:3395":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"16:5902:4227":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"2:25085:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"6:5455:6677":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"9:157:3887":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"9:963:3935":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"5:1518:2882":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"16:6630:4393":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"5:1072:2425":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"16:6286:4021":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"5:8257:59258":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"17:10598:7761":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:13357:2091":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"6:3993:6299":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:53619:3353":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:14399:7320":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"2:46903:2664":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"2:46735:3697":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"5:7551:4651":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"16:6643:4394":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:2963:186":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"17:13369:5458":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"6:586:6052":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"17:13129:5398":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"16:7792:4222":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"2:4489:2427":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"5:6759:3734":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"2:46934:3387":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"4:0:1869":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"2:23380:2754":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"2:50561:2958":{"crate_id":2,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"16:4271:5658":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"17:13421:5471":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"2:47004:3394":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"16:4660:5669":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"2:3177:233":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"1:3058:3012":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"2:10245:3525":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"17:11181:4961":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"2:11205:218":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:50206:3224":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"2:10572:2445":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"17:13660:5561":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"2:24854:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"17:10422:7751":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"6:5439:6673":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"1:10534:2595":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"0:151:1732":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","MinorVersionMustBeZeroAfter4"],"kind":"variant"},"2:56242:3294":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"1:11998:2824":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"2:3471:3199":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"2:8682:2157":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"6:4509:6498":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"6:1634:6144":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"17:12731:5237":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"17:12282:5146":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"6:527:6015":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"6:5398:6655":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"1:10228:7829":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"17:12700:5231":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"16:5721:4097":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"2:13089:3566":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:10278:4698":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"1:5575:2766":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"2:11434:2119":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:50374:3233":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:3405:2668":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"1:11882:2031":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"1:5497:2759":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"1:11105:2917":{"crate_id":1,"path":["std","net","ip","Ipv6MulticastScope"],"kind":"enum"},"17:11305:5238":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"2:46925:3386":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"17:11068:4464":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"6:626:6073":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"1:5513:2760":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"1:11071:2783":{"crate_id":1,"path":["std","net","ip","Ipv4Addr"],"kind":"struct"},"6:1600:6123":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:46275:201":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"6:4270:3064":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"17:13961:5631":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"6:521:6012":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"6:5210:6557":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"1:14404:2771":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"0:155:1654":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","TooManyComponents"],"kind":"variant"},"1:8646:7818":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"2:51500:3355":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"17:11282:46317":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"17:11530:5006":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"17:10949:7773":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:52875:3338":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"12:1784:4649":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"2:3437:2846":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"16:5427:4080":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"2:10512:207":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"2:50063:2101":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:13761:54568":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"6:1526:6082":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"16:6050:4230":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"2:2953:179":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"17:13215:5418":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"17:10394:4514":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"16:4439:5663":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"9:749:3872":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"1:11952:2819":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"1:6339:2801":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"6:4362:6435":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"17:10318:4489":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"16:3007:4360":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"16:2937:4381":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"1:6219:2753":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"17:10545:7755":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"5:6739:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"2:5321:2463":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"2:9535:2977":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:11985:2823":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"2:48001:180":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"5:3554:2837":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"1:7456:2025":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"18:820:4549":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"6:4296:6404":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"16:7121:4257":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"1:4178:2680":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"5:8549:2837":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"2:49733:1748":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:10921:2689":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"2:49657:3551":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"2:47840:2424":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"16:6075:4186":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"9:41:3920":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"6:4061:6331":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"1:13394:2600":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"1:1031:2773":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"1:5759:3125":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"9:996:3936":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:32626:2893":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"2:49747:2108":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:8939:2908":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"1:8187:2992":{"crate_id":1,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"2:13408:3223":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:6479:6775":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"16:3129:4371":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"1:14453:119":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"16:6035:4224":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"1:5708:3119":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"1:14886:57631":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"2:3853:3287":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"2:56599:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"6:4028:6317":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"1:3459:2675":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"2:52725:3314":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:9434:4694":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"1:13859:2027":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"17:13257:5432":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:22834:2297":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"1:11022:2779":{"crate_id":1,"path":["std","net","addr","SocketAddrV4"],"kind":"struct"},"1:6649:2747":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"5:5910:2096":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"2:46631:3457":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:2147:2840":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"1:14647:53098":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"2:24440:38459":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"9:692:3870":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"2:3835:3284":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:53333:3346":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"17:12222:5135":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"17:11563:5013":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"1:973:2992":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"18:169:52603":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:48945:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"17:10489:7221":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"6:4356:6432":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"17:10831:4489":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"17:12196:5131":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"1:11314:2743":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"5:1760:3832":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"2:3453:3185":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"17:9636:7736":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:46916:3385":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"17:11890:5073":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"17:13953:5628":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"17:9786:7739":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"16:3314:4106":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"6:5488:6685":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"16:7868:128":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"1:15893:1903":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"5:4308:4651":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"2:3442:3188":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"1:2420:2607":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"5:7960:4671":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"6:4308:6411":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"17:11671:5034":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"17:13323:5448":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"1:12567:4702":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"2:49765:2104":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:14960:7327":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"2:22900:58579":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"16:4975:5679":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"2:46986:3391":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"16:6026:4182":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"6:88:39049":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"2:8874:158":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:24986:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"1:14931:2830":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"1:6573:2751":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"9:1056:3930":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"2:3535:3164":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"17:10660:46499":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:14:1638":{"crate_id":2,"path":["core","write"],"kind":"macro"},"2:24920:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:9653:4697":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"17:12318:5152":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"1:10417:2963":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"2:53715:7087":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:1113:10419":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"16:2959:4359":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"18:744:60705":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"5:777:7796":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"1:5738:3122":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"2:52120:7033":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:7062:7817":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:51671:7025":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"17:13887:5616":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"16:7449:4195":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"1:1456:2874":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"2:46336:3183":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"6:1558:6095":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"18:720:4811":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"17:9587:60703":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"2:3165:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"2:3405:2154":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"17:11031:46315":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"12:1121:2881":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"2:14107:58761":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"2:24953:2636":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"1:10527:2884":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"6:3972:6289":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"6:1537:6087":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"1:2481:2639":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"1:14968:2041":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"5:8389:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2:56625:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"6:6214:6849":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"6:6943:6901":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"1:2909:129":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"0:169:1724":{"crate_id":0,"path":["rustc_version","Error","UnexpectedVersionFormat"],"kind":"variant"},"17:10198:7749":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"2:51755:3356":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"2:48110:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:9558:4695":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockReadGuard"],"kind":"struct"},"1:10973:2665":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"1:10303:4700":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"16:3177:4363":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"17:13094:5397":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"6:4532:6508":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"16:6130:4233":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"17:11514:5002":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"6:6954:6905":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:3174:136":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:3491:2843":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"2:14456:142":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"1:10963:2664":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"17:9561:4483":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"17:10586:7760":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"1:15854:10421":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"17:10851:4946":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"16:7309:4190":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"0:75:1626":{"crate_id":0,"path":["rustc_version","Channel","Beta"],"kind":"variant"},"16:5869:191":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"17:11474:4991":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"6:1544:6090":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"17:12921:5270":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"17:10455:4487":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"2:3168:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"1:2130:2837":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"1:3042:3007":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"6:5998:6746":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:3432:2955":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"16:2861:4357":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"1:11966:2822":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"2:47865:2427":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"1:6745:2740":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"1:10789:2903":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"0:160:1679":{"crate_id":0,"path":["rustc_version","Error","CouldNotExecuteCommand"],"kind":"variant"},"17:12406:5183":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"5:3838:2426":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"16:6873:3626":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"16:7637:4262":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"0:144:1728":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","ParseIntError"],"kind":"variant"},"2:51947:3324":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"17:10937:7772":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"2:2862:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"16:7264:196":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"2:2286:3212":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"17:13612:5524":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:14057:139":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"16:5348:4073":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"1:4829:2918":{"crate_id":1,"path":["std","net","ip","display_buffer","IpDisplayBuffer"],"kind":"struct"},"2:46754:3459":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"17:10788:7765":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"3:321:207":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"6:6665:6878":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"2:3459:3195":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"12:2253:2880":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"1:1088:2641":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"0:0:1767":{"crate_id":0,"path":["rustc_version"],"kind":"module"},"6:1748:6215":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"18:782:4809":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"2:8449:2897":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"16:3576:4826":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"1:10428:53097":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"1:1397:2427":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"17:10304:4480":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"6:4048:6326":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"6:6925:6898":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:48320:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"17:13180:5414":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"2:23763:3173":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"2:13271:1616":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"17:13873:5609":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"16:3265:4367":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"17:12496:5196":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"5:2843:3839":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"1:11518:2935":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"1:14394:7318":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"17:2543:4485":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"2:50363:3232":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:11292:6762":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"2:51552:3347":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"6:6057:6780":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"1:15905:1915":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"6:4098:6352":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"17:12469:5192":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"16:3521:5652":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"1:12125:2953":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"1:11836:2027":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"16:4381:5661":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"6:4538:6511":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"0:174:1714":{"crate_id":0,"path":["rustc_version","Error","UnknownPreReleaseTag"],"kind":"variant"},"1:15899:1909":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"17:12455:5190":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"9:722:3871":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"16:5257:4897":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"5:3407:3753":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"2:47015:3397":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:11491:2932":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"9:469:44086":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"2:50524:3576":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:15883:1896":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"16:6060:4225":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"2:49130:147":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"2:49587:3547":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:5143:2461":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"1:15887:1899":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"2:46655:3699":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:14253:58762":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"17:13774:5585":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"5:2005:2837":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"2:3374:107":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"18:651:4556":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"17:12250:5139":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"16:4495:5665":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"2:23049:3379":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"18:885:4554":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"16:7369:4188":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"2:47857:2426":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"6:4434:6468":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"6:4287:6399":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"17:10340:4518":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"16:3155:4362":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"17:13345:5453":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"6:4446:6473":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"13:233:5918":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"17:11689:5035":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"17:11640:5024":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"1:859:2967":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"5:6775:3735":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"16:6504:4244":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"1:14437:130":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"6:6967:6906":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:15865:53090":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"6:5478:6683":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"1:9512:3040":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"16:3221:4365":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"2:48446:3632":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"17:9539:4504":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2:4161:3181":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"1:4467:2049":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"5:3436:2838":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"16:3297:4420":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"20:317:128":{"crate_id":20,"path":["semver","parse","Error"],"kind":"struct"},"1:11359:2919":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"6:6229:6856":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"6:593:6055":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"2:50220:3227":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:2326:604":{"crate_id":1,"path":["std","env"],"kind":"module"},"16:6931:4404":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"16:7025:4116":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"17:13975:5634":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"2:3370:2288":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"17:9206:46314":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"16:5605:4088":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"2:4853:3256":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"2:5298:2295":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"5:5609:3734":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"2:22847:58184":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"17:11922:5083":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"18:896:4555":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"16:7782:4194":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"6:1621:6137":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"16:5668:4092":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"2:3620:133":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"16:6518:4201":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"12:933:2875":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"2:3484:3145":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:50727:3582":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"6:4148:6375":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"2:49113:7305":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"2:52661:3329":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:9267:7852":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"2:24506:7282":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"2:53832:7094":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"17:2512:4515":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"2:39184:2292":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"12:764:2426":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"17:10039:7745":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"6:1733:3058":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"16:4628:5668":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"2:5727:3417":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:3381:4677":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"1:6723:2744":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"1:15898:1908":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"1:0:1344":{"crate_id":1,"path":["std"],"kind":"module"},"6:4464:6484":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"6:4425:6462":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"2:6900:58917":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"17:13840:5602":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"18:829:4550":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"6:6268:6871":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"0:177:1754":{"crate_id":0,"path":["rustc_version","Error","LlvmVersionError"],"kind":"variant"},"17:12543:5203":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"12:2059:2839":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"1:3284:2672":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"1:8446:3070":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"1:5519:2761":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"2:32632:3644":{"crate_id":2,"path":["core","mem","valid_align","ValidAlign"],"kind":"struct"},"5:3825:2425":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2:53704:7086":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"17:3743:4455":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:48404:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"16:2883:4376":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"16:6342:4239":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"17:12527:5202":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"2:50011:2117":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"3:0:436":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"17:13549:5508":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"2:3373:221":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"12:183:4009":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"18:621:7216":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"2:10578:2448":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"2:11516:3539":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"17:299:7731":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"6:3987:6296":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"16:7768:4193":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"5:1296:3835":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"16:3103:4372":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"1:11894:54526":{"crate_id":1,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"17:10115:4531":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"2:47293:2896":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"16:3077:4419":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"17:13817:5601":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"6:571:6043":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"17:12143:4918":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"1:8497:3073":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"2:23232:2807":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"2:14183:7809":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"2:5278:2462":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"1:11190:3046":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"17:13785:5586":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"16:3494:4822":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"2:50349:3231":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:52425:3349":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"16:4743:5672":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"5:383:3807":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"1:4351:2688":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"12:466:60687":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"2:23426:2754":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"6:1551:6092":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"2:8632:3301":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"5:1719:2872":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"6:1567:6100":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"5:3814:161":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"17:10988:7776":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:23175:3380":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"5:3402:2839":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2:46253:199":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"16:6407:4240":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"2:47043:3400":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"17:11314:4482":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"12:472:60689":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"12:940:2876":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"6:4373:6443":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"1:15890:1902":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"2:46995:3396":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:3044:3008":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"6:580:6049":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"1:11264:3046":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"1:5636:3116":{"crate_id":1,"path":["std","os","unix","net","addr","AsciiEscaped"],"kind":"struct"},"5:5861:4651":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"17:9240:4440":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"15:269:4028":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"12:787:2873":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"5:6498:228":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"0:67:207":{"crate_id":0,"path":["rustc_version","Result"],"kind":"typedef"},"1:9143:2806":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"2:50191:3221":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"2:28330:2631":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"16:3478:4368":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"17:13037:5362":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"1:7939:2992":{"crate_id":1,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"2:53809:7093":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"2:49679:3553":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:1387:2426":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"2:48362:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:10517:2848":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"17:10390:4488":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"1:2141:2839":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"17:11013:7778":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"17:12383:5182":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"2:53741:7089":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"5:8449:2058":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:4865:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:46801:3624":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"2:3272:128":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"17:11725:5040":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"1:11432:2930":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"6:3883:6226":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:47320:7007":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"17:12758:5241":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"6:4474:6485":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:48026:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"6:6250:6868":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"16:6717:4248":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"1:7484:1612":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"6:5149:6515":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"6:157:39115":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"2:57952:7102":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"17:12015:5101":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"1:12106:2952":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"18:729:60707":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"16:7415:4206":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"1:5151:3044":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"12:1183:4002":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"16:3770:5655":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"5:3114:59341":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"17:10435:4446":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"2:46728:3696":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"1:9394:4693":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"2:3501:2845":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"12:750:2425":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"17:11433:4985":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"1:10914:2687":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:13073:3565":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:14067:2678":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"1:15038:2858":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"1:4752:2776":{"crate_id":1,"path":["std","net","addr","ToSocketAddrs"],"kind":"trait"},"17:13428:5472":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"12:2398:5920":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"1:15902:1912":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"16:6173:4235":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"17:13233:5426":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"17:10407:4513":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"2:49569:3545":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"5:1055:3798":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"2:52455:3352":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"2:46768:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"5:444:2094":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"2:50504:3570":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"1:7248:187":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"17:13247:5431":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"2:8127:3423":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"17:11701:5038":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"12:114:60688":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"1:2397:2600":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"2:49160:7307":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:53684:7084":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"2:50237:3228":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"17:9796:60701":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"16:4198:5657":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"2:23974:58182":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"16:0:1877":{"crate_id":16,"path":["gimli"],"kind":"module"},"17:12183:5130":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"6:5216:6558":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"6:6097:6783":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"1:6481:6777":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"18:801:4547":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"16:7323:4207":{"crate_id":16,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"1:15897:1907":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"1:10550:2602":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"1:8974:7818":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"1:1405:2870":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"6:4110:6358":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:46954:3389":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:46878:3384":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:7093:7817":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"6:4198:6386":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"2:46124:3277":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"2:11710:3544":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"17:9183:4463":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"16:7355:4187":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"5:5948:4660":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"6:5378:6647":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"17:12130:5123":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"16:5998:4170":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"5:4581:3821":{"crate_id":5,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"20:186:2148":{"crate_id":20,"path":["semver","identifier","Identifier"],"kind":"struct"},"17:13595:5517":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"9:900:5975":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"17:11002:7777":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:49578:3546":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"2:11385:2425":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"2:46187:196":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"6:1588:6115":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:0:493":{"crate_id":2,"path":["core"],"kind":"module"},"2:46848:2076":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"6:5547:6697":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"9:603:44155":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"1:8453:3072":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"1:2123:2427":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"1:6576:2753":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"5:8249:3800":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"2:51468:3322":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"16:6277:4237":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"2:10576:2447":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:2654:181":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:10582:2449":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"17:12585:5211":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"1:2911:3002":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:32692:58685":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum32"],"kind":"enum"},"18:739:7728":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"2:50573:3641":{"crate_id":2,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"6:6007:6752":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:15906:1916":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"16:7131:4258":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"17:11653:5025":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"20:440:2144":{"crate_id":20,"path":["semver","Comparator"],"kind":"struct"},"1:10443:2990":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"16:5498:4084":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"5:8436:2057":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"6:3981:6294":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"17:13735:5574":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"16:5412:4079":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"1:6100:3063":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"2:13362:2089":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"17:10610:7762":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"16:7684:4197":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:3587:117":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"2:2765:584":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"6:3966:6287":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"16:6907:4249":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"5:0:283":{"crate_id":5,"path":["alloc"],"kind":"module"},"17:294:7730":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"6:6643:6877":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"17:12070:5112":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"5:69:3778":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"2:47976:2425":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"2:10250:3526":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"6:5419:6667":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"2:50540:122":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"2:50081:2098":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:8195:2929":{"crate_id":1,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"17:12716:5233":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"1:5278:3052":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"6:4332:6420":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"12:2072:2841":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"1:15894:1904":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"5:1684:2427":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"2:53223:3326":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:6477:6773":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"14:216:44661":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:3364:215":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"17:11742:5048":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"6:545:6023":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"2:9533:2895":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"6:4340:6424":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"1:4146:3033":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"17:13755:5580":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"16:4411:5662":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"17:13794:5588":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"2:24461:38451":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"18:857:4552":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"2:49993:2116":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"2:52301:3357":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"2:13560:110":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"17:9706:7737":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"12:1881:146":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"16:7379:4208":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"1:14634:2796":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"2:22862:58184":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"6:4256:6391":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:8673:152":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"16:3908:5656":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"17:11810:5068":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"2:32792:58681":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum64"],"kind":"enum"},"16:6980:4250":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"1:12067:164":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"2:46894:3383":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"16:3199:4364":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"6:4012:6312":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:50169:3220":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"5:3441:3754":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:48841:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"17:10127:4489":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"5:4281:2836":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"17:10223:4444":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"2:52069:3317":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:46972:7296":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"}},"external_crates":{"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"20":{"name":"semver","html_root_url":"https://docs.rs/semver/1.0.13/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"}},"format_version":21}