{"root":"0:0:2179","crate_version":"0.4.0","includes_private":false,"index":{"b:5:736-0:74:2047":{"id":"b:5:736-0:74:2047","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2657:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:732:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2047","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:738:2936","5:739:2127","5:740:2937"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2933:1805":{"id":"2:2933:1805","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:42117:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2898:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13314:33894":{"id":"2:13314:33894","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4944:33894"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:44175:2524","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:148:1973":{"id":"0:148:1973","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[356,16],"end":[356,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"semver::Error","id":"20:220:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:13213:6721":{"id":"2:13213:6721","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43862:2518","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3172:2695-0:74:2047":{"id":"a:2:3172:2695-0:74:2047","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3172:2695","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2047","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:108":{"id":"0:108","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,27],"end":[147,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32218:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2070","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:112:482":{"id":"0:112:482","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[147,38],"end":[147,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"VersionMeta","id":"0:93:2070","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30978:196","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:146:2163":{"id":"0:146:2163","crate_id":0,"name":"SemVerError","span":{"filename":"src/lib.rs","begin":[356,4],"end":[356,30]},"visibility":"default","docs":"An error occurred in parsing the semver.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:148:1973"]},"discriminant":null}}},"b:2:2918-0:118:2054":{"id":"b:2:2918-0:118:2054","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2891:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2054","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2920:831"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13269:33882":{"id":"2:13269:33882","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12873:2510","`DoubleEndedIterator`":"2:8256:129","prim@char":"1:12334:471","str::rmatch_indices":"2:13272:33883"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:44026:2529","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12879:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13298:33892":{"id":"2:13298:33892","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12334:471","self::pattern":"2:12873:2510"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12879:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2641-0:48:2034":{"id":"b:2:2641-0:48:2034","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32217:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2635:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2643:2395"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3756-0:134:137":{"id":"b:2:3756-0:134:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32217:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3754:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3758:1820"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:78:475":{"id":"0:78:475","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[90,9],"end":[90,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2047","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13282:33888":{"id":"2:13282:33888","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13292:27902":{"id":"2:13292:27902","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12334:471","self::pattern":"2:12873:2510"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41984:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12879:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12879:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12894:2504","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:63":{"id":"0:63","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,26],"end":[71,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2691:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:64:698"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:94:2031":{"id":"0:94:2031","crate_id":0,"name":"semver","span":{"filename":"src/lib.rs","begin":[150,4],"end":[150,23]},"visibility":"public","docs":"Version of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Version","id":"20:299:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:99:875":{"id":"0:99:875","crate_id":0,"name":"host","span":{"filename":"src/lib.rs","begin":[165,4],"end":[165,20]},"visibility":"public","docs":"Host target triple of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7641:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:13289:26632":{"id":"2:13289:26632","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns the substring after the prefix,\nwrapped in `Some`. Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12334:471","self::pattern":"2:12873:2510"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41984:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12879:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:114:1294":{"id":"0:114:1294","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[147,43],"end":[147,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"VersionMeta","id":"0:93:2070","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:41984:194","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30978:196","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13245:33879":{"id":"2:13245:33879","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12873:2510","str::split":"2:13236:2057","prim@char":"1:12334:471","`DoubleEndedIterator`":"2:8256:129","str::rsplit_terminator":"2:13248:33880"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43926:2538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12879:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13301:33893":{"id":"2:13301:33893","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12334:471","self::pattern":"2:12873:2510"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12879:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12879:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12894:2504","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3137:247-0:93:2070":{"id":"a:2:3137:247-0:93:2070","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3137:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2070","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13217:33878":{"id":"2:13217:33878","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:44140:2528","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2643:2395":{"id":"2:2643:2395","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13216:2111":{"id":"2:13216:2111","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:44130:2527","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32216:237-0:74:2047":{"id":"a:2:32216:237-0:74:2047","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32216:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2047","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:42":{"id":"0:42","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[384,0],"end":[396,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["description","cause","type_id","source","provide"],"trait":{"name":"Error","id":"2:2977:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:43:2153"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:155":{"id":"0:155","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[340,9],"end":[340,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10304:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:156:801"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13254:27896":{"id":"2:13254:27896","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12334:471","str::splitn":"2:13251:2115","self::pattern":"2:12873:2510"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43998:2535","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12879:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12879:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12894:2504","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13196:2131":{"id":"2:13196:2131","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41986:191"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41984:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10963:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10963:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:156:801":{"id":"0:156:801","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[340,9],"end":[340,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10278:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10259:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:121:1973":{"id":"0:121:1973","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[282,18],"end":[282,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"num::ParseIntError","id":"2:22996:2140","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:73:801":{"id":"0:73:801","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[71,60],"end":[71,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10278:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10259:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:87:482":{"id":"0:87:482","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[90,38],"end":[90,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2047","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30978:196","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13316:8576":{"id":"2:13316:8576","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4945:8576"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:44184:2525","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:76:2051":{"id":"0:76:2051","crate_id":0,"name":"minor","span":{"filename":"src/lib.rs","begin":[96,4],"end":[96,18]},"visibility":"public","docs":"Minor version","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u64"}}},"a:2:3137:247-0:134:137":{"id":"a:2:3137:247-0:134:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3137:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:43:2153":{"id":"0:43:2153","crate_id":0,"name":"source","span":{"filename":"src/lib.rs","begin":[385,4],"end":[395,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41984:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"dyn_trait":{"traits":[{"trait":{"name":"error::Error","id":"2:2977:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13311:29072":{"id":"2:13311:29072","crate_id":2,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:992:38188"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2929-0:74:2047":{"id":"b:2:2929-0:74:2047","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2888:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2898:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2047","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2932:137","2:2933:1805"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2644-0:134:137":{"id":"b:2:2644-0:134:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32217:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2638:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2646:26005"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:66:482":{"id":"0:66:482","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[71,37],"end":[71,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Channel","id":"0:48:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30978:196","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:40":{"id":"0:40","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[363,0],"end":[382,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10309:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:41:801"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13218:31980":{"id":"2:13218:31980","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:44168:2511","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:157":{"id":"0:157","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2891:144","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Utf8Error","id":"2:43822:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:158:831"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:126:2144":{"id":"0:126:2144","crate_id":0,"name":"MinorVersionMustBeZeroAfter4","span":{"filename":"src/lib.rs","begin":[288,4],"end":[288,32]},"visibility":"default","docs":"Minor version component must be zero on LLVM versions later than 4.0","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:57":{"id":"0:57","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,9],"end":[71,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3132:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:17":{"id":"0:17","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[100,0],"end":[104,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10309:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2047","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:18:801"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:81":{"id":"0:81","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,23],"end":[90,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2696:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2047","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:88":{"id":"0:88","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,43],"end":[90,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ge","gt","lt","le"],"trait":{"name":"PartialOrd","id":"2:2733:202","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2047","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:89:1294"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:74:2047":{"id":"0:74:2047","crate_id":0,"name":"LlvmVersion","span":{"filename":"src/lib.rs","begin":[91,0],"end":[98,1]},"visibility":"public","docs":"LLVM version\n\nLLVM's version numbering scheme is not semver compatible until version 4.0\n\nrustc [just prints the major and minor versions], so other parts of the version are not included.\n\n[just prints the major and minor versions]: https://github.com/rust-lang/rust/blob/b5c9e2448c9ace53ad5c11585803894651b18b0a/compiler/rustc_codegen_llvm/src/llvm_util.rs#L173-L178","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:75:2049","0:76:2051"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:32275:2557-0:74:2047","a:2:42078:8584-0:74:2047","a:2:42079:8707-0:74:2047","a:2:3137:247-0:74:2047","a:2:32216:237-0:74:2047","a:2:3172:2695-0:74:2047","b:2:2644-0:74:2047","b:2:2924-0:74:2047","b:2:2929-0:74:2047","b:2:2914-0:74:2047","b:2:3756-0:74:2047","b:2:2918-0:74:2047","b:2:2641-0:74:2047","b:5:736-0:74:2047","b:5:5862-0:74:2047","0:84","0:83","0:19","0:79","0:90","0:17","0:77","0:81","0:86","0:88"]}}},"0:35:831":{"id":"0:35:831","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[296,4],"end":[298,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["e",{"resolved_path":{"name":"num::ParseIntError","id":"2:22996:2140","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:138:2094":{"id":"0:138:2094","crate_id":0,"name":"CommandError","span":{"filename":"src/lib.rs","begin":[345,4],"end":[350,5]},"visibility":"default","docs":"Error output from the command that was run.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"struct":{"fields":["0:139:2095","0:140:2098"],"fields_stripped":false}},"discriminant":null}}},"a:2:42078:8584-0:48:2034":{"id":"a:2:42078:8584-0:48:2034","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42078:8584","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:118:2054":{"id":"0:118:2054","crate_id":0,"name":"LlvmVersionParseError","span":{"filename":"src/lib.rs","begin":[280,0],"end":[293,1]},"visibility":"public","docs":"LLVM Version Parse Error","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:119:2140","0:122:2061","0:124:2064","0:126:2144","0:128:2066","0:130:2068"],"impls":["a:2:32275:2557-0:118:2054","a:2:42078:8584-0:118:2054","a:2:42079:8707-0:118:2054","a:2:3137:247-0:118:2054","a:2:32216:237-0:118:2054","a:2:3172:2695-0:118:2054","b:2:2644-0:118:2054","b:2:2924-0:118:2054","b:2:2929-0:118:2054","b:2:2914-0:118:2054","b:2:3756-0:118:2054","b:2:2918-0:118:2054","b:2:2641-0:118:2054","b:5:5862-0:118:2054","0:34","0:132","0:38","0:161","0:36"]}}},"0:0:2179":{"id":"0:0:2179","crate_id":0,"name":"rustc_version","span":{"filename":"src/lib.rs","begin":[9,0],"end":[417,58]},"visibility":"public","docs":"Simple library for getting the version information of a `rustc`\ncompiler.\n\nThis can be used by build scripts or other tools dealing with Rust sources\nto make decisions based on the version of the compiler.\n\nIt calls `$RUSTC --version -v` and parses the output, falling\nback to `rustc` if `$RUSTC` is not set.\n\n# Example\n\n```rust\n// This could be a cargo build script\n\nuse rustc_version::{version, version_meta, Channel, Version};\n\n// Assert we haven't travelled back in time\nassert!(version().unwrap().major >= 1);\n\n// Set cfg flags depending on release channel\nmatch version_meta().unwrap().channel {\n    Channel::Stable => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_STABLE\");\n    }\n    Channel::Beta => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_BETA\");\n    }\n    Channel::Nightly => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_NIGHTLY\");\n    }\n    Channel::Dev => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_DEV\");\n    }\n}\n\n// Check for a minimum version\nif version().unwrap() >= Version::parse(\"1.4.0\").unwrap() {\n    println!(\"cargo:rustc-cfg=compiler_has_important_bugfix\");\n}\n```","links":{},"attrs":["#![warn(missing_docs)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:15-20:299:2032","0:48:2034","0:74:2047","0:93:2070","0:25:1929","0:26:2102","0:28:2099","0:118:2054","0:134:137","0:45:226"],"is_stripped":false}}},"2:13193:33875":{"id":"2:13193:33875","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:90":{"id":"0:90","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,55],"end":[90,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10520:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2047","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:91:871"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13205:33877":{"id":"2:13205:33877","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12340:1720","crate::ops::IndexMut":"2:3415:8605","str::slice_unchecked":"2:13204:33876"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13277:33885":{"id":"2:13277:33885","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13279:33886":{"id":"2:13279:33886","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:160:831":{"id":"0:160:831","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["e",{"resolved_path":{"name":"semver::Error","id":"20:220:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:133:801":{"id":"0:133:801","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[279,9],"end":[279,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10278:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10259:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:53:2040":{"id":"0:53:2040","crate_id":0,"name":"Beta","span":{"filename":"src/lib.rs","begin":[78,4],"end":[78,8]},"visibility":"default","docs":"Beta release channel","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2914-0:134:137":{"id":"b:2:2914-0:134:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2891:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2888:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2917:2097"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:67":{"id":"0:67","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,42],"end":[71,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ge","gt","lt","le"],"trait":{"name":"PartialOrd","id":"2:2733:202","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:68:1294"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:48:2034":{"id":"0:48:2034","crate_id":0,"name":"Channel","span":{"filename":"src/lib.rs","begin":[72,0],"end":[81,1]},"visibility":"public","docs":"Release channel of the compiler.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:49:2036","0:51:2038","0:53:2040","0:55:2042"],"impls":["a:2:32275:2557-0:48:2034","a:2:42078:8584-0:48:2034","a:2:42079:8707-0:48:2034","a:2:3137:247-0:48:2034","a:2:32216:237-0:48:2034","a:2:3172:2695-0:48:2034","b:2:2644-0:48:2034","b:2:2924-0:48:2034","b:2:2929-0:48:2034","b:2:2914-0:48:2034","b:2:3756-0:48:2034","b:2:2918-0:48:2034","b:2:2641-0:48:2034","b:5:736-0:48:2034","0:62","0:65","0:69","0:60","0:63","0:58","0:72","0:67","0:57"]}}},"0:36":{"id":"0:36","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[301,0],"end":[324,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10309:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2054","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:37:801"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2644-0:48:2034":{"id":"b:2:2644-0:48:2034","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32217:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2638:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2646:26005"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:41:801":{"id":"0:41:801","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[364,4],"end":[381,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10278:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10259:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3756-0:93:2070":{"id":"b:2:3756-0:93:2070","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32217:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3754:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2070","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3758:1820"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:124:2064":{"id":"0:124:2064","crate_id":0,"name":"ComponentMustNotHaveSign","span":{"filename":"src/lib.rs","begin":[286,4],"end":[286,28]},"visibility":"default","docs":"A version component has a sign","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:161":{"id":"0:161","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2891:144","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2054","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:162:831"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13313:29074":{"id":"2:13313:29074","crate_id":2,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:992:38188"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:96:2075":{"id":"0:96:2075","crate_id":0,"name":"commit_date","span":{"filename":"src/lib.rs","begin":[156,4],"end":[156,35]},"visibility":"public","docs":"Commit date of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41984:194","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"5:7641:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"5:5629:34594":{"id":"5:5629:34594","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:304:2507","`String`":"5:7641:243"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:304:2507","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7641:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13225:27901":{"id":"2:13225:27901","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12334:471","self::pattern":"2:12873:2510"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12879:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12879:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12894:2504","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2932:137":{"id":"2:2932:137","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32140:2458","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:2924-0:93:2070":{"id":"b:2:2924-0:93:2070","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2898:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2894:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2070","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2927:137","2:2928:1807"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:86":{"id":"0:86","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,38],"end":[90,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clamp","max","min"],"trait":{"name":"Ord","id":"2:2727:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2047","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:87:482"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:75:2049":{"id":"0:75:2049","crate_id":0,"name":"major","span":{"filename":"src/lib.rs","begin":[94,4],"end":[94,18]},"visibility":"public","docs":"Major version","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u64"}}},"a:2:32275:2557-0:134:137":{"id":"a:2:32275:2557-0:134:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32275:2557","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13215:31992":{"id":"2:13215:31992","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:13214:31985"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:44159:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:149:2126":{"id":"0:149:2126","crate_id":0,"name":"UnknownPreReleaseTag","span":{"filename":"src/lib.rs","begin":[358,4],"end":[358,32]},"visibility":"default","docs":"The pre-release tag is unknown.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:151:1973"]},"discriminant":null}}},"2:13212:6851":{"id":"2:13212:6851","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12334:471"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43852:2519","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32216:237-0:48:2034":{"id":"a:2:32216:237-0:48:2034","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32216:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:65":{"id":"0:65","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,37],"end":[71,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clamp","max","min"],"trait":{"name":"Ord","id":"2:2727:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:66:482"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:59:475":{"id":"0:59:475","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[71,15],"end":[71,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Channel","id":"0:48:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:34":{"id":"0:34","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[295,0],"end":[299,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2891:144","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ParseIntError","id":"2:22996:2140","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2054","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:35:831"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2929-0:93:2070":{"id":"b:2:2929-0:93:2070","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2888:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2898:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2070","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2932:137","2:2933:1805"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2918-0:134:137":{"id":"b:2:2918-0:134:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2891:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2920:831"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32216:237-0:118:2054":{"id":"a:2:32216:237-0:118:2054","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32216:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2054","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:134:137":{"id":"0:134:137","crate_id":0,"name":"Error","span":{"filename":"src/lib.rs","begin":[341,0],"end":[361,1]},"visibility":"public","docs":"The error type for this crate.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:135:2091","0:138:2094","0:141:2160","0:144:2136","0:146:2163","0:149:2126","0:152:2166"],"impls":["a:2:32275:2557-0:134:137","a:2:42078:8584-0:134:137","a:2:42079:8707-0:134:137","a:2:3137:247-0:134:137","a:2:32216:237-0:134:137","a:2:3172:2695-0:134:137","b:2:2644-0:134:137","b:2:2924-0:134:137","b:2:2929-0:134:137","b:2:2914-0:134:137","b:2:3756-0:134:137","b:2:2918-0:134:137","b:2:2641-0:134:137","b:5:5862-0:134:137","0:159","0:157","0:40","0:42","0:161","0:155"]}}},"b:5:736-0:48:2034":{"id":"b:5:736-0:48:2034","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2657:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:732:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:738:2936","5:739:2127","5:740:2937"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13263:2410":{"id":"2:13263:2410","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12873:2510","`DoubleEndedIterator`":"2:8256:129","prim@char":"1:12334:471","str::rmatches":"2:13266:33881"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:44080:2531","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12879:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13222:2060":{"id":"2:13222:2060","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, in which case this function will return true if\nthe `&str` is a prefix of this string slice.\n\nThe [pattern] can also be a [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\nThese will only be checked against the first character of this string slice.\nLook at the second example below regarding behavior for slices of [`char`]s.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```\n\n```\nlet bananas = \"bananas\";\n\n// Note that both of these assert successfully.\nassert!(bananas.starts_with(&['b', 'a', 'n', 'a']));\nassert!(bananas.starts_with(&['a', 'b', 'c', 'd']));\n```","links":{"prim@char":"1:12334:471","self::pattern":"2:12873:2510"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12879:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:84":{"id":"0:84","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,27],"end":[90,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2691:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2047","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:85:698"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:113":{"id":"0:113","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,43],"end":[147,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ge","gt","lt","le"],"trait":{"name":"PartialOrd","id":"2:2733:202","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2070","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:114:1294"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13202:27860":{"id":"2:13202:27860","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10963:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10963:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:23":{"id":"0:23","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[174,0],"end":[191,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2070","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:24:2086"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2924-0:74:2047":{"id":"b:2:2924-0:74:2047","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2898:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2894:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2047","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2927:137","2:2928:1807"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13307:29069":{"id":"2:13307:29069","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39885:14006","Self::is_ascii":"2:13306:26736"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41984:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39885:14006","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:26:2102":{"id":"0:26:2102","crate_id":0,"name":"version_meta","span":{"filename":"src/lib.rs","begin":[200,0],"end":[204,1]},"visibility":"public","docs":"Returns the `rustc` SemVer version and additional metadata\nlike the git short hash and build date.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Result","id":"0:45:226","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"VersionMeta","id":"0:93:2070","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32275:2557-0:118:2054":{"id":"a:2:32275:2557-0:118:2054","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32275:2557","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2054","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:98:2079":{"id":"0:98:2079","crate_id":0,"name":"channel","span":{"filename":"src/lib.rs","begin":[162,4],"end":[162,24]},"visibility":"public","docs":"Release channel of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Channel","id":"0:48:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:103:475":{"id":"0:103:475","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[147,9],"end":[147,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"VersionMeta","id":"0:93:2070","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2641-0:74:2047":{"id":"b:2:2641-0:74:2047","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32217:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2635:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2047","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2643:2395"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:128:2066":{"id":"0:128:2066","crate_id":0,"name":"MinorVersionRequiredBefore4","span":{"filename":"src/lib.rs","begin":[290,4],"end":[290,31]},"visibility":"default","docs":"Minor version component is required on LLVM versions earlier than 4.0","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:3137:247-0:74:2047":{"id":"a:2:3137:247-0:74:2047","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3137:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2047","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:106":{"id":"0:106","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,23],"end":[147,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2696:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2070","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2646:26005":{"id":"2:2646:26005","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:20:136":{"id":"0:20:136","crate_id":0,"name":"Err","span":{"filename":"src/lib.rs","begin":[107,4],"end":[107,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2054","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:2918-0:93:2070":{"id":"b:2:2918-0:93:2070","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2891:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2070","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2920:831"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2914-0:118:2054":{"id":"b:2:2914-0:118:2054","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2891:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2888:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2054","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2917:2097"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2644-0:93:2070":{"id":"b:2:2644-0:93:2070","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32217:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2638:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2070","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2646:26005"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3756-0:74:2047":{"id":"b:2:3756-0:74:2047","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32217:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3754:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2047","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3758:1820"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13308:26740":{"id":"2:13308:26740","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3172:2695-0:118:2054":{"id":"a:2:3172:2695-0:118:2054","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3172:2695","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2054","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:116:871":{"id":"0:116:871","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[147,55],"end":[147,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10528:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:83":{"id":"0:83","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,27],"end":[90,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32218:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2047","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:740:2937":{"id":"5:740:2937","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2927:137":{"id":"2:2927:137","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2898:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:104":{"id":"0:104","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,16],"end":[147,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10304:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2070","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:105:801"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13248:33880":{"id":"2:13248:33880","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12873:2510","str::split":"2:13236:2057","prim@char":"1:12334:471","str::split_terminator":"2:13245:33879"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43944:2537","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12879:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12879:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12894:2504","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:154:1973":{"id":"0:154:1973","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[360,21],"end":[360,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2054","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:24:2086":{"id":"0:24:2086","crate_id":0,"name":"for_command","span":{"filename":"src/lib.rs","begin":[176,4],"end":[190,5]},"visibility":"public","docs":"Returns the version metadata for `cmd`, which should be a `rustc` command.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["cmd",{"resolved_path":{"name":"Command","id":"1:5644:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:45:226","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"VersionMeta","id":"0:93:2070","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:15-20:299:2032":{"id":"0:15-20:299:2032","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[66,0],"end":[66,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"semver::Version","name":"Version","id":"20:299:2032","glob":false}}},"2:13310:26742":{"id":"2:13310:26742","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:38":{"id":"0:38","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[326,0],"end":[337,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["description","cause","type_id","source","provide"],"trait":{"name":"Error","id":"2:2977:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2054","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:39:2153"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13257:27898":{"id":"2:13257:27898","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41984:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12879:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42079:8707-0:134:137":{"id":"a:2:42079:8707-0:134:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42079:8707","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:2918-0:48:2034":{"id":"b:2:2918-0:48:2034","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2891:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2920:831"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5617:34591":{"id":"5:5617:34591","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7641:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7641:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12879:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3756-0:118:2054":{"id":"b:2:3756-0:118:2054","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32217:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3754:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2054","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3758:1820"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:79":{"id":"0:79","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,16],"end":[90,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10304:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2047","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:80:801"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2641-0:118:2054":{"id":"b:2:2641-0:118:2054","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32217:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2635:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2054","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2643:2395"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13186:33872":{"id":"2:13186:33872","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5628:34593":{"id":"5:5628:34593","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7641:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7641:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13184:996":{"id":"2:13184:996","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12334:471"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13209:27889":{"id":"2:13209:27889","crate_id":2,"name":"split_at_mut_checked","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at_checked`] method.\n\n[`split_at_checked`]: str::split_at_checked\n\n# Examples\n\n```\n#![feature(split_at_checked)]\n\nlet mut s = \"Per Martin-Löf\".to_string();\nif let Some((first, last)) = s.split_at_mut_checked(3) {\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n\nassert_eq!(None, s.split_at_mut_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_mut_checked(16));  // Beyond the string length\n```","links":{"str::split_at_checked":"2:13208:27888"},"attrs":["#[must_use]","#[unstable(feature = \"split_at_checked\", reason = \"new API\", issue =\n\"119128\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:41984:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:105:801":{"id":"0:105:801","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[147,16],"end":[147,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10278:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10259:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2924-0:134:137":{"id":"b:2:2924-0:134:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2898:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2894:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2927:137","2:2928:1807"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13304:2065":{"id":"2:13304:2065","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12834:136","`FromStr`":"2:12833:2030"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42117:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12833:2030","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12833:2030","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:39:2153":{"id":"0:39:2153","crate_id":0,"name":"source","span":{"filename":"src/lib.rs","begin":[327,4],"end":[336,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41984:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"dyn_trait":{"traits":[{"trait":{"name":"error::Error","id":"2:2977:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:102":{"id":"0:102","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,9],"end":[147,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2657:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2070","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:103:475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:137:1973":{"id":"0:137:1973","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[343,27],"end":[343,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"io::Error","id":"1:3058:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:60":{"id":"0:60","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,22],"end":[71,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2696:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5614:14064":{"id":"5:5614:14064","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7641:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7641:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12879:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13275:33884":{"id":"2:13275:33884","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:93:2070":{"id":"0:93:2070","crate_id":0,"name":"VersionMeta","span":{"filename":"src/lib.rs","begin":[148,0],"end":[172,1]},"visibility":"public","docs":"Rustc version plus metadata like git short hash and build date.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:94:2031","0:95:2073","0:96:2075","0:97:2077","0:98:2079","0:99:875","0:100:2082","0:101:2084"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:23","a:2:32275:2557-0:93:2070","a:2:42078:8584-0:93:2070","a:2:42079:8707-0:93:2070","a:2:3137:247-0:93:2070","a:2:32216:237-0:93:2070","a:2:3172:2695-0:93:2070","b:2:2644-0:93:2070","b:2:2924-0:93:2070","b:2:2929-0:93:2070","b:2:2914-0:93:2070","b:2:3756-0:93:2070","b:2:2918-0:93:2070","b:2:2641-0:93:2070","b:5:736-0:93:2070","0:115","0:106","0:104","0:108","0:102","0:113","0:109","0:111"]}}},"2:13283:33889":{"id":"2:13283:33889","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12334:471","self::pattern":"2:12873:2510"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12879:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12879:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12899:2502","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13206:27884":{"id":"2:13206:27884","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_checked`](str::split_at_checked).\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_checked":"2:13208:27888","str::split_at_mut":"2:13207:27885"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:130:2068":{"id":"0:130:2068","crate_id":0,"name":"TooManyComponents","span":{"filename":"src/lib.rs","begin":[292,4],"end":[292,21]},"visibility":"default","docs":"Too many components","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:141:2160":{"id":"0:141:2160","crate_id":0,"name":"Utf8Error","span":{"filename":"src/lib.rs","begin":[352,4],"end":[352,29]},"visibility":"default","docs":"The output of `rustc -vV` was not valid utf-8.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:143:1973"]},"discriminant":null}}},"0:109":{"id":"0:109","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,27],"end":[147,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2691:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2070","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:110:698"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2914-0:48:2034":{"id":"b:2:2914-0:48:2034","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2891:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2888:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2917:2097"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2929-0:134:137":{"id":"b:2:2929-0:134:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2888:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2898:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2932:137","2:2933:1805"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:159":{"id":"0:159","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2891:144","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Error","id":"20:220:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:160:831"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:18:801":{"id":"0:18:801","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[101,4],"end":[103,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10278:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10259:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:77":{"id":"0:77","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,9],"end":[90,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2657:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2047","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:78:475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42079:8707-0:48:2034":{"id":"a:2:42079:8707-0:48:2034","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42079:8707","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:28:2099":{"id":"0:28:2099","crate_id":0,"name":"version_meta_for","span":{"filename":"src/lib.rs","begin":[209,0],"end":[262,1]},"visibility":"public","docs":"Parses a \"rustc -vV\" output string and returns\nthe SemVer version and additional metadata\nlike the git short hash and build date.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["verbose_version_string",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"0:45:226","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"VersionMeta","id":"0:93:2070","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2920:831":{"id":"2:2920:831","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:151:1973":{"id":"0:151:1973","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[358,25],"end":[358,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7641:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:132":{"id":"0:132","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[279,9],"end":[279,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10304:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2054","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:133:801"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:736-0:93:2070":{"id":"b:5:736-0:93:2070","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2657:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:732:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2070","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:738:2936","5:739:2127","5:740:2937"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3172:2695-0:134:137":{"id":"a:2:3172:2695-0:134:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3172:2695","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3137:247-0:118:2054":{"id":"a:2:3137:247-0:118:2054","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3137:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2054","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:152:2166":{"id":"0:152:2166","crate_id":0,"name":"LlvmVersionError","span":{"filename":"src/lib.rs","begin":[360,4],"end":[360,43]},"visibility":"default","docs":"An error occurred in parsing a `LlvmVersion`.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:154:1973"]},"discriminant":null}}},"a:2:42078:8584-0:118:2054":{"id":"a:2:42078:8584-0:118:2054","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42078:8584","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2054","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:37:801":{"id":"0:37:801","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[302,4],"end":[323,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10278:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10259:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13187:33873":{"id":"2:13187:33873","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13189:33874":{"id":"2:13189:33874","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:13187:33873"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13306:26736":{"id":"2:13306:26736","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13194:336":{"id":"2:13194:336","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:13195:27861","`u8`":"1:12353:1850"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32216:237-0:93:2070":{"id":"a:2:32216:237-0:93:2070","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32216:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2070","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:110:698":{"id":"0:110:698","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[147,27],"end":[147,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"VersionMeta","id":"0:93:2070","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2644-0:118:2054":{"id":"b:2:2644-0:118:2054","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32217:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2638:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2054","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2646:26005"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13200:27859":{"id":"2:13200:27859","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10963:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10963:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:2928:1807":{"id":"2:2928:1807","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:42117:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2898:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3756-0:48:2034":{"id":"b:2:3756-0:48:2034","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32217:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3754:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3758:1820"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42078:8584-0:93:2070":{"id":"a:2:42078:8584-0:93:2070","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42078:8584","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2070","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:80:801":{"id":"0:80:801","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[90,16],"end":[90,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10278:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10259:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13211:6841":{"id":"2:13211:6841","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12334:471"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43846:2520","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2918-0:74:2047":{"id":"b:2:2918-0:74:2047","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2891:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2047","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2920:831"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:139:2095":{"id":"0:139:2095","crate_id":0,"name":"stdout","span":{"filename":"src/lib.rs","begin":[347,8],"end":[347,22]},"visibility":"default","docs":"stdout output from the command","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7641:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:85:698":{"id":"0:85:698","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[90,27],"end":[90,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2047","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:91:871":{"id":"0:91:871","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[90,55],"end":[90,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10528:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:144:2136":{"id":"0:144:2136","crate_id":0,"name":"UnexpectedVersionFormat","span":{"filename":"src/lib.rs","begin":[354,4],"end":[354,27]},"visibility":"default","docs":"The output of `rustc -vV` was not in the expected format.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:45:226":{"id":"0:45:226","crate_id":0,"name":"Result","span":{"filename":"src/lib.rs","begin":[417,0],"end":[417,58]},"visibility":"public","docs":"The result type for this crate.","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"std::result::Result","id":"2:42117:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"E"}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]}}}},"2:13208:27888":{"id":"2:13208:27888","crate_id":2,"name":"split_at_checked","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut_checked`]\nmethod.\n\n[`split_at_mut_checked`]: str::split_at_mut_checked\n\n# Examples\n\n```\n#![feature(split_at_checked)]\n\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at_checked(3).unwrap();\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n\nassert_eq!(None, s.split_at_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_checked(16));  // Beyond the string length\n```","links":{"str::split_at_mut_checked":"2:13209:27889"},"attrs":["#[must_use]","#[unstable(feature = \"split_at_checked\", reason = \"new API\", issue =\n\"119128\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:41984:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13219:27900":{"id":"2:13219:27900","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12334:471","self::pattern":"2:12873:2510"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12879:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13281:33887":{"id":"2:13281:33887","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:738:2936":{"id":"5:738:2936","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:49:2036":{"id":"0:49:2036","crate_id":0,"name":"Dev","span":{"filename":"src/lib.rs","begin":[74,4],"end":[74,7]},"visibility":"default","docs":"Development release channel","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:42078:8584-0:74:2047":{"id":"a:2:42078:8584-0:74:2047","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42078:8584","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2047","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5631:26738":{"id":"5:5631:26738","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:13309:26741"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7641:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5862-0:74:2047":{"id":"b:5:5862-0:74:2047","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10309:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32217:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5860:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2047","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5864:1780"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13251:2115":{"id":"2:13251:2115","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12334:471","self::pattern":"2:12873:2510","str::rsplitn":"2:13254:27896"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43980:2536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12879:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2641-0:134:137":{"id":"b:2:2641-0:134:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32217:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2635:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2643:2395"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:70:871":{"id":"0:70:871","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[71,54],"end":[71,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10528:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:64:698":{"id":"0:64:698","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[71,26],"end":[71,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Channel","id":"0:48:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2929-0:48:2034":{"id":"b:2:2929-0:48:2034","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2888:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2898:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2932:137","2:2933:1805"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2914-0:74:2047":{"id":"b:2:2914-0:74:2047","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2891:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2888:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2047","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2917:2097"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13295:33891":{"id":"2:13295:33891","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12334:471","self::pattern":"2:12873:2510"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12879:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12879:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12894:2504","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13242:27893":{"id":"2:13242:27893","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12873:2510","`DoubleEndedIterator`":"2:8256:129","prim@char":"1:12334:471","str::split":"2:13236:2057"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43894:2533","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12879:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12879:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12894:2504","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:89:1294":{"id":"0:89:1294","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[90,43],"end":[90,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2047","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:41984:194","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30978:196","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:19":{"id":"0:19","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[106,0],"end":[144,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12833:2030","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2047","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:20:136","0:21:2055"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:122:2061":{"id":"0:122:2061","crate_id":0,"name":"ComponentMustNotHaveLeadingZeros","span":{"filename":"src/lib.rs","begin":[284,4],"end":[284,36]},"visibility":"default","docs":"A version component must not have leading zeros","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:32275:2557-0:93:2070":{"id":"a:2:32275:2557-0:93:2070","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32275:2557","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2070","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42079:8707-0:93:2070":{"id":"a:2:42079:8707-0:93:2070","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42079:8707","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2070","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32275:2557-0:74:2047":{"id":"a:2:32275:2557-0:74:2047","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32275:2557","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2047","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3137:247-0:48:2034":{"id":"a:2:3137:247-0:48:2034","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3137:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2929-0:118:2054":{"id":"b:2:2929-0:118:2054","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2888:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2898:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2054","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2932:137","2:2933:1805"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13214:31985":{"id":"2:13214:31985","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:13215:31992"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:44150:2514","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13228:2916":{"id":"2:13228:2916","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41986:191","prim@char":"1:12334:471","self::pattern":"2:12873:2510"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41984:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12879:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2917:2097":{"id":"2:2917:2097","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2891:144"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13195:27861":{"id":"2:13195:27861","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12353:1850"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:68:1294":{"id":"0:68:1294","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[71,42],"end":[71,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Channel","id":"0:48:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:41984:194","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30978:196","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42078:8584-0:134:137":{"id":"a:2:42078:8584-0:134:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42078:8584","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:62":{"id":"0:62","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,26],"end":[71,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32218:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:69":{"id":"0:69","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,54],"end":[71,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10520:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:70:871"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:51:2038":{"id":"0:51:2038","crate_id":0,"name":"Nightly","span":{"filename":"src/lib.rs","begin":[76,4],"end":[76,11]},"visibility":"default","docs":"Nightly release channel","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2924-0:48:2034":{"id":"b:2:2924-0:48:2034","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2898:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2894:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2927:137","2:2928:1807"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:95:2073":{"id":"0:95:2073","crate_id":0,"name":"commit_hash","span":{"filename":"src/lib.rs","begin":[153,4],"end":[153,35]},"visibility":"public","docs":"Git short hash of the build of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41984:194","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"5:7641:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"b:5:5862-0:134:137":{"id":"b:5:5862-0:134:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10309:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32217:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5860:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5864:1780"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:158:831":{"id":"0:158:831","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["e",{"resolved_path":{"name":"str::Utf8Error","id":"2:43822:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13204:33876":{"id":"2:13204:33876","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12340:1720","str::slice_mut_unchecked":"2:13205:33877","crate::ops::Index":"2:39530:8604"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:72":{"id":"0:72","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,60],"end":[71,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10304:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:73:801"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3172:2695-0:48:2034":{"id":"a:2:3172:2695-0:48:2034","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3172:2695","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13272:33883":{"id":"2:13272:33883","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12873:2510","`DoubleEndedIterator`":"2:8256:129","prim@char":"1:12334:471","str::match_indices":"2:13269:33882"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:44044:2530","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12879:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12879:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12894:2504","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13236:2057":{"id":"2:13236:2057","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12873:2510","`DoubleEndedIterator`":"2:8256:129","prim@char":"1:12334:471","str::split_whitespace":"2:13214:31985","str::rsplit":"2:13242:27893"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43876:2534","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12879:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:135:2091":{"id":"0:135:2091","crate_id":0,"name":"CouldNotExecuteCommand","span":{"filename":"src/lib.rs","begin":[343,4],"end":[343,37]},"visibility":"default","docs":"An error occurred while trying to find the `rustc` to run.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:137:1973"]},"discriminant":null}}},"5:5632:26739":{"id":"5:5632:26739","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:13310:26742"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7641:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13266:33881":{"id":"2:13266:33881","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12873:2510","`DoubleEndedIterator`":"2:8256:129","prim@char":"1:12334:471","str::matches":"2:13263:2410"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:44098:2532","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12879:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12879:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12894:2504","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:58":{"id":"0:58","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,15],"end":[71,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2657:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:59:475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13312:29073":{"id":"2:13312:29073","crate_id":2,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:992:38188"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42079:8707-0:118:2054":{"id":"a:2:42079:8707-0:118:2054","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42079:8707","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2054","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:140:2098":{"id":"0:140:2098","crate_id":0,"name":"stderr","span":{"filename":"src/lib.rs","begin":[349,8],"end":[349,22]},"visibility":"default","docs":"stderr output from the command","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7641:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:13309:26741":{"id":"2:13309:26741","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5613:34590":{"id":"5:5613:34590","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:304:2507","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:304:2507","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13183":{"id":"2:13183","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:13184:996","2:13185:2878","2:13186:33872","2:13187:33873","2:13189:33874","2:13192:27790","2:13193:33875","2:13194:336","2:13195:27861","2:13196:2131","2:13198:27858","2:13200:27859","2:13202:27860","2:13204:33876","2:13205:33877","2:13206:27884","2:13207:27885","2:13208:27888","2:13209:27889","2:13211:6841","2:13212:6851","2:13213:6721","2:13214:31985","2:13215:31992","2:13216:2111","2:13217:33878","2:13218:31980","2:13219:27900","2:13222:2060","2:13225:27901","2:13228:2916","2:13232:2877","2:13236:2057","2:13239:27891","2:13242:27893","2:13245:33879","2:13248:33880","2:13251:2115","2:13254:27896","2:13257:27898","2:13260:27899","2:13263:2410","2:13266:33881","2:13269:33882","2:13272:33883","2:13275:33884","2:13277:33885","2:13279:33886","2:13281:33887","2:13282:33888","2:13283:33889","2:13286:33890","2:13289:26632","2:13292:27902","2:13295:33891","2:13298:33892","2:13301:33893","2:13304:2065","2:13306:26736","2:13307:29069","2:13308:26740","2:13309:26741","2:13310:26742","2:13311:29072","2:13312:29073","2:13313:29074","2:13314:33894","2:13316:8576","2:13317:33895"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:115":{"id":"0:115","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,55],"end":[147,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10520:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2070","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:116:871"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:119:2140":{"id":"0:119:2140","crate_id":0,"name":"ParseIntError","span":{"filename":"src/lib.rs","begin":[282,4],"end":[282,37]},"visibility":"default","docs":"An error occurred in parsing a version component as an integer","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:121:1973"]},"discriminant":null}}},"a:2:32275:2557-0:48:2034":{"id":"a:2:32275:2557-0:48:2034","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32275:2557","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2034","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2914-0:93:2070":{"id":"b:2:2914-0:93:2070","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2891:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2888:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2070","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2917:2097"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13198:27858":{"id":"2:13198:27858","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41986:191"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41984:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10963:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10963:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13232:2877":{"id":"2:13232:2877","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41986:191","prim@char":"1:12334:471","self::pattern":"2:12873:2510"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41984:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12879:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12879:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12894:2504","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5862-0:118:2054":{"id":"b:5:5862-0:118:2054","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10309:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32217:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5860:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2054","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5864:1780"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13207:27885":{"id":"2:13207:27885","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_mut_checked`](str::split_at_mut_checked).\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:13206:27884","str::split_at_mut_checked":"2:13209:27889"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2644-0:74:2047":{"id":"b:2:2644-0:74:2047","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32217:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2638:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2047","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2646:26005"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2924-0:118:2054":{"id":"b:2:2924-0:118:2054","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2898:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2894:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2054","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2927:137","2:2928:1807"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5620:34592":{"id":"5:5620:34592","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7641:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7641:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:97:2077":{"id":"0:97:2077","crate_id":0,"name":"build_date","span":{"filename":"src/lib.rs","begin":[159,4],"end":[159,34]},"visibility":"public","docs":"Build date of the compiler; this was removed between Rust 1.0.0 and 1.1.0.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41984:194","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"5:7641:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"5:5612":{"id":"5:5612","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5613:34590","5:5614:14064","5:5617:34591","5:5620:34592","5:5628:34593","5:5629:34594","5:5630:3093","5:5631:26738","5:5632:26739"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13286:33890":{"id":"2:13286:33890","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12334:471","self::pattern":"2:12873:2510"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12879:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2641-0:93:2070":{"id":"b:2:2641-0:93:2070","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32217:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2635:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2070","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2643:2395"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32216:237-0:134:137":{"id":"a:2:32216:237-0:134:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32216:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13185:2878":{"id":"2:13185:2878","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:739:2127":{"id":"5:739:2127","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:21:2055":{"id":"0:21:2055","crate_id":0,"name":"from_str","span":{"filename":"src/lib.rs","begin":[109,4],"end":[143,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"0:45:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:12833:2030","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:162:831":{"id":"0:162:831","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["e",{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2054","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3172:2695-0:93:2070":{"id":"a:2:3172:2695-0:93:2070","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3172:2695","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2070","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5864:1780":{"id":"5:5864:1780","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7641:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42079:8707-0:74:2047":{"id":"a:2:42079:8707-0:74:2047","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42079:8707","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2047","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13260:27899":{"id":"2:13260:27899","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41984:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12879:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12879:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12894:2504","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5630:3093":{"id":"5:5630:3093","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7641:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7641:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3758:1820":{"id":"2:3758:1820","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39699:5983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:111":{"id":"0:111","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,38],"end":[147,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clamp","max","min"],"trait":{"name":"Ord","id":"2:2727:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2070","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:112:482"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:143:1973":{"id":"0:143:1973","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[352,14],"end":[352,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"str::Utf8Error","id":"2:43822:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:55:2042":{"id":"0:55:2042","crate_id":0,"name":"Stable","span":{"filename":"src/lib.rs","begin":[80,4],"end":[80,10]},"visibility":"default","docs":"Stable release channel","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:100:2082":{"id":"0:100:2082","crate_id":0,"name":"short_version_string","span":{"filename":"src/lib.rs","begin":[168,4],"end":[168,36]},"visibility":"public","docs":"Short version string of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7641:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:13239:27891":{"id":"2:13239:27891","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12334:471","self::pattern":"2:12873:2510"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:12688:2513","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12879:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13317:33895":{"id":"2:13317:33895","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4942:33895"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:44193:2526","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:101:2084":{"id":"0:101:2084","crate_id":0,"name":"llvm_version","span":{"filename":"src/lib.rs","begin":[171,4],"end":[171,41]},"visibility":"public","docs":"Version of LLVM used by the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41984:194","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2047","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:25:1929":{"id":"0:25:1929","crate_id":0,"name":"version","span":{"filename":"src/lib.rs","begin":[194,0],"end":[196,1]},"visibility":"public","docs":"Returns the `rustc` SemVer version.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Result","id":"0:45:226","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Version","id":"20:299:2032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13192:27790":{"id":"2:13192:27790","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12420:2100"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"6:6756:5604":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"17:10524:7400":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"1:3384:3090":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"14:214:6679":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"2:30620:2857":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"2:22534:8860":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"2:6191:6733":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2:40973:3070":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:43722:6156":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"6:5483:5330":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"2:10528:157":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"17:14516:3775":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"2:47212:6301":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"1:8002:7698":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"6:8294:5840":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:46505:6236":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:8612:7713":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"1:5159:8699":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"11:2542:4707":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"1:9365:6397":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"2:3218:13905":{"crate_id":2,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"1:2479:8623":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"17:15168:3989":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"6:5046:5159":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"2:4656:7608":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"17:11214:7415":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"17:11574:6696":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"5:2535:5855":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"16:542:6526":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"2:6900:6739":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"17:14271:3734":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"16:8202:4343":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"1:617:8575":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"2:10677:14167":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"5:3035:2936":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"16:2684:4312":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"6:4965:5117":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"11:2326:7559":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"2:45978:6187":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"5:1164:35295":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"17:12189:7460":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"2:40489:6782":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"2:22:816":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"2:2537:14095":{"crate_id":2,"path":["core","ptr","with_exposed_provenance_mut"],"kind":"function"},"6:578:4860":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"2:31005:2712":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"2:32959:4460":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"17:15748:4162":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"1:8606:8672":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"20:220:137":{"crate_id":20,"path":["semver","parse","Error"],"kind":"struct"},"2:39712:5985":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:9239:8737":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"2:13624:205":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"16:7769:4519":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"2:44668:6876":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"2:43218:6829":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:9209:8736":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"17:10759:3378":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"1:4152:8646":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"2:43257:6830":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"16:7098:6653":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:13109:119":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"2:2274:5873":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"0:53:2040":{"crate_id":0,"path":["rustc_version","Channel","Beta"],"kind":"variant"},"16:6342:35359":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"2:40776:6800":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"16:0:2305":{"crate_id":16,"path":["gimli"],"kind":"module"},"2:44883:7647":{"crate_id":2,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"2:13535:6796":{"crate_id":2,"path":["core","future","async_drop","Fuse"],"kind":"struct"},"2:43701:6753":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:8543:2527":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"2:2891:144":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"1:9405:234":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"16:2612:4309":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"17:15608:4122":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"1:4552:7671":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"1:9388:187":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"17:14298:3737":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"1:4324:8669":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"17:14503:3774":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"5:1073:33848":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"5:6047:6713":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"2:44168:2511":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"18:563:3218":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:43926:2538":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:42991:32577":{"crate_id":2,"path":["core","fmt","rt","ArgumentType"],"kind":"enum"},"2:10304:119":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:13822:6760":{"crate_id":2,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"1:3056:226":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"1:12301:30215":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"6:5352:5255":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"2:15:2052":{"crate_id":2,"path":["core","write"],"kind":"macro"},"0:134:137":{"crate_id":0,"path":["rustc_version","Error"],"kind":"enum"},"1:669:7655":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:11312:2533":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"17:12557:3367":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"14:7:7546":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"17:12792:3309":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"17:15176:3992":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"2:44130:2527":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"2:44644:130":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"2:22136:5875":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:2862:14005":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:8344:3084":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"2:9454:2503":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"16:4882:4371":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"1:4798:8647":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"1:9124:2455":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"1:1853:2981":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"17:13146:3493":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"5:3657:2831":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2:46393:6232":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"2:43029:137":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"5:835:101":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"1:11820:7667":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"1:5249:7673":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"5:4278:3052":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"6:5329:5252":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"1:12356:1844":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"16:6976:4445":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:3664:13910":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"2:43852:2519":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"11:2469:7579":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"2:3861:7565":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"17:16259:3547":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"1:7140:8766":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"1:11226:6160":{"crate_id":1,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"1:1614:7579":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"2:41778:8640":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"6:6664:5569":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:45943:6185":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2:8227:2560":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:12285:6963":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"2:1762:2819":{"crate_id":2,"path":["core","intrinsics","AggregateRawPtr"],"kind":"trait"},"1:1092:7560":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"17:13325:3537":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"17:4821:7398":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"2:7703:31976":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"17:13308:3535":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"17:14386:3750":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"2:8673:149":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:9721:27494":{"crate_id":1,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"5:1180:33816":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"17:11313:6487":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"5:935:8589":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"2:45957:6186":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2:46333:6214":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"2:41206:6816":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"11:2140:7559":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"1:10910:6900":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"5:1505:2833":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"6:5423:5293":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"11:1917:6694":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"2:3374:2558":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"5:1527:6690":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"1:10891:7736":{"crate_id":1,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"6:491:4806":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"1:922:7565":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"1:865:2831":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"6:5002:5138":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"1:10915:6902":{"crate_id":1,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"11:1066:20436":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"2:22934:32068":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"16:2478:4303":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"6:485:4804":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"6:8253:5831":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"6:5588:5365":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"16:4802:4368":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"2:44140:2528":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"2:4720:6725":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"18:735:25628":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"16:5037:4376":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"2:42284:86":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:5015:13993":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"2:40705:6790":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"6:5665:5404":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"17:11865:7451":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"9:53:20373":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"16:4743:4366":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"17:13526:3576":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"11:1142:7562":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"11:2383:2831":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"2:23164:5903":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI64Inner"],"kind":"struct"},"16:6442:6602":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"5:1489:2832":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"16:5927:6551":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"2:46765:6276":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"0:51:2038":{"crate_id":0,"path":["rustc_version","Channel","Nightly"],"kind":"variant"},"2:43235:157":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"2:42717:2850":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:12348:908":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:9777:91":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"17:11674:6494":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"18:507:3211":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"17:12969:3474":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"17:12278:7467":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:38182:14081":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"2:44590:6867":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"1:1069:6658":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"5:7723:7579":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"17:11510:7427":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"5:1200:35293":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"2:44044:2530":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:23142:5901":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI16Inner"],"kind":"struct"},"2:41912:6826":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"17:11557:7430":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"2:22114:8774":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"5:1474:2831":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:46010:6189":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"17:1207:7389":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:13512:7628":{"crate_id":2,"path":["core","future","async_drop","AsyncDropInPlace"],"kind":"struct"},"17:9671:21421":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"6:6524:5492":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"2:44308:6852":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:41762:6123":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"17:14855:3900":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:46185:6206":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"2:44184:2525":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"2:43862:2518":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:5506:128":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"16:6494:6606":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"2:3599:13972":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"17:15249:4006":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"7:79:20348":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"2:4784:2861":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"16:2936:20510":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"2:44150:2514":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"6:5624:5387":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"11:2443:7565":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"2:40517:106":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"17:15356:4039":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"2:34375:4469":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"17:10622:35366":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"17:15138:3978":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"2:42100:14148":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"2:42182:196":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"6:5528:5339":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:22914:32061":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"17:403:7386":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"6:5112:5173":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"1:1958:2027":{"crate_id":1,"path":["std","error"],"kind":"module"},"16:5756:7482":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"16:8136:6673":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:23028:8631":{"crate_id":2,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"1:7880:7746":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"2:44679:14200":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"17:15410:4053":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"17:12089:3425":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"17:16165:4265":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"1:8513:3069":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"1:5982:7679":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"16:4641:4364":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"17:12949:3435":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"2:40548:2480":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:3427:3086":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"18:651:3211":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"17:12408:3437":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"16:2438:4301":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"16:4587:4362":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"17:12516:7469":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"1:8536:2534":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"2:40372:6778":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"17:15944:3516":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"2:12688:2513":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"6:1535:4892":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"6:6698:5583":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"2:32182:7633":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"1:5834:6882":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"1:4397:7669":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"6:5546:5350":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:38127:14080":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:4144:8645":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"16:4531:4360":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:40654:3069":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"20:0:2031":{"crate_id":20,"path":["semver"],"kind":"module"},"16:8226:21383":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"1:5613:2448":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"2:23186:5905":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroIsizeInner"],"kind":"struct"},"1:9113:199":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"1:11924:6918":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"1:3897:7667":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"1:11095:27771":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"5:3750:33848":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:47197:6300":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"17:12328:6504":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"17:11730:6498":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"5:952:2831":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"2:13649:7629":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"16:6427:7520":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"6:6460:5458":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"6:532:4835":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:44920:6167":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"2:40824:3229":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"2:22267:8631":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"17:16151:4262":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"16:2708:4313":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"2:3627:13906":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"11:1160:7563":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"17:2203:7391":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"17:13785:3644":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"2:32276:2699":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"5:6608:33848":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"16:5415:4381":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"17:12175:7456":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"6:1723:5006":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"11:2369:7570":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"17:15596:4119":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"0:126:2144":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","MinorVersionMustBeZeroAfter4"],"kind":"variant"},"16:5802:21369":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"16:8259:4507":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"17:11764:6503":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"6:1686:4994":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"5:3038:5859":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"16:6026:6566":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"17:16212:4276":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"0:48:2034":{"crate_id":0,"path":["rustc_version","Channel"],"kind":"enum"},"6:5390:5275":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"1:6843:7690":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLock"],"kind":"struct"},"5:5725:13958":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"2:3327:13907":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"11:1087:35327":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"16:6782:21376":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"17:11661:6493":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"17:13606:3599":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"16:6412:21373":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCacheStrategy"],"kind":"enum"},"1:1916:2998":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"2:45843:6175":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:5438:203":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"17:11621:6489":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"2:2733:202":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"5:680:7572":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"6:7330:5683":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"20:333:2551":{"crate_id":20,"path":["semver","Comparator"],"kind":"struct"},"6:5636:5393":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"17:13986:3675":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"17:15058:3960":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"1:12355:1838":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"2:39584:212":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"17:15760:4164":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:38237:14082":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"2:32307:114":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"17:10887:35364":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"5:3046:33780":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"1:11506:27779":{"crate_id":1,"path":["std","sys","sync","once","futex","CompletionGuard"],"kind":"struct"},"2:26038:267":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"16:7306:35358":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"6:5472:5327":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"2:6889:6742":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"9:392:20356":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"6:5630:5390":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"1:666:7653":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"1:521:8562":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"2:3188:8764":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:11909:27088":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"16:7397:35357":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"2:42362:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:11194:2455":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:43265:6831":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"17:11354:7422":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"5:7401:7565":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"17:10710:7403":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"1:4100:8642":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"6:7561:5793":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"1:9401:3052":{"crate_id":1,"path":["std","sync","poison","Guard"],"kind":"struct"},"16:5700:4326":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2:11277:7617":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:10714:3090":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"6:7314:5671":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"5:7128:33829":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"11:2423:2833":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"2:38871:14084":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"2:43944:2537":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:9410:235":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"18:96:25618":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"1:4874:8695":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"18:698:6475":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"2:44818:207":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"2:46316:6213":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"17:11583:7436":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"5:7445:2833":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"16:2768:4316":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"6:8259:5832":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"16:8216:6678":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"17:11405:7424":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"17:11324:7418":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"2:40714:6792":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:46053:6192":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"6:5382:5270":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"2:4647:221":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"2:42109:2836":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"0:130:2068":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","TooManyComponents"],"kind":"variant"},"5:1365:7563":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"17:15126:3975":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"2:47235:6302":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"16:6948:4332":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"2:22579:8631":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"17:12076:7455":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"18:706:2505":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"17:13581:3595":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"17:16093:4247":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"0:152:2166":{"crate_id":0,"path":["rustc_version","Error","LlvmVersionError"],"kind":"variant"},"17:2234:7394":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"2:21608:31785":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"1:10969:2460":{"crate_id":1,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"2:40344:32064":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:9716:7700":{"crate_id":1,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"2:47159:6292":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"6:8341:5851":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"2:44294:6849":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"17:9886:21438":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"17:10573:35363":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"17:16079:4243":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"17:15836:4180":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"17:13723:3628":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"1:9273:7716":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"5:879:8588":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"1:938:7564":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:47087:6286":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"6:5250:5215":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"1:12344:734":{"crate_id":1,"path":["std","f16"],"kind":"primitive"},"16:5686:4323":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"2:5289:976":{"crate_id":2,"path":["core","iter"],"kind":"module"},"2:43210:2844":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"11:742:7551":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"1:12353:1850":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2:32218:244":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:11647:6412":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"2:40570:2484":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"6:6768:5606":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"16:2508:4304":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"1:4995:8657":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"17:15116:3974":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"16:8118:6670":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"0:122:2061":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","ComponentMustNotHaveLeadingZeros"],"kind":"variant"},"17:11189:3371":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:21639:31795":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"14:0:2303":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"5:4477:3052":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"2:41924:6893":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"18:754:6483":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"11:2554:35326":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"17:12251:7465":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"2:22826:6763":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"6:7584:5805":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:10743:33195":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"16:7656:21380":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"2:40455:6781":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"2:40359:6114":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2:43711:7643":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"2:23087:5896":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU32Inner"],"kind":"struct"},"1:9415:7696":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockReadGuard"],"kind":"struct"},"2:43835:2523":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"9:238:6151":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"17:11567:7431":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"6:1628:4959":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:44618:6874":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:4763:8691":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"17:11467:3385":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"11:1891:7565":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"11:1025:7559":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"5:3247:2831":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"16:4062:4355":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"1:8465:3095":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:21730:5874":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"6:1663:4984":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"2:2153:189":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"0:119:2140":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","ParseIntError"],"kind":"variant"},"2:21610:31797":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"17:15151:3984":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"16:4856:4370":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"1:4918:8661":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"2:30631:32074":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"2:39534:6774":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"16:5400:3346":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"17:1098:7388":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"2:10278:143":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"1:8260:3083":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"17:14599:3792":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"6:6621:5554":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"16:5914:6550":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"2:44400:6856":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:3658:2472":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"2:4498:7606":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"5:3644:182":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"14:40:3517":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"1:12354:1832":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"2:43691:7642":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:44893:180":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"16:4560:4361":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"5:2123:7581":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"16:6398:4322":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"2:42323:93":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"18:680:6471":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"16:5995:6560":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"17:2175:21500":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"16:6895:4436":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"17:14051:3683":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"1:11021:26959":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"2:22467:8631":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"2:42037:6135":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"5:6562:7565":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"17:12724:21444":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"17:13568:3591":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"1:10931:6909":{"crate_id":1,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"2:22361:8854":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"2:22983:3023":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"6:6409:5438":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:22865:3022":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"6:4916:5098":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"1:2309:7662":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"17:15206:3998":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"2:44472:6862":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:10757:3393":{"crate_id":1,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"1:3294:26930":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"17:15720:4153":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"6:5277:5232":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"18:643:3211":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"6:7602:5808":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:750:190":{"crate_id":2,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"2:40723:6793":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"17:14325:3741":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"17:14189:3719":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"5:4511:33835":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"16:6300:7506":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"2:13597:33544":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"2:42206:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"2:4389:109":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"5:219:7571":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"17:15931:3502":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"2:4377:7605":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"13:229:4705":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"5:7664:7600":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"1:8807:8717":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"5:5226:6713":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"5:6410:8862":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"1:12340:1720":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"2:47133:6290":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:41197:6815":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"17:13774:3641":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"6:473:4798":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"16:2878:4321":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"11:2498:20432":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"6:1496:4873":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:44796:164":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:0:1712":{"crate_id":1,"path":["std"],"kind":"module"},"17:15957:4198":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"11:844:8587":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"17:16050:3530":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"17:11841:7449":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"6:8265:5833":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"2:40799:6802":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"17:11595:3386":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"3:0:505":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"6:6505:5490":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"2:44503:2540":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"17:3264:7395":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"17:13046:3479":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"2:2861:8631":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"11:1603:7567":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"5:7103:33831":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"6:8012:5817":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:21625:31788":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"17:13844:3652":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"1:4916:8660":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"6:1639:4967":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"17:13959:3670":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"1:9738:127":{"crate_id":1,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"2:10311:2847":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"1:8073:3001":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"16:7052:7522":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"2:8682:14054":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:8721:6380":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"5:3293:33803":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"16:7888:6666":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"0:118:2054":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError"],"kind":"enum"},"1:4812:5714":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"function"},"2:33711:14076":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"11:800:7565":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"17:11547:3287":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"17:10399:2518":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"1:10950:139":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"6:5102:5172":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"2:40767:6799":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:5579:2446":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"1:2629:3079":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"1:4051:2029":{"crate_id":1,"path":["std","num"],"kind":"module"},"2:40667:6785":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"17:15222:4002":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"2:22996:2140":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"2:44602:6870":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"0:149:2126":{"crate_id":0,"path":["rustc_version","Error","UnknownPreReleaseTag"],"kind":"variant"},"17:16198:4272":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"6:6471:5466":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"17:10818:7404":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:40598:2497":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"17:12030:7452":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"18:608:7378":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"17:9755:21418":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"17:13855:3653":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"6:6478:5470":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"2:44614:6873":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"16:5385:3345":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"17:597:3342":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"11:1923:6695":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"5:1336:7560":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"17:14260:3733":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"6:8306:5842":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"6:5598:5370":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"17:14575:3438":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"2:4:1255":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"2:42598:7615":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"2:40983:6810":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"2:10313:2848":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"5:7411:7598":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"16:2338:4290":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"16:5846:6545":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"2:40416:13999":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"2:1999:1357":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"1:1968:3039":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"11:1903:6692":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"2:46295:6212":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:22758:6762":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:8874:6898":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"6:1585:4925":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:11200:2513":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"2:40997:6811":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"2:44098:2532":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"5:7461:6717":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"5:2216:6701":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"16:8188:7545":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"16:6560:4325":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"2:40533:14135":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"16:3778:4350":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"6:4909:5094":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:2316:3061":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"1:3429:3087":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"1:1914:2997":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"5:1577:210":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"6:1653:4978":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"16:6927:4440":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"18:0:2307":{"crate_id":18,"path":["memchr"],"kind":"module"},"1:11692:6916":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"2:22949:32070":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"16:7132:6657":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"1:3477:3074":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"17:12659:7474":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"6:1485:4868":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"6:5266:5224":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"6:8282:5838":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"17:9938:21440":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"6:6729:5593":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"11:328:6686":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"18:515:3214":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"9:447:20355":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"6:5643:5396":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"1:10920:6889":{"crate_id":1,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"1:11416:4772":{"crate_id":1,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"6:6738:5596":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"2:3593:13973":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"17:15582:4113":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"2:47078:6285":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"2:32207:6773":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"17:11063:7410":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"6:5236:5209":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"1:8211:139":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"0:28:2099":{"crate_id":0,"path":["rustc_version","version_meta_for"],"kind":"function"},"17:10982:21454":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"2:2087:5869":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"2:5188:435":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"17:10905:7406":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"11:1676:35321":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"1:909:6691":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"18:623:35375":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"1:5326:204":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"17:10671:35368":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"1:8847:6895":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"17:12150:3428":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"2:42173:2833":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"5:7630:7599":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"16:7321:6135":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"6:538:4838":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"2:23076:5895":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU16Inner"],"kind":"struct"},"17:14912:3938":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"6:6821:5622":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"1:6364:27782":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"1:5644:113":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"6:5083:5171":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:3572:14085":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"6:5219:5200":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"1:8236:6892":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"17:15190:3995":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2:40645:7636":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"16:8301:4579":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"17:11702:6496":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"2:3383:141":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"2:22842:5877":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"17:15078:3968":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"17:14402:3754":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"1:8549:7710":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"14:187:20450":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"6:6636:5556":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"6:6775:5607":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"17:12289:3430":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"1:8792:6383":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"5:7654:6722":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"11:832:7564":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"1:12341:1810":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"6:8328:5847":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"17:11853:7450":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"1:11083:27773":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"2:10775:32682":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"17:15778:4170":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:46082:6201":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"2:43774:6755":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"2:9772:84":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"5:1437:99":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"17:13999:3676":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"16:7061:4450":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"6:5160:5177":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:44610:6872":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:9284:7718":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"5:5073:3052":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"2:11405:2535":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"6:4876:5075":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"1:10940:6325":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"2:23131:5900":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI8Inner"],"kind":"struct"},"1:11279:162":{"crate_id":1,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"6:6435:5453":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"14:220:4657":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"16:7755:4331":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"5:6771:33848":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"17:15342:4032":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"1:8025:3393":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"1:11038:2457":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"2:42696:2848":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"2:6077:6731":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"2:46688:6243":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"17:16269:3552":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"6:5320:5249":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"16:2418:4300":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"2:2691:201":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:7354:7789":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"16:6246:206":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"11:811:7579":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"6:6447:5457":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:11918:7621":{"crate_id":2,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"11:2569:2443":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"5:5466:2509":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"2:3345:124":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"2:12947:13934":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"6:5557:5356":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"17:15635:4131":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"6:6519:5491":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"2:3183:8762":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"14:165:20443":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"5:6954:13959":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"16:2374:4298":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"6:4942:5109":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"6:5039:5157":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"5:7431:33744":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"2:21718:8771":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"6:479:4801":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"5:7739:7027":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"6:8300:5841":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"6:5052:5161":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"2:11350:7618":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:44606:6871":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:23175:5904":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI128Inner"],"kind":"struct"},"2:43846:2520":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"1:12338:335":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"17:11227:7416":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"1:10711:3088":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"1:9180:6389":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"1:9150:2457":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"1:943:7550":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"11:434:35329":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"17:15445:4061":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"2:10321:2851":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"2:32747:4463":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"11:1582:7566":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"1:12350:896":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"6:1517:4881":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"17:11269:21472":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"2:46460:6235":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"6:4971:5120":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"1:10505:27497":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"6:6629:5555":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"17:10137:21419":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"16:6606:6619":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"16:2323:20508":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"6:6689:5577":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"17:11799:7442":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"17:15313:4024":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"19:0:1290":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"2:44598:6869":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:8769:6151":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"2:47182:6299":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"17:12683:7476":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"2:45826:6172":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"2:2898:257":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"1:3288:30194":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"1:5280:7673":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:7983:8631":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"17:15289:4017":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"2:39692:7635":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"6:5565:5358":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"1:4094:8643":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:30350:3021":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"2:42120:193":{"crate_id":2,"path":["rustc_version","Result","Ok"],"kind":"variant"},"2:40393:2526":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"16:8155:6676":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"1:4202:8649":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"5:7562:2478":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2:21836:8769":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"2:10309:128":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"1:878:2832":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"6:7366:5699":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:46120:6203":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"2:3018:3044":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"6:7306:5666":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"1:6708:6885":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"16:2808:4318":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"5:6015:71":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"11:2403:2832":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"6:1565:4911":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"1:888:2833":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"17:13252:3520":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"5:2318:6709":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"16:6335:7517":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"16:6588:6611":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"16:4913:4372":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"6:7537:5783":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"14:31:7546":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"2:46667:6242":{"crate_id":2,"path":["core","core_arch","simd","m32x8"],"kind":"struct"},"11:1566:20437":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"11:1883:2831":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"1:7473:31767":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"17:12353:6512":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"6:4837:5049":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"17:3473:7396":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"16:5075:4377":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"6:4787:5012":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"15:0:2304":{"crate_id":15,"path":["addr2line"],"kind":"module"},"6:1593:4930":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"16:860:7481":{"crate_id":16,"path":["gimli","read","endian_slice","DebugBytes"],"kind":"struct"},"17:10877:7405":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"1:3668:2470":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"1:951:7552":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"1:10348:7727":{"crate_id":1,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"2:46024:6190":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:9446:6398":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"17:3597:7397":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"2:41190:6814":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"2:3137:247":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"6:6788:5614":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"1:8530:2518":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"17:15473:4069":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"16:7695:4516":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"2:39662:2437":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"2:40588:2498":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"0:128:2066":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","MinorVersionRequiredBefore4"],"kind":"variant"},"1:3058:137":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"6:1680:4991":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"17:15822:4177":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"17:12621:3450":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"1:5948:7674":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"17:11026:21455":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"17:12388:6514":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"6:5191:5187":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"1:586:7652":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"17:10044:21442":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"2:21659:8772":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"17:10661:7402":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"17:12808:3468":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"20:129:2555":{"crate_id":20,"path":["semver","identifier","Identifier"],"kind":"struct"},"16:3842:4352":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"1:7397:27468":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"2:46572:6239":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:12317:26961":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"17:15376:4045":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"6:5200:5192":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"6:5477:5329":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:42559:97":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:9345:26274":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"17:14012:3678":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"16:3669:3244":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"6:4800:5021":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:23638:236":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"18:589:3219":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"16:6317:7509":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"17:12464:21567":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"2:3612:32299":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:11757:27495":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"16:4468:4358":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"16:6872:6640":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"2:21581:31791":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"11:787:6691":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"1:9197:6390":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"17:11367:3367":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"2:42963:6149":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"6:6900:5648":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"1:9332:6394":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"2:46135:6204":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"16:7857:4528":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"16:6940:4442":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"1:5089:8693":{"crate_id":1,"path":["std","os","net","linux_ext","socket","UnixSocketExt"],"kind":"trait"},"17:13024:21447":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"6:5064:5170":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"16:6079:6528":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"2:44325:6853":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"5:2766:5860":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"1:4914:8658":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"2:2657:112":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"5:7381:2833":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"16:4614:4363":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"16:2458:4302":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"6:570:4855":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"6:5260:5221":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"5:7453:210":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"0:49:2036":{"crate_id":0,"path":["rustc_version","Channel","Dev"],"kind":"variant"},"1:12120:27772":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"20:90:7783":{"crate_id":20,"path":["semver","error","QuotedChar"],"kind":"struct"},"2:3142:2693":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"2:32217:2556":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"2:44622:6875":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:957:8587":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"1:7325:27777":{"crate_id":1,"path":["std","sys","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"6:6811:5620":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"17:13455:3562":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"6:6657:5568":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"1:12357:1826":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"6:4932:5103":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"1:8649:5699":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"15:306:20463":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"6:6915:5659":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"17:10954:21453":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"2:22109:8631":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"16:3014:20511":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"5:7421:6716":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"2:4730:2860":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"17:10317:3351":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"1:10597:2454":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"2:41231:6116":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"17:256:7384":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"6:5370:5265":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:11419:7619":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"17:14079:3687":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:44258:13940":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"2:40504:6115":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"16:6962:4333":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"6:4952:5112":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"17:11392:7423":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"17:13766:3639":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"20:299:2032":{"crate_id":20,"path":["semver","Version"],"kind":"struct"},"16:6047:7484":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"1:752:154":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"1:3640:2473":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"2:2885:76":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"17:12225:7463":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"17:12597:3449":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"2:40297:2525":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"6:4979:5125":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:3994:2833":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"2:22705:6761":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"2:43673:6751":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"5:3042:33779":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"1:1631:6694":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"16:7144:21378":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"17:10155:3345":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"6:7412:5718":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"17:14587:3785":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"6:5174:5178":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"17:11743:6499":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"2:40789:6801":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"2:42245:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"17:11688:6495":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"1:1083:7559":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"17:11915:21542":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"5:3288:6692":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"2:40496:6783":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"struct"},"11:0:2301":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"5:6172:3052":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"2:23007:3037":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"2:3587:146":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"2:10760:27767":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"2:41183:6813":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"2:43761:7644":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"2:3179:2697":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"17:15678:4147":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"16:6749:6625":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"1:367:7648":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"2:2635:102":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:11391:2536":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:11661:6913":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"1:9428:162":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"5:2245:6704":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"17:12572:3378":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"16:7528:6659":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"5:1586:7578":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"2:42165:2832":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"16:2528:4305":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"16:2355:4292":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"17:12695:7477":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"2:7639:14003":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"2:3363:13909":{"crate_id":2,"path":["core","ops","deref","DerefPure"],"kind":"trait"},"5:7641:243":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"5:5860:251":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"17:12201:7461":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"1:12306:8583":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"17:10170:3346":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"1:12361:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"2:6700:6734":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:42401:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"5:4447:33835":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"2:40737:6796":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"6:4891:5082":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:12634:6839":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"18:80:25617":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"9:330:4752":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"2:4577:2859":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"17:10350:3352":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"6:6746:5597":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"2:39486:13908":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"2:43622:7641":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"16:6098:21371":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"6:523:4829":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"11:1896:7579":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"11:2151:7560":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"1:6348:6758":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"2:22976:6768":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"17:14560:3782":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"18:481:6466":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"1:6857:7694":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLockGuard"],"kind":"struct"},"17:13064:3482":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:46638:6241":{"crate_id":2,"path":["core","core_arch","simd","m16x16"],"kind":"struct"},"16:6543:6610":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"6:0:1001":{"crate_id":6,"path":["libc"],"kind":"module"},"2:8676:2834":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"17:14131:3692":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"1:8067:8582":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"5:2298:33747":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"11:396:35323":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"17:14529:3776":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"11:351:35334":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"17:11715:6497":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"6:7461:5730":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:40409:2524":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"16:6665:21375":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"17:14311:3738":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"6:5536:5344":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:42157:2831":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"17:10218:3348":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"1:8493:3068":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"1:1625:6693":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"2:44373:6855":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"2:22890:5881":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:11675:6962":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"6:4924:5101":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"16:7590:4338":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"6:5336:5253":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"17:12264:7466":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"17:10997:3364":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"2:39562:210":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"2:45796:6168":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"17:12824:21445":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"2:33644:14074":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"5:4248:3052":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"9:502:4775":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"1:1607:2833":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"6:6562:5520":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"17:12863:3470":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"11:774:6690":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"1:5955:7678":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"17:11898:3390":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"16:8175:7542":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"6:6714:5591":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"6:6491:5479":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"16:4502:4359":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"0:0:2179":{"crate_id":0,"path":["rustc_version"],"kind":"module"},"2:13779:115":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"16:150:6523":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"1:3386:3091":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"11:2124:6658":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"6:5671:5406":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"2:10963:239":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:11239:7616":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:8172:3288":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"17:15769:4168":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"0:124:2064":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","ComponentMustNotHaveSign"],"kind":"variant"},"6:1559:4909":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:5247:3098":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"18:613:35372":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"2:43980:2536":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"17:11634:6491":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"6:6650:5567":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"1:8601:6894":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"5:4318:2831":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"5:4844:801":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"2:40755:6798":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"16:6353:4391":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"2:5209:33440":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"5:5930:7565":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"5:3314:6695":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"1:12358:965":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"16:4352:4356":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"2:41221:6817":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"1:1838:695":{"crate_id":1,"path":["std","env"],"kind":"module"},"2:2521:672":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:33577:14075":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"2:46103:6202":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"6:5361:5259":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:8671:6369":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"20:319:2554":{"crate_id":20,"path":["semver","VersionReq"],"kind":"struct"},"2:4431:13975":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"17:9916:21439":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"1:4810:5712":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"function"},"2:2638:103":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:8053:8581":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"6:6417:5440":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"4:0:2297":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"18:670:7383":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"1:5593:2447":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"1:6789:8732":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"1:6562:186":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"1:3333:3089":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"1:5103:8694":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"1:2713:27767":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:22269:8770":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"2:32200:2860":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"6:5436:5303":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"6:4885:5080":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"17:11166:3369":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"17:14868:3907":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"6:545:4842":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"2:3130:2692":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"2:33443:8763":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"16:7711:210":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"2:44462:6858":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"6:5344:5254":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"17:16176:4270":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"1:10346:7728":{"crate_id":1,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"2:4412:13902":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"17:14449:3768":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"17:12647:7473":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"1:8334:7703":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"11:883:7558":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"6:564:4852":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"2:13802:6758":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"1:3894:7666":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"1:10998:3002":{"crate_id":1,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"17:13437:3554":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"2:40333:6777":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"17:13946:3667":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"17:14752:3814":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"1:2774:3082":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"6:1699:4998":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"11:364:35319":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"6:4897:5085":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"12:0:2302":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"2:10259:226":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"2:10568:2842":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"16:2748:4315":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"2:10953:8631":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"5:3280:6694":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"2:11132:2832":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"6:8288:5839":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"5:1351:7559":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"2:46593:6240":{"crate_id":2,"path":["core","core_arch","simd","m8x32"],"kind":"struct"},"1:8645:7714":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"1:2477:8622":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"16:5742:6533":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"16:5863:21370":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"6:559:4850":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"16:7497:4510":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"2:13914:8590":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"11:299:6683":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"16:6849:6639":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"1:3999:7668":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"1:10220:6823":{"crate_id":1,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"17:15383:4046":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"1:9324:7724":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"2:42020:2832":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"17:11128:3335":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"17:13363:3543":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"1:6786:7687":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"2:43682:6752":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:11309:6405":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"1:8199:6890":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"2:40695:133":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"2:44788:6163":{"crate_id":2,"path":["core","future","async_drop","Noop"],"kind":"struct"},"1:5629:2449":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"18:598:35373":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:23065:5894":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU8Inner"],"kind":"struct"},"6:7348:5690":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"20:280:7722":{"crate_id":20,"path":["semver","error","Position"],"kind":"enum"},"2:40685:6788":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"17:9858:21437":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"1:3550:3052":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"2:42028:2833":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"17:11293:21473":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"2:42012:2831":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"11:1007:6658":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"1:5766:2451":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"11:490:154":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"17:10612:7401":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"17:15368:4042":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"11:1728:156":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2:40522:2479":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"2:45890:6178":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:8252:3081":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"5:6429:8863":{"crate_id":5,"path":["alloc","task","LocalWake"],"kind":"trait"},"17:12485:21568":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"16:6758:4424":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"6:1580:4923":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"6:1547:4901":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:11992:2515":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"6:1526:4886":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"5:5418:33848":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"1:8244:7702":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"17:10092:21443":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"16:5367:21368":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:12899:2502":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"16:2303:20482":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"2:1962:671":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"2:44793:150":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"1:8560:8639":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"16:7910:21382":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"17:13674:3603":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"1:12339:1686":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:46164:6205":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"2:3754:70":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"17:13424:3553":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"6:497:4809":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"5:1566:7551":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"2:3509:211":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"2:40746:6797":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:1475:156":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"17:13972:3395":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"1:10717:3086":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"10:0:2300":{"crate_id":10,"path":["adler"],"kind":"module"},"2:41746:6121":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"11:1910:6693":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"7:32:20341":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"9:482:20354":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"6:1692:4995":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"16:872:7385":{"crate_id":16,"path":["gimli","read","endian_slice","DebugLen"],"kind":"struct"},"6:6532:5497":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"17:10185:3347":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:43748:6754":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"10:44:4713":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"2:8174:14055":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"17:14847:3897":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"2:40848:6807":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2:3213:13904":{"crate_id":2,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"17:12707:7478":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"1:3832:8641":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"1:4877:8673":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"1:1997:3040":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"2:8218:165":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"2:8364:178":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"17:15463:4064":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"16:3196:4289":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"1:8182:6889":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"2:43004:73":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"18:718:3232":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"5:0:309":{"crate_id":5,"path":["alloc"],"kind":"module"},"2:7533:2889":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"2:4651:7607":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"17:13797:3646":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"16:3475:4348":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"2:22481:8859":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"6:5225:5203":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"17:13173:3501":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"2:3210:13903":{"crate_id":2,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"17:12543:7472":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"17:9781:21436":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"17:11524:7428":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"1:11207:2456":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"2:4835:2862":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"2:44594:6868":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"2:41946:6131":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"17:15701:4148":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"2:43894:2533":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"17:15456:4062":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"6:4985:5128":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"5:6068:14395":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"6:8351:5853":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"11:102:6681":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"2:2882:77":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"6:5306:5244":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"17:513:7387":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"1:9174:2833":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"2:4775:13983":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:39450:2837":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"2:43226:2843":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"2:21593:31791":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"1:2461:5868":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"17:15799:4173":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"17:16235:4281":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"11:837:7552":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"2:9343:7613":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"5:6689:2833":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"16:3029:3239":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"6:5122:5174":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"17:15010:3951":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"16:7549:6662":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"16:7813:6665":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"6:5617:5384":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"2:40808:6803":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"2:23120:5899":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroUsizeInner"],"kind":"struct"},"11:2548:4708":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"5:7536:2443":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"1:11897:6413":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"17:13292:3531":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"2:7926:3095":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"6:4870:5073":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"11:673:2831":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"16:7618:4512":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"5:7591:14135":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"5:4432:265":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"6:7446:5724":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"0:146:2163":{"crate_id":0,"path":["rustc_version","Error","SemVerError"],"kind":"variant"},"1:8555:7712":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:2894:258":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"1:11841:7668":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"2:42123:136":{"crate_id":2,"path":["rustc_version","Result","Err"],"kind":"variant"},"5:40:8606":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"6:4864:5072":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:46202:6207":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"16:5897:4384":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"17:12399:6515":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"1:5769:2453":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"6:6670:5572":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"1:1610:7565":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"6:1510:4878":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"17:15655:4134":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"2:46887:6278":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"17:12127:3427":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"1:9137:2456":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"17:13412:3552":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"2:12404:7623":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"18:581:2712":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"2:22148:31783":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"2:4365:7604":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"2:46348:6215":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"17:2037:7390":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"1:12349:890":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"20:395:2550":{"crate_id":20,"path":["semver","BuildMetadata"],"kind":"struct"},"2:1886:3052":{"crate_id":2,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"6:7429:5719":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"6:7467:5732":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"2:11433:7620":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"6:8247:5830":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"5:4083:7565":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"0:138:2094":{"crate_id":0,"path":["rustc_version","Error","CommandError"],"kind":"variant"},"1:11218:26995":{"crate_id":1,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"2:46234:6209":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"17:14284:3736":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"17:12056:3422":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"16:7823:21381":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"17:12433:3438":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"11:700:2833":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"17:9984:21441":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"17:14977:3948":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"17:12371:3472":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"2:43247:6151":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"2:0:563":{"crate_id":2,"path":["core"],"kind":"module"},"1:9393:7683":{"crate_id":1,"path":["std","sync","mutex","MappedMutexGuard"],"kind":"struct"},"2:3132:117":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"6:5515:5338":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"1:2463:8618":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"6:1707:5002":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"17:16223:4278":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"17:15624:4126":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"2:23109:5898":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU128Inner"],"kind":"struct"},"2:44810:227":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"17:14246:3731":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"9:178:20422":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"17:10068:21425":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"16:6066:6569":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"17:14372:3748":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"2:12574:6835":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"2:44175:2524":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"17:14788:3845":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"2:10319:206":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"17:11016:7407":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"17:14177:3716":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"6:5653:5397":{"crate_id":6,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"5:1839:7579":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"17:13497:3567":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"1:2489:8628":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:47118:6289":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:23153:5902":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI32Inner"],"kind":"struct"},"6:6706:5587":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"16:2572:4307":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:43012:2857":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"6:5212:5199":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"17:13832:3650":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"17:15266:4014":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"18:689:6474":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"1:4808:5710":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"function"},"16:3899:4353":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"1:8620:7710":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"17:10915:35362":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"2:41964:6132":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"2:22405:8855":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"2:11108:2831":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"6:6721:5592":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"16:4718:4365":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"2:39547:213":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:3291:26933":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"5:6964:13960":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"17:14933:3943":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"1:8474:3097":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"1:4316:8668":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"5:732:250":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:44626:6160":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"6:7389:5717":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"6:5134:5175":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"6:7452:5726":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"5:4113:33848":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"18:531:6468":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"1:5080:8692":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"2:39642:216":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"17:15521:4106":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"1:9319:7723":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"17:11605:2032":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"1:7718:30223":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"11:2231:6696":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"17:15092:3972":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"1:4192:8648":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"6:4992:5131":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"6:4811:5029":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"1:8863:6388":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"17:261:7385":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"2:44026:2529":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:8704:8703":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"2:22621:8851":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"1:6027:7680":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"17:13272:3530":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"2:44932:6880":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"11:875:7557":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"1:11780:7666":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"1:12332:417":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"6:5415:5288":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"1:12333:1173":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2:46443:6234":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"2:33510:8765":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"2:39530:8604":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:3198:4464":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:6912:233":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"16:7428:21379":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"16:6574:4342":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"2:11157:2534":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"16:7509:7532":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"6:4824:5039":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"1:6672:7686":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"17:12993:21446":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"5:7618:2483":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"17:15814:4174":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"6:586:4864":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"2:44451:13941":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"2:32275:2557":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"16:7379:35360":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"1:674:8578":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"1:5827:220":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:22443:8856":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"2:30599:5908":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"2:8207:145":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"5:7481:2833":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"16:6648:6621":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:10260:2473":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"2:43822:2160":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:44080:2531":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"17:15197:3997":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"17:13485:3566":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"1:932:7579":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"6:5581:5363":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"17:14489:3771":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"17:15646:4132":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"1:11603:26954":{"crate_id":1,"path":["std","sys","thread_local","fast_local","DtorState"],"kind":"enum"},"17:13116:3489":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"1:9107:2454":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"2:39699:5983":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"17:12443:3441":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"17:12900:3471":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"2:39602:215":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"18:726:3235":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"17:11493:7425":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"1:2070:197":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"5:741:118":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"6:5014:5144":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"1:2004:784":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"1:494:27786":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"1:562:8567":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"17:13753:3637":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"0:135:2091":{"crate_id":0,"path":["rustc_version","Error","CouldNotExecuteCommand"],"kind":"variant"},"6:5400:5282":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"13:0:2296":{"crate_id":13,"path":["std_detect"],"kind":"module"},"1:4214:8652":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"1:8177:7700":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"2:42079:8707":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"6:5283:5235":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"17:15390:4047":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"17:16187:4271":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"2:7754:14050":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"5:839:7573":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"1:7984:6323":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"16:7633:35351":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"1:4345:8671":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"6:517:4826":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"6:4959:5115":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"17:9807:21426":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"17:15301:4023":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"1:8523:3070":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"2:41984:194":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"2:1969:5865":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"5:289:33848":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"9:0:2299":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"2:3268:4465":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"16:5769:6538":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"17:16069:4242":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"1:2307:138":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"16:5960:6557":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"17:12508:3447":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"6:465:4793":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"2:46534:6237":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:7920:27765":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"6:5502:5337":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"17:12300:21566":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"14:202:13942":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"1:4685:8674":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"16:6120:21372":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:42520:90":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:41724:170":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"1:11620:2465":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"1:11244:6398":{"crate_id":1,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"1:12334:471":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"2:13859:152":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"17:14436:3767":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"1:11101:27785":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"5:7578:2481":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"1:2226:128":{"crate_id":1,"path":["std","ffi","os_str","Display"],"kind":"struct"},"11:2536:4706":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"2:46217:6208":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2:34202:14079":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"17:11089:7411":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"18:573:3211":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:43450:6155":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"1:11686:6915":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"2:2535:14094":{"crate_id":2,"path":["core","ptr","with_exposed_provenance"],"kind":"function"},"0:55:2042":{"crate_id":0,"path":["rustc_version","Channel","Stable"],"kind":"variant"},"17:11075:3367":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"17:10439:3355":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"17:13089:3483":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"17:12043:7453":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"17:11142:3378":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"5:2206:8562":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"5:4934:217":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"6:5290:5237":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"17:16121:4254":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"6:5314:5248":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"17:4986:7399":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"1:373:7650":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"6:7546:5786":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"16:6634:4330":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"6:1621:4955":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"2:21571:2712":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"6:5181:5180":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"17:15616:4125":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"1:5698:2450":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"1:2067:198":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"6:6609:5547":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:42068:7637":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"16:5307:4379":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"6:7339:5689":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"5:1536:6691":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"17:10419:3354":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"1:12352:883":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"2:8256:129":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:1603:2831":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:43465:6832":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"17:13375:3546":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"5:3259:33804":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"6:5031:5152":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"6:5146:5176":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:33171:14073":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:42440:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"2:45911:6183":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"6:5489:5332":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"11:710:7550":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"5:3801:3083":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"1:1636:6695":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"2:44851:7024":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"17:13015:3438":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"5:3670:2832":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"1:4972:7672":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"5:5520:1720":{"crate_id":5,"path":["alloc","str"],"kind":"module"},"2:747:3024":{"crate_id":2,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"17:12478:3442":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"6:6678:5574":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"16:6480:4324":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"2:39622:214":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"2:22876:32059":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"0:74:2047":{"crate_id":0,"path":["rustc_version","LlvmVersion"],"kind":"struct"},"17:14876:3908":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"17:13899:3661":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"9:357:20370":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"1:9166:7715":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"2:8720:32688":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"17:14968:3944":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"17:14091:3688":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"2:40560:2518":{"crate_id":2,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"6:7359:5695":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:2066:14105":{"crate_id":2,"path":["core","ptr","metadata","Thin"],"kind":"trait_alias"},"16:8093:4567":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"2:43876:2534":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"5:4158:2832":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"2:21712:8768":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"16:6385:4394":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:12888:2505":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"2:44859:6164":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"18:521:25630":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"17:14475:3770":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"16:6263:6599":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"2:12388:14155":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"2:21657:8631":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"2:3172:2695":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"16:3925:4354":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:46266:6211":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"17:13922:3666":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"17:10457:138":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"18:548:153":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"16:7168:6394":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"2:42479:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"2:42703:2847":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"2:45995:6188":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:9464:6899":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"15:327:20467":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"2:2064:14104":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"16:8073:4566":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"2:10520:153":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"15:394:20473":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"1:3023:7664":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"17:12454:6518":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"1:8857:2831":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"17:11256:6484":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"2:40382:6779":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"17:12342:6508":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"6:1671:4985":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:10978:26994":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"16:6504:6607":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"1:9278:115":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"17:15426:4056":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"5:7055:264":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"1:8225:127":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"2:41239:6818":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"5:1320:6658":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"2:4804:2701":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:947:7551":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"16:2394:4299":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"1:3601:2461":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"17:10828:35367":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"2:10563:2841":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"16:4424:4357":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"2:32193:7634":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"1:12351:902":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"16:867:7384":{"crate_id":16,"path":["gimli","read","endian_slice","DebugByte"],"kind":"struct"},"10:36:4712":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"16:6160:20481":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"2:12650:6840":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:2312:6903":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"2:9959:32689":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"11:687:2832":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:2078:5866":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"2:3380:140":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"1:3583:2471":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"16:2998:4344":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"1:4130:8644":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"2:22493:32605":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"2:21838:5874":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"16:7686:7541":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"1:4332:8670":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"2:10323:2852":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:9312:7722":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"2:40303:6776":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"2:2696:134":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"16:7741:4341":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"18:538:3216":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:2977:137":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:22593:8850":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"6:5677:5409":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"17:15992:4228":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"17:12671:7475":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"16:7648:7540":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"16:3329:4347":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"17:15281:4016":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"16:2788:4317":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"2:41806:6130":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"1:1891:2991":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"17:11825:7447":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"16:6532:6609":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"2:3358:2838":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:7939:27788":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"0:93:2070":{"crate_id":0,"path":["rustc_version","VersionMeta"],"kind":"struct"},"16:2636:4310":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"1:968:7555":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"1:9420:7697":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockWriteGuard"],"kind":"struct"},"17:13187:3502":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"17:11647:6492":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"2:43783:7645":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"17:10534:35365":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"2:46039:6191":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"2:23098:5897":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU64Inner"],"kind":"struct"},"16:5006:4375":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"5:7547:2444":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"2:47107:6288":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:42946:2857":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"1:9291:26618":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"6:6379:5413":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"17:12362:6513":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"1:6173:6882":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"16:6802:6626":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"5:3036:34899":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"2:8309:2559":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:11916:6918":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"16:7006:7521":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"17:13387:3547":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"16:2548:4306":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"6:8317:5846":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"1:12345:737":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"1:12337:1313":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"5:1545:7564":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"17:15434:4057":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"17:14414:3756":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"1:10488:113":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"5:3254:6693":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"0:45:226":{"crate_id":0,"path":["rustc_version","Result"],"kind":"type_alias"},"1:980:7558":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"0:144:2136":{"crate_id":0,"path":["rustc_version","Error","UnexpectedVersionFormat"],"kind":"variant"},"1:9224:8735":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"17:14994:3950":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"2:3386:142":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:4478:7670":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"6:6441:5456":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"17:14066:3686":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"1:650:3041":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"1:3649:26448":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"1:12335:1872":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"16:4830:4369":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"16:7355:4489":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"18:113:25619":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"16:7580:6664":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"16:5831:6543":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"2:42003:173":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"1:12360:1418":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"6:7516:5769":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"17:11812:7445":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"16:5817:6540":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"16:2660:4311":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"6:8029:5828":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"16:5781:4327":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"5:3881:7579":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"17:13399:3550":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"17:11115:7413":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"16:7559:6663":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"11:430:35328":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"2:7638:14002":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"2:9964:32375":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"17:14111:3691":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"13:110:35337":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"1:10987:26992":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"1:4294:31770":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"1:11614:6910":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"6:1490:4870":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"17:16249:4282":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"2:46961:6280":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:8594:6893":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"1:10414:2463":{"crate_id":1,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"7:0:1901":{"crate_id":7,"path":["unwind"],"kind":"module"},"2:44279:6843":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"11:856:7555":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"16:8313:137":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"2:30978:196":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:21710:8631":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"11:1887:2833":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"2:12879:2503":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"20:351:2552":{"crate_id":20,"path":["semver","Op"],"kind":"enum"},"5:2112:7580":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"17:11877:3388":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"17:11755:6502":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"1:6189:220":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"18:491:6467":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"5:3218:100":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"17:12107:3378":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"2:30567:5907":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"2:42078:8584":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:8007:6324":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"6:5296:5240":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:47040:6283":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"2:4529:6724":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"17:16138:4256":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"1:8189:6325":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"20:381:2553":{"crate_id":20,"path":["semver","Prerelease"],"kind":"struct"},"2:42710:2849":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:8339:7704":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:10317:2850":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"17:15102:3973":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"5:3406:7579":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"1:8626:6368":{"crate_id":1,"path":["std","os","unix","net","ucred","UCred"],"kind":"struct"},"17:14545:3778":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"6:8197:5829":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:44800:219":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"17:16105:4249":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"2:12611:6838":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"17:11341:7421":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"1:4663:8673":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"2:43998:2535":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"17:0:2306":{"crate_id":17,"path":["object"],"kind":"module"},"2:45858:6176":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"2:8170:14056":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:10104:2869":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"0:25:1929":{"crate_id":0,"path":["rustc_version","version"],"kind":"function"},"6:5466:5324":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"17:11773:3454":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"16:7014:21377":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"5:304:2507":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"1:11006:2450":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"16:4771:4367":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"6:7575:5802":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"1:12359:1911":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"18:635:3231":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"2:47098:6287":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"17:13235:3517":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"14:160:7546":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"16:5107:4378":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"2:10315:2849":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"2:44872:32329":{"crate_id":2,"path":["core","task","wake","ExtData"],"kind":"enum"},"2:21826:8631":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"2:44485:2539":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"17:10769:35361":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"1:9709:138":{"crate_id":1,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"1:4206:8650":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"17:13877:3660":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"3:234:226":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:896:6690":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"16:7604:4339":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"5:5462:2508":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"17:11102:7412":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"17:15569:4107":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"16:7799:4329":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"2:43469:6833":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"17:12213:7462":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"2:44159:2512":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"11:1051:7560":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"6:6542:5504":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"5:2098:3083":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"2:22898:5882":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"5:6930:13958":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"1:6396:7681":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"2:46842:6277":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"5:3816:7580":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:12420:2100":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"6:7485:5743":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"16:7727:4340":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"16:5722:4328":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"1:426:185":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:46990:6281":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"6:5457:5318":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"2:4288:3052":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"16:2854:4320":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"1:10640:27775":{"crate_id":1,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"1:10327:2991":{"crate_id":1,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"2:46249:6210":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"16:3614:4349":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"17:11042:7408":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"17:12887:6521":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"16:6991:35350":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"2:40676:6787":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"17:15039:3959":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"1:1855:2982":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"2:46555:6238":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"16:7539:4336":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:21627:31793":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:6499:220":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"17:11497:7426":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"17:13211:3516":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"17:12711:137":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:30605:5910":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"17:11537:7429":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"6:553:4847":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"2:2888:163":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"17:15418:4054":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"17:9737:21420":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"18:765:25629":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"17:16032:3520":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"1:1619:6692":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"16:3810:4351":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"2:3582:254":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"17:15273:4015":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"17:15734:4155":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"2:47019:6282":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"17:10018:21422":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"1:1101:7563":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"2:42117:226":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"17:10720:35369":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"2:34029:14078":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"16:6813:6627":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"17:14356:3747":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"6:6597:5542":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"17:14723:3794":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"5:1555:7550":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"17:13538:3579":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"5:7389:6715":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"2:42936:6139":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"16:6231:6596":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"2:40618:2459":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"16:7473:4509":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"2:2727:195":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"2:45875:6177":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"0:26:2102":{"crate_id":0,"path":["rustc_version","version_meta"],"kind":"function"},"16:4940:4373":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"1:11353:7741":{"crate_id":1,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"1:2535:2028":{"crate_id":1,"path":["std","io"],"kind":"module"},"1:5841:6883":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"2:12833:2030":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"17:15023:3956":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"17:14986:3949":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"17:12768:21423":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"17:437:3295":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"17:11153:7404":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2:44437:6857":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"17:11443:3383":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"1:8231:6891":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"16:5347:4380":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"2:13495:7625":{"crate_id":2,"path":["core","future","async_drop","AsyncDropOwning"],"kind":"struct"},"2:47144:6291":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"17:11419:3378":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"16:7085:6650":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"2:11951:7622":{"crate_id":2,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"16:2838:4319":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"1:11581:7742":{"crate_id":1,"path":["std","sys","thread_local","fast_local","Key"],"kind":"struct"},"2:40838:6806":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"2:32186:4507":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"9:424:20357":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"15:288:20462":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"5:1735:33848":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"2:22495:14094":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_exposed_provenance"],"kind":"function"},"6:7984:5814":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"16:6466:4398":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"11:2304:6658":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"6:5445:5309":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"1:8088:3002":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"6:8271:5834":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"1:7870:3342":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"1:6272:2034":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"2:12873:2510":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"6:6880:5634":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"6:6874:5633":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"1:9158:2831":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"11:2562:4710":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"0:141:2160":{"crate_id":0,"path":["rustc_version","Error","Utf8Error"],"kind":"variant"},"17:12584:7404":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"6:5407:1242":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"8:0:2298":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"6:8006:5815":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"1:12346:753":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"2:41890:32058":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"16:2592:4308":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"17:14025:3679":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"6:5244:5213":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"11:1107:7561":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"17:11242:7417":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"17:13473:3563":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:47274:6318":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"6:1503:4876":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"17:13594:3596":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"16:6278:7491":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"5:7372:5863":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"2:39885:14006":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"17:15214:4000":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"16:2728:4314":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"2:32140:2458":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"1:2735:3071":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"17:12238:7464":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"17:10284:3350":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"2:6000:3052":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"2:32216:237":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"2:25:695":{"crate_id":2,"path":["core","env"],"kind":"macro"},"1:10957:6401":{"crate_id":1,"path":["std","sys","pal","unix","fs","Mode"],"kind":"struct"},"2:2966:123":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"16:7111:6656":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"6:5376:5267":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"17:12422:6516":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"17:13553:3585":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"2:38292:14083":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:3331:3088":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"16:6433:6601":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"2:40401:2525":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:43803:7646":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"2:43793:6756":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"2:46932:6279":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"17:14212:3728":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"1:4158:8647":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"2:7986:6886":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"2:45811:6171":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"2:41212:3096":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:22811:5876":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"17:14463:3769":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"17:14147:3697":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"17:10251:3349":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"17:14341:3743":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"6:6763:5605":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"2:46422:6233":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:974:7557":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"2:47061:6284":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:8483:2460":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"17:13814:3649":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"17:14235:3729":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"1:11261:6404":{"crate_id":1,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"2:32305:2698":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"17:13344:3542":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"1:9260:6393":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"17:13509:3568":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"2:45928:6184":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"11:123:6682":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"18:659:7379":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:12347:732":{"crate_id":1,"path":["std","f128"],"kind":"primitive"},"2:22626:8849":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"17:11788:7441":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"2:6895:6741":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"17:12851:6520":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"1:6668:6815":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"1:9546:2997":{"crate_id":1,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"1:6451:6882":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"17:11051:7409":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"16:6620:4401":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"2:3415:8605":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"2:40625:6754":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"17:15324:4028":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"5:7489:2833":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"16:6456:21374":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"6:5020:5147":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"17:15333:4031":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"2:5904:3052":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"17:13738:3632":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"16:4976:4374":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:43050:2858":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"17:14038:3681":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"1:3520:3096":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"17:15400:4050":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"17:12929:3472":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"2:22548:14094":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","with_exposed_provenance"],"kind":"function"},"2:33856:14077":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"16:2902:20509":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"2:42975:4543":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"2:12894:2504":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"17:12494:3443":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"17:12530:7471":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"16:7570:4337":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"17:12318:3435":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"2:36251:4470":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"2:44909:6879":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"11:2352:7560":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"1:2699:3080":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"5:7606:2482":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"2:44193:2526":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"}},"external_crates":{"20":{"name":"semver","html_root_url":"https://docs.rs/semver/1.0.22/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":29}