{"root":"0:0:1791","crate_version":"0.4.0","includes_private":false,"index":{"b:2:2542-0:95:1680":{"id":"b:2:2542-0:95:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:126","2:2546:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11872:802":{"id":"2:11872:802","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:11872:411"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11986:33244":{"id":"2:11986:33244","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11872:411","self::pattern":"2:11573:2104"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:2097","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11578:2097","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11593:2098","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:77:1661":{"id":"0:77:1661","crate_id":0,"name":"minor","span":{"filename":"src/lib.rs","begin":[96,4],"end":[96,18]},"visibility":"public","docs":"Minor version","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u64"}},"0:93:720":{"id":"0:93:720","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[90,55],"end":[90,59]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9297:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8178:7835-0:121:1664":{"id":"a:2:8178:7835-0:121:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8178:7835","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:108":{"id":"0:108","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,23],"end":[147,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2683:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:41:659":{"id":"0:41:659","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[364,4],"end":[381,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11966:33238":{"id":"2:11966:33238","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2736:2149-0:75:1657":{"id":"a:2:2736:2149-0:75:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:2149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:53:1650":{"id":"0:53:1650","crate_id":0,"name":"Beta","span":{"filename":"src/lib.rs","begin":[78,4],"end":[78,8]},"visibility":"default","docs":"Beta release channel","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"5:5377:33895":{"id":"5:5377:33895","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7239:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7239:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:2097","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2240-0:121:1664":{"id":"b:2:2240-0:121:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:2148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2234:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2242:23967"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:113:604":{"id":"0:113:604","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[147,27],"end":[147,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:140:1583":{"id":"0:140:1583","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[343,27],"end":[343,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"io::Error","id":"1:2870:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:28:1711":{"id":"0:28:1711","crate_id":0,"name":"version_meta_for","span":{"filename":"src/lib.rs","begin":[209,0],"end":[262,1]},"visibility":"public","docs":"Parses a \"rustc -vV\" output string and returns\nthe SemVer version and additional metadata\nlike the git short hash and build date.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["verbose_version_string",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:45:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11936:1727":{"id":"2:11936:1727","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:11872:411","self::pattern":"2:11573:2104","str::rsplitn":"2:11939:24269"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:42749:2128","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:2097","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:48:1644":{"id":"0:48:1644","crate_id":0,"name":"Channel","span":{"filename":"src/lib.rs","begin":[72,0],"end":[81,1]},"visibility":"public","docs":"Release channel of the compiler.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:49:1646","0:51:1648","0:53:1650","0:55:1652"],"impls":["a:2:8179:7834-0:48:1644","a:2:2672:217-0:48:1644","a:2:2736:2149-0:48:1644","a:2:2686:225-0:48:1644","a:2:8178:7835-0:48:1644","b:2:2531-0:48:1644","b:2:2542-0:48:1644","b:2:2527-0:48:1644","b:2:3331-0:48:1644","b:2:2240-0:48:1644","b:2:2537-0:48:1644","b:2:2237-0:48:1644","b:5:674-0:48:1644","0:70","0:64","0:68","0:73","0:66","0:63","0:61","0:57","0:58","0:60"]}},"a:2:2686:225-0:48:1644":{"id":"a:2:2686:225-0:48:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:63":{"id":"0:63","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,26],"end":[71,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2682:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2237-0:75:1657":{"id":"b:2:2237-0:75:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:2148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2239:1994"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2672:217-0:48:1644":{"id":"a:2:2672:217-0:48:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:37:659":{"id":"0:37:659","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[302,4],"end":[323,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:121:1664":{"id":"0:121:1664","crate_id":0,"name":"LlvmVersionParseError","span":{"filename":"src/lib.rs","begin":[280,0],"end":[293,1]},"visibility":"public","docs":"LLVM Version Parse Error","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:122:1752","0:125:1671","0:127:1674","0:129:1756","0:131:1676","0:133:1678"],"impls":["a:2:8179:7834-0:121:1664","a:2:2672:217-0:121:1664","a:2:2736:2149-0:121:1664","a:2:2686:225-0:121:1664","a:2:8178:7835-0:121:1664","b:2:2531-0:121:1664","b:2:2599-0:121:1664","b:2:2542-0:121:1664","b:2:2527-0:121:1664","b:2:3331-0:121:1664","b:2:2240-0:121:1664","b:2:2537-0:121:1664","b:2:2237-0:121:1664","b:5:5633-0:121:1664","0:38","0:135","0:164","0:34","0:36"]}},"0:149:1775":{"id":"0:149:1775","crate_id":0,"name":"SemVerError","span":{"filename":"src/lib.rs","begin":[356,4],"end":[356,30]},"visibility":"default","docs":"An error occurred in parsing the semver.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:151:1583"]},"discriminant":null}},"0:158":{"id":"0:158","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[340,9],"end":[340,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9069:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:159:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:118":{"id":"0:118","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,55],"end":[147,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9289:139","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:119:720"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11910:24272":{"id":"2:11910:24272","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:11872:411","self::pattern":"2:11573:2104"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:2097","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11578:2097","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11593:2098","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:114":{"id":"0:114","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,38],"end":[147,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["min","clamp","max"],"trait":{"name":"Ord","id":"2:2337:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:115:422"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:674-0:95:1680":{"id":"b:5:674-0:95:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:670:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:676:2521","5:677:1739","5:678:2522"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2537-0:48:1644":{"id":"b:2:2537-0:48:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:126","2:2541:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11913:2502":{"id":"2:11913:2502","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:40682:176","prim@char":"1:11872:411","self::pattern":"2:11573:2104"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:2097","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5390:2659":{"id":"5:5390:2659","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7239:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7239:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11927:24266":{"id":"2:11927:24266","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:11573:2104","`DoubleEndedIterator`":"2:7167:119","prim@char":"1:11872:411","str::split":"2:11921:1667"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:42663:2125","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:2097","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11578:2097","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11593:2098","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:42":{"id":"0:42","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[384,0],"end":[396,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["description","source","cause","provide","type_id"],"trait":{"name":"Error","id":"2:2592:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:43:1765"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11893:33226":{"id":"2:11893:33226","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:11878:1380","crate::ops::IndexMut":"2:2997:7728","str::slice_unchecked":"2:11892:33225"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3331-0:48:1644":{"id":"b:2:3331-0:48:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:2148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3329:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3333:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:137:126":{"id":"0:137:126","crate_id":0,"name":"Error","span":{"filename":"src/lib.rs","begin":[341,0],"end":[361,1]},"visibility":"public","docs":"The error type for this crate.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:138:1703","0:141:1706","0:144:1772","0:147:1748","0:149:1775","0:152:1738","0:155:1778"],"impls":["a:2:8179:7834-0:137:126","a:2:2672:217-0:137:126","a:2:2736:2149-0:137:126","a:2:2686:225-0:137:126","a:2:8178:7835-0:137:126","b:2:2531-0:137:126","b:2:2599-0:137:126","b:2:2542-0:137:126","b:2:2527-0:137:126","b:2:3331-0:137:126","b:2:2240-0:137:126","b:2:2537-0:137:126","b:2:2237-0:137:126","b:5:5633-0:137:126","0:160","0:158","0:42","0:162","0:40","0:164"]}},"b:5:674-0:48:1644":{"id":"b:5:674-0:48:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:670:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:676:2521","5:677:1739","5:678:2522"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2672:217-0:95:1680":{"id":"a:2:2672:217-0:95:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:5388:33897":{"id":"5:5388:33897","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7239:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7239:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:61":{"id":"0:61","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,22],"end":[71,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2306:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2542-0:75:1657":{"id":"b:2:2542-0:75:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:126","2:2546:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:92":{"id":"0:92","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,55],"end":[90,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9289:139","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:93:720"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:51:1648":{"id":"0:51:1648","crate_id":0,"name":"Nightly","span":{"filename":"src/lib.rs","begin":[76,4],"end":[76,11]},"visibility":"default","docs":"Nightly release channel","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:25:1545":{"id":"0:25:1545","crate_id":0,"name":"version","span":{"filename":"src/lib.rs","begin":[194,0],"end":[196,1]},"visibility":"public","docs":"Returns the `rustc` SemVer version.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:45:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Version","id":"20:299:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:677:1739":{"id":"5:677:1739","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8179:7834-0:48:1644":{"id":"a:2:8179:7834-0:48:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8179:7834","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2527-0:121:1664":{"id":"b:2:2527-0:121:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:1709"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11997:7704":{"id":"2:11997:7704","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4520:7704"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:42953:2117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11899:31156":{"id":"2:11899:31156","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:11900:31144"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:42919:2108","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:5633-0:75:1657":{"id":"b:5:5633-0:75:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9074:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:2148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5631:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5635:1434"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:78":{"id":"0:78","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,9],"end":[90,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:79:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:40":{"id":"0:40","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[363,0],"end":[382,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9074:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:41:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5372":{"id":"5:5372","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:5373:33894","5:5374:13134","5:5377:33895","5:5380:33896","5:5388:33897","5:5389:33898","5:5390:2659","5:5391:24035","5:5392:24034"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:57":{"id":"0:57","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,9],"end":[71,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2684:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:88":{"id":"0:88","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,38],"end":[90,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["min","clamp","max"],"trait":{"name":"Ord","id":"2:2337:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:89:422"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:17":{"id":"0:17","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[100,0],"end":[104,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9074:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:18:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11998:33246":{"id":"2:11998:33246","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4517:33246"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:42962:2118","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2545:126":{"id":"2:2545:126","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:31780:2053","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:43:1765":{"id":"0:43:1765","crate_id":0,"name":"source","span":{"filename":"src/lib.rs","begin":[385,4],"end":[395,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"error::Error","id":"2:2592:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:90":{"id":"0:90","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,43],"end":[90,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","ge","le","lt"],"trait":{"name":"PartialOrd","id":"2:2343:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:91:1023"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:20:125":{"id":"0:20:125","crate_id":0,"name":"Err","span":{"filename":"src/lib.rs","begin":[107,4],"end":[107,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"a:2:8179:7834-0:95:1680":{"id":"a:2:8179:7834-0:95:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8179:7834","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:100:1689":{"id":"0:100:1689","crate_id":0,"name":"channel","span":{"filename":"src/lib.rs","begin":[162,4],"end":[162,24]},"visibility":"public","docs":"Release channel of the compiler","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"a:2:2686:225-0:95:1680":{"id":"a:2:2686:225-0:95:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2531-0:121:1664":{"id":"b:2:2531-0:121:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:129:1756":{"id":"0:129:1756","crate_id":0,"name":"MinorVersionMustBeZeroAfter4","span":{"filename":"src/lib.rs","begin":[288,4],"end":[288,32]},"visibility":"default","docs":"Minor version component must be zero on LLVM versions later than 4.0","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:74:659":{"id":"0:74:659","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[71,60],"end":[71,65]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5635:1434":{"id":"5:5635:1434","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7239:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:36":{"id":"0:36","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[301,0],"end":[324,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9074:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:37:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11900:31144":{"id":"2:11900:31144","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:11899:31156"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:42928:2106","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11901:1723":{"id":"2:11901:1723","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:42899:2119","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:165:685":{"id":"0:165:685","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["e",{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2542-0:48:1644":{"id":"b:2:2542-0:48:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:126","2:2546:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8178:7835-0:75:1657":{"id":"a:2:8178:7835-0:75:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8178:7835","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2237-0:95:1680":{"id":"b:2:2237-0:95:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:2148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2239:1994"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:154:1583":{"id":"0:154:1583","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[358,25],"end":[358,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:7239:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:161:685":{"id":"0:161:685","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["e",{"kind":"resolved_path","inner":{"name":"str::Utf8Error","id":"2:42589:1772","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11903:31133":{"id":"2:11903:31133","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:42937:2105","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:86":{"id":"0:86","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,27],"end":[90,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2301:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:87:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2237-0:121:1664":{"id":"b:2:2237-0:121:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:2148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2239:1994"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2686:225-0:121:1664":{"id":"a:2:2686:225-0:121:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:157:1583":{"id":"0:157:1583","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[360,21],"end":[360,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"2:11924:24264":{"id":"2:11924:24264","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:11872:411","self::pattern":"2:11573:2104"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:11397:2107","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:2097","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11942:33230":{"id":"2:11942:33230","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:2097","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:34":{"id":"0:34","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[295,0],"end":[299,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ParseIntError","id":"2:21770:1752","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:35:685"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:45:207":{"id":"0:45:207","crate_id":0,"name":"Result","span":{"filename":"src/lib.rs","begin":[417,0],"end":[417,58]},"visibility":"public","docs":"The result type for this crate.","links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"std::result::Result","id":"2:40824:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]}}},"a:2:8178:7835-0:48:1644":{"id":"a:2:8178:7835-0:48:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8178:7835","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:676:2521":{"id":"5:676:2521","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"2:11933:33229":{"id":"2:11933:33229","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:11573:2104","str::split":"2:11921:1667","prim@char":"1:11872:411","str::split_terminator":"2:11930:33228"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:42713:2129","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:2097","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11578:2097","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11593:2098","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:146:1583":{"id":"0:146:1583","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[352,14],"end":[352,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"str::Utf8Error","id":"2:42589:1772","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"b:2:2240-0:95:1680":{"id":"b:2:2240-0:95:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:2148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2234:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2242:23967"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11877:33223":{"id":"2:11877:33223","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:11875:33222"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:18:659":{"id":"0:18:659","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[101,4],"end":[103,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11882:311":{"id":"2:11882:311","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:11883:24232","`u8`":"1:11889:1478"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11948:2009":{"id":"2:11948:2009","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:11573:2104","`DoubleEndedIterator`":"2:7167:119","prim@char":"1:11872:411","str::matches":"2:11948:2009"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:42849:2123","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:2097","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2672:217-0:121:1664":{"id":"a:2:2672:217-0:121:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11960:33235":{"id":"2:11960:33235","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3331-0:137:126":{"id":"b:2:3331-0:137:126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:2148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3329:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3333:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5392:24034":{"id":"5:5392:24034","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:11994:24032"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7239:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:152:1738":{"id":"0:152:1738","crate_id":0,"name":"UnknownPreReleaseTag","span":{"filename":"src/lib.rs","begin":[358,4],"end":[358,32]},"visibility":"default","docs":"The pre-release tag is unknown.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:154:1583"]},"discriminant":null}},"2:2239:1994":{"id":"2:2239:1994","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:23":{"id":"0:23","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[174,0],"end":[191,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:24:1697"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2237-0:48:1644":{"id":"b:2:2237-0:48:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:2148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2239:1994"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:102:1693":{"id":"0:102:1693","crate_id":0,"name":"short_version_string","span":{"filename":"src/lib.rs","begin":[168,4],"end":[168,36]},"visibility":"public","docs":"Short version string of the compiler","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:7239:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:124:1583":{"id":"0:124:1583","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[282,18],"end":[282,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"num::ParseIntError","id":"2:21770:1752","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:49:1646":{"id":"0:49:1646","crate_id":0,"name":"Dev","span":{"filename":"src/lib.rs","begin":[74,4],"end":[74,7]},"visibility":"default","docs":"Development release channel","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:96:1641":{"id":"0:96:1641","crate_id":0,"name":"semver","span":{"filename":"src/lib.rs","begin":[150,4],"end":[150,23]},"visibility":"public","docs":"Version of the compiler","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Version","id":"20:299:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"2:11873:2465":{"id":"2:11873:2465","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11904:24271":{"id":"2:11904:24271","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:11872:411","self::pattern":"2:11573:2104"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:2097","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11989:1675":{"id":"2:11989:1675","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:11535:125","`FromStr`":"2:11534:1640"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:40824:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"2:11534:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:11534:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11993:24033":{"id":"2:11993:24033","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2531-0:75:1657":{"id":"b:2:2531-0:75:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:106":{"id":"0:106","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,16],"end":[147,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9069:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:107:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3331-0:75:1657":{"id":"b:2:3331-0:75:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:2148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3329:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3333:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:73":{"id":"0:73","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,60],"end":[71,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9069:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:74:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:89:422":{"id":"0:89:422","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[90,38],"end":[90,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:30596:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11875:33222":{"id":"2:11875:33222","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8179:7834-0:137:126":{"id":"a:2:8179:7834-0:137:126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8179:7834","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:2237-0:137:126":{"id":"b:2:2237-0:137:126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:2148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2231:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2239:1994"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:83":{"id":"0:83","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,23],"end":[90,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2306:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2599-0:137:126":{"id":"b:2:2599-0:137:126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:2592:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:2148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:3380:13040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2601:2617"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"E"}}},"2:11884:1743":{"id":"2:11884:1743","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:40682:176"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9754:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9754:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:104":{"id":"0:104","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,9],"end":[147,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:105:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5373:33894":{"id":"5:5373:33894","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:279:2101","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6988:5462","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:279:2101","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6988:5462","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:116":{"id":"0:116","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,43],"end":[147,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","ge","le","lt"],"trait":{"name":"PartialOrd","id":"2:2343:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:117:1023"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:39:1765":{"id":"0:39:1765","crate_id":0,"name":"source","span":{"filename":"src/lib.rs","begin":[327,4],"end":[336,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"error::Error","id":"2:2592:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11992:24037":{"id":"2:11992:24037","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11939:24269":{"id":"2:11939:24269","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:11872:411","str::splitn":"2:11936:1727","self::pattern":"2:11573:2104"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:42767:2127","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:2097","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11578:2097","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11593:2098","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:15-20:299:1642":{"id":"0:15-20:299:1642","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[66,0],"end":[66,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"semver::Version","name":"Version","id":"20:299:1642","glob":false}},"0:105:415":{"id":"0:105:415","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[147,9],"end":[147,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:138:1703":{"id":"0:138:1703","crate_id":0,"name":"CouldNotExecuteCommand","span":{"filename":"src/lib.rs","begin":[343,4],"end":[343,37]},"visibility":"default","docs":"An error occurred while trying to find the `rustc` to run.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:140:1583"]},"discriminant":null}},"0:38":{"id":"0:38","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[326,0],"end":[337,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["description","source","cause","provide","type_id"],"trait":{"name":"Error","id":"2:2592:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:39:1765"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:117:1023":{"id":"0:117:1023","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[147,43],"end":[147,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::option::Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:30596:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2530:1709":{"id":"2:2530:1709","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2504:131"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:119:720":{"id":"0:119:720","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[147,55],"end":[147,59]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9297:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2531-0:48:1644":{"id":"b:2:2531-0:48:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11995:33245":{"id":"2:11995:33245","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4519:33245"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:42944:2116","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8178:7835-0:137:126":{"id":"a:2:8178:7835-0:137:126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8178:7835","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"a:2:2672:217-0:75:1657":{"id":"a:2:2672:217-0:75:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11907:1670":{"id":"2:11907:1670","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:11872:411","self::pattern":"2:11573:2104"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:2097","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8179:7834-0:75:1657":{"id":"a:2:8179:7834-0:75:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8179:7834","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:5633-0:121:1664":{"id":"b:5:5633-0:121:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9074:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:2148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5631:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5635:1434"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:143:1710":{"id":"0:143:1710","crate_id":0,"name":"stderr","span":{"filename":"src/lib.rs","begin":[349,8],"end":[349,22]},"visibility":"default","docs":"stderr output from the command","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:7239:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:60":{"id":"0:60","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,22],"end":[71,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2683:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3333:1470":{"id":"2:3333:1470","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:39008:5572","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:144:1772":{"id":"0:144:1772","crate_id":0,"name":"Utf8Error","span":{"filename":"src/lib.rs","begin":[352,4],"end":[352,29]},"visibility":"default","docs":"The output of `rustc -vV` was not valid utf-8.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:146:1583"]},"discriminant":null}},"2:11897:6217":{"id":"2:11897:6217","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:11872:411"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:42621:2111","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5374:13134":{"id":"5:5374:13134","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7239:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7239:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:2097","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:109":{"id":"0:109","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,23],"end":[147,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2306:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:135":{"id":"0:135","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[279,9],"end":[279,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9069:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:136:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2686:225-0:75:1657":{"id":"a:2:2686:225-0:75:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:70":{"id":"0:70","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,54],"end":[71,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9289:139","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:71:720"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11917:2464":{"id":"2:11917:2464","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:40682:176","prim@char":"1:11872:411","self::pattern":"2:11573:2104"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:2097","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11578:2097","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11593:2098","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2542-0:137:126":{"id":"b:2:2542-0:137:126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:126","2:2546:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11896:6207":{"id":"2:11896:6207","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:11872:411"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:42615:2112","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:155:1778":{"id":"0:155:1778","crate_id":0,"name":"LlvmVersionError","span":{"filename":"src/lib.rs","begin":[360,4],"end":[360,43]},"visibility":"default","docs":"An error occurred in parsing a `LlvmVersion`.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:157:1583"]},"discriminant":null}},"b:2:3331-0:95:1680":{"id":"b:2:3331-0:95:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:2148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3329:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3333:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11871":{"id":"2:11871","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:11872:802","2:11873:2465","2:11874:33221","2:11875:33222","2:11877:33223","2:11880:28684","2:11881:33224","2:11882:311","2:11883:24232","2:11884:1743","2:11886:24229","2:11888:24230","2:11890:24231","2:11892:33225","2:11893:33226","2:11894:24255","2:11895:24256","2:11896:6207","2:11897:6217","2:11898:6098","2:11899:31156","2:11900:31144","2:11901:1723","2:11902:33227","2:11903:31133","2:11904:24271","2:11907:1670","2:11910:24272","2:11913:2502","2:11917:2464","2:11921:1667","2:11924:24264","2:11927:24266","2:11930:33228","2:11933:33229","2:11936:1727","2:11939:24269","2:11942:33230","2:11945:33231","2:11948:2009","2:11951:33232","2:11954:33233","2:11957:33234","2:11960:33235","2:11962:33236","2:11964:33237","2:11966:33238","2:11967:33239","2:11968:33240","2:11971:33241","2:11974:24273","2:11977:24274","2:11980:33242","2:11983:33243","2:11986:33244","2:11989:1675","2:11991:24036","2:11992:24037","2:11993:24033","2:11994:24032","2:11995:33245","2:11997:7704","2:11998:33246"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:69:1023":{"id":"0:69:1023","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[71,42],"end":[71,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::option::Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:30596:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:112":{"id":"0:112","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,27],"end":[147,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2301:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:113:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2531-0:137:126":{"id":"b:2:2531-0:137:126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:75:1657":{"id":"0:75:1657","crate_id":0,"name":"LlvmVersion","span":{"filename":"src/lib.rs","begin":[91,0],"end":[98,1]},"visibility":"public","docs":"LLVM version\n\nLLVM's version numbering scheme is not semver compatible until version 4.0\n\nrustc [just prints the major and minor versions], so other parts of the version are not included.\n\n[just prints the major and minor versions]: https://github.com/rust-lang/rust/blob/b5c9e2448c9ace53ad5c11585803894651b18b0a/compiler/rustc_codegen_llvm/src/llvm_util.rs#L173-L178","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":["0:76:1659","0:77:1661"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:8179:7834-0:75:1657","a:2:2672:217-0:75:1657","a:2:2736:2149-0:75:1657","a:2:2686:225-0:75:1657","a:2:8178:7835-0:75:1657","b:2:2531-0:75:1657","b:2:2542-0:75:1657","b:2:2527-0:75:1657","b:2:3331-0:75:1657","b:2:2240-0:75:1657","b:2:2537-0:75:1657","b:2:2237-0:75:1657","b:5:5633-0:75:1657","b:5:674-0:75:1657","0:90","0:78","0:92","0:82","0:85","0:19","0:86","0:88","0:17","0:83","0:80"]}},"a:2:8179:7834-0:121:1664":{"id":"a:2:8179:7834-0:121:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8179:7834","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11921:1667":{"id":"2:11921:1667","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:11573:2104","`DoubleEndedIterator`":"2:7167:119","prim@char":"1:11872:411","str::split_whitespace":"2:11899:31156","str::rsplit":"2:11927:24266"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:42645:2126","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:2097","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11968:33240":{"id":"2:11968:33240","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:11872:411","self::pattern":"2:11573:2104"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:2097","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11578:2097","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:11598:2096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2540:126":{"id":"2:2540:126","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"0:95:1680":{"id":"0:95:1680","crate_id":0,"name":"VersionMeta","span":{"filename":"src/lib.rs","begin":[148,0],"end":[172,1]},"visibility":"public","docs":"Rustc version plus metadata like git short hash and build date.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":["0:96:1641","0:97:1683","0:98:1685","0:99:1687","0:100:1689","0:101:1691","0:102:1693","0:103:1695"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:23","a:2:8179:7834-0:95:1680","a:2:2672:217-0:95:1680","a:2:2736:2149-0:95:1680","a:2:2686:225-0:95:1680","a:2:8178:7835-0:95:1680","b:2:2531-0:95:1680","b:2:2542-0:95:1680","b:2:2527-0:95:1680","b:2:3331-0:95:1680","b:2:2240-0:95:1680","b:2:2537-0:95:1680","b:2:2237-0:95:1680","b:5:674-0:95:1680","0:108","0:109","0:118","0:111","0:106","0:104","0:116","0:112","0:114"]}},"2:11951:33232":{"id":"2:11951:33232","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:11573:2104","`DoubleEndedIterator`":"2:7167:119","prim@char":"1:11872:411","str::matches":"2:11948:2009"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:42867:2124","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:2097","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11578:2097","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11593:2098","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:59:415":{"id":"0:59:415","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[71,15],"end":[71,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2599-0:121:1664":{"id":"b:2:2599-0:121:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:2592:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:2148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:3380:13040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2601:2617"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"E"}}},"2:11964:33237":{"id":"2:11964:33237","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11954:33233":{"id":"2:11954:33233","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:11573:2104","`DoubleEndedIterator`":"2:7167:119","prim@char":"1:11872:411","str::rmatch_indices":"2:11957:33234"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:42795:2121","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:2097","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11880:28684":{"id":"2:11880:28684","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11141:1712"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5391:24035":{"id":"5:5391:24035","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:11993:24033"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7239:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:85":{"id":"0:85","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,27],"end":[90,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2682:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3331-0:121:1664":{"id":"b:2:3331-0:121:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:2148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3329:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3333:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2240-0:137:126":{"id":"b:2:2240-0:137:126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:2148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2234:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2242:23967"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:674-0:75:1657":{"id":"b:5:674-0:75:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:670:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:676:2521","5:677:1739","5:678:2522"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11895:24256":{"id":"2:11895:24256","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:11894:24255"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2601:2617":{"id":"2:2601:2617","crate_id":2,"name":"provide","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["demand",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Demand","id":"2:3392:6910","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:136:659":{"id":"0:136:659","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[279,9],"end":[279,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:65:604":{"id":"0:65:604","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[71,26],"end":[71,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:55:1652":{"id":"0:55:1652","crate_id":0,"name":"Stable","span":{"filename":"src/lib.rs","begin":[80,4],"end":[80,10]},"visibility":"default","docs":"Stable release channel","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:64":{"id":"0:64","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,26],"end":[71,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2301:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:65:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:79:415":{"id":"0:79:415","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[90,9],"end":[90,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11881:33224":{"id":"2:11881:33224","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:115:422":{"id":"0:115:422","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[147,38],"end":[147,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:30596:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2537-0:75:1657":{"id":"b:2:2537-0:75:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:126","2:2541:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:160":{"id":"0:160","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utf8Error","id":"2:42589:1772","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:161:685"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:101:1691":{"id":"0:101:1691","crate_id":0,"name":"host","span":{"filename":"src/lib.rs","begin":[165,4],"end":[165,20]},"visibility":"public","docs":"Host target triple of the compiler","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:7239:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:71:720":{"id":"0:71:720","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[71,54],"end":[71,58]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9297:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:19":{"id":"0:19","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[106,0],"end":[144,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:11534:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:20:125","0:21:1665"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:81:659":{"id":"0:81:659","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[90,16],"end":[90,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:99:1687":{"id":"0:99:1687","crate_id":0,"name":"build_date","span":{"filename":"src/lib.rs","begin":[159,4],"end":[159,34]},"visibility":"public","docs":"Build date of the compiler; this was removed between Rust 1.0.0 and 1.1.0.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:7239:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"b:2:2527-0:75:1657":{"id":"b:2:2527-0:75:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:1709"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:141:1706":{"id":"0:141:1706","crate_id":0,"name":"CommandError","span":{"filename":"src/lib.rs","begin":[345,4],"end":[350,5]},"visibility":"default","docs":"Error output from the command that was run.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"struct":{"fields":["0:142:1707","0:143:1710"],"fields_stripped":false}},"discriminant":null}},"2:11962:33236":{"id":"2:11962:33236","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11971:33241":{"id":"2:11971:33241","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11872:411","self::pattern":"2:11573:2104"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:2097","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:91:1023":{"id":"0:91:1023","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[90,43],"end":[90,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::option::Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:30596:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11930:33228":{"id":"2:11930:33228","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:11573:2104","str::split":"2:11921:1667","prim@char":"1:11872:411","`DoubleEndedIterator`":"2:7167:119","str::rsplit_terminator":"2:11933:33229"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:42695:2130","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:2097","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:147:1748":{"id":"0:147:1748","crate_id":0,"name":"UnexpectedVersionFormat","span":{"filename":"src/lib.rs","begin":[354,4],"end":[354,27]},"visibility":"default","docs":"The output of `rustc -vV` was not in the expected format.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"2:11994:24032":{"id":"2:11994:24032","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:162":{"id":"0:162","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"20:220:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:163:685"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2240-0:75:1657":{"id":"b:2:2240-0:75:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:2148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2234:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2242:23967"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:122:1752":{"id":"0:122:1752","crate_id":0,"name":"ParseIntError","span":{"filename":"src/lib.rs","begin":[282,4],"end":[282,37]},"visibility":"default","docs":"An error occurred in parsing a version component as an integer","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:124:1583"]},"discriminant":null}},"2:2541:1457":{"id":"2:2541:1457","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:40824:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2242:23967":{"id":"2:2242:23967","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2546:1456":{"id":"2:2546:1456","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:40824:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2537-0:121:1664":{"id":"b:2:2537-0:121:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:126","2:2541:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2686:225-0:137:126":{"id":"a:2:2686:225-0:137:126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11980:33242":{"id":"2:11980:33242","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11872:411","self::pattern":"2:11573:2104"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:2097","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11578:2097","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11593:2098","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:98:1685":{"id":"0:98:1685","crate_id":0,"name":"commit_date","span":{"filename":"src/lib.rs","begin":[156,4],"end":[156,35]},"visibility":"public","docs":"Commit date of the compiler","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:7239:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"a:2:8178:7835-0:95:1680":{"id":"a:2:8178:7835-0:95:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8178:7835","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:76:1659":{"id":"0:76:1659","crate_id":0,"name":"major","span":{"filename":"src/lib.rs","begin":[94,4],"end":[94,18]},"visibility":"public","docs":"Major version","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u64"}},"b:2:2527-0:137:126":{"id":"b:2:2527-0:137:126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:1709"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11977:24274":{"id":"2:11977:24274","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11872:411","self::pattern":"2:11573:2104"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:2097","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11578:2097","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11593:2098","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11983:33243":{"id":"2:11983:33243","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11872:411","self::pattern":"2:11573:2104"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:2097","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2736:2149-0:48:1644":{"id":"a:2:2736:2149-0:48:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:2149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:67:422":{"id":"0:67:422","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[71,37],"end":[71,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:30596:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2533:685":{"id":"2:2533:685","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:58":{"id":"0:58","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,15],"end":[71,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2253:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:59:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:82":{"id":"0:82","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,23],"end":[90,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2683:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:26:1714":{"id":"0:26:1714","crate_id":0,"name":"version_meta","span":{"filename":"src/lib.rs","begin":[200,0],"end":[204,1]},"visibility":"public","docs":"Returns the `rustc` SemVer version and additional metadata\nlike the git short hash and build date.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:45:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2531-0:95:1680":{"id":"b:2:2531-0:95:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:133:1678":{"id":"0:133:1678","crate_id":0,"name":"TooManyComponents","span":{"filename":"src/lib.rs","begin":[292,4],"end":[292,21]},"visibility":"default","docs":"Too many components","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:142:1707":{"id":"0:142:1707","crate_id":0,"name":"stdout","span":{"filename":"src/lib.rs","begin":[347,8],"end":[347,22]},"visibility":"default","docs":"stdout output from the command","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:7239:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"a:2:2736:2149-0:137:126":{"id":"a:2:2736:2149-0:137:126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:2149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:163:685":{"id":"0:163:685","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["e",{"kind":"resolved_path","inner":{"name":"semver::Error","id":"20:220:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5380:33896":{"id":"5:5380:33896","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7239:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7239:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:678:2522":{"id":"5:678:2522","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5389:33898":{"id":"5:5389:33898","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:279:2101","`String`":"5:7239:221"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:279:2101","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6988:5462","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7239:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:127:1674":{"id":"0:127:1674","crate_id":0,"name":"ComponentMustNotHaveSign","span":{"filename":"src/lib.rs","begin":[286,4],"end":[286,28]},"visibility":"default","docs":"A version component has a sign","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:164":{"id":"0:164","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:165:685"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11974:24273":{"id":"2:11974:24273","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11872:411","self::pattern":"2:11573:2104"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:2097","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:68":{"id":"0:68","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,42],"end":[71,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","ge","le","lt"],"trait":{"name":"PartialOrd","id":"2:2343:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:69:1023"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:97:1683":{"id":"0:97:1683","crate_id":0,"name":"commit_hash","span":{"filename":"src/lib.rs","begin":[153,4],"end":[153,35]},"visibility":"public","docs":"Git short hash of the build of the compiler","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:7239:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"2:11957:33234":{"id":"2:11957:33234","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:11573:2104","`DoubleEndedIterator`":"2:7167:119","prim@char":"1:11872:411","str::match_indices":"2:11954:33233"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:42813:2122","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:2097","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11578:2097","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11593:2098","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:5633-0:137:126":{"id":"b:5:5633-0:137:126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9074:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:2148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5631:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5635:1434"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2527-0:48:1644":{"id":"b:2:2527-0:48:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:1709"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11874:33221":{"id":"2:11874:33221","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2240-0:48:1644":{"id":"b:2:2240-0:48:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:2148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2234:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2242:23967"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2542-0:121:1664":{"id":"b:2:2542-0:121:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:126","2:2546:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11902:33227":{"id":"2:11902:33227","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:42909:2120","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:24:1697":{"id":"0:24:1697","crate_id":0,"name":"for_command","span":{"filename":"src/lib.rs","begin":[176,4],"end":[190,5]},"visibility":"public","docs":"Returns the version metadata for `cmd`, which should be a `rustc` command.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["cmd",{"kind":"resolved_path","inner":{"name":"Command","id":"1:5387:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:45:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:80":{"id":"0:80","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,16],"end":[90,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9069:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:81:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:35:685":{"id":"0:35:685","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[296,4],"end":[298,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["e",{"kind":"resolved_path","inner":{"name":"num::ParseIntError","id":"2:21770:1752","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2672:217-0:137:126":{"id":"a:2:2672:217-0:137:126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:21:1665":{"id":"0:21:1665","crate_id":0,"name":"from_str","span":{"filename":"src/lib.rs","begin":[109,4],"end":[143,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:45:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:11534:1640","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:107:659":{"id":"0:107:659","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[147,16],"end":[147,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11894:24255":{"id":"2:11894:24255","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:11895:24256"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2537-0:137:126":{"id":"b:2:2537-0:137:126","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:126","2:2541:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11888:24230":{"id":"2:11888:24230","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9754:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9754:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:66":{"id":"0:66","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,37],"end":[71,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["min","clamp","max"],"trait":{"name":"Ord","id":"2:2337:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:67:422"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:125:1671":{"id":"0:125:1671","crate_id":0,"name":"ComponentMustNotHaveLeadingZeros","span":{"filename":"src/lib.rs","begin":[284,4],"end":[284,36]},"visibility":"default","docs":"A version component must not have leading zeros","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:0:1791":{"id":"0:0:1791","crate_id":0,"name":"rustc_version","span":{"filename":"src/lib.rs","begin":[9,0],"end":[417,58]},"visibility":"public","docs":"Simple library for getting the version information of a `rustc`\ncompiler.\n\nThis can be used by build scripts or other tools dealing with Rust sources\nto make decisions based on the version of the compiler.\n\nIt calls `$RUSTC --version -v` and parses the output, falling\nback to `rustc` if `$RUSTC` is not set.\n\n# Example\n\n```rust\n// This could be a cargo build script\n\nuse rustc_version::{version, version_meta, Channel, Version};\n\n// Assert we haven't travelled back in time\nassert!(version().unwrap().major >= 1);\n\n// Set cfg flags depending on release channel\nmatch version_meta().unwrap().channel {\n    Channel::Stable => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_STABLE\");\n    }\n    Channel::Beta => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_BETA\");\n    }\n    Channel::Nightly => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_NIGHTLY\");\n    }\n    Channel::Dev => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_DEV\");\n    }\n}\n\n// Check for a minimum version\nif version().unwrap() >= Version::parse(\"1.4.0\").unwrap() {\n    println!(\"cargo:rustc-cfg=compiler_has_important_bugfix\");\n}\n```","links":{},"attrs":["#![warn(missing_docs)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:15-20:299:1642","0:48:1644","0:75:1657","0:95:1680","0:25:1545","0:26:1714","0:28:1711","0:121:1664","0:137:126","0:45:207"],"is_stripped":false}},"2:11883:24232":{"id":"2:11883:24232","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:11889:1478"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2527-0:95:1680":{"id":"b:2:2527-0:95:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:1709"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2736:2149-0:121:1664":{"id":"a:2:2736:2149-0:121:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:2149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11892:33225":{"id":"2:11892:33225","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:11878:1380","str::slice_mut_unchecked":"2:11893:33226","crate::ops::Index":"2:2993:7727"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:131:1676":{"id":"0:131:1676","crate_id":0,"name":"MinorVersionRequiredBefore4","span":{"filename":"src/lib.rs","begin":[290,4],"end":[290,31]},"visibility":"default","docs":"Minor version component is required on LLVM versions earlier than 4.0","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"2:11898:6098":{"id":"2:11898:6098","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:42631:2110","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11886:24229":{"id":"2:11886:24229","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:40682:176"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9754:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9754:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:87:604":{"id":"0:87:604","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[90,27],"end":[90,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2537-0:95:1680":{"id":"b:2:2537-0:95:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:126","2:2541:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:103:1695":{"id":"0:103:1695","crate_id":0,"name":"llvm_version","span":{"filename":"src/lib.rs","begin":[171,4],"end":[171,41]},"visibility":"public","docs":"Version of LLVM used by the compiler","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"a:2:2736:2149-0:95:1680":{"id":"a:2:2736:2149-0:95:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:2149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:111":{"id":"0:111","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,27],"end":[147,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2682:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1680","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:159:659":{"id":"0:159:659","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[340,9],"end":[340,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9044:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9033:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11890:24231":{"id":"2:11890:24231","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9754:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9754:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:151:1583":{"id":"0:151:1583","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[356,16],"end":[356,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"semver::Error","id":"20:220:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"2:11967:33239":{"id":"2:11967:33239","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11991:24036":{"id":"2:11991:24036","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11945:33231":{"id":"2:11945:33231","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40680:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11578:2097","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11578:2097","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11593:2098","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"paths":{"5:1372:2424":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"2:11286:6201":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"5:2896:34487":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"16:7335:34646":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"1:5565:2871":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"1:5249:118":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"17:10316:3200":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"1:5322:2041":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"2:2723:2283":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"0:53:1650":{"crate_id":0,"path":["rustc_version","Channel","Beta"],"kind":"variant"},"5:7222:2073":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"6:4301:4698":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:2686:225":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"2:7518:2425":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:11153:6266":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"2:21282:32474":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"2:42867:2124":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"6:5767:5096":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:7088:13122":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"17:12085:3451":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"6:7520:5445":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"5:4722:659":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"16:6431:5996":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"2:46681:5736":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"17:9545:3121":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"2:11644:13012":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"5:773:2782":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"16:4872:4048":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"2:46582:5729":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"6:1747:4674":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"16:6336:5989":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"17:11136:3253":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"2:2792:4137":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"17:10000:3226":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"5:3743:2770":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"6:488:4469":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:6512:2476":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:4575:5313":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"2:2498:73":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"16:7016:6037":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"16:8214:4180":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"17:13803:3936":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"6:1534:4546":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"1:8376:5609":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"14:160:6875":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:21631:2607":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"2:39289:6136":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:39449:2076":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"typedef"},"2:11323:6204":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"16:5963:5958":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"1:8992:5821":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"2:42713:2129":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"2:44333:5629":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"6:474:4461":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"17:12259:3497":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"2:44355:5630":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"20:354:2144":{"crate_id":20,"path":["semver","Op"],"kind":"enum"},"16:2298:18940":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"1:8036:2054":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"1:10826:2045":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"16:6460:4001":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"2:1655:1075":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"1:5387:1636":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"2:42937:2105":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"5:7020:2791":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"1:1571:2424":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"11:2069:6887":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"17:11090:3249":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"16:7509:4013":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"16:3749:4027":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"2:3091:7729":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"2:46643:5734":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"16:2830:3994":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"17:10989:3210":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"5:5697:2801":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"2:20704:7908":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:9174:2582":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"17:12403:3516":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"5:3119:34473":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"2:43145:6220":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"1:9867:6189":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"6:1571:4569":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"1:3384:2066":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"2:45108:5661":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"6:5983:5208":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:1744:5468":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:8474:5812":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"1:6238:203":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"6:4982:5011":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"6:62:13486":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"6:494:4472":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"2:9453:2845":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"20:0:1641":{"crate_id":20,"path":["semver"],"kind":"module"},"17:13477:3829":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"6:4554:4840":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"1:5695:6972":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"2:39554:6151":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"1:8399:5807":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:39694:6169":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"16:5944:6814":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"16:7498:6050":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"1:5688:6969":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"1:932:6879":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"2:1903:5472":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:8136:2126":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"17:487:6730":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"2:20710:7910":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:46544:5726":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"6:5817:5119":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:8179:7834":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:11893:1474":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"2:41952:6195":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:7524:2889":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"1:3402:2056":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"1:7017:30017":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"2:21118:7934":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"20:129:2147":{"crate_id":20,"path":["semver","identifier","Identifier"],"kind":"struct"},"1:7835:6984":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:39237:6134":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"6:1716:4663":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"16:6488:5998":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"1:11821:6311":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"2:39582:6155":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:4097:7789":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"2:11127:6929":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"16:8269:126":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"1:3209:2656":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"17:13506:3836":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"8:0:1898":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"6:5923:5181":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:41446:2436":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"17:8788:3131":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"17:11459:3322":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"16:5402:3127":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"2:30062:30401":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"1:11843:7710":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"11:1859:6077":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"6:4840:4933":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"17:13101:3733":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"11:810:6892":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"1:3940:7768":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"6:1723:4666":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:2855:13150":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"2:42533:6944":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"20:90:7533":{"crate_id":20,"path":["semver","error","QuotedChar"],"kind":"struct"},"17:11821:3411":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"6:5996:5212":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"16:2720:3989":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"0:144:1772":{"crate_id":0,"path":["rustc_version","Error","Utf8Error"],"kind":"variant"},"1:8130:2110":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"2:9069:110":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"17:12293:3500":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"6:5888:5160":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"17:9098:6742":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"17:12980:3712":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"5:0:283":{"crate_id":5,"path":["alloc"],"kind":"module"},"5:4311:242":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:43571:208":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"17:9917:1642":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"1:1827:2576":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"17:10015:6781":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"1:1774:601":{"crate_id":1,"path":["std","env"],"kind":"module"},"1:8725:183":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"1:11384:6964":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"17:9796:3161":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"11:697:6879":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"17:13121:3741":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"16:7317:34647":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"16:3640:3038":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"5:4326:2807":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"17:11502:3332":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"2:3246:12985":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:2478:2645":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"1:8064:2661":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"18:521:23747":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"17:12799:3583":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"16:7103:5818":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"16:5741:19824":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"17:8979:34658":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"6:4681:4857":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"2:39388:5578":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"6:7263:5433":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"17:9138:6743":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"17:13024:3717":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"2:9337:2431":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"17:9696:3147":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"6:5962:5195":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"2:42749:2128":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:7467:7024":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"16:6890:4009":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"1:11216:6310":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"11:1866:6078":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"6:5761:5093":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"17:11520:3333":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:42944:2116":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"2:9086:2440":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"18:690:5880":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:3643:2424":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"18:507:3006":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"17:10885:5913":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"1:5572:2872":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"6:1687:4652":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"6:5868:5144":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:40546:7761":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"18:636:3026":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"2:41117:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"6:4873:4950":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"6:4314:4708":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"1:7931:2650":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"1:1850:2582":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"5:7253:6099":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"1:894:6075":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"2:2824:13146":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"5:5225:2102":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"16:7077:19831":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"14:165:18907":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"6:6694:5334":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"1:11892:1477":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"16:7478:4012":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"17:11069:19898":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"17:12536:3540":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"16:5847:5946":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"1:5336:2042":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"6:554:4509":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"2:43097:6219":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:22097:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"2:30032:5499":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"17:11891:3422":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"11:1085:6889":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"16:6254:4066":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"1:2541:2646":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"6:6712:5345":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"2:43614:6399":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"11:1555:6894":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"17:11434:3317":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"17:11813:3409":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"2:39362:6145":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"6:4366:4744":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"2:2511:234":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"1:936:6880":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"16:7635:4189":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"2:2997:7728":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:7633:7708":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"1:1988:182":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"2:39301:2118":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"5:6351:2424":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"2:42813:2122":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:4747:32608":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"2:48920:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:46628:5733":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"2:11397:2107":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:11872:411":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"2:39633:6163":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"17:10598:3242":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"16:4932:4050":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"2:45612:5685":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"2:45578:5684":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"6:6818:5410":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:46360:5722":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"2:9897:2422":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"16:5886:5949":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"1:6588:214":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"16:154:2760":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"6:5850:5132":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"2:40618:6192":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"16:7411:4182":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"6:1550:4554":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"6:6557:5286":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"6:7566:5454":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"17:12158:3461":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"20:385:2145":{"crate_id":20,"path":["semver","Prerelease"],"kind":"struct"},"1:4738:2869":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"11:60:34629":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"2:46562:5727":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"2:39309:13080":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"2:42962:2118":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:5912:2871":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"1:5721:6973":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"9:502:4443":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"5:3965:2801":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"9:52:18839":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"2:40529:5585":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"16:535:5916":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"17:13411:3814":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"1:11452:5834":{"crate_id":1,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"2:39435:6149":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:6298:163":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"2:39042:2447":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"2:45968:5718":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"16:7859:19835":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"1:8123:2637":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"16:2448:3978":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"17:10761:19894":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"2:39592:6156":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"17:9188:34657":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"1:8751:2051":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"17:9340:6747":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"6:4810:4919":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:10101:2125":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:8143:2119":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"2:9088:2441":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"2:40004:5579":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"2:42589:1772":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:44540:5637":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"11:1840:2801":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"1:5356:2043":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"2:11578:2097":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"2:45266:5678":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"2:12241:6931":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"17:10440:6802":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"16:4540:4038":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"2:9989:2107":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"17:9946:5892":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"16:6544:4006":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"16:5032:4053":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"1:11871:926":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"5:1341:2422":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:3936:2624":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"2:8604:85":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:7926:6986":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"1:7648:7709":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"5:4157:2624":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"5:1304:93":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"11:2080:6888":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"17:8598:19893":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"1:7579:6980":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"17:13309:3786":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"11:1029:6888":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"1:3248:2652":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"6:4360:4742":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:46298:5721":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"17:13257:3773":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"1:6484:6977":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"17:13181:3751":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"2:41707:108":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"1:10198:1636":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"17:13240:3770":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"16:5071:4054":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"2:43652:6244":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"16:3030:4020":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"1:5504:2048":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"2:39008:5572":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"2:39492:2090":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"5:1218:6887":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"2:20433:32721":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:3194:32939":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"2:46758:5739":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:9032:5822":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"16:7743:4005":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"16:7449:6862":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"17:10857:19896":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"1:3974:7769":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"1:10713:26241":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"6:6688:5333":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"17:11234:3272":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"2:41744:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"1:8737:2050":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"17:8753:3130":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"5:5229:2103":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"1:4761:7778":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"16:2572:3983":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"6:6773:5388":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"1:2833:2868":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"5:6724:2819":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"5:1412:6892":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"1:508:2796":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"17:12113:3456":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"15:180:18920":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"16:4568:4039":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"16:4757:4044":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"17:8573:19892":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"1:2551:2849":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:12488:7719":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"1:3996:7773":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"5:7239:221":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"18:755:5889":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"2:41999:6197":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"17:10923:5914":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"2:22196:2610":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"5:1602:2779":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"16:6321:6850":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"14:202:13020":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"2:38883:196":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"17:13399:3811":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"18:671:6726":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"17:10104:3164":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"2:8285:2097":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"6:6673:5327":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"6:4930:4989":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"2:39759:6176":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"5:35:2775":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"16:6146:191":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"16:6132:5983":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"2:42919:2108":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"5:7162:101":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2:12365:105":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"6:1704:4659":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"16:3815:4029":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"16:7029:6040":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"17:10712:20004":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"5:7264:6909":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"17:9853:6770":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"20:320:2146":{"crate_id":20,"path":["semver","VersionReq"],"kind":"struct"},"13:226:4375":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:42695:2130":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"5:2106:6085":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"16:4400:4034":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"16:2426:3977":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"2:20585:7914":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"2:2845:4143":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:5558:203":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:41037:87":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"17:10270:6793":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"6:1609:4593":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:45548:5683":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"5:7193:30421":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"16:5418:4058":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"2:39532:6936":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"2:39028:4180":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"2:48972:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"11:646:2423":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"11:1120:6890":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"16:2470:3979":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"2:39710:3024":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"17:8195:19872":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"9:481:18820":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"1:6759:7904":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"17:13698:3906":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"17:247:6728":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"14:7:6875":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"1:7686:6933":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"6:5976:5206":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"17:13211:3762":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"1:0:1372":{"crate_id":1,"path":["std"],"kind":"module"},"2:2138:580":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:4105:7790":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"5:4389:2807":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"2:25639:2605":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"17:11544:3337":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"17:13744:3920":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"6:4449:4785":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:7138:2155":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"16:2967:18967":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"11:1044:18901":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"17:10377:3203":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"1:4680:7779":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"1:6867:7539":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"6:7543:5451":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"17:11879:3420":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"16:7488:6049":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"1:10693:117":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"1:1789:2566":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"1:10040:7012":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"2:6648:31682":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"16:3047:18968":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"17:11615:3361":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"2:44309:5628":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:9082:2439":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"16:6728:6014":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"2:46602:5731":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:4127:6100":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"17:11011:3244":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"18:491:5873":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"1:9990:28333":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"1:4684:7783":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"1:3835:1639":{"crate_id":1,"path":["std","num"],"kind":"module"},"5:1187:6045":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"2:41157:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:2373:7751":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"17:8490:19889":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"17:11585:3349":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:41784:72":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"1:10683:128":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"11:777:2772":{"crate_id":11,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"2:39419:30421":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"6:1652:4627":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"17:12902:3669":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:6904:2874":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"1:11877:1350":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"1:6487:7862":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"6:4702:4869":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"18:660:6722":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:10922:2894":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"6:5054:5046":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"9:234:5609":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"2:11534:1640":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:10127:2058":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"6:1645:4623":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"16:6376:4000":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"17:11600:3355":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"1:4992:6968":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:11993:3437":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"1:11477:6274":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"16:4510:4037":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"1:9027:216":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"5:1422:6878":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"17:12372:3510":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"17:12959:3707":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"6:1695:4653":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"17:12178:3462":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"2:3181:13057":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:6375:6976":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"5:7050:195":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"2:44740:5650":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:8914:26016":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"1:10994:2050":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"1:2388:1638":{"crate_id":1,"path":["std","io"],"kind":"module"},"2:31780:2053":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"6:6104:5237":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"16:6236:6847":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"20:220:126":{"crate_id":20,"path":["semver","parse","Error"],"kind":"struct"},"16:8025:4239":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"2:20648:7916":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"6:1527:4544":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"17:8283:19883":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"17:12449:3523":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"17:11355:3305":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"1:6909:2885":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"2:12189:32374":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"11:1681:142":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"1:11894:780":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"17:8521:19890":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"2:43080:6218":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:8814:5814":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"2:46220:5720":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"17:975:6731":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"18:727:3030":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"16:2642:3986":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"16:4596:4040":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"16:4037:4032":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"16:7697:4007":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"2:1625:5464":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"17:10068:6789":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"17:11109:3252":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"17:12331:3505":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"1:9070:6256":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"17:12496:3537":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"1:11006:2051":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"1:649:7706":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"11:98:6067":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"1:9017:164":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"1:8949:7007":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"2:43066:6215":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"2:42432:6111":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"6:6836:5413":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:9034:2068":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"1:10451:2893":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"1:8485:6255":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"16:6904:4118":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"16:5616:5923":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"1:923:6892":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:43392:6239":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"17:9218:3154":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"6:7532:5447":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"6:7508:5443":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"6:6639:5321":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:4582:13074":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"16:5367:18938":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"1:10346:2892":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"6:7473:5435":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:11882:633":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"5:7087:2424":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"2:9567:2854":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"1:8223:6992":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"16:3899:4031":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"16:6400:5994":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:43579:192":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"6:4664:4848":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"2:39482:2091":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"0:129:1756":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","MinorVersionMustBeZeroAfter4"],"kind":"variant"},"2:41969:143":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:4509:7812":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"17:8420:19887":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"16:7293:4162":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"1:8719:2049":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"5:5803:2813":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"1:2219:2632":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"17:10527:20002":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"5:5181:2779":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"2:9076:2436":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"17:10052:6787":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"16:6876:4008":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"16:3872:4030":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"6:6533:5269":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"2:48959:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"16:5630:6812":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"16:4445:4035":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"17:13169:3748":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"1:4177:6965":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"17:1787:6733":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"1:5372:2044":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"1:873:2424":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"16:6793:6027":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"17:11037:19897":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"6:5773:5097":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:43364:6232":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"0:152:1738":{"crate_id":0,"path":["rustc_version","Error","UnknownPreReleaseTag"],"kind":"variant"},"17:10735:3223":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"11:353:2768":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"2:41453:2438":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"5:5283:1380":{"crate_id":5,"path":["alloc","str"],"kind":"module"},"2:40666:5594":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"1:6411:2882":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"2:43440:6241":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"5:1032:34575":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"17:9959:5893":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"17:9748:3154":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:2458:7780":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"6:6124:5251":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"5:2902:34435":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"17:13082:3732":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"17:9683:6764":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"2:40875:2423":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"17:9469:6749":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"1:624:2615":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"2:2578:114":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"6:5955:5194":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"0:138:1703":{"crate_id":0,"path":["rustc_version","Error","CouldNotExecuteCommand"],"kind":"variant"},"2:45342:5680":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:11888:731":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"17:12461:3525":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"2:2770:7902":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"17:8360:19885":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"2:41197:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"11:659:2424":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"18:548:139":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"17:10967:3242":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"17:9734:6766":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"2:11598:2096":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:11887:735":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"17:13344:3795":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"2:9921:2423":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"2:43257:2131":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"2:2301:185":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"2:2868:13153":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"17:9973:5894":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"16:6506:6006":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"1:11228:6271":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"5:7058:6094":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"17:13865:3949":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"16:7244:34648":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"2:39049:5574":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:42441:6941":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"6:4894:4965":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"5:1706:2770":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"16:6351:19827":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"16:7669:4016":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"16:5976:5918":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"1:361:6947":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"17:13015:3713":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"0:155:1778":{"crate_id":0,"path":["rustc_version","Error","LlvmVersionError"],"kind":"variant"},"11:2178:4376":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"6:6809:5407":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"16:6696:19829":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"17:12433:3519":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"17:12522:3539":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"17:9628:6758":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"2:20435:32719":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"17:11446:3320":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"6:5743:5080":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"6:500:4474":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"2:4096:6913":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"2:2504:131":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:42461:6942":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"6:4903:4971":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"2:40489:152":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"2:11141:1712":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"17:9108:34654":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"18:96:23735":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"2:46110:5719":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:11879:1460":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"6:4327:4718":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"2:22295:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"5:4037:2423":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"2:44439:5633":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"2:9080:2438":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"0:141:1706":{"crate_id":0,"path":["rustc_version","Error","CommandError"],"kind":"variant"},"17:13721:3919":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"2:21:672":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"6:4943:4996":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"6:1900:14880":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"2:44558:5638":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"17:10402:6796":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"17:10039:6785":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"1:1589:6077":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"2:38742:2426":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"11:632:2422":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"16:6662:6012":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"2:42203:6199":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"2:45085:5660":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"18:644:3006":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"3:0:435":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"5:4356:2624":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"2:9946:2126":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:8767:30656":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:39963:6180":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"16:6361:4071":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"18:564:3013":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:41439:2437":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:9087:7009":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"1:4415:7794":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"1:881:6074":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"5:3663:2649":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"3:229:207":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"18:80:23734":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"1:8795:5813":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"17:9839:6769":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"2:43396:6240":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"17:1919:19935":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"2:21666:5482":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"17:9350:34655":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"1:8204:6251":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"17:10026:6782":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"1:11854:26191":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"5:4904:2624":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"17:11410:3313":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"2:8178:7835":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"11:985:6045":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"10:0:1900":{"crate_id":10,"path":["adler"],"kind":"module"},"6:4865:990":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"16:2905:3997":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"17:9478:6750":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"15:219:18925":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"6:587:4527":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"17:11556:3338":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"17:12576:3545":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"6:568:4517":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"0:0:1791":{"crate_id":0,"path":["rustc_version"],"kind":"module"},"2:3993:6912":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:7605:2893":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"17:8683:3128":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"1:10856:2052":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"16:6218:6839":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"1:3356:2624":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"1:4846:7819":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"18:624:34659":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:4773:786":{"crate_id":2,"path":["core","iter"],"kind":"module"},"16:7543:4015":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"0:131:1676":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","MinorVersionRequiredBefore4"],"kind":"variant"},"14:40:3287":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"2:4392:2290":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:11885:733":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"6:5845:5131":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"2:7129:149":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"2:8599:78":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:11884:736":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"1:487:2861":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"2:44864:5653":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"17:12126:3457":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"17:9265:6745":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:4028:12983":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"2:11587:2099":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"2:45054:5659":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:45762:5686":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"2:43172:6221":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"2:39279:6135":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2:0:488":{"crate_id":2,"path":["core"],"kind":"module"},"17:9721:6765":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"11:0:1901":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"17:8651:3126":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"16:2786:3992":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"2:38781:12987":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"9:325:4420":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"2:39610:6159":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"2:2592:126":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"6:4354:4741":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:43223:13019":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:2215:2832":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"6:123:13541":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"1:7659:6245":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"11:762:2770":{"crate_id":11,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"2:5513:6103":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2:4246:6915":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"2:42543:6116":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"16:8090:6060":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:40748:2423":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"1:11018:26238":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"2:24:601":{"crate_id":2,"path":["core","env"],"kind":"macro"},"18:590:3014":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"2:2691:2281":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"5:1403:6075":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"6:4734:4883":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2:2679:2148":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"2:20830:7780":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"1:2212:6958":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"17:11339:3301":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"16:6575:19828":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"1:8971:25874":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"1:8773:2422":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"17:2933:6738":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"16:2378:3975":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"1:8275:5794":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"1:10619:7020":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"2:43368:6233":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"2:42524:6115":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"9:174:18887":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"18:0:1907":{"crate_id":18,"path":["memchr"],"kind":"module"},"1:8827:7867":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"17:13678:3903":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"1:9022:215":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"2:30026:5497":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"2:43400:5618":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"6:7240:5420":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"2:39979:6182":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"6:4381:4751":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:30596:180":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"1:11440:5833":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"11:274:6068":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"16:3063:3034":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"17:11641:3366":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"17:8667:3127":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"1:6623:6975":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"2:3154:13154":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"17:10505:6807":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:44287:5627":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"17:8909:2110":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"17:10465:6804":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"17:12894:3666":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"5:3107:2422":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"16:0:1905":{"crate_id":16,"path":["gimli"],"kind":"module"},"2:42184:5613":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"2:2834:13148":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"18:681:5877":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:5441:2045":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"17:10142:19977":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"0:45:207":{"crate_id":0,"path":["rustc_version","Result"],"kind":"typedef"},"17:9986:5895":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"17:10823:3098":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"17:13651:3894":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"1:2361:7745":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"17:9822:6767":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"2:2975:12986":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"5:2067:2796":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"2:40654:5593":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"17:420:3084":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"6:7218:5419":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"16:8142:6874":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"2:48563:7943":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"2:44788:5651":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"17:12483:3536":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"16:8156:4019":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"6:6566:5292":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"6:7556:5452":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"2:48933:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"0:49:1646":{"crate_id":0,"path":["rustc_version","Channel","Dev"],"kind":"variant"},"11:1845:2770":{"crate_id":11,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"9:388:18822":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"2:7125:132":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"5:2895:2521":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"17:13842:3945":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"2:20401:32476":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"2:20861:7912":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"17:13367:3800":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"2:20673:7906":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"2:2253:104":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"11:822:7712":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"6:6012:5217":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"6:4482:4801":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:3678:6962":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"6:4422:4773":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"2:42631:2110":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"2:41981:5609":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"1:11672:2903":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"11:1628:2773":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"2:2804:13144":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"17:12358:3507":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"16:6558:6008":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:2306:123":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"6:547:4506":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"1:5181:187":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"5:6988:5462":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"17:13659:3897":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"16:6520:4074":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"1:8197:6250":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"9:421:18823":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"1:3450:28175":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"11:1832:2422":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"2:2501:147":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"5:7209:2072":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"17:12138:3458":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"16:5305:4056":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"17:10569:5900":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"6:4709:4870":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"11:320:2766":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"1:1894:1637":{"crate_id":1,"path":["std","error"],"kind":"module"},"16:3300:4024":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"2:2459:13086":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"2:21113:7911":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"1:1991:181":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"6:4773:4905":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"6:5947:5193":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"6:4536:4829":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"6:4592:4842":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"2:2944:2153":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"17:9038:34649":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"2:39563:6152":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:11838:26510":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"2:42511:6943":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"17:9933:5890":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"1:3882:7763":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"11:1852:6076":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"1:3466:2065":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"5:2159:34555":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"2:46617:5732":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:4372:2448":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"2:20416:32476":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"2:38843:197":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"17:8953:3136":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"5:4127:2624":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"2:10028:6922":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"17:10545:3210":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"2:20661:7780":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"16:6390:5993":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"2:21749:6125":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"2:44518:5636":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"2:40867:2422":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"1:863:2423":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"2:39348:2116":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:5501:2046":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"2:29992:5496":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"5:5631:229":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"2:38969:2032":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"1:1567:2422":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"5:3153:34476":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:12433:138":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"6:595:4532":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"17:10555:5896":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"2:40957:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:20854:7780":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"5:1971:2649":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"5:6081:7945":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"16:5693:5929":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"2:41689:67":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"2:7245:156":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:50273:5746":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"17:9534:6755":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"5:1203:6888":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"6:4290:4690":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"14:0:1903":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"1:1930:2614":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"2:2683:222":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"16:5571:4002":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"16:7437:4183":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"2:40575:5592":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"1:9971:2576":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"1:11363:6963":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"1:8308:7830":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"16:5724:5934":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"2:44910:5655":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"6:1559:4560":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"1:7666:2586":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"16:5557:3999":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"17:3266:6740":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"2:40765:5597":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:2923:2427":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:11889:1478":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"6:5048:5044":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"6:5935:5186":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"17:11844:3416":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"1:8113:2636":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"1:413:162":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"0:127:1674":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","ComponentMustNotHaveSign"],"kind":"variant"},"1:3326:2662":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"17:10257:6792":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"2:9744:7780":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"2:10222:6926":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:11159:2060":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"6:4455:4787":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"17:9498:3147":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"5:7028:34477":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"17:10428:6801":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"11:1534:6893":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"2:44417:5632":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"2:21683:30419":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:10703:2055":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"1:11484:6274":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"2:7515:2095":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"17:9866:6771":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"16:7711:4192":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"0:125:1671":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","ComponentMustNotHaveLeadingZeros"],"kind":"variant"},"17:13233:3768":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2:9084:191":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"1:561:6948":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"18:766:23746":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:9297:143":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"16:5811:5940":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"17:9523:6754":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"17:9641:6759":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"16:6935:6851":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"20:400:2142":{"crate_id":20,"path":["semver","BuildMetadata"],"kind":"struct"},"16:7803:4201":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:42953:2117":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"17:13324:3788":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"1:3171:2655":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"17:10670:3218":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"17:13791:3934":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"12:0:1902":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"2:20863:5473":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"2:39228:6133":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"16:8072:6057":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:42603:2115":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"6:506:4477":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"1:9371:6982":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"17:11532:3336":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"18:531:5874":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"2:2231:96":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:1618:579":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"5:1356:2423":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"17:10840:3238":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"16:6990:4123":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"17:8389:19886":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"0:28:1711":{"crate_id":0,"path":["rustc_version","version_meta_for"],"kind":"function"},"15:0:1904":{"crate_id":15,"path":["addr2line"],"kind":"module"},"6:6035:5223":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"1:4682:7782":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"16:6474:4018":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"6:4780:4907":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"11:1003:6887":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"1:8882:5817":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:10208:6925":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"17:11785:3402":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"6:6139:5262":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:39572:6153":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"2:42767:2127":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:9051:5823":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"17:10516:3205":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"2:48985:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:39407:2075":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:10643:6259":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"16:3446:4025":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"16:4728:4043":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"1:3876:7764":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"0:51:1648":{"crate_id":0,"path":["rustc_version","Channel","Nightly"],"kind":"variant"},"2:39402:100":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"2:2910:115":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"2:4308:2836":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"1:7568:5748":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"16:4327:4033":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"5:3511:160":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"1:8907:7001":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"6:579:4522":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"2:39249:30429":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"17:13041:3719":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"1:8789:2424":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"13:0:1896":{"crate_id":13,"path":["std_detect"],"kind":"module"},"17:9488:6751":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"14:215:6065":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"6:6743:5371":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:41077:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:644:6951":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:4241:6914":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"16:5386:3126":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:43635:158":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"5:6232:2801":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"1:8765:2052":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"5:264:2779":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"5:3174:6079":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"1:965:6886":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"1:7797:6249":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"2:38859:195":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"17:10416:6800":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"11:751:2801":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"6:4715:4873":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:3175:13058":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:42498:6114":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"18:707:2099":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"1:2615:2648":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"16:5104:4055":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"2:40756:2424":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:2839:4142":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"2:42621:2111":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"5:3537:2423":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"2:9332:2430":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:1574:2801":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"16:2337:3968":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"16:3782:4028":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"17:11946:3431":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"2:39332:13081":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"2:11799:110":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:8326:5804":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"16:3585:4026":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"17:11573:3346":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"17:13821:3942":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"17:10721:3220":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"1:7827:117":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"1:11234:6272":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"17:11832:3414":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"2:45312:5679":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"13:110:34633":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"16:2546:3982":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"17:13356:3796":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"5:5025:2813":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"16:6327:5988":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"2:4726:2089":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"6:4726:4879":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"17:12634:3554":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"17:13376:3803":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"2:44457:5634":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"18:719:3027":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"1:3934:7767":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"6:4834:4930":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:21469:6118":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:8253:5302":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"2:3164:231":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"17:11060:3215":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"1:8209:7793":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"16:2594:3984":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"1:11026:5618":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"6:573:4519":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"2:40595:30402":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"6:5990:5209":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:45188:5662":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"6:1509:4536":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"17:10092:6791":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"6:119:13540":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"2:2993:7727":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"17:13453:3825":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"17:10691:20003":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"6:4881:4955":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"2:2786:13142":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"16:8256:4252":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"17:12059:3448":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"17:10635:3214":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"1:1583:6076":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"1:953:6883":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"2:10066:6923":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"2:39994:2843":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"2:2817:4138":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"6:6586:5298":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:2495:74":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"17:13461:3826":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:21270:5475":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:907:2801":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"1:10408:2656":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"2:9535:2848":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"5:7319:2770":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"16:6442:5997":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"5:670:228":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"17:1034:6732":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"16:2616:3985":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"1:1439:142":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"1:11890:1475":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"2:40740:2422":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"1:8781:6998":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"1:7567:7780":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"17:12592:3547":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"11:393:34630":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"2:46468:5724":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"17:9312:6746":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"5:2898:5459":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"2:39773:6177":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"2:45007:5658":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"5:3140:6078":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"2:46666:5735":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"17:242:6727":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"6:4432:4779":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"1:7258:26499":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"2:4169:2446":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"11:444:140":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"6:4636:4846":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"1:11897:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"2:42795:2121":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:3136:27620":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"2:44834:5652":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"2:44263:5626":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"2:39326:2117":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:3984:7770":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"16:4702:4042":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"2:10139:6924":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"17:13135:3745":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"2:41460:2439":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:6371:6181":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"1:10638:6257":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"17:12033:3445":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"17:11861:3419":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"5:4808:201":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"17:13443:3822":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"11:2184:4377":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"1:682:7707":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"2:4363:2837":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:21378:7909":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"6:653:13898":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:38925:198":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"16:7588:6869":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"1:11870:368":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"16:2879:3996":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"2:2934:2150":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"17:11422:3316":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"1:3926:7766":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"6:6541:5274":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"17:12835:3614":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"2:3209:12984":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:43664:5624":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"2:7092:13121":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"2:9044:130":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"2:44488:5635":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:1852:2583":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"2:39985:2662":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:8249:6996":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"6:4804:4918":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"2:20454:32718":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"5:1444:195":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"2:40824:207":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"2:20835:7907":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"6:1663:4635":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"17:10491:6806":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:2808:13143":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"2:38903:199":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"5:1453:6898":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"6:4650:4847":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"0:133:1678":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","TooManyComponents"],"kind":"variant"},"17:11902:3423":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"2:42472:5614":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2:42199:6198":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"6:4271:4680":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"1:11895:1531":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"5:3678:6899":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:42553:6945":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:8256:19870":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"11:861:6886":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"6:4510:4817":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"10:44:4382":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"6:1617:4598":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"6:7431:5434":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"10:36:4381":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"7:0:1521":{"crate_id":7,"path":["unwind"],"kind":"module"},"16:5346:4057":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"16:6671:4097":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:6844:2661":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"6:7485:5437":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"1:8160:7760":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"1:8957:5818":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"2:40997:80":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:7787:5750":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"1:2575:2638":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"5:2906:34436":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"17:9409:19905":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"17:13564:3878":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"17:13667:3898":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"2:2796:7901":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"16:2524:3981":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"1:11186:5832":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"1:3783:6964":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"16:6293:4069":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"16:2742:3990":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"6:6616:5320":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:4237:204":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"2:9074:118":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"1:2347:7741":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"17:13066:3729":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"2:48998:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"6:5831:5130":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"1:4565:7768":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"2:44577:5639":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:40680:178":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"6:1731:4670":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"15:198:18921":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"5:6680:241":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"1:2870:126":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"14:31:6875":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"2:11573:2104":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"2:42663:2125":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"16:4845:4047":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"2:21658:5481":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"17:13292:3779":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"16:4624:4041":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"17:13249:3771":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"1:8231:5793":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"1:1901:2613":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"1:737:140":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"17:13812:3940":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"11:2205:2038":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"16:7065:6044":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"2:43452:13263":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"5:7012:2801":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"2:12376:2859":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:21782:2611":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"17:13316:3787":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"0:48:1644":{"crate_id":0,"path":["rustc_version","Channel"],"kind":"enum"},"16:7626:6870":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"6:5804:5110":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"11:725:6074":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"2:50294:5747":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"16:2862:3995":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"1:8155:6994":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:42909:2120":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"2:9078:2437":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"5:6164:2819":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"1:6540:7864":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"1:11875:1037":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"1:959:6885":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"16:6179:6821":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"1:2345:5467":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"17:13857:3946":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"1:8080:2055":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"16:5000:4052":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"17:11391:3312":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"2:41719:4216":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"6:7479:5436":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"2:2780:4133":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"2:31829:2289":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"2:31816:6933":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"17:12923:3677":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"18:609:6721":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"2:30226:30439":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"5:770:95":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"1:8149:6992":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"1:591:7703":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"6:4858:4944":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"1:9376:2891":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"2:21607:5477":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:11886:734":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"17:9670:6763":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"2:39970:6181":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"5:5819:13460":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"4:0:1897":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"16:7596:19833":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"1:942:7712":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"16:5594:4004":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"16:2357:3974":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"11:834:6883":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"17:11471:3323":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"2:39956:6179":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"11:1065:34626":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"6:4602:4843":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"17:10660:3215":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"1:10939:2896":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"16:5797:5939":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"5:3524:2422":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2:2812:13145":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"16:6201:6836":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"2:43384:6237":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"16:5779:4060":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"1:7654:2677":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"5:4197:2422":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"5:3612:2779":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:43051:6209":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"16:7652:195":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"17:12622:3215":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"17:13612:3879":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"16:6767:6026":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"2:39541:2636":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"2:2682:223":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"2:44642:5641":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"6:482:4466":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"2:21756:2608":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"5:623:6895":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"1:5928:203":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"11:2053:6045":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:12168:13091":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"11:738:6075":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"2:3169:133":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"9:352:18836":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"11:1138:6891":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"5:7003:6093":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"5:870:2422":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"2:39001:6934":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"6:4475:4798":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"16:7042:6043":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"2:43209:6222":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"20:335:2143":{"crate_id":20,"path":["semver","Comparator"],"kind":"struct"},"2:9033:207":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"6:6098:5236":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:21591:6120":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"2:43419:120":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"17:11282:3287":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"1:3441:2068":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"18:614:34661":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"17:11628:3365":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"2:41317:6920":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"17:13332:3789":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"2:14:1662":{"crate_id":2,"path":["core","write"],"kind":"macro"},"9:445:18821":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"1:2210:127":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"6:4542:4831":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"2:8772:31745":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"16:5920:5955":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"6:5735:5078":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"16:4789:4045":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"17:13219:3765":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"2:46506:5725":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:1068:6887":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"2:39745:2637":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:40731:2421":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"1:6135:6974":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"17:9876:3076":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"1:10405:2654":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"2:2672:217":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"6:1541:4549":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"17:12282:3498":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:5914:6104":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"20:279:7005":{"crate_id":20,"path":["semver","error","Position"],"kind":"enum"},"6:6764:5385":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"16:2668:3987":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"5:6997:2424":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"16:7837:6053":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"6:5786:5098":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"17:8718:3129":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"17:11721:3373":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"1:3681:6963":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"11:669:6878":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"17:12318:3503":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"2:40798:6937":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"2:6601:13124":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"2:41237:84":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:7505:2887":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"2:44886:5654":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"16:6819:4109":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"0:75:1657":{"crate_id":0,"path":["rustc_version","LlvmVersion"],"kind":"struct"},"6:4924:4986":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"17:12563:3544":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"2:40917:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:6334:6975":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"2:22829:2604":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"2:42928:2106":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"2:3392:6910":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"0:95:1680":{"crate_id":0,"path":["rustc_version","VersionMeta"],"kind":"struct"},"5:3148:6076":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"17:8971:127":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"2:7559:30654":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:42645:2126":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"17:10615:5906":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"2:2765:7900":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"6:1710:4662":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"17:11969:3436":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"16:6164:5986":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"6:4953:5002":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"17:10478:6805":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"17:11653:3369":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"18:515:3009":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"6:4756:4894":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"6:6802:5404":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"0:55:1652":{"crate_id":0,"path":["rustc_version","Channel","Stable"],"kind":"variant"},"2:43380:6236":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"17:13419:3817":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"17:8443:19888":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"2:39624:6162":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"17:9148:34650":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"5:3765:2779":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"17:8548:19891":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"2:4318:2447":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"2:42423:6110":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:40512:5583":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"5:3078:94":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"5:805:2785":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"1:8896:6999":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"2:3329:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"16:2502:3980":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"2:39035:6935":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"2:9754:219":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:41762:126":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"0:122:1752":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","ParseIntError"],"kind":"variant"},"16:6943:19830":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"6:4671:4850":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"1:850:2422":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"5:6563:2815":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"17:13879:3952":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"6:7497:5439":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"1:11299:2899":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"0:26:1714":{"crate_id":0,"path":["rustc_version","version_meta"],"kind":"function"},"17:9886:6773":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"16:4969:4051":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"1:3988:7771":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"5:3266:2770":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"2:43029:13018":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"2:2941:2152":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:8416:7846":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"6:4624:4845":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:44932:5656":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"6:1677:4646":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"17:11372:3307":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"5:1048:34486":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"1:11896:1112":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"5:6430:2779":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2:3509:2801":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"17:9653:6760":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"1:7810:128":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"17:13145:3746":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:9552:2849":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"1:5023:6968":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"5:6278:2779":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"6:7514:5444":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"1:928:6878":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"17:10580:5904":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"2:43622:5621":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"17:9380:19904":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"17:12607:3551":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"1:11878:1380":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"17:8823:3132":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"17:11319:3300":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"1:8859:7868":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"17:10743:6809":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"2:2800:7903":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"2:40816:190":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"1:10813:2587":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"5:3995:2779":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"2:40631:6250":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"1:10648:6248":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"1:10817:4440":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"5:853:2787":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"1:10303:2049":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"0:149:1775":{"crate_id":0,"path":["rustc_version","Error","SemVerError"],"kind":"variant"},"1:11082:5822":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"2:4:1002":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"5:6592:2828":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"17:9275:34651":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"18:582:2298":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"5:7042:2424":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"7:79:18814":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"17:12388:3512":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"2:2863:13152":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:21376:7780":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"17:11193:3263":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"6:6004:5214":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"6:4974:5009":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"16:2319:3966":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"2:2761:2288":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"6:541:4503":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:44718:5649":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"6:4690:4862":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"17:13159:3747":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"17:11484:3324":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"17:9443:6748":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"2:44243:5625":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"17:12046:3446":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"2:22064:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"17:13516:3841":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"16:7366:19832":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"17:11258:3286":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"17:13385:3804":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"16:7572:34644":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"2:12216:189":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"16:5677:19823":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"17:386:6729":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"2:10180:2128":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:22031:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"6:0:807":{"crate_id":6,"path":["libc"],"kind":"module"},"5:5475:2815":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"1:8901:105":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"1:6087:2859":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"1:3130:26767":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:31820:6130":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"17:9772:3159":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"2:21522:6119":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"2:38828:6131":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"5:2077:6083":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"6:6656:5322":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"11:815:6880":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"2:2507:235":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"5:953:2779":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"2:40883:2424":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"1:7770:3077":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"17:12345:3506":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"1:10838:26197":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"1:4075:30020":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"2:2829:13147":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"2:42451:6113":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"2:39675:6167":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"5:1394:6074":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"14:221:4328":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"1:1086:6891":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"2:11593:2098":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"17:12098:3453":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"16:8129:6871":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"6:4406:4767":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"17:1978:6737":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"1:6554:2883":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"11:387:34628":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"17:8632:19871":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"2:45424:5681":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"2:41679:5600":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"2:46571:5728":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"5:7079:2424":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"1:5766:2873":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"2:42849:2123":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"1:9364:127":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"17:10452:6803":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:4005:102":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"16:8170:6064":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"1:11201:6269":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"16:6022:19826":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"6:7491:5438":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"2:42372:6940":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"17:12224:3486":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:6695:13116":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"16:7557:4185":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"17:11800:3407":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"5:1068:34576":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"1:3459:2067":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"17:9028:6741":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"16:5708:5932":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"1:6190:2871":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"17:9577:3149":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"1:10673:5750":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"1:11873:1494":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"1:9109:26208":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"1:10933:2895":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"1:10661:6265":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"6:6679:5329":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:2749:2285":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"6:6593:5302":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:43234:6223":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:7780:6248":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"2:7522:13120":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"18:113:23736":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:2684:107":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"17:9596:3151":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"17:12307:3502":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"1:6103:2878":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"6:4750:4891":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2:4418:2449":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"17:8931:3135":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"17:10649:5908":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"6:4740:4885":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"11:1872:6079":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"17:9907:3162":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"16:6854:4113":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"11:2190:34627":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"2:21770:1752":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"16:6061:18939":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"1:1054:6045":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"17:9512:6753":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"17:9453:19906":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"16:2931:18966":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"1:5069:188":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"16:2694:3988":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"1:1578:2770":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"2:39662:6166":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"6:7246:5422":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:44956:5657":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"17:11220:3271":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"2:41277:91":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"16:2404:3976":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"2:43277:2132":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"6:4504:4814":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"17:13689:3904":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"17:10334:3154":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"11:119:2764":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"6:5015:5024":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"5:7179:2074":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"1:8092:2635":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"2:41944:2433":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"17:13194:3757":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"2:21575:5476":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:40892:180":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"6:4786:4910":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"17:8858:3133":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"2:39601:6158":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"17:13488:3833":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"17:10798:19895":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"16:7519:6051":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"5:7336:2822":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"1:10215:28334":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"17:10080:6790":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"1:8944:7006":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"2:10707:6927":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"16:5643:5927":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"17:9617:6757":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"6:4767:4902":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:22361:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"1:4257:6966":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"5:6749:2831":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"17:562:3247":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"6:5797:5106":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"1:11891:1476":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"1:3061:2664":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"2:1534:2624":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"9:0:1899":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"16:3225:4023":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"2:1721:13173":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"2:20751:5473":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"17:13426:3818":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"1:11322:6962":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"17:9826:6768":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:22229:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"6:4935:4991":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:22328:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"6:4612:4844":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"17:13033:3718":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"17:13625:3885":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"17:12646:3561":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"2:10194:2127":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"18:652:3006":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"1:1077:6888":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"2:12155:134":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"6:5705:5053":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"6:1514:4538":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:7167:119":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"17:10125:3166":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"2:30624:2298":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"6:526:4494":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:7190:2154":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"11:2198:4379":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"17:13265:3775":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"1:3211:2657":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"17:10897:3240":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"11:1518:18902":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"2:41960:2432":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:7456:3247":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"2:2234:97":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"2:11362:6206":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:7584:5749":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"6:4442:4782":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"6:1583:4577":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"17:13469:3828":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"6:4848:4938":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"2:39724:6172":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"6:5041:5041":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"2:48946:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:9895:6776":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"16:6307:3998":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"1:1600:6079":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"7:32:18807":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"2:9222:6921":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"6:4399:4763":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"17:10681:5910":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"17:9228:34653":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"2:1735:5465":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"2:2851:13149":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"16:8180:19836":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"1:2363:7746":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"17:10589:5905":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"6:4828:4928":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"17:12006:3440":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"1:4437:7795":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"2:21720:30420":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:43561:202":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"6:5060:5049":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"17:10303:6795":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"2:42615:2112":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"5:5892:2624":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"2:2337:179":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"5:7134:2038":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"2:38947:200":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"16:7767:19834":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"2:41991:6196":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"18:538:3011":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:20456:32716":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"17:12770:3563":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"2:30048:67":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"6:5034:5038":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"17:12550:3543":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"20:299:1642":{"crate_id":20,"path":["semver","Version"],"kind":"struct"},"16:6243:34645":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"16:6868:4115":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"2:2775:4136":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"2:40807:13215":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"5:1232:6891":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"1:4126:7792":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"1:11876:309":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"0:121:1664":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError"],"kind":"enum"},"6:4387:4754":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"1:4640:7821":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"1:4643:7794":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"17:13433:3819":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"17:10626:5907":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"2:44595:5640":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"17:9322:34652":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"1:7843:2647":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"1:4577:5315":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"1:3133:27621":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"6:4915:4980":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"2:1809:5471":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"0:137:126":{"crate_id":0,"path":["rustc_version","Error"],"kind":"enum"},"1:8468:2422":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"17:9424:3144":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"2:46696:5737":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"11:300:6071":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"2:22262:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"2:2859:13151":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"2:43244:6227":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"0:25:1545":{"crate_id":0,"path":["rustc_version","version"],"kind":"function"},"5:210:2777":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"2:2343:186":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"2:22394:2609":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"17:3142:6739":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"17:1947:6734":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"11:1836:2424":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"17:9068:34656":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"2:41735:70":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"6:562:4514":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"2:29803:2606":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"6:4461:4790":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"1:10411:2652":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"1:4113:7791":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"16:8047:4240":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"1:917:2770":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"5:6582:2827":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"1:7851:2649":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"1:6011:1644":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"2:39642:6164":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"2:46422:5723":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"2:21643:30440":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"6:4521:4822":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"2:10740:6928":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"5:7146:2039":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"2:44387:5631":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2:39369:13082":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"6:1604:4591":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"6:5005:5019":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"1:3616:7762":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"17:12510:3538":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"17:11299:3290":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"18:699:5881":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"6:5858:5137":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:39512:6114":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"2:2736:2149":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"16:6535:2763":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"18:599:34662":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:22130:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"1:11883:634":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"16:6919:34643":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"2:46591:5730":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:3981:6911":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:7775:6982":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"5:3114:6077":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2:5455:6101":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"16:4818:4046":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"16:4480:4036":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"2:39222:2117":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"5:5783:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"2:42899:2119":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"2:43376:6235":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:20622:7915":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"1:7921:6985":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"17:8310:19884":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"1:3912:7765":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"1:8937:7005":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"6:4573:4841":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"16:6717:6013":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"2:11111:13222":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"2:3380:13040":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"6:1589:4579":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"16:7259:5597":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"6:6045:5225":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"1:8071:2663":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"17:10936:3241":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"16:8109:6063":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"17:13639:3891":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"6:4414:4770":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"14:187:18914":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"16:7757:6052":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"16:7683:4017":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"5:1433:6879":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"5:1985:6899":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"1:1791:2567":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"6:532:4497":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"16:4904:4049":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"16:7529:4014":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"17:9178:6744":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"17:9557:3154":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"1:3250:2653":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"1:7682:2587":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"6:4469:4795":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"1:355:6946":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"16:6981:6852":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"17:13777:3927":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"2:2680:2280":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"6:4492:4808":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"17:12915:3676":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"16:5655:4003":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"2:39653:6165":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"17:10705:3219":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"2:8180:6918":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"17:12019:3170":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"5:679:109":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"17:13763:3925":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"17:9566:6745":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"17:10354:3202":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"1:4904:7826":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"17:0:1906":{"crate_id":17,"path":["object"],"kind":"module"},"18:481:5872":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"16:2808:3993":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"16:7467:6046":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"1:3293:2642":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"1:1595:6078":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"17:11163:3259":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"2:21704:30424":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:4579:5317":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"6:1520:4541":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:45502:5682":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"17:11770:3398":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"5:2626:5460":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"1:11045:5823":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"1:8215:6995":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"19:0:1019":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"17:12419:3517":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"2:39265:5577":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:4329:6967":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"5:2397:5456":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"6:4963:5003":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"18:574:3006":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"1:11063:5831":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"2:20702:7780":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"17:10283:3197":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"6:7526:5446":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"2:12407:202":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"1:537:2862":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"1:641:6949":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"0:147:1748":{"crate_id":0,"path":["rustc_version","Error","UnexpectedVersionFormat"],"kind":"variant"},"6:4277:4681":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:10747:126":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"6:4529:4827":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"2:11346:6205":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:4855:7820":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"6:4796:4914":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"1:8458:6252":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"2:39734:6173":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"6:6575:5293":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"11:853:6885":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"5:279:2101":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"2:43388:6238":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"6:4375:4749":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"2:39685:6168":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"6:4998:5016":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"17:12072:3449":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"1:2868:207":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"16:5998:19825":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"2:46719:5738":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"2:40012:6184":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"2:20388:2298":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"17:13499:3834":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"1:3169:2654":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"6:4819:4922":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"2:22163:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"2:39355:6144":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"2:2938:2151":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"18:736:23745":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"1:11136:2897":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"2:44688:5648":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"17:11924:3430":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"16:55:4229":{"crate_id":16,"path":["gimli","endianity","Endianity"],"kind":"trait"},"17:12236:3488":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"2:43372:6234":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"17:12194:3467":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"2:30120:30423":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"2:9289:139":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"17:13053:3724":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"16:2764:3991":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"5:2179:6090":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"6:6788:5395":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"1:8843:7866":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"}},"external_crates":{"20":{"name":"semver","html_root_url":"https://docs.rs/semver/1.0.17/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":24}