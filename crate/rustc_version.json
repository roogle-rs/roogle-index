{"root":"0:0:1952","crate_version":"0.4.0","includes_private":false,"index":{"0:119:776":{"id":"0:119:776","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[147,55],"end":[147,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10060:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12745:7101":{"id":"2:12745:7101","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43837:2285","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2300-0:137:134":{"id":"b:2:2300-0:137:134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2294:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2302:2165"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:108":{"id":"0:108","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,23],"end":[147,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2826:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:161:739":{"id":"0:161:739","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["e",{"resolved_path":{"name":"str::Utf8Error","id":"2:43795:1933","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Error","id":"0:137:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2300-0:95:1843":{"id":"b:2:2300-0:95:1843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2294:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2302:2165"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12845:8255":{"id":"2:12845:8255","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4616:8255"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:44159:2292","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:100:1852":{"id":"0:100:1852","crate_id":0,"name":"channel","span":{"filename":"src/lib.rs","begin":[162,4],"end":[162,24]},"visibility":"public","docs":"Release channel of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Channel","id":"0:48:1807","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:143:1871":{"id":"0:143:1871","crate_id":0,"name":"stderr","span":{"filename":"src/lib.rs","begin":[349,8],"end":[349,22]},"visibility":"default","docs":"stderr output from the command","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"a:2:2815:243-0:95:1843":{"id":"a:2:2815:243-0:95:1843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2815:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8879:8388-0:137:134":{"id":"a:2:8879:8388-0:137:134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8879:8388","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:63":{"id":"0:63","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,26],"end":[71,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2825:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1807","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:67:459":{"id":"0:67:459","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[71,37],"end":[71,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Channel","id":"0:48:1807","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31167:202","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:76:1822":{"id":"0:76:1822","crate_id":0,"name":"major","span":{"filename":"src/lib.rs","begin":[94,4],"end":[94,18]},"visibility":"public","docs":"Major version","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u64"}}},"a:2:2872:2324-0:75:1820":{"id":"a:2:2872:2324-0:75:1820","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2872:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:20:133":{"id":"0:20:133","crate_id":0,"name":"Err","span":{"filename":"src/lib.rs","begin":[107,4],"end":[107,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:158":{"id":"0:158","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[340,9],"end":[340,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9836:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:159:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12780:32977":{"id":"2:12780:32977","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12415:2279","str::split":"2:12768:1830","prim@char":"1:12034:448","str::split_terminator":"2:12777:32976"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43919:2304","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:2272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:2273","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:118":{"id":"0:118","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,55],"end":[147,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10052:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:119:776"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:114":{"id":"0:114","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,38],"end":[147,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clamp","max","min"],"trait":{"name":"Ord","id":"2:2400:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:115:459"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:141:1867":{"id":"0:141:1867","crate_id":0,"name":"CommandError","span":{"filename":"src/lib.rs","begin":[345,4],"end":[350,5]},"visibility":"default","docs":"Error output from the command that was run.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"struct":{"fields":["0:142:1868","0:143:1871"],"fields_stripped":false}},"discriminant":null}}},"0:96:1804":{"id":"0:96:1804","crate_id":0,"name":"semver","span":{"filename":"src/lib.rs","begin":[150,4],"end":[150,23]},"visibility":"public","docs":"Version of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Version","id":"20:301:1805","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:12741:29125":{"id":"2:12741:29125","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:12742:29126"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:74:712":{"id":"0:74:712","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[71,60],"end":[71,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:26:1875":{"id":"0:26:1875","crate_id":0,"name":"version_meta","span":{"filename":"src/lib.rs","begin":[200,0],"end":[204,1]},"visibility":"public","docs":"Returns the `rustc` SemVer version and additional metadata\nlike the git short hash and build date.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Result","id":"0:45:232","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"VersionMeta","id":"0:95:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:42":{"id":"0:42","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[384,0],"end":[396,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["description","cause","provide","source","type_id"],"trait":{"name":"Error","id":"2:2668:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:43:1926"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2303-0:95:1843":{"id":"b:2:2303-0:95:1843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2297:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2305:24966"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2621-0:121:1827":{"id":"b:2:2621-0:121:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2624:134","2:2625:1612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12783:1888":{"id":"2:12783:1888","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:2279","str::rsplitn":"2:12786:29139"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43955:2303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12824:29144":{"id":"2:12824:29144","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:2279"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:2272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:2273","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:21:1828":{"id":"0:21:1828","crate_id":0,"name":"from_str","span":{"filename":"src/lib.rs","begin":[109,4],"end":[143,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"0:45:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:12375:1803","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12814:32985":{"id":"2:12814:32985","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12795:2180":{"id":"2:12795:2180","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12415:2279","`DoubleEndedIterator`":"2:7785:127","prim@char":"1:12034:448","str::rmatches":"2:12798:32978"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:44055:2298","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12751:29143":{"id":"2:12751:29143","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:2279"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:61":{"id":"0:61","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,22],"end":[71,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2369:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1807","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:92":{"id":"0:92","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,55],"end":[90,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10052:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:93:776"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:95:1843":{"id":"0:95:1843","crate_id":0,"name":"VersionMeta","span":{"filename":"src/lib.rs","begin":[148,0],"end":[172,1]},"visibility":"public","docs":"Rustc version plus metadata like git short hash and build date.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:96:1804","0:97:1846","0:98:1848","0:99:1850","0:100:1852","0:101:780","0:102:1855","0:103:1857"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:23","a:2:8879:8388-0:95:1843","a:2:2832:253-0:95:1843","a:2:2872:2324-0:95:1843","a:2:2815:243-0:95:1843","a:2:8878:8263-0:95:1843","b:2:2300-0:95:1843","b:2:2303-0:95:1843","b:2:2610-0:95:1843","b:2:2616-0:95:1843","b:2:3450-0:95:1843","b:2:2606-0:95:1843","b:2:2621-0:95:1843","b:5:682-0:95:1843","0:114","0:116","0:118","0:104","0:109","0:112","0:106","0:108","0:111"]}}},"0:105:452":{"id":"0:105:452","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[147,9],"end":[147,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"VersionMeta","id":"0:95:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2609:1870":{"id":"2:2609:1870","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2583:141"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12798:32978":{"id":"2:12798:32978","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12415:2279","`DoubleEndedIterator`":"2:7785:127","prim@char":"1:12034:448","str::matches":"2:12795:2180"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:44073:2299","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:2272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:2273","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2621-0:95:1843":{"id":"b:2:2621-0:95:1843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2624:134","2:2625:1612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2612:739":{"id":"2:2612:739","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12801:32979":{"id":"2:12801:32979","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12415:2279","`DoubleEndedIterator`":"2:7785:127","prim@char":"1:12034:448","str::rmatch_indices":"2:12804:32980"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:44001:2296","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12719:867":{"id":"2:12719:867","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12034:448"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2832:253-0:75:1820":{"id":"a:2:2832:253-0:75:1820","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2832:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:163:739":{"id":"0:163:739","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["e",{"resolved_path":{"name":"semver::Error","id":"20:220:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Error","id":"0:137:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:99:1850":{"id":"0:99:1850","crate_id":0,"name":"build_date","span":{"filename":"src/lib.rs","begin":[159,4],"end":[159,34]},"visibility":"public","docs":"Build date of the compiler; this was removed between Rust 1.0.0 and 1.1.0.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:78":{"id":"0:78","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,9],"end":[90,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2316:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:79:452"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2815:243-0:137:134":{"id":"a:2:2815:243-0:137:134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2815:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:115:459":{"id":"0:115:459","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[147,38],"end":[147,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"VersionMeta","id":"0:95:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31167:202","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2832:253-0:48:1807":{"id":"a:2:2832:253-0:48:1807","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2832:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1807","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:40":{"id":"0:40","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[363,0],"end":[382,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9841:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:41:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:75:1820":{"id":"0:75:1820","crate_id":0,"name":"LlvmVersion","span":{"filename":"src/lib.rs","begin":[91,0],"end":[98,1]},"visibility":"public","docs":"LLVM version\n\nLLVM's version numbering scheme is not semver compatible until version 4.0\n\nrustc [just prints the major and minor versions], so other parts of the version are not included.\n\n[just prints the major and minor versions]: https://github.com/rust-lang/rust/blob/b5c9e2448c9ace53ad5c11585803894651b18b0a/compiler/rustc_codegen_llvm/src/llvm_util.rs#L173-L178","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:76:1822","0:77:1824"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:8879:8388-0:75:1820","a:2:2832:253-0:75:1820","a:2:2872:2324-0:75:1820","a:2:2815:243-0:75:1820","a:2:8878:8263-0:75:1820","b:2:2300-0:75:1820","b:2:2303-0:75:1820","b:2:2610-0:75:1820","b:2:2616-0:75:1820","b:2:3450-0:75:1820","b:2:2606-0:75:1820","b:2:2621-0:75:1820","b:5:682-0:75:1820","b:5:5804-0:75:1820","0:17","0:92","0:83","0:90","0:82","0:80","0:78","0:19","0:86","0:88","0:85"]}}},"2:12728:32972":{"id":"2:12728:32972","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:65:656":{"id":"0:65:656","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[71,26],"end":[71,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Channel","id":"0:48:1807","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:57":{"id":"0:57","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,9],"end":[71,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2827:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1807","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:18:712":{"id":"0:18:712","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[101,4],"end":[103,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:17":{"id":"0:17","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[100,0],"end":[104,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9841:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:18:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:88":{"id":"0:88","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,38],"end":[90,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clamp","max","min"],"trait":{"name":"Ord","id":"2:2400:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:89:459"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12737:29102":{"id":"2:12737:29102","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10500:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10500:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2815:243-0:75:1820":{"id":"a:2:2815:243-0:75:1820","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2815:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12827:32988":{"id":"2:12827:32988","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:2279"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:2272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:2273","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5806:1589":{"id":"5:5806:1589","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5550:27664":{"id":"5:5550:27664","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12842:27667"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:90":{"id":"0:90","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,43],"end":[90,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","ge","lt"],"trait":{"name":"PartialOrd","id":"2:2406:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:91:1126"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2610-0:48:1807":{"id":"b:2:2610-0:48:1807","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1807","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:739"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:79:452":{"id":"0:79:452","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[90,9],"end":[90,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:137:134":{"id":"0:137:134","crate_id":0,"name":"Error","span":{"filename":"src/lib.rs","begin":[341,0],"end":[361,1]},"visibility":"public","docs":"The error type for this crate.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:138:1864","0:141:1867","0:144:1933","0:147:1909","0:149:1936","0:152:1899","0:155:1939"],"impls":["a:2:8879:8388-0:137:134","a:2:2832:253-0:137:134","a:2:2872:2324-0:137:134","a:2:2815:243-0:137:134","a:2:8878:8263-0:137:134","b:2:2300-0:137:134","b:2:2303-0:137:134","b:2:2610-0:137:134","b:2:2616-0:137:134","b:2:3450-0:137:134","b:2:2606-0:137:134","b:2:2621-0:137:134","b:5:5804-0:137:134","0:42","0:40","0:158","0:160","0:162","0:164"]}}},"2:12740:32974":{"id":"2:12740:32974","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12040:1531","crate::ops::IndexMut":"2:3116:8282","str::slice_unchecked":"2:12739:32973"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"5:684:2697":{"id":"5:684:2697","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:36":{"id":"0:36","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[301,0],"end":[324,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9841:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:37:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3450-0:137:134":{"id":"b:2:3450-0:137:134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3448:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3452:1627"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12813:32984":{"id":"2:12813:32984","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12833:32990":{"id":"2:12833:32990","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:2279"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:2272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:2273","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5538:33652":{"id":"5:5538:33652","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7529:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:97:1846":{"id":"0:97:1846","crate_id":0,"name":"commit_hash","span":{"filename":"src/lib.rs","begin":[153,4],"end":[153,35]},"visibility":"public","docs":"Git short hash of the build of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"2:12846:32992":{"id":"2:12846:32992","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4613:32992"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:44168:2293","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:682-0:95:1843":{"id":"b:5:682-0:95:1843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2316:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:2697","5:685:1900","5:686:2698"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2610-0:121:1827":{"id":"b:2:2610-0:121:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:739"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:151:1746":{"id":"0:151:1746","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[356,16],"end":[356,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"semver::Error","id":"20:220:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:2606-0:48:1807":{"id":"b:2:2606-0:48:1807","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1807","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2609:1870"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2624:134":{"id":"2:2624:134","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32351:2227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:86":{"id":"0:86","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,27],"end":[90,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2364:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:87:656"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:45:232":{"id":"0:45:232","crate_id":0,"name":"Result","span":{"filename":"src/lib.rs","begin":[417,0],"end":[417,58]},"visibility":"public","docs":"The result type for this crate.","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"std::result::Result","id":"2:42074:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"E"}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:137:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]}}}},"5:686:2698":{"id":"5:686:2698","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12754:1833":{"id":"2:12754:1833","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:2279"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2872:2324-0:95:1843":{"id":"a:2:2872:2324-0:95:1843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2872:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:5804-0:75:1820":{"id":"b:5:5804-0:75:1820","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9841:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5802:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5806:1589"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:140:1746":{"id":"0:140:1746","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[343,27],"end":[343,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"io::Error","id":"1:2948:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:12839:30267":{"id":"2:12839:30267","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39878:30263","Self::is_ascii":"2:12838:27661"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39878:30263","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12748:1884":{"id":"2:12748:1884","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:44105:2294","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:113:656":{"id":"0:113:656","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[147,27],"end":[147,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"VersionMeta","id":"0:95:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:107:712":{"id":"0:107:712","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[147,16],"end":[147,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:34":{"id":"0:34","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[295,0],"end":[299,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ParseIntError","id":"2:22719:1913","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:35:739"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:25:1704":{"id":"0:25:1704","crate_id":0,"name":"version","span":{"filename":"src/lib.rs","begin":[194,0],"end":[196,1]},"visibility":"public","docs":"Returns the `rustc` SemVer version.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Result","id":"0:45:232","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Version","id":"20:301:1805","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:146:1746":{"id":"0:146:1746","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[352,14],"end":[352,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"str::Utf8Error","id":"2:43795:1933","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"a:2:8878:8263-0:95:1843":{"id":"a:2:8878:8263-0:95:1843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8878:8263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8879:8388-0:48:1807":{"id":"a:2:8879:8388-0:48:1807","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8879:8388","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1807","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2303-0:48:1807":{"id":"b:2:2303-0:48:1807","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2297:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1807","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2305:24966"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:71:776":{"id":"0:71:776","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[71,54],"end":[71,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10060:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2606-0:95:1843":{"id":"b:2:2606-0:95:1843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2609:1870"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12841:27666":{"id":"2:12841:27666","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:69:1126":{"id":"0:69:1126","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[71,42],"end":[71,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Channel","id":"0:48:1807","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31167:202","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:89:459":{"id":"0:89:459","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[90,38],"end":[90,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31167:202","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:23":{"id":"0:23","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[174,0],"end":[191,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:24:1859"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:155:1939":{"id":"0:155:1939","crate_id":0,"name":"LlvmVersionError","span":{"filename":"src/lib.rs","begin":[360,4],"end":[360,43]},"visibility":"default","docs":"An error occurred in parsing a `LlvmVersion`.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:157:1746"]},"discriminant":null}}},"b:2:2616-0:121:1827":{"id":"b:2:2616-0:121:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2586:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2619:134","2:2620:1614"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2616-0:75:1820":{"id":"b:2:2616-0:75:1820","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2586:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2619:134","2:2620:1614"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12840:27665":{"id":"2:12840:27665","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:106":{"id":"0:106","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,16],"end":[147,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9836:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:107:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:73":{"id":"0:73","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,60],"end":[71,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9836:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1807","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:74:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12764:2638":{"id":"2:12764:2638","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41931:197","prim@char":"1:12034:448","self::pattern":"2:12415:2279"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:2272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:2273","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:136:712":{"id":"0:136:712","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[279,9],"end":[279,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5804-0:121:1827":{"id":"b:5:5804-0:121:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9841:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5802:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5806:1589"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2303-0:137:134":{"id":"b:2:2303-0:137:134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2297:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2305:24966"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:91:1126":{"id":"0:91:1126","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[90,43],"end":[90,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31167:202","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12768:1830":{"id":"2:12768:1830","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12415:2279","`DoubleEndedIterator`":"2:7785:127","prim@char":"1:12034:448","str::split_whitespace":"2:12746:30615","str::rsplit":"2:12774:29136"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43851:2301","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:682-0:48:1807":{"id":"b:5:682-0:48:1807","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2316:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1807","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:2697","5:685:1900","5:686:2698"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2300-0:48:1807":{"id":"b:2:2300-0:48:1807","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2294:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1807","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2302:2165"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8879:8388-0:75:1820":{"id":"a:2:8879:8388-0:75:1820","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8879:8388","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:83":{"id":"0:83","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,23],"end":[90,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2369:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12818:32987":{"id":"2:12818:32987","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:2279"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5549:27663":{"id":"5:5549:27663","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12841:27666"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:682-0:75:1820":{"id":"b:5:682-0:75:1820","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2316:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:2697","5:685:1900","5:686:2698"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:28:1872":{"id":"0:28:1872","crate_id":0,"name":"version_meta_for","span":{"filename":"src/lib.rs","begin":[209,0],"end":[262,1]},"visibility":"public","docs":"Parses a \"rustc -vV\" output string and returns\nthe SemVer version and additional metadata\nlike the git short hash and build date.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["verbose_version_string",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"0:45:232","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"VersionMeta","id":"0:95:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:104":{"id":"0:104","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,9],"end":[147,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2316:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:105:452"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:55:1815":{"id":"0:55:1815","crate_id":0,"name":"Stable","span":{"filename":"src/lib.rs","begin":[80,4],"end":[80,10]},"visibility":"default","docs":"Stable release channel","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2616-0:137:134":{"id":"b:2:2616-0:137:134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2586:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2619:134","2:2620:1614"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3450-0:75:1820":{"id":"b:2:3450-0:75:1820","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3448:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3452:1627"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2610-0:95:1843":{"id":"b:2:2610-0:95:1843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:739"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:116":{"id":"0:116","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,43],"end":[147,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","ge","lt"],"trait":{"name":"PartialOrd","id":"2:2406:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:117:1126"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:129:1917":{"id":"0:129:1917","crate_id":0,"name":"MinorVersionMustBeZeroAfter4","span":{"filename":"src/lib.rs","begin":[288,4],"end":[288,32]},"visibility":"default","docs":"Minor version component must be zero on LLVM versions later than 4.0","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:127:1837":{"id":"0:127:1837","crate_id":0,"name":"ComponentMustNotHaveSign","span":{"filename":"src/lib.rs","begin":[286,4],"end":[286,28]},"visibility":"default","docs":"A version component has a sign","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12721:32969":{"id":"2:12721:32969","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12809:32982":{"id":"2:12809:32982","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:38":{"id":"0:38","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[326,0],"end":[337,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["description","cause","provide","source","type_id"],"trait":{"name":"Error","id":"2:2668:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:39:1926"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:147:1909":{"id":"0:147:1909","crate_id":0,"name":"UnexpectedVersionFormat","span":{"filename":"src/lib.rs","begin":[354,4],"end":[354,27]},"visibility":"default","docs":"The output of `rustc -vV` was not in the expected format.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2621-0:137:134":{"id":"b:2:2621-0:137:134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2624:134","2:2625:1612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2303-0:121:1827":{"id":"b:2:2303-0:121:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2297:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2305:24966"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12811:32983":{"id":"2:12811:32983","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12792:29142":{"id":"2:12792:29142","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:2272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:2273","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:121:1827":{"id":"0:121:1827","crate_id":0,"name":"LlvmVersionParseError","span":{"filename":"src/lib.rs","begin":[280,0],"end":[293,1]},"visibility":"public","docs":"LLVM Version Parse Error","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:122:1913","0:125:1834","0:127:1837","0:129:1917","0:131:1839","0:133:1841"],"impls":["a:2:8879:8388-0:121:1827","a:2:2832:253-0:121:1827","a:2:2872:2324-0:121:1827","a:2:2815:243-0:121:1827","a:2:8878:8263-0:121:1827","b:2:2300-0:121:1827","b:2:2303-0:121:1827","b:2:2610-0:121:1827","b:2:2616-0:121:1827","b:2:3450-0:121:1827","b:2:2606-0:121:1827","b:2:2621-0:121:1827","b:5:5804-0:121:1827","0:34","0:135","0:38","0:36","0:164"]}}},"2:12843:32991":{"id":"2:12843:32991","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4615:32991"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:44150:2291","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:60":{"id":"0:60","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,22],"end":[71,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2826:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1807","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8878:8263-0:121:1827":{"id":"a:2:8878:8263-0:121:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8878:8263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:0:1952":{"id":"0:0:1952","crate_id":0,"name":"rustc_version","span":{"filename":"src/lib.rs","begin":[9,0],"end":[417,58]},"visibility":"public","docs":"Simple library for getting the version information of a `rustc`\ncompiler.\n\nThis can be used by build scripts or other tools dealing with Rust sources\nto make decisions based on the version of the compiler.\n\nIt calls `$RUSTC --version -v` and parses the output, falling\nback to `rustc` if `$RUSTC` is not set.\n\n# Example\n\n```rust\n// This could be a cargo build script\n\nuse rustc_version::{version, version_meta, Channel, Version};\n\n// Assert we haven't travelled back in time\nassert!(version().unwrap().major >= 1);\n\n// Set cfg flags depending on release channel\nmatch version_meta().unwrap().channel {\n    Channel::Stable => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_STABLE\");\n    }\n    Channel::Beta => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_BETA\");\n    }\n    Channel::Nightly => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_NIGHTLY\");\n    }\n    Channel::Dev => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_DEV\");\n    }\n}\n\n// Check for a minimum version\nif version().unwrap() >= Version::parse(\"1.4.0\").unwrap() {\n    println!(\"cargo:rustc-cfg=compiler_has_important_bugfix\");\n}\n```","links":{},"attrs":["#![warn(missing_docs)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:15-20:301:1805","0:48:1807","0:75:1820","0:95:1843","0:25:1704","0:26:1875","0:28:1872","0:121:1827","0:137:134","0:45:232"],"is_stripped":false}}},"0:48:1807":{"id":"0:48:1807","crate_id":0,"name":"Channel","span":{"filename":"src/lib.rs","begin":[72,0],"end":[81,1]},"visibility":"public","docs":"Release channel of the compiler.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:49:1809","0:51:1811","0:53:1813","0:55:1815"],"impls":["a:2:8879:8388-0:48:1807","a:2:2832:253-0:48:1807","a:2:2872:2324-0:48:1807","a:2:2815:243-0:48:1807","a:2:8878:8263-0:48:1807","b:2:2300-0:48:1807","b:2:2303-0:48:1807","b:2:2610-0:48:1807","b:2:2616-0:48:1807","b:2:3450-0:48:1807","b:2:2606-0:48:1807","b:2:2621-0:48:1807","b:5:682-0:48:1807","0:64","0:57","0:68","0:61","0:73","0:70","0:63","0:60","0:58","0:66"]}}},"0:109":{"id":"0:109","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,23],"end":[147,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2369:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2300-0:121:1827":{"id":"b:2:2300-0:121:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2294:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2302:2165"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2872:2324-0:121:1827":{"id":"a:2:2872:2324-0:121:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2872:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:135":{"id":"0:135","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[279,9],"end":[279,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9836:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:136:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12836:1838":{"id":"2:12836:1838","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12376:133","`FromStr`":"2:12375:1803"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42074:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12375:1803","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12375:1803","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12786:29139":{"id":"2:12786:29139","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12034:448","str::splitn":"2:12783:1888","self::pattern":"2:12415:2279"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43973:2302","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:2272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:2273","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:70":{"id":"0:70","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,54],"end":[71,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10052:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1807","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:71:776"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:59:452":{"id":"0:59:452","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[71,15],"end":[71,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Channel","id":"0:48:1807","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:35:739":{"id":"0:35:739","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[296,4],"end":[298,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["e",{"resolved_path":{"name":"num::ParseIntError","id":"2:22719:1913","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12842:27667":{"id":"2:12842:27667","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:149:1936":{"id":"0:149:1936","crate_id":0,"name":"SemVerError","span":{"filename":"src/lib.rs","begin":[356,4],"end":[356,30]},"visibility":"default","docs":"An error occurred in parsing the semver.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:151:1746"]},"discriminant":null}}},"2:12744:7212":{"id":"2:12744:7212","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12034:448"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43827:2286","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2832:253-0:137:134":{"id":"a:2:2832:253-0:137:134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2832:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:112":{"id":"0:112","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,27],"end":[147,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2364:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:113:656"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2621-0:75:1820":{"id":"b:2:2621-0:75:1820","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2624:134","2:2625:1612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12724:32971":{"id":"2:12724:32971","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12722:32970"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:81:712":{"id":"0:81:712","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[90,16],"end":[90,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5531:33650":{"id":"5:5531:33650","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:2276","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:276:2276","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:51:1811":{"id":"0:51:1811","crate_id":0,"name":"Nightly","span":{"filename":"src/lib.rs","begin":[76,4],"end":[76,11]},"visibility":"default","docs":"Nightly release channel","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:8879:8388-0:121:1827":{"id":"a:2:8879:8388-0:121:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8879:8388","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5548:2838":{"id":"5:5548:2838","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7529:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:685:1900":{"id":"5:685:1900","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2300-0:75:1820":{"id":"b:2:2300-0:75:1820","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2294:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2302:2165"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:138:1864":{"id":"0:138:1864","crate_id":0,"name":"CouldNotExecuteCommand","span":{"filename":"src/lib.rs","begin":[343,4],"end":[343,37]},"visibility":"default","docs":"An error occurred while trying to find the `rustc` to run.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:140:1746"]},"discriminant":null}}},"2:12771:29134":{"id":"2:12771:29134","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:2279"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:12231:2282","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2815:243-0:121:1827":{"id":"a:2:2815:243-0:121:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2815:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:85":{"id":"0:85","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,27],"end":[90,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2825:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12729:339":{"id":"2:12729:339","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12730:29103","`u8`":"1:12051:1636"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5532:13735":{"id":"5:5532:13735","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7529:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:102:1855":{"id":"0:102:1855","crate_id":0,"name":"short_version_string","span":{"filename":"src/lib.rs","begin":[168,4],"end":[168,36]},"visibility":"public","docs":"Short version string of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:24:1859":{"id":"0:24:1859","crate_id":0,"name":"for_command","span":{"filename":"src/lib.rs","begin":[176,4],"end":[190,5]},"visibility":"public","docs":"Returns the version metadata for `cmd`, which should be a `rustc` command.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["cmd",{"resolved_path":{"name":"Command","id":"1:5448:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:45:232","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"VersionMeta","id":"0:95:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12749:32975":{"id":"2:12749:32975","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:44115:2295","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12746:30615":{"id":"2:12746:30615","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12747:30627"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:44125:2283","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2832:253-0:95:1843":{"id":"a:2:2832:253-0:95:1843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2832:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:53:1813":{"id":"0:53:1813","crate_id":0,"name":"Beta","span":{"filename":"src/lib.rs","begin":[78,4],"end":[78,8]},"visibility":"default","docs":"Beta release channel","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:159:712":{"id":"0:159:712","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[340,9],"end":[340,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:64":{"id":"0:64","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,26],"end":[71,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2364:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1807","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:65:656"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12804:32980":{"id":"2:12804:32980","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12415:2279","`DoubleEndedIterator`":"2:7785:127","prim@char":"1:12034:448","str::match_indices":"2:12801:32979"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:44019:2297","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:2272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:2273","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12739:32973":{"id":"2:12739:32973","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12040:1531","str::slice_mut_unchecked":"2:12740:32974","crate::ops::Index":"2:3112:8281"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12720:2639":{"id":"2:12720:2639","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:103:1857":{"id":"0:103:1857","crate_id":0,"name":"llvm_version","span":{"filename":"src/lib.rs","begin":[171,4],"end":[171,41]},"visibility":"public","docs":"Version of LLVM used by the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:125:1834":{"id":"0:125:1834","crate_id":0,"name":"ComponentMustNotHaveLeadingZeros","span":{"filename":"src/lib.rs","begin":[284,4],"end":[284,36]},"visibility":"default","docs":"A version component must not have leading zeros","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12730:29103":{"id":"2:12730:29103","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12051:1636"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:101:780":{"id":"0:101:780","crate_id":0,"name":"host","span":{"filename":"src/lib.rs","begin":[165,4],"end":[165,20]},"visibility":"public","docs":"Host target triple of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"a:2:8878:8263-0:137:134":{"id":"a:2:8878:8263-0:137:134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8878:8263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:160":{"id":"0:160","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Utf8Error","id":"2:43795:1933","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:161:739"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2610-0:75:1820":{"id":"b:2:2610-0:75:1820","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:739"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2606-0:121:1827":{"id":"b:2:2606-0:121:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2609:1870"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:49:1809":{"id":"0:49:1809","crate_id":0,"name":"Dev","span":{"filename":"src/lib.rs","begin":[74,4],"end":[74,7]},"visibility":"default","docs":"Development release channel","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:2302:2165":{"id":"2:2302:2165","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:19":{"id":"0:19","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[106,0],"end":[144,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12375:1803","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:20:133","0:21:1828"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2872:2324-0:137:134":{"id":"a:2:2872:2324-0:137:134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2872:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12807:32981":{"id":"2:12807:32981","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12757:28737":{"id":"2:12757:28737","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:2279"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:2272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:2273","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12731:1904":{"id":"2:12731:1904","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41931:197"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10500:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10500:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2872:2324-0:48:1807":{"id":"a:2:2872:2324-0:48:1807","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2872:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1807","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2606-0:137:134":{"id":"b:2:2606-0:137:134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2609:1870"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:131:1839":{"id":"0:131:1839","crate_id":0,"name":"MinorVersionRequiredBefore4","span":{"filename":"src/lib.rs","begin":[290,4],"end":[290,31]},"visibility":"default","docs":"Minor version component is required on LLVM versions earlier than 4.0","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:124:1746":{"id":"0:124:1746","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[282,18],"end":[282,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"num::ParseIntError","id":"2:22719:1913","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:162":{"id":"0:162","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Error","id":"20:220:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:163:739"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:87:656":{"id":"0:87:656","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[90,27],"end":[90,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12789:29141":{"id":"2:12789:29141","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:144:1933":{"id":"0:144:1933","crate_id":0,"name":"Utf8Error","span":{"filename":"src/lib.rs","begin":[352,4],"end":[352,29]},"visibility":"default","docs":"The output of `rustc -vV` was not valid utf-8.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:146:1746"]},"discriminant":null}}},"2:2619:134":{"id":"2:2619:134","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"b:2:3450-0:48:1807":{"id":"b:2:3450-0:48:1807","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3448:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1807","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3452:1627"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12727:25574":{"id":"2:12727:25574","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11970:1873"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12718":{"id":"2:12718","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12719:867","2:12720:2639","2:12721:32969","2:12722:32970","2:12724:32971","2:12727:25574","2:12728:32972","2:12729:339","2:12730:29103","2:12731:1904","2:12733:29100","2:12735:29101","2:12737:29102","2:12739:32973","2:12740:32974","2:12741:29125","2:12742:29126","2:12743:7202","2:12744:7212","2:12745:7101","2:12746:30615","2:12747:30627","2:12748:1884","2:12749:32975","2:12750:30929","2:12751:29143","2:12754:1833","2:12757:28737","2:12760:2677","2:12764:2638","2:12768:1830","2:12771:29134","2:12774:29136","2:12777:32976","2:12780:32977","2:12783:1888","2:12786:29139","2:12789:29141","2:12792:29142","2:12795:2180","2:12798:32978","2:12801:32979","2:12804:32980","2:12807:32981","2:12809:32982","2:12811:32983","2:12813:32984","2:12814:32985","2:12815:32986","2:12818:32987","2:12821:25962","2:12824:29144","2:12827:32988","2:12830:32989","2:12833:32990","2:12836:1838","2:12838:27661","2:12839:30267","2:12840:27665","2:12841:27666","2:12842:27667","2:12843:32991","2:12845:8255","2:12846:32992"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12742:29126":{"id":"2:12742:29126","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12741:29125"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5546:33653":{"id":"5:5546:33653","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7529:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:15-20:301:1805":{"id":"0:15-20:301:1805","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[66,0],"end":[66,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"semver::Version","name":"Version","id":"20:301:1805","glob":false}}},"0:58":{"id":"0:58","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,15],"end":[71,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2316:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1807","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:59:452"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:82":{"id":"0:82","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,23],"end":[90,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2826:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:43:1926":{"id":"0:43:1926","crate_id":0,"name":"source","span":{"filename":"src/lib.rs","begin":[385,4],"end":[395,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"dyn_trait":{"traits":[{"trait":{"name":"error::Error","id":"2:2668:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2625:1612":{"id":"2:2625:1612","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:42074:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2832:253-0:121:1827":{"id":"a:2:2832:253-0:121:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2832:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12777:32976":{"id":"2:12777:32976","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12415:2279","str::split":"2:12768:1830","prim@char":"1:12034:448","`DoubleEndedIterator`":"2:7785:127","str::rsplit_terminator":"2:12780:32977"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43901:2305","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:164":{"id":"0:164","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:165:739"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2616-0:95:1843":{"id":"b:2:2616-0:95:1843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2586:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2619:134","2:2620:1614"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:68":{"id":"0:68","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,42],"end":[71,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","ge","lt"],"trait":{"name":"PartialOrd","id":"2:2406:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1807","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:69:1126"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12743:7202":{"id":"2:12743:7202","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12034:448"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43821:2287","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5804-0:137:134":{"id":"b:5:5804-0:137:134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9841:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5802:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5806:1589"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5530":{"id":"5:5530","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5531:33650","5:5532:13735","5:5535:33651","5:5538:33652","5:5546:33653","5:5547:33654","5:5548:2838","5:5549:27663","5:5550:27664"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3450-0:95:1843":{"id":"b:2:3450-0:95:1843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3448:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3452:1627"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12722:32970":{"id":"2:12722:32970","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2620:1614":{"id":"2:2620:1614","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:42074:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5535:33651":{"id":"5:5535:33651","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7529:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:152:1899":{"id":"0:152:1899","crate_id":0,"name":"UnknownPreReleaseTag","span":{"filename":"src/lib.rs","begin":[358,4],"end":[358,32]},"visibility":"default","docs":"The pre-release tag is unknown.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:154:1746"]},"discriminant":null}}},"0:80":{"id":"0:80","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,16],"end":[90,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9836:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:81:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2815:243-0:48:1807":{"id":"a:2:2815:243-0:48:1807","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2815:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1807","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:41:712":{"id":"0:41:712","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[364,4],"end":[381,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2305:24966":{"id":"2:2305:24966","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3450-0:121:1827":{"id":"b:2:3450-0:121:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3448:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3452:1627"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12735:29101":{"id":"2:12735:29101","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10500:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10500:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"5:5547:33654":{"id":"5:5547:33654","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:276:2276","`String`":"5:7529:249"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:2276","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2616-0:48:1807":{"id":"b:2:2616-0:48:1807","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2586:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1807","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2619:134","2:2620:1614"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:77:1824":{"id":"0:77:1824","crate_id":0,"name":"minor","span":{"filename":"src/lib.rs","begin":[96,4],"end":[96,18]},"visibility":"public","docs":"Minor version","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u64"}}},"0:66":{"id":"0:66","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,37],"end":[71,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clamp","max","min"],"trait":{"name":"Ord","id":"2:2400:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1807","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:67:459"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:93:776":{"id":"0:93:776","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[90,55],"end":[90,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10060:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12747:30627":{"id":"2:12747:30627","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12746:30615"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:44134:2281","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2606-0:75:1820":{"id":"b:2:2606-0:75:1820","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2609:1870"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12821:25962":{"id":"2:12821:25962","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:2279"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:98:1848":{"id":"0:98:1848","crate_id":0,"name":"commit_date","span":{"filename":"src/lib.rs","begin":[156,4],"end":[156,35]},"visibility":"public","docs":"Commit date of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:37:712":{"id":"0:37:712","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[302,4],"end":[323,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12733:29100":{"id":"2:12733:29100","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41931:197"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10500:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10500:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8878:8263-0:48:1807":{"id":"a:2:8878:8263-0:48:1807","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8878:8263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1807","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:133:1841":{"id":"0:133:1841","crate_id":0,"name":"TooManyComponents","span":{"filename":"src/lib.rs","begin":[292,4],"end":[292,21]},"visibility":"default","docs":"Too many components","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:8879:8388-0:95:1843":{"id":"a:2:8879:8388-0:95:1843","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8879:8388","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:3452:1627":{"id":"2:3452:1627","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39691:3489","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2621-0:48:1807":{"id":"b:2:2621-0:48:1807","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1807","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2624:134","2:2625:1612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:154:1746":{"id":"0:154:1746","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[358,25],"end":[358,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:12750:30929":{"id":"2:12750:30929","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:44143:2280","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12774:29136":{"id":"2:12774:29136","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12415:2279","`DoubleEndedIterator`":"2:7785:127","prim@char":"1:12034:448","str::split":"2:12768:1830"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43869:2300","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:2272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:2273","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:39:1926":{"id":"0:39:1926","crate_id":0,"name":"source","span":{"filename":"src/lib.rs","begin":[327,4],"end":[336,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"dyn_trait":{"traits":[{"trait":{"name":"error::Error","id":"2:2668:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:157:1746":{"id":"0:157:1746","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[360,21],"end":[360,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:111":{"id":"0:111","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,27],"end":[147,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2825:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12838:27661":{"id":"2:12838:27661","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8878:8263-0:75:1820":{"id":"a:2:8878:8263-0:75:1820","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8878:8263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:117:1126":{"id":"0:117:1126","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[147,43],"end":[147,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"VersionMeta","id":"0:95:1843","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31167:202","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2303-0:75:1820":{"id":"b:2:2303-0:75:1820","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:2323","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2297:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1820","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2305:24966"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:165:739":{"id":"0:165:739","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["e",{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Error","id":"0:137:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:122:1913":{"id":"0:122:1913","crate_id":0,"name":"ParseIntError","span":{"filename":"src/lib.rs","begin":[282,4],"end":[282,37]},"visibility":"default","docs":"An error occurred in parsing a version component as an integer","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:124:1746"]},"discriminant":null}}},"0:142:1868":{"id":"0:142:1868","crate_id":0,"name":"stdout","span":{"filename":"src/lib.rs","begin":[347,8],"end":[347,22]},"visibility":"default","docs":"stdout output from the command","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:2610-0:137:134":{"id":"b:2:2610-0:137:134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:739"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12760:2677":{"id":"2:12760:2677","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41931:197","prim@char":"1:12034:448","self::pattern":"2:12415:2279"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12815:32986":{"id":"2:12815:32986","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:2279"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:2272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12440:2271","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12830:32989":{"id":"2:12830:32989","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:2279"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:2272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"1:7600:3735":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"2:22:726":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"1:2201:135":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"6:4830:5744":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"18:507:3845":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"6:4516:5632":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:30338:2781":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"2:15:1825":{"crate_id":2,"path":["core","write"],"kind":"macro"},"2:2894:4984":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"6:4710:5696":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:39608:220":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"2:42481:90":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"5:1126:32895":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"17:13839:4597":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"1:8859:8004":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"14:0:2075":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"17:9052:20603":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"1:1568:7080":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"1:11315:2234":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"2:31167:202":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:2948:13748":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"17:12185:4186":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:2538:13678":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"6:6107:6064":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"1:357:7957":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"5:3186:7078":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2:44586:7233":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"2:48294:6713":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"2:2978:13752":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"2:46706:6637":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"16:6600:20560":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"1:11595:6808":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"1:9015:8011":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"6:6700:6149":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"17:1184:7737":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"17:14222:4724":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"2:45985:6607":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"6:6711:6154":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"16:2696:4835":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"2:43755:7955":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:5748:7978":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"1:1542:3645":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"5:5383:2277":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"1:1797:2753":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"16:2406:4823":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"17:12453:4257":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"5:7613:3662":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"1:4705:8348":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"6:5140:5901":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"2:44425:13620":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"17:12646:4287":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"1:6646:239":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"2:23228:188":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"17:12877:4336":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"1:12045:688":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"17:10279:7771":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"2:44479:2307":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"2:12429:2274":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"17:11152:7815":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:22653:30898":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"16:4835:4892":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"2:21212:31907":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"17:9913:7754":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"1:12038:338":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"2:2889:8447":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"11:2569:2212":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"1:4800:3715":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"2:2923:13745":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"11:875:7893":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"5:7518:3658":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"17:12998:4356":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"1:929:8266":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"2:2875:2457":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"1:9187:25967":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"16:7828:5049":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:4682:13667":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"1:946:7893":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"2:7894:175":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:11053:3742":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"6:475:5313":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"5:4376:3652":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"6:4824:5741":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"17:10037:3995":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"6:569:5369":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"17:11390:7817":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"2:41908:6570":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"2:48189:6706":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"14:165:19629":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"2:23042:193":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"18:481:6859":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"1:4627:8323":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"1:8214:2301":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"5:1146:32834":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"2:41167:6555":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"2:9845:2609":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"17:12555:4273":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"10:44:5233":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"5:3733:2828":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"6:5052:5861":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"1:3168:28195":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"16:6844:4957":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"17:14336:4749":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"1:5755:7981":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"5:3150:100":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"2:6445:7110":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"2:42074:232":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"17:10930:4047":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"17:12622:4286":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"1:3165:28198":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"2:42206:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"17:14500:4791":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"17:12577:4280":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"1:6432:7984":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"17:12659:4290":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"14:31:7883":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"17:10457:7784":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"6:4939:1092":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"5:1450:2595":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"2:10313:3702":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"2:22190:8542":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"6:5111:5891":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"2:2869:2455":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"2:47100:6658":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"17:2012:7738":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"16:4613:4886":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"2:22258:13761":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"6:5015:5842":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"17:14461:4782":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"18:614:33991":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"17:13779:4587":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"1:10970:25941":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"6:4738:5698":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"2:44777:233":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"16:8195:7065":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"2:32398:7944":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"1:9129:6794":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"16:7090:7045":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"16:6569:4853":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"1:10833:28232":{"crate_id":1,"path":["std","sys","unix","kernel_copy","FdHandle"],"kind":"enum"},"16:4719:4888":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"2:3327:13585":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"16:7544:7052":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"5:6866:3673":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"6:4480:5618":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"18:599:33989":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"1:4182:8346":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"2:42362:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"5:7629:3666":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"16:5648:7820":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"2:40358:2293":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"2:43663:7952":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"5:7301:3640":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"17:14449:4780":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"2:9306:84":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"17:11382:4071":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"1:7664:7988":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"1:11357:7267":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"1:10759:7255":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"2:40720:7163":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"6:119:14146":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"6:5897:5954":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"5:7333:216":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"17:12075:4166":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"16:7523:7051":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"6:6943:6266":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:40608:7148":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"20:129:2322":{"crate_id":20,"path":["semver","identifier","Identifier"],"kind":"struct"},"17:11911:4136":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"17:11112:7812":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"16:7041:7038":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"2:40655:7155":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"6:4947:5800":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"2:30797:30909":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"0:51:1811":{"crate_id":0,"path":["rustc_version","Channel","Nightly"],"kind":"variant"},"5:2139:3644":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"6:4841:5752":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"17:14347:4750":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"16:7513:7050":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"1:8201:2816":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"2:8201:2270":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"17:10398:7775":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"9:177:19609":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"17:8896:20621":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"6:4616:5681":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"1:6813:8449":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"5:4087:2594":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"18:609:7726":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"17:9973:7759":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"2:21197:31899":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"2:22112:8538":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"6:7604:6292":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"2:4458:2622":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"2:40577:7946":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"17:12712:4298":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"20:356:2319":{"crate_id":20,"path":["semver","Op"],"kind":"enum"},"16:5830:6940":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"20:0:1804":{"crate_id":20,"path":["semver"],"kind":"module"},"2:10959:7936":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:5989:226":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"0:49:1809":{"crate_id":0,"path":["rustc_version","Channel","Dev"],"kind":"variant"},"2:45953:6606":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"2:44582:7232":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:44125:2283":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"6:6120:6068":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:39878:30263":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"16:2832:4841":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"1:12057:1691":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"5:3179:2593":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"2:40457:30903":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"11:1923:7080":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"2:1644:629":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"2:41133:7177":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"2:44858:7240":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"17:14002:4641":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"17:12485:4264":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"1:2210:2807":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"18:652:3845":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"2:42323:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"6:596:5384":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"1:7856:6722":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"17:11491:4088":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"5:1281:7896":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"17:504:7735":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"11:396:3620":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"20:220:134":{"crate_id":20,"path":["semver","parse","Error"],"kind":"struct"},"10:36:5232":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"2:3557:3645":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"6:7343:6275":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"17:14091:4665":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"5:6837:3660":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"1:8238:8315":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"16:5612:4851":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"17:9138:3975":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"6:1674:5504":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"2:4943:848":{"crate_id":2,"path":["core","iter"],"kind":"module"},"2:31195:2472":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"17:10662:7789":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"1:8327:8002":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"5:1110:32836":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"2:40294:7136":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"6:4989:5830":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"2:4253:2620":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"17:10371:7773":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:45841:6601":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:4153:8343":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"5:7529:249":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2:43973:2302":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"5:1522:216":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"1:8233:8000":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"5:2149:7085":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"2:44105:2294":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"6:4529:5637":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"1:8158:2229":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"17:14043:4650":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2:2927:13744":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:6072:1807":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"2:40407:13674":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"2:40306:30914":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"2:10060:153":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"17:10789:20725":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:41717:8316":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"1:904:3662":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"17:13163:4388":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"17:12725:4299":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"1:4823:8333":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"2:2884:8445":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"16:7015:4971":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"1:6164:3722":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"16:2810:4840":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"17:10699:7795":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"6:4434:5593":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"16:6415:6994":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"17:14084:4664":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"18:538:3850":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:7838:2326":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:48241:6710":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"2:9311:91":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:3299:13648":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"2:3312:31841":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"17:12438:4252":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"11:102:7068":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"5:2057:7910":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"5:35:3624":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"1:3241:2835":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"2:44820:7406":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"2:3049:123":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"17:9868:3990":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"0:141:1867":{"crate_id":0,"path":["rustc_version","Error","CommandError"],"kind":"variant"},"17:13612:4557":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"2:42921:6576":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"17:11227:6905":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"17:13817:4593":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"1:415:181":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"17:12209:4188":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"2:3062:2599":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"6:5123:5897":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"5:7262:3105":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"6:4860:5760":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"11:1603:7902":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"5:7311:32821":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"1:11455:3745":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"17:12112:4172":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"1:6542:7985":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"2:4082:107":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:10298:3697":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"2:2964:4991":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"11:430:33958":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"17:13072:4367":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"2:9811:140":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"1:1967:204":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"1:8979:113":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"2:32391:5028":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"17:11662:4094":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"1:8309:6765":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"1:9110:158":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"17:11063:7808":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"1:3932:8319":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"6:4388:5559":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"16:6901:4855":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"5:7543:7102":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"1:2206:3678":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"1:12033:1025":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"11:687:2594":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:44566:7228":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"1:8563:7253":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:48142:6702":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:42520:97":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:2353:6326":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"2:44374:7217":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"16:5088:4900":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"16:5435:4904":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"1:8454:6585":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"1:12041:1617":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"2:40487:2252":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"1:9469:135":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"17:10266:7770":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"2:46864:6654":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:5641:7242":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"16:7782:7053":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"20:337:2318":{"crate_id":20,"path":["semver","Comparator"],"kind":"struct"},"17:1075:7736":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"2:46175:6615":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:48317:6714":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"17:9999:3962":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"1:2623:2817":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"17:13203:4393":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"18:491:6860":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"2:44299:7214":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:2364:207":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"17:8979:20624":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"2:42167:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"17:11720:20630":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"17:11789:4103":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"6:6159:6079":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"16:0:2077":{"crate_id":16,"path":["gimli"],"kind":"module"},"18:766:24593":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"4:0:2069":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"5:2231:32800":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"6:4977:5821":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"2:2580:159":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"6:7639:6300":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"7:0:1681":{"crate_id":7,"path":["unwind"],"kind":"module"},"17:11307:4063":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"1:9148:7254":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"6:588:5379":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"2:2958:4990":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:724:150":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"11:2231:7081":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"2:3287:143":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:8147:2842":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"5:4361:270":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:2974:13751":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"0:28:1872":{"crate_id":0,"path":["rustc_version","version_meta_for"],"kind":"function"},"16:3888:4876":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"17:12306:4219":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"17:13299:4411":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"17:10535:6886":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"16:4585:4885":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"17:10686:7793":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"17:11192:4060":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"0:121:1827":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError"],"kind":"enum"},"17:13136:4386":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"17:12791:4308":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"1:7896:125":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"17:10441:7779":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"17:10521:6885":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"17:14297:4737":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"1:10323:111":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"2:10500:245":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:9851:212":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"2:3282:260":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"2:40322:6553":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2:41683:6559":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"1:8815:2224":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"17:14356:4752":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"17:14537:4798":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"0:149:1936":{"crate_id":0,"path":["rustc_version","Error","SemVerError"],"kind":"variant"},"1:2913:3288":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"5:687:116":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"17:12779:4307":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"6:4814:5735":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"16:7503:4859":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:23197:187":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"2:46316:6625":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"2:21981:8453":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:11146:2224":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"6:4686:5694":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"1:5383:2215":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"1:9197:6798":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"17:13891:4614":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"1:1744:653":{"crate_id":1,"path":["std","env"],"kind":"module"},"17:9103:3974":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"17:11138:7814":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"9:426:19544":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"17:13759:4579":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"2:39466:13587":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"1:8002:3291":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"17:10772:4016":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"2:42440:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"6:7679:6308":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"17:10751:4014":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"16:6204:7829":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"16:4745:4889":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"1:9100:240":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"2:40739:7165":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"11:1566:19624":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"6:4870:5764":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"17:10215:7768":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"11:2469:3662":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"17:12831:4312":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"2:12120:7196":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"6:6658:6125":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"6:6913:6251":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"16:7792:20566":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"2:40426:6554":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"2:41830:30908":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"17:11282:4062":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"16:2864:4842":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"5:5956:71":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"1:5130:210":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"5:4207:2799":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"6:4724:5697":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"1:3891:1802":{"crate_id":1,"path":["std","num"],"kind":"module"},"6:5085:5874":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"2:4404:2621":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"1:8960:6789":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"6:6934:6263":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"17:14146:4679":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"2:41119:7175":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"2:2827:115":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"6:6071:6050":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"2:21549:8452":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"16:4053:4878":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"1:6598:8416":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"17:9763:33977":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"6:6798:6183":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"17:13114:4375":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"17:11873:4121":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"1:10097:8019":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"6:5955:5987":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"16:3600:4872":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"2:47896:6697":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"2:42961:5064":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"2:22731:2785":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"5:6525:3628":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"2:40550:2228":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"1:504:3644":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"17:13877:4611":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"2:46484:6630":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:2369:8298":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"6:533:5349":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"6:1697:5514":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"17:8954:20623":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"6:7651:6302":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"1:10794:6722":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"1:3734:7971":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"17:13260:4401":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"2:1651:6323":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"17:11408:20626":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"5:898:2593":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"17:9208:3977":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:11372:7312":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"2:43186:2605":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"6:6059:6043":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"1:952:7894":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"2:22333:8534":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"2:0:528":{"crate_id":2,"path":["core"],"kind":"module"},"1:4161:8344":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"16:8239:5028":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"16:6041:20558":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"5:207:3626":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"1:6428:7177":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"17:12514:4269":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"2:44019:2297":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"11:1025:7895":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"6:555:5361":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"6:7657:6303":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"17:14174:4687":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:41853:7187":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"17:10411:7776":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"17:13915:4619":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"17:3232:7743":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:43720:7119":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"17:10060:3997":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"11:490:150":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"6:7692:6312":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:1759:2743":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"1:2427:1801":{"crate_id":1,"path":["std","io"],"kind":"module"},"16:4806:4891":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"2:3080:138":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"17:9791:33984":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"1:7739:2763":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"17:12173:4183":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"15:288:19648":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"11:2151:7896":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"18:0:2079":{"crate_id":18,"path":["memchr"],"kind":"module"},"2:2369:131":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"16:2907:4844":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"17:13175:4389":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"5:1310:7899":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"1:11518:7972":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"17:11640:4060":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"11:837:7888":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"2:2583:141":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"17:10187:6880":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"18:755:6876":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"17:8849:20620":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"5:2698:6320":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"2:47176:6660":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:10537:2835":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"1:10769:7245":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"11:2443:3645":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"16:2284:19668":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"17:11296:6909":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"0:26:1875":{"crate_id":0,"path":["rustc_version","version_meta"],"kind":"function"},"17:12474:4261":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"17:12532:4270":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"6:4455:5602":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:5397:2216":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"2:46138:6613":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"17:13229:4395":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"17:13576:4527":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"6:5969:5988":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"6:4878:5768":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"5:3212:7079":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"2:43202:2604":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"17:8714:20616":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"2:6439:7111":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"5:3246:7080":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"13:0:2068":{"crate_id":13,"path":["std_detect"],"kind":"module"},"16:6513:6999":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"1:8331:6158":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"16:6332:4845":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"6:5152:5906":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"18:574:3845":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:4478:2461":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"5:3191:32890":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"1:8353:6766":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"16:2380:4822":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"16:8167:7882":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"17:12155:4182":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"17:2209:7742":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"17:10604:6891":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"1:2601:3697":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"1:3512:2239":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"1:482:3709":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"6:4914:5783":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"1:6545:8414":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"5:1019:3628":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"17:8927:20622":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"1:4742:8334":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"17:12044:4162":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"5:3576:179":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"5:2978:32729":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"6:4922:5788":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"6:5044:5859":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"2:12486:13613":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"17:11711:4063":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"18:644:3845":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"16:7054:7041":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:22151:8539":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"2:48356:6715":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"5:261:3628":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"17:9824:20636":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"2:43211:153":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"6:5982:5994":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"17:9243:3978":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"1:8170:2814":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"2:2877:112":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"16:2881:4843":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"18:548:149":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"0:155:1939":{"crate_id":0,"path":["rustc_version","Error","LlvmVersionError"],"kind":"variant"},"17:10421:3918":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"16:149:3612":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"17:10638:6896":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"17:14402:4766":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"1:5053:7977":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"6:7668:6307":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"16:2596:4831":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:22202:30938":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"16:2722:4836":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"17:12025:4157":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"1:6898:3730":{"crate_id":1,"path":["std","sys","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"17:14523:4795":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"16:5049:4899":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"5:5149:3657":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"6:5104:5888":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"1:1820:2759":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"16:2450:4825":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"1:8191:2815":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"16:2618:4832":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"16:5403:3972":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"16:7269:33972":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"17:11536:6913":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"1:11236:158":{"crate_id":1,"path":["std","sys","unix","time","Instant"],"kind":"struct"},"2:2931:13746":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"16:7102:20563":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"11:1051:7896":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"2:2316:110":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:13260:148":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"17:14077:4663":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"1:10804:136":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"6:5891:5953":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:6253:7106":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"17:10341:4011":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"11:844:8266":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"2:46055:6610":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2:40520:2266":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"2:42005:2595":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:3293:13649":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"17:11352:4067":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"1:5627:226":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"9:486:19541":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"6:5146:5903":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"17:14127:4674":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"2:5828:7105":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2:43683:7953":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:8552:6784":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"1:7733:8261":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"6:4523:5635":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"6:4566:5658":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"9:393:19543":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"6:62:14092":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"6:6128:6070":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:44883:7241":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"6:5004:5839":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"6:1501:5390":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"1:622:2788":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"16:6401:4847":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"2:10779:7933":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"2:5715:7104":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"2:44828:6597":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:10842:28234":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"2:41175:7179":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:11983:7313":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"2:43673:7118":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"17:10127:6877":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"6:501:5326":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"16:5982:6958":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"17:9712:33981":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"7:31:19528":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"2:40769:7168":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"16:7474:7870":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"17:14379:4765":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"6:1703:5515":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"6:1632:5475":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"16:7621:20565":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"2:13017:161":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"6:1528:5401":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"11:1896:3662":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"11:1087:33953":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"6:1537:5406":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"6:495:5324":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"1:12005:8262":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"1:11539:7973":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"16:7694:4863":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"1:7690:3739":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:41866:7248":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"17:10495:6882":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"2:40530:2265":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"17:13668:4563":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"17:13967:4632":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"1:8386:8384":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"17:9661:33979":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"17:11338:20750":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"17:11202:6897":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"2:4843:417":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"2:43694:6590":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2:21540:8307":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"2:40730:7164":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:850:2594":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"16:3915:4877":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"17:9608:7749":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"6:5885:5950":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:9853:2612":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"16:7436:5030":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"2:23104:191":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"2:23073:194":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"6:4755:5707":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"2:42014:6573":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:10852:2300":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"6:4375:5549":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"17:13974:4633":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"2:2297:103":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"11:434:33954":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"2:21158:2472":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"1:363:7958":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"1:12048:791":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"6:4549:5648":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"17:13287:4404":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"16:6425:6995":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"1:10782:7263":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"2:44168:2293":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:22418:7123":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"2:43919:2304":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"6:574:5371":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"1:3493:28238":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"14:187:19636":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:10281:3696":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"17:11508:20628":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"17:12766:4306":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"2:23321:2784":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"2:46508:6631":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"5:0:313":{"crate_id":5,"path":["alloc"],"kind":"module"},"1:894:3645":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"2:2915:8446":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"17:14283:4731":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"1:9481:3737":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"17:14014:4642":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"17:10228:7769":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"17:10950:7803":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"1:1563:7079":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"5:1680:3628":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"2:39427:2598":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"17:256:7732":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"1:1041:7046":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"16:3049:19697":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"5:1531:7909":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"11:800:3645":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"17:11548:4090":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"9:237:6585":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"11:1891:3645":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"2:9847:2610":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"16:6545:4922":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"16:5712:6929":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"2:1961:6327":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"5:3589:2593":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"16:6531:7007":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"17:9897:20638":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"1:10432:2223":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"2:44594:7235":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"2:48104:6701":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"2:4058:7921":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:9973:7184":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"2:13091:7942":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:8293:8001":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"2:9638:2630":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"6:7633:6299":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"6:7556:6290":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"17:3441:7744":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"16:5816:6939":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"17:11245:4092":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"17:9391:135":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"1:3396:2799":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"2:26168:272":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"6:6804:6185":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"6:1734:5526":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"5:781:101":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"12:0:2074":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"16:5634:6923":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"16:5574:4846":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"2:32499:2460":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"14:202:13621":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"17:12738:4301":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"1:3839:7973":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"17:12238:4199":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:40669:7158":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"17:13907:4617":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"17:12124:4173":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"1:11390:7270":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"2:44574:7230":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"2:8878:8263":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"2:2825:251":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"13:226:5225":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:30565:6348":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"6:6927:6260":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"2:43901:2305":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"6:7371:6278":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:21180:31904":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"6:5992:6001":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:44767:225":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"2:21195:31911":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"16:5727:6932":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"1:10340:27784":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"16:5588:4849":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"16:6687:7013":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"2:3692:2595":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"0:75:1820":{"crate_id":0,"path":["rustc_version","LlvmVersion"],"kind":"struct"},"16:6318:4917":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"1:8477:6779":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:41157:3691":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"18:681:6864":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"17:11125:7813":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"1:12054:1635":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"2:2822:2323":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"16:4497:4882":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"1:12044:686":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"17:13216:4394":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"6:1570:5429":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"16:5384:20554":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"6:6781:6178":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:25:653":{"crate_id":2,"path":["core","env"],"kind":"macro"},"1:1910:699":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"6:5928:5967":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"2:4:1105":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"17:10727:7798":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"17:2178:7739":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"2:42681:2609":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:8937:8420":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"2:41929:200":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"16:7708:4864":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"15:327:19653":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"2:2982:13753":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"5:5802:257":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"11:1676:3622":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"1:12034:448":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"2:47210:6661":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"2:3112:8281":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"1:1822:2760":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"2:4070:7922":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:3162:26146":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"1:3280:2831":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"16:7613:7877":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"6:5075:5869":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"6:5859:5935":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"6:4884:5769":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"5:6008:14066":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"1:1407:152":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"2:22669:30911":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"16:6376:20559":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"2:39542:216":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"16:536:6916":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"5:7325:2595":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"2:44231:13619":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:8208:2285":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"17:13827:4594":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"2:40374:2291":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"18:636:3865":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"17:12294:4216":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"2:46462:6629":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"6:1576:5431":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"17:261:7733":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"1:10764:7257":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"5:6479:3645":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"5:5339:3628":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"17:9004:20625":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"11:2562:5230":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"6:1682:5505":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"0:55:1815":{"crate_id":0,"path":["rustc_version","Channel","Stable"],"kind":"variant"},"1:4030:8324":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"1:11180:6594":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"1:4131:27624":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"17:12935:4348":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"6:4543:5645":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"1:8301:7998":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"11:710:7886":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2:40279:2292":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"14:221:5178":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"2:41980:170":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"1:3203:2834":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"17:12751:4303":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"1:7902:2856":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"2:7070:2650":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"2:2899:4981":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"17:12281:4215":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"5:3682:3628":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"16:6017:20557":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"2:44150:2291":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"6:6718:6158":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"1:10249:2232":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"2:22705:2783":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"2:12231:2282":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"11:1903:7077":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"17:9087:3973":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"6:580:5374":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"17:11216:6901":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"6:6691:6148":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"11:2548:5228":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"5:1511:7887":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"17:10140:20655":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"17:10562:6888":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"11:0:2073":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"17:10715:7797":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"17:11743:4099":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"1:8494:8398":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"2:30605:6351":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"17:11618:4092":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"16:4862:4893":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"2:43004:134":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"2:2919:8448":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"5:2043:2828":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"2:44870:6600":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"1:10534:2833":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"2:1749:13771":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:11036:3740":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"0:138:1864":{"crate_id":0,"path":["rustc_version","Error","CouldNotExecuteCommand"],"kind":"variant"},"5:6856:3672":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"17:13041:4362":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"17:12226:4196":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"2:10490:8307":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:915:7886":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"1:12053:1634":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"6:4488:5621":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:44446:7223":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:3484:2242":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"2:22540:7125":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"2:47360:6662":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:11309:7264":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"6:4595:5672":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"6:6012:6017":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"2:40366:2292":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"16:6968:20562":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"6:4440:5595":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"6:1591:5443":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"5:2968:32967":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"6:489:5321":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"17:10166:20656":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"1:4233:7974":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"17:13869:4608":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"2:7462:2840":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"17:9946:3993":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"6:5068:5866":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"2:2668:134":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"18:515:3848":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"16:2305:19694":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"6:1496:5388":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"17:11368:4068":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"2:42066:2597":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"17:582:3969":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"1:5084:7977":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:9489:33978":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"2:47566:6694":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"6:6682:6142":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"9:450:19542":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"1:7916:7992":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"17:10647:4076":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"1:4313:7975":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"6:4506:5629":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"16:7736:5040":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"2:3272:13755":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"11:1910:7078":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"17:11887:4122":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"1:1535:2593":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"16:6279:4914":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"2:43765:7121":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:641:7962":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:8879:8388":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"16:7554:4861":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"1:10099:8018":{"crate_id":1,"path":["std","sys","unix","os","EnvStrDebug"],"kind":"struct"},"2:2577:76":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"11:2124:7046":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:22175:8307":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"2:45861:6602":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"17:11049:7804":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"2:32351:2227":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"16:7462:5031":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"11:1066:19623":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"17:14325:4744":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"17:10739:7799":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"18:727:3869":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"2:21869:31909":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"17:14479:4788":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:2294:102":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"16:2321:4813":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"2:46530:6632":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:42057:13824":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"2:48200:6707":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"17:13149:4387":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"2:43233:7191":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:923:7888":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"11:299:7069":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"1:6196:7983":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"1:3325:2821":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"16:6583:7009":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"1:12056:842":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"2:40627:7151":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"6:5023:5847":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:48066:6700":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"18:80:24581":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:40919:7172":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:12000:26228":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"18:564:3852":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:44347:7216":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"1:2663:2827":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"1:11199:6794":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"2:21168:31904":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"16:5017:4898":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"6:5117:5894":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"11:856:7891":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"5:2970:6319":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"1:12040:1531":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"1:5310:126":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"1:12049:792":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"5:785:3631":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"17:12466:4259":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"11:2542:5227":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:46432:6628":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"11:700:2595":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"2:44646:7237":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"2:11940:13831":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"6:527:5346":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:13004:146":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"17:12912:4347":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"16:6485:4848":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"5:4999:2799":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"17:12984:4355":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"17:8595:20604":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"18:113:24583":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"17:400:7734":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"16:4949:4896":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"17:13102:4373":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"2:23290:186":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"17:11587:4091":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"16:2504:4827":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"2:48215:6708":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"17:9329:2285":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"6:4902:5778":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:30633:30897":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"17:0:2078":{"crate_id":17,"path":["object"],"kind":"module"},"2:44143:2280":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"2:46910:6655":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"2:2823:2452":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"17:11359:20751":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"16:6226:7844":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"2:2837:2453":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"2:44073:2299":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:12016:25954":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"16:7360:33973":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"6:4698:5695":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"17:10013:4004":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"6:5910:5955":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:7669:6721":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"2:43809:2290":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"16:6499:4865":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"16:8134:7064":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"1:5242:209":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"17:10963:4050":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"2:2953:13749":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"5:1296:7895":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"16:4527:4883":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:3209:217":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"2:2872:2324":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"11:883:7894":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"17:9278:3979":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"11:2369:7905":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"16:5673:4850":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"11:2498:19619":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"2:10740:2282":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"17:14101:4668":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"2:40445:2251":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"17:10317:4009":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"1:7645:6720":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"17:12946:4350":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"2:9792:232":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"1:4908:8373":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"17:10904:7800":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"17:13275:4063":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"6:4578:5664":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:23135:196":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"16:2788:4839":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"2:22615:6336":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:3201:2833":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"2:42117:2593":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"2:10973:7937":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:10824:2229":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"17:14025:4646":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"2:10052:149":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"18:736:24592":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"9:357:19557":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"2:43654:7116":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"2:42688:2608":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:12037:1142":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"6:6079:6051":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"16:2969:19696":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"17:8826:20619":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"5:276:2276":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"16:8115:7061":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:43795:1933":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"16:2744:4837":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"6:563:5366":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"2:12157:7199":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"17:10024:7750":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"1:3368:2841":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"1:646:8257":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"17:11087:7810":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"16:7651:7878":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:43821:2287":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"1:7718:8260":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"6:5974:5989":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"5:1490:7900":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"2:22067:8537":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"16:4921:4895":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"2:44253:7204":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"17:9781:7752":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"2:41700:6561":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"17:10293:4004":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:9841:126":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"6:1639:5479":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:7176:13725":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"2:22607:6335":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"2:41142:7178":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"0:129:1917":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","MinorVersionMustBeZeroAfter4"],"kind":"variant"},"1:919:7887":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"16:4344:4879":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"5:7271:2595":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:42133:2595":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"17:10508:6884":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"2:22244:8543":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"1:4493:8349":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"0:147:1909":{"crate_id":0,"path":["rustc_version","Error","UnexpectedVersionFormat"],"kind":"variant"},"7:78:19535":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"2:39586:221":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"16:4462:4881":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"2:7240:30696":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"2:40698:7161":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"17:12008:4155":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"2:40687:7160":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"6:4603:5677":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"2:2400:201":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"1:2519:2824":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"16:4986:4897":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"16:6721:20561":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"1:4571:8366":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"2:4321:227":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"2:6450:3689":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"1:12046:793":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"1:910:7900":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"1:4917:8374":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"6:542:5355":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"17:10469:4012":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"1:7849:7245":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"2:13315:8267":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"6:4955:5805":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"17:11328:6911":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"2:40336:7137":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2:42142:202":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"16:7342:33974":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"17:10673:7790":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"18:582:2472":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"16:7492:7047":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"6:4473:5614":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"5:6112:2799":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"2:21832:8457":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"16:6560:3615":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"1:7879:136":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"16:6189:6988":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"6:1546:5412":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"16:8097:7058":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"1:12051:1636":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"1:10988:2226":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"2:5637:2799":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"1:868:7075":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"1:8227:7998":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"16:6792:7027":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"6:4666:5692":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"16:4557:4884":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"16:2359:4821":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"2:39652:2206":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"1:5570:2220":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"17:11163:4055":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"2:4505:2623":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"5:7370:2595":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"17:14309:4740":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"17:12197:4187":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"11:811:3662":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"2:11956:7940":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"2:48160:6703":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"16:2670:4834":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"5:1472:7075":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"14:40:4137":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"5:6346:8545":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"1:1539:2595":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"1:2371:8299":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"2:9836:117":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:9849:2611":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:8287:8347":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"20:322:2321":{"crate_id":20,"path":["semver","VersionReq"],"kind":"struct"},"6:4789:5723":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"1:1761:2744":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"2:44602:6594":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"2:4210:7103":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"17:14515:4792":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"2:44055:2298":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"6:6100:6063":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"2:21429:8454":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:47708:6695":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"17:11574:6914":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"6:6898:6244":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"1:10955:2219":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"2:41997:2594":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"11:351:33950":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"2:22592:30904":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"11:1917:7079":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"5:7362:2595":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"16:5939:6955":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"2:39566:218":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"6:1514:5396":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:12375:1803":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"17:12811:4311":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"17:10241:3993":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"2:4330:7925":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"17:13011:4357":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"11:2423:2595":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"16:2472:4826":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"1:12058:1238":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"2:21421:8307":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"2:22338:8532":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"1:7866:7246":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"1:1864:1800":{"crate_id":1,"path":["std","error"],"kind":"module"},"16:7568:4862":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"16:7318:5010":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"2:44785:213":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"2:40473:2250":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:2355:8294":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"1:11384:7269":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"16:2428:4824":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"1:11342:6807":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"16:6915:4856":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"17:13686:4568":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"2:7756:2327":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"2:9493:32193":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"5:1481:7076":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"17:11394:134":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"3:0:473":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:40707:7162":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"16:7391:20564":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"2:22698:7130":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"2:43594:7951":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"5:7429:2213":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"1:1064:7896":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"11:1887:2595":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"1:5634:3723":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"1:2203:7969":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:11970:1873":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"1:6359:182":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"16:7862:7054":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2:4864:31823":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"2:2709:2791":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"17:3565:7745":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"2:12420:2272":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"6:7388:6289":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"1:7581:3733":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"6:1507:5393":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"6:6764:6177":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"18:671:7731":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"1:5417:2217":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"6:1664:5498":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:12415:2279":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"2:42977:73":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"5:1382:99":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"16:6261:7855":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:13211:113":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"1:9070:6793":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"17:10548:6887":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"2:40586:2815":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"17:12099:4170":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"5:4406:2799":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"1:4169:8345":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"6:4364:5541":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"16:6879:4961":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"6:4556:5651":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"16:3655:3878":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"1:588:8254":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"17:13694:4569":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"1:6612:3728":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"17:12960:4352":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"6:1710:5518":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"17:13555:4519":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"6:7702:6314":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"2:8991:2272":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"2:46786:6638":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"2:21551:6328":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"2:47818:6696":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"11:774:7075":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"2:23166:190":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"2:39526:219":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"6:4745:5700":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:43441:7193":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"2:43241:7192":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:48264:6711":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"17:14057:4657":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"17:14157:4680":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"1:1551:7077":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"2:12180:7200":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"20:402:2317":{"crate_id":20,"path":["semver","BuildMetadata"],"kind":"struct"},"1:7839:3470":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"1:9276:2759":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"6:7365:6276":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"6:6136:6073":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"17:14270:4725":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"16:6467:6998":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"2:46940:6656":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"5:4015:3645":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"6:4428:5592":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"1:5433:2218":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"17:12971:4353":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"1:12059:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"5:1265:7046":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"17:9456:33980":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"2:22471:7124":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"16:5121:4901":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"2:40617:7149":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"2:5542:2799":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"2:4449:3683":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"6:4584:5667":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"17:11474:3939":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"17:12699:4296":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"2:10817:7934":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"2:40779:7169":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"5:1419:2593":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:2210:13761":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"2:45931:6605":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"20:281:8011":{"crate_id":20,"path":["semver","error","Position"],"kind":"enum"},"2:40646:7154":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"6:6263:6118":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"17:12686:4295":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"6:6666:6130":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"2:43827:2286":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"6:483:5318":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"2:2943:13747":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"6:6868:6227":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"1:11818:3749":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"17:13793:4591":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"2:10672:2594":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"6:4401:5569":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"17:10098:7763":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"17:14111:4671":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"5:7023:3677":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"16:6893:4963":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"17:13711:4570":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"2:40933:7173":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:8974:8005":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"2:40909:2816":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"6:1558:5421":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"1:3672:8317":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"1:8843:2226":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"6:4676:5693":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"2:8210:13721":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"16:3797:4874":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"5:7445:2246":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2:2987:13754":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"17:8795:20618":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"2:42245:86":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:10215:3693":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"16:5905:6949":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"1:7907:7247":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"6:5130:5900":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"11:742:7887":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"11:2383:2593":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"16:6352:6990":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"2:1763:6324":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"1:3243:2836":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"16:7582:5033":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"13:110:33959":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"2:13066:211":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"16:5963:7822":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"2:7522:3718":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"2:8880:7930":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"6:6222:6092":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"1:12050:788":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"16:6243:7847":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"17:12137:4174":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"1:4702:8375":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"17:11024:4053":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"6:4351:5532":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"11:1007:7046":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"2:3448:70":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"1:9027:8013":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"17:9702:7750":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:45907:6604":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:2587:2825":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"2:43645:7115":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"16:6818:7028":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"11:2326:7895":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"16:5866:6946":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"1:3968:8320":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"2:46386:6627":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"2:23011:192":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"17:9887:7753":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"17:12497:4266":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"1:4966:8380":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"2:48226:6709":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"11:2554:33948":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"20:301:1805":{"crate_id":20,"path":["semver","Version"],"kind":"struct"},"2:46086:6611":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"6:7616:6294":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"6:507:5329":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"6:6086:6052":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"6:4535:5640":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"5:5987:3657":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"6:4461:5605":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"6:1913:15497":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"17:13982:4634":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"17:12268:4211":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"16:3065:3873":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"11:1107:7897":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"2:46683:6636":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"17:13025:4360":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"16:3461:4871":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"16:5696:20555":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"2:43194:7190":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"2:13222:3707":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"16:7884:20567":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"17:8687:20615":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"2:9843:2608":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"17:12847:4317":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"1:10157:8020":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"6:6047:6038":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"19:0:1122":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"1:3990:8322":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"16:6742:7014":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"17:9351:3981":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2:45885:6603":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"2:2911:4985":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"5:1500:7886":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"16:8294:134":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"16:2574:4830":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"17:12087:4167":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"18:96:24582":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"2:30621:2618":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"2:39691:3489":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"2:22719:1913":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"5:4439:3652":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"1:4746:8337":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"5:5872:3645":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"2:44436:7219":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"2:46037:6609":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"16:6456:6997":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"17:11688:20629":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"2:42559:7932":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"2:42047:7947":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"17:12672:4020":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"1:11478:7971":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"17:12253:4205":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"16:8154:7879":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"6:6169:6081":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"18:624:33990":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:10100:2603":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"2:44411:7218":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"5:2967:2697":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"16:6960:7859":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"6:4647:5691":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"16:6171:212":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"2:44841:177":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"17:14317:4743":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"6:4610:5679":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"17:11001:4052":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"1:10946:5292":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"17:14135:4675":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"2:3073:2325":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:12035:1652":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"17:14164:4682":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"14:160:7883":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"5:4045:3628":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"9:0:2071":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"18:699:6868":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"1:12039:1498":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"6:4783:5720":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"0:152:1899":{"crate_id":0,"path":["rustc_version","Error","UnknownPreReleaseTag"],"kind":"variant"},"1:638:7960":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"16:2526:4828":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"1:10078:2753":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"16:7677:216":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"6:4808:5733":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2:22204:13761":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"2:46015:6608":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:8546:2593":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"1:4639:6171":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"6:548:5358":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"2:2212:13762":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"1:6251:3723":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"11:2536:5226":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"5:7291:3645":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"0:133:1841":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","TooManyComponents"],"kind":"variant"},"6:0:872":{"crate_id":6,"path":["libc"],"kind":"module"},"1:8992:25467":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"1:8921:8418":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"2:42949:31453":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"16:7597:33971":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"6:7610:6293":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"1:9105:241":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"17:11449:20627":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"17:10113:7764":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"17:14421:4771":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"16:6083:19667":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"2:2574:77":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"2:43775:7956":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:7844:7990":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"6:5009:5841":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"17:434:3925":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"16:6944:33970":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"1:1557:7078":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"2:43426:6589":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"1:10814:125":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"11:2140:7895":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"5:2469:6316":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"17:10617:6892":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"1:8007:3292":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"16:7722:4854":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"2:42080:133":{"crate_id":2,"path":["rustc_version","Result","Err"],"kind":"variant"},"2:47958:6698":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"2:41889:6569":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"17:10479:1805":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"2:42931:2618":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"2:48169:6704":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"17:9532:33983":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"1:12032:399":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"2:43746:7120":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"2:21827:8307":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"1:8985:8007":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"6:5867:5937":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"16:5798:4907":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"1:8275:7248":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"6:6889:6241":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"1:7932:2828":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"2:40599:7146":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"11:787:7076":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"1:557:7959":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"1:4641:6173":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"1:3282:2832":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"2:46554:6633":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:7924:2826":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"2:12646:117":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"2:46240:6617":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"2:4325:7924":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"17:12889:4338":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"1:5448:111":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"1:11292:3743":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"2:40393:7140":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"11:1728:152":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"11:1142:7898":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"5:1434:2594":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"6:4628:5690":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"17:14435:4773":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"2:47022:6657":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"17:10448:7081":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"6:4968:5815":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"16:5363:4903":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"5:5387:2278":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"1:11172:28235":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"1:9022:8012":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"2:39684:7945":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"0:137:134":{"crate_id":0,"path":["rustc_version","Error"],"kind":"enum"},"16:7006:7860":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"2:41660:167":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"2:4394:3682":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"2:2970:13750":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"2:2832:253":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"2:44001:2296":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"2:22304:8533":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"1:1073:7899":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"2:44268:7210":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"2:43955:2303":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"2:2537:8307":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"2:40346:7138":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:22524:6330":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"17:11262:6907":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"0:45:232":{"crate_id":0,"path":["rustc_version","Result"],"kind":"type_alias"},"5:6998:3674":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"1:8221:2294":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"2:7292:13717":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"5:1784:3662":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"2:32387:3488":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"2:41989:2593":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"1:860:2595":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:2406:208":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"5:6599:2595":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"2:2815:243":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"17:13950:4625":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"5:4177:2799":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"17:13488:4464":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"17:13547:4516":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"16:6929:4966":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"6:6114:6065":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"5:7279:7096":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"17:9618:33985":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"6:7645:6301":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"17:13189:4390":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"16:2644:4833":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"17:11174:20749":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"17:9960:7758":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"2:42401:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"2:12196:7201":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:6299:226":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"14:7:7883":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"16:6753:7015":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"6:4449:5600":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"5:3338:3662":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"2:21370:8455":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"5:629:7906":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"2:44598:7236":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"11:328:7072":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"17:2150:20683":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"15:306:19649":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"6:4847:5755":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"16:7284:6573":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"15:394:19659":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"1:4637:6169":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"17:14034:4649":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"2:10945:2302":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:30691:30900":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"16:4641:4887":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"2:9793:2242":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"2:21857:6329":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"17:9934:7756":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"5:7462:2249":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"17:11992:4151":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"1:8803:205":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"2:42702:2611":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"14:215:7066":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"2:8248:32196":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:30599:6349":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"20:90:8059":{"crate_id":20,"path":["semver","error","QuotedChar"],"kind":"struct"},"2:48180:6705":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"2:44159:2292":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:6468:3727":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"2:10931:2303":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"16:4774:4890":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"16:8072:5088":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"1:1055:7895":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"17:9575:33982":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"17:10629:6895":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"2:46286:6624":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"6:1604:5450":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"17:11846:4113":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"2:10890:7935":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"18:707:2274":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"17:10981:4004":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"0:0:1952":{"crate_id":0,"path":["rustc_version"],"kind":"module"},"11:832:7900":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"6:1596:5445":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"1:3427:2240":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"0:48:1807":{"crate_id":0,"path":["rustc_version","Channel"],"kind":"enum"},"5:678:256":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:9498:31486":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:9049:25410":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"2:4179:7923":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:7644:8307":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"1:5782:7982":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"17:10576:6889":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"2:46156:6614":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"1:4744:8336":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"5:5645:3660":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"11:364:3618":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"11:2403:2594":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"2:40755:3863":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"11:1160:7899":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"16:3764:4873":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"2:4105:13584":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"5:5441:1531":{"crate_id":5,"path":["alloc","str"],"kind":"module"},"2:22556:6331":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"2:3077:137":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:44570:7229":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"17:11317:4066":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"16:6361:6991":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"6:7598:6291":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:8797:2223":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"2:21442:6328":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:5827:3717":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"17:10431:7778":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"17:13452:4433":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"1:5502:2219":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"1:11047:3741":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"11:1883:2593":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"11:123:3616":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"16:4417:4880":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"17:9565:7748":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"17:13923:4621":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"17:9373:3982":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"1:10740:8028":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"1:3938:8318":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"18:719:3866":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"2:21423:8451":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:11607:27718":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"6:4764:5712":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"6:6228:6093":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"1:3982:8321":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"5:4772:712":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"1:9095:183":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"2:40381:13673":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"5:4247:2593":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"17:9986:7760":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"6:6741:6176":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"1:12052:1633":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"1:12047:790":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"16:2548:4829":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"2:11491:7939":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"17:12423:4248":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"17:13245:4397":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"1:5573:2222":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"0:131:1839":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","MinorVersionRequiredBefore4"],"kind":"variant"},"2:1558:2799":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"17:10589:6890":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"2:12440:2271":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:3364:13588":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"2:4902:2843":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"17:11935:4137":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"2:2936:4986":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"1:533:3710":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"0:144:1933":{"crate_id":0,"path":["rustc_version","Error","Utf8Error"],"kind":"variant"},"18:660:7727":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"17:9071:3972":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"17:9522:7747":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"6:1691:5511":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"1:8138:2840":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"17:13568:4526":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"17:12374:4223":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"17:12063:4163":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"1:7028:3731":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"16:8181:4866":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"9:52:19560":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"6:4854:5757":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"1:9035:6790":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"17:11972:4150":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"1:6985:8065":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"2:1681:1179":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"5:7554:7920":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"6:7622:6295":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"16:3830:4875":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"17:11236:6906":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"2:46193:6616":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"17:12544:4272":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"17:9753:7751":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"2:43733:7954":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"5:2251:7092":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"2:3116:8282":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"2:2590:263":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"2:42077:199":{"crate_id":2,"path":["rustc_version","Result","Ok"],"kind":"variant"},"2:9855:2613":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"16:8205:20568":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"6:6837:6201":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"6:123:14147":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"2:43445:7194":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"5:4860:223":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"2:43869:2300":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:8851:2593":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"2:42695:2610":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:4052:8328":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"17:9446:7746":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"1:8829:2225":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"16:7534:4860":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"3:234:232":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"5:881:3636":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"2:21368:8307":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"16:7768:4852":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"17:10198:7765":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"17:13740:4578":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"20:387:2320":{"crate_id":20,"path":["semver","Prerelease"],"kind":"struct"},"17:9173:3976":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"2:3083:139":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"6:1718:5522":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:40400:7141":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"17:9853:20637":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"2:46338:6626":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"2:21226:31912":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"1:1874:2786":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"2:44134:2281":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"5:3602:2594":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"1:4044:8326":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"17:10384:7774":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"2:42125:2594":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"11:2304:7046":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"6:5829:5910":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:44115:2295":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:7755:2764":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"1:11160:2225":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"2:44282:7213":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"16:5661:6927":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"17:13423:4413":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"0:95:1843":{"crate_id":0,"path":["rustc_version","VersionMeta"],"kind":"struct"},"5:7476:30903":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:13990:4635":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"1:3737:7972":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"1:8905:8419":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"16:6346:7858":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"1:7137:27614":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"2:23766:242":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"17:8766:20617":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"17:11075:7809":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"17:11952:4140":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"2:13039:32065":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"5:2974:32730":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:39705:6424":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:4471:8348":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"9:330:5272":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"1:7541:8035":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"1:8536:7250":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"1:10475:3738":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"2:43837:2285":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:1970:203":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"1:2381:8304":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"10:0:2072":{"crate_id":10,"path":["adler"],"kind":"module"},"2:22289:8307":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"1:10942:2764":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"5:7492:2247":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"2:7785:127":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"16:5995:6918":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"2:40285:7135":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"2:41746:6568":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"6:4776:5719":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"5:7417:2212":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"2:2826:250":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"15:0:2076":{"crate_id":15,"path":["addr2line"],"kind":"module"},"1:3502:2241":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"5:3225:32891":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:41148:2841":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:22580:2782":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"0:25:1704":{"crate_id":0,"path":["rustc_version","version"],"kind":"function"},"1:2948:134":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"6:6819:6190":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"6:1521:5398":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"17:14119:4672":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:46605:6634":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"5:7341:7097":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"5:3220:7077":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"2:11458:7938":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"11:2352:7896":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"1:11614:7272":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"6:6813:6189":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"6:4998:5836":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"1:1546:3662":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"6:654:14505":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:21979:8307":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:2946:232":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"16:4889:4894":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"16:6696:4945":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:46116:6612":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"17:9651:4004":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"16:2339:4815":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"2:11532:13611":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"17:9922:7755":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"1:10580:3739":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"18:521:24594":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"2:48279:6712":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:881:7076":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"2:44658:13870":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"2:1840:185":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"2:2657:122":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"2:40637:7152":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:42986:2618":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"16:5743:6934":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"16:7128:6790":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"16:5322:4902":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"17:13898:4616":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"0:127:1837":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","ComponentMustNotHaveSign"],"kind":"variant"},"18:690:6867":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:44621:128":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"11:673:2593":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"16:8281:5100":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"17:10917:7801":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"18:531:6861":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"2:47146:6659":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"16:2766:4838":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"1:11217:6806":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"2:43223:6585":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"1:12055:1632":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"1:8892:6786":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"1:837:2593":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"16:7067:7044":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"5:6681:3628":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"1:9476:7990":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"17:12599:4281":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"6:4800:5729":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"1:10540:2831":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"1:7381:26241":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"5:825:3634":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"8:0:2070":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"2:48020:6699":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"17:14470:4786":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"1:9165:8015":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"16:8050:5087":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"2:7706:13723":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:5973:3723":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"6:6248:6107":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"16:2933:19695":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"5:3748:7910":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"11:1582:7901":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"6:6961:6269":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:1772:3471":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"9:507:5295":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"2:2586:264":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"16:3315:4870":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"1:8282:7249":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"17:8660:20602":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"17:13803:4592":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"5:6954:269":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"16:6386:4919":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"2:8204:2596":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"16:5760:20556":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"2:43026:2619":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"17:10367:7772":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"16:3032:4867":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"6:5941:5976":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"0:53:1813":{"crate_id":0,"path":["rustc_version","Channel","Beta"],"kind":"variant"},"1:7530:3969":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"17:11099:7811":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:7747:162":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:940:7891":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"1:4385:7976":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"17:14069:4660":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"0:125:1834":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","ComponentMustNotHaveLeadingZeros"],"kind":"variant"},"2:40440:106":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"6:4932:5794":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"2:44459:2306":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"17:13086:4369":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"2:32405:2621":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"1:4040:8325":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"2:39630:222":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"17:11762:4102":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:12435:2273":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"2:22632:30923":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"6:5033:5853":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"16:7660:5037":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"17:11273:6908":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"2:40557:7119":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"16:6156:6985":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"5:2178:7087":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"17:13677:4567":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"17:10085:7762":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"6:5921:5963":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:2200:630":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:7743:142":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:32412:7132":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"16:5419:3973":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"2:3986:2799":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"2:10697:2301":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:44578:7231":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:8404:6776":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"2:2880:2459":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"17:13852:4603":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"2:46652:6635":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:22980:195":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"6:4908:5780":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"18:590:3853":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"17:13724:4575":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"17:11816:4109":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"2:44590:7234":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"16:3232:4812":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"1:3445:2230":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"1:1903:2787":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"17:13633:4562":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"2:39513:7133":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"2:21214:31902":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"17:13056:4366":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"5:7505:2248":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:3031:13586":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"2:7710:13722":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:0:1523":{"crate_id":1,"path":["std"],"kind":"module"},"6:1650:5487":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"2:23259:189":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:8873:6785":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"2:10095:2602":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:8012:2829":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"2:2905:13743":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:42284:93":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1:3996:8323":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"2:43851:2301":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"6:4496:5623":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"2:41126:7176":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"5:3813:3662":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"1:8867:2595":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"2:10648:2593":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:11621:7272":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"6:4893:5772":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"0:122:1913":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","ParseIntError"],"kind":"variant"},"16:6268:33975":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"2:40678:7159":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:6148:3707":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"}},"external_crates":{"20":{"name":"semver","html_root_url":"https://docs.rs/semver/1.0.20/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":27}