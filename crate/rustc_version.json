{"root":"0:0:1772","crate_version":"0.4.0","includes_private":false,"index":{"a:2:7787:7360-0:95:1661":{"id":"a:2:7787:7360-0:95:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7787:7360","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:103:1676":{"id":"0:103:1676","crate_id":0,"name":"llvm_version","span":{"filename":"src/lib.rs","begin":[171,4],"end":[171,41]},"visibility":"public","docs":"Version of LLVM used by the compiler","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48125:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"0:93:714":{"id":"0:93:714","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[90,55],"end":[90,59]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:8886:144","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:97:1664":{"id":"0:97:1664","crate_id":0,"name":"commit_hash","span":{"filename":"src/lib.rs","begin":[153,4],"end":[153,35]},"visibility":"public","docs":"Git short hash of the build of the compiler","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48125:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:7094:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"a:2:7786:7361-0:121:1645":{"id":"a:2:7786:7361-0:121:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7786:7361","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2506-0:95:1661":{"id":"b:2:2506-0:95:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2483:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2480:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2509:1690"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2237-0:137:127":{"id":"b:2:2237-0:137:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:2157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2231:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2239:23337"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11563:33478":{"id":"2:11563:33478","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2510-0:137:127":{"id":"b:2:2510-0:137:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2483:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2512:680"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2516-0:75:1638":{"id":"b:2:2516-0:75:1638","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2486:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2519:127","2:2520:1438"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11558:33475":{"id":"2:11558:33475","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2521-0:137:127":{"id":"b:2:2521-0:137:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2480:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2524:127","2:2525:1437"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:79:413":{"id":"0:79:413","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[90,9],"end":[90,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11541:33470":{"id":"2:11541:33470","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48125:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11174:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11189:2095","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:164":{"id":"0:164","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2483:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:165:680"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:63":{"id":"0:63","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,26],"end":[71,35]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2661:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:74:656":{"id":"0:74:656","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[71,60],"end":[71,65]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8609:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8598:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:45:207":{"id":"0:45:207","crate_id":0,"name":"Result","span":{"filename":"src/lib.rs","begin":[417,0],"end":[417,58]},"visibility":"public","docs":"The result type for this crate.","links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"std::result::Result","id":"2:48269:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]}}},"0:64":{"id":"0:64","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,26],"end":[71,35]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2280:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:65:601"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:129:1737":{"id":"0:129:1737","crate_id":0,"name":"MinorVersionMustBeZeroAfter4","span":{"filename":"src/lib.rs","begin":[288,4],"end":[288,32]},"visibility":"default","docs":"Minor version component must be zero on LLVM versions later than 4.0","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:160":{"id":"0:160","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2483:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utf8Error","id":"2:50053:1753","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:161:680"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11520:28102":{"id":"2:11520:28102","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"self::pattern":"2:11169:2101","prim@char":"1:12310:409"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:10993:2104","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:122:1733":{"id":"0:122:1733","crate_id":0,"name":"ParseIntError","span":{"filename":"src/lib.rs","begin":[282,4],"end":[282,37]},"visibility":"default","docs":"An error occurred in parsing a version component as an integer","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:124:1564"]},"discriminant":null}},"0:109":{"id":"0:109","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,23],"end":[147,25]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2285:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2580:2651":{"id":"2:2580:2651","crate_id":2,"name":"provide","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["demand",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Demand","id":"2:3367:6826","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2236:1971":{"id":"2:2236:1971","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11553:33473":{"id":"2:11553:33473","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"`DoubleEndedIterator`":"2:7120:120","prim@char":"1:12310:409","self::pattern":"2:11169:2101","str::match_indices":"2:11550:33472"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:50277:2119","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11174:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11189:2095","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2521-0:95:1661":{"id":"b:2:2521-0:95:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2480:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2524:127","2:2525:1437"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:87:601":{"id":"0:87:601","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[90,27],"end":[90,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:92":{"id":"0:92","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,55],"end":[90,59]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:8872:140","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:93:714"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3306-0:137:127":{"id":"b:2:3306-0:137:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:2157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3304:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3308:1451"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11484:28069":{"id":"2:11484:28069","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9350:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9350:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:11498:33466":{"id":"2:11498:33466","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:50373:2117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:117:1013":{"id":"0:117:1013","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[147,43],"end":[147,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::option::Option","id":"2:48125:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:38204:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2516-0:95:1661":{"id":"b:2:2516-0:95:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2486:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2519:127","2:2520:1438"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:141:1687":{"id":"0:141:1687","crate_id":0,"name":"CommandError","span":{"filename":"src/lib.rs","begin":[345,4],"end":[350,5]},"visibility":"default","docs":"Error output from the command that was run.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"struct":{"fields":["0:142:1688","0:143:1691"],"fields_stripped":false}},"discriminant":null}},"0:162":{"id":"0:162","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2483:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"20:218:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:163:680"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:131:1657":{"id":"0:131:1657","crate_id":0,"name":"MinorVersionRequiredBefore4","span":{"filename":"src/lib.rs","begin":[290,4],"end":[290,31]},"visibility":"default","docs":"Minor version component is required on LLVM versions earlier than 4.0","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:43:1746":{"id":"0:43:1746","crate_id":0,"name":"source","span":{"filename":"src/lib.rs","begin":[385,4],"end":[395,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48125:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"error::Error","id":"2:2571:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11576:33481":{"id":"2:11576:33481","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:11169:2101","prim@char":"1:12310:409"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11174:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11189:2095","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:34":{"id":"0:34","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[295,0],"end":[299,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2483:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ParseIntError","id":"2:21453:1733","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:35:680"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2665:225-0:121:1645":{"id":"a:2:2665:225-0:121:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2665:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:146:1564":{"id":"0:146:1564","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[352,14],"end":[352,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"str::Utf8Error","id":"2:50053:1753","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:119:714":{"id":"0:119:714","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[147,55],"end":[147,59]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:8886:144","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11517:1648":{"id":"2:11517:1648","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"prim@char":"1:12310:409","self::pattern":"2:11169:2101","`DoubleEndedIterator`":"2:7120:120","str::rsplit":"2:11523:28104","str::split_whitespace":"2:11495:30448"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:50109:2123","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5222":{"id":"5:5222","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5133:1363","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:5223:34134","5:5224:2672","5:5227:34135","5:5230:34136","5:5238:34137","5:5239:34138","5:5240:2693","5:5241:23986","5:5242:23987"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2519:127":{"id":"2:2519:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"b:2:2234-0:75:1638":{"id":"b:2:2234-0:75:1638","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:2157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2228:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2236:1971"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:138:1684":{"id":"0:138:1684","crate_id":0,"name":"CouldNotExecuteCommand","span":{"filename":"src/lib.rs","begin":[343,4],"end":[343,37]},"visibility":"default","docs":"An error occurred while trying to find the `rustc` to run.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:140:1564"]},"discriminant":null}},"2:11467":{"id":"2:11467","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:10732:1363","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:11468:796","2:11469:2494","2:11470:33460","2:11471:33461","2:11473:33462","2:11476:26898","2:11477:33463","2:11478:310","2:11479:28071","2:11480:1724","2:11482:28068","2:11484:28069","2:11486:28070","2:11488:33464","2:11489:33465","2:11490:28093","2:11491:28094","2:11492:2134","2:11493:6154","2:11494:2082","2:11495:30448","2:11496:30460","2:11497:1704","2:11498:33466","2:11499:30699","2:11500:28109","2:11503:1651","2:11506:28110","2:11509:2531","2:11513:2493","2:11517:1648","2:11520:28102","2:11523:28104","2:11526:33467","2:11529:33468","2:11532:1708","2:11535:28107","2:11538:33469","2:11541:33470","2:11544:1987","2:11547:33471","2:11550:33472","2:11553:33473","2:11556:33474","2:11558:33475","2:11560:33476","2:11562:33477","2:11563:33478","2:11564:33479","2:11567:33480","2:11570:26095","2:11573:28111","2:11576:33481","2:11579:33482","2:11582:33483","2:11585:1656","2:11587:23985","2:11588:23988","2:11589:23989","2:11590:23990","2:11591:33484","2:11593:7227","2:11594:33485"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:76:1640":{"id":"0:76:1640","crate_id":0,"name":"major","span":{"filename":"src/lib.rs","begin":[94,4],"end":[94,18]},"visibility":"public","docs":"Major version","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u64"}},"a:2:7786:7361-0:48:1625":{"id":"a:2:7786:7361-0:48:1625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7786:7361","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:96:1622":{"id":"0:96:1622","crate_id":0,"name":"semver","span":{"filename":"src/lib.rs","begin":[150,4],"end":[150,23]},"visibility":"public","docs":"Version of the compiler","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Version","id":"20:297:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"a:2:7786:7361-0:75:1638":{"id":"a:2:7786:7361-0:75:1638","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7786:7361","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:151:1564":{"id":"0:151:1564","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[356,16],"end":[356,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"semver::Error","id":"20:218:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:35:680":{"id":"0:35:680","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[296,4],"end":[298,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["e",{"kind":"resolved_path","inner":{"name":"num::ParseIntError","id":"2:21453:1733","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11478:310":{"id":"2:11478:310","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:11479:28071","`u8`":"1:12327:1459"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:95:1661":{"id":"0:95:1661","crate_id":0,"name":"VersionMeta","span":{"filename":"src/lib.rs","begin":[148,0],"end":[172,1]},"visibility":"public","docs":"Rustc version plus metadata like git short hash and build date.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":["0:96:1622","0:97:1664","0:98:1666","0:99:1668","0:100:1670","0:101:1672","0:102:1674","0:103:1676"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:23","a:2:2715:2158-0:95:1661","a:2:2665:225-0:95:1661","a:2:2651:217-0:95:1661","a:2:7786:7361-0:95:1661","a:2:7787:7360-0:95:1661","b:2:3306-0:95:1661","b:2:2506-0:95:1661","b:2:2510-0:95:1661","b:2:2521-0:95:1661","b:2:2516-0:95:1661","b:2:2234-0:95:1661","b:2:2237-0:95:1661","b:5:683-0:95:1661","0:104","0:109","0:111","0:108","0:118","0:106","0:112","0:114","0:116"]}},"0:127:1655":{"id":"0:127:1655","crate_id":0,"name":"ComponentMustNotHaveSign","span":{"filename":"src/lib.rs","begin":[286,4],"end":[286,28]},"visibility":"default","docs":"A version component has a sign","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:155:1759":{"id":"0:155:1759","crate_id":0,"name":"LlvmVersionError","span":{"filename":"src/lib.rs","begin":[360,4],"end":[360,43]},"visibility":"default","docs":"An error occurred in parsing a `LlvmVersion`.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:157:1564"]},"discriminant":null}},"0:15":{"id":"0:15","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[66,0],"end":[66,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"semver::Version","name":"Version","id":"20:297:1623","glob":false}},"a:2:2665:225-0:75:1638":{"id":"a:2:2665:225-0:75:1638","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2665:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:5242:23987":{"id":"5:5242:23987","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:11590:23990"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7094:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:68":{"id":"0:68","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,42],"end":[71,52]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","gt","ge","le"],"trait":{"name":"PartialOrd","id":"2:2322:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:69:1013"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:23":{"id":"0:23","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[174,0],"end":[191,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:24:1678"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:17":{"id":"0:17","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[100,0],"end":[104,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8654:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:18:656"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11479:28071":{"id":"2:11479:28071","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12327:1459"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:57":{"id":"0:57","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,9],"end":[71,13]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2663:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:149:1756":{"id":"0:149:1756","crate_id":0,"name":"SemVerError","span":{"filename":"src/lib.rs","begin":[356,4],"end":[356,30]},"visibility":"default","docs":"An error occurred in parsing the semver.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:151:1564"]},"discriminant":null}},"b:2:2234-0:121:1645":{"id":"b:2:2234-0:121:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:2157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2228:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2236:1971"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:78":{"id":"0:78","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,9],"end":[90,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2251:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:79:413"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11564:33479":{"id":"2:11564:33479","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"self::pattern":"2:11169:2101","prim@char":"1:12310:409"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11174:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:11194:2093","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7786:7361-0:137:127":{"id":"a:2:7786:7361-0:137:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7786:7361","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"a:2:2651:217-0:48:1625":{"id":"a:2:2651:217-0:48:1625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2651:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:7787:7360-0:137:127":{"id":"a:2:7787:7360-0:137:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7787:7360","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"a:2:2715:2158-0:75:1638":{"id":"a:2:2715:2158-0:75:1638","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2715:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:48:1625":{"id":"0:48:1625","crate_id":0,"name":"Channel","span":{"filename":"src/lib.rs","begin":[72,0],"end":[81,1]},"visibility":"public","docs":"Release channel of the compiler.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:49:1627","0:51:1629","0:53:1631","0:55:1633"],"impls":["a:2:2715:2158-0:48:1625","a:2:2665:225-0:48:1625","a:2:2651:217-0:48:1625","a:2:7786:7361-0:48:1625","a:2:7787:7360-0:48:1625","b:2:3306-0:48:1625","b:2:2506-0:48:1625","b:2:2510-0:48:1625","b:2:2521-0:48:1625","b:2:2516-0:48:1625","b:2:2234-0:48:1625","b:2:2237-0:48:1625","b:5:683-0:48:1625","0:57","0:64","0:63","0:58","0:66","0:60","0:68","0:70","0:73","0:61"]}},"b:2:2578-0:121:1645":{"id":"b:2:2578-0:121:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:2571:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:2157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:3355:12572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:2651"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"E"}}},"2:11544:1987":{"id":"2:11544:1987","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"prim@char":"1:12310:409","str::matches":"2:11544:1987","self::pattern":"2:11169:2101","`DoubleEndedIterator`":"2:7120:120"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:50313:2120","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:111":{"id":"0:111","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,27],"end":[147,36]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2661:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:0:1772":{"id":"0:0:1772","crate_id":0,"name":"rustc_version","span":{"filename":"src/lib.rs","begin":[9,0],"end":[417,58]},"visibility":"public","docs":"Simple library for getting the version information of a `rustc`\ncompiler.\n\nThis can be used by build scripts or other tools dealing with Rust sources\nto make decisions based on the version of the compiler.\n\nIt calls `$RUSTC --version -v` and parses the output, falling\nback to `rustc` if `$RUSTC` is not set.\n\n# Example\n\n```rust\n// This could be a cargo build script\n\nuse rustc_version::{version, version_meta, Channel, Version};\n\n// Assert we haven't travelled back in time\nassert!(version().unwrap().major >= 1);\n\n// Set cfg flags depending on release channel\nmatch version_meta().unwrap().channel {\n    Channel::Stable => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_STABLE\");\n    }\n    Channel::Beta => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_BETA\");\n    }\n    Channel::Nightly => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_NIGHTLY\");\n    }\n    Channel::Dev => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_DEV\");\n    }\n}\n\n// Check for a minimum version\nif version().unwrap() >= Version::parse(\"1.4.0\").unwrap() {\n    println!(\"cargo:rustc-cfg=compiler_has_important_bugfix\");\n}\n```","links":{},"attrs":["#![warn(missing_docs)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:15","0:48:1625","0:75:1638","0:95:1661","0:25:1526","0:26:1695","0:28:1692","0:121:1645","0:137:127","0:45:207"],"is_stripped":false}},"b:2:2234-0:48:1625":{"id":"b:2:2234-0:48:1625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:2157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2228:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2236:1971"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7787:7360-0:48:1625":{"id":"a:2:7787:7360-0:48:1625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7787:7360","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:136:656":{"id":"0:136:656","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[279,9],"end":[279,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8609:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8598:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:143:1691":{"id":"0:143:1691","crate_id":0,"name":"stderr","span":{"filename":"src/lib.rs","begin":[349,8],"end":[349,22]},"visibility":"default","docs":"stderr output from the command","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:7094:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"5:5490:1417":{"id":"5:5490:1417","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7094:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7786:7361-0:95:1661":{"id":"a:2:7786:7361-0:95:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7786:7361","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3308:1451":{"id":"2:3308:1451","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:46617:5527","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2512:680":{"id":"2:2512:680","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11532:1708":{"id":"2:11532:1708","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12310:409","self::pattern":"2:11169:2101","str::rsplitn":"2:11535:28107"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:50213:2125","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11496:30460":{"id":"2:11496:30460","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:11495:30448"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:50392:2103","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:135":{"id":"0:135","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[279,9],"end":[279,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8649:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:136:656"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3306-0:48:1625":{"id":"b:2:3306-0:48:1625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:2157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3304:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3308:1451"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11500:28109":{"id":"2:11500:28109","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12310:409","self::pattern":"2:11169:2101"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:36":{"id":"0:36","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[301,0],"end":[324,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8654:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:37:656"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:51:1629":{"id":"0:51:1629","crate_id":0,"name":"Nightly","span":{"filename":"src/lib.rs","begin":[76,4],"end":[76,11]},"visibility":"default","docs":"Nightly release channel","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"2:11556:33474":{"id":"2:11556:33474","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11526:33467":{"id":"2:11526:33467","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"prim@char":"1:12310:409","`DoubleEndedIterator`":"2:7120:120","str::split":"2:11517:1648","self::pattern":"2:11169:2101","str::rsplit_terminator":"2:11529:33468"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:50159:2127","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:116":{"id":"0:116","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,43],"end":[147,53]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","gt","ge","le"],"trait":{"name":"PartialOrd","id":"2:2322:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:117:1013"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:105:413":{"id":"0:105:413","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[147,9],"end":[147,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:98:1666":{"id":"0:98:1666","crate_id":0,"name":"commit_date","span":{"filename":"src/lib.rs","begin":[156,4],"end":[156,35]},"visibility":"public","docs":"Commit date of the compiler","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48125:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:7094:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"2:11587:23985":{"id":"2:11587:23985","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:147:1729":{"id":"0:147:1729","crate_id":0,"name":"UnexpectedVersionFormat","span":{"filename":"src/lib.rs","begin":[354,4],"end":[354,27]},"visibility":"default","docs":"The output of `rustc -vV` was not in the expected format.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"2:2509:1690":{"id":"2:2509:1690","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2483:132"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:161:680":{"id":"0:161:680","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["e",{"kind":"resolved_path","inner":{"name":"str::Utf8Error","id":"2:50053:1753","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:42":{"id":"0:42","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[384,0],"end":[396,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["cause","provide","description","source","type_id"],"trait":{"name":"Error","id":"2:2571:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:43:1746"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2506-0:121:1645":{"id":"b:2:2506-0:121:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2483:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2480:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2509:1690"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11477:33463":{"id":"2:11477:33463","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:38":{"id":"0:38","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[326,0],"end":[337,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["cause","provide","description","source","type_id"],"trait":{"name":"Error","id":"2:2571:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:39:1746"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11497:1704":{"id":"2:11497:1704","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:50363:2116","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3306-0:95:1661":{"id":"b:2:3306-0:95:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:2157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3304:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3308:1451"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11550:33472":{"id":"2:11550:33472","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"str::rmatch_indices":"2:11553:33473","self::pattern":"2:11169:2101","prim@char":"1:12310:409","`DoubleEndedIterator`":"2:7120:120"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:50259:2118","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11513:2493":{"id":"2:11513:2493","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"prim@char":"1:12310:409","`None`":"2:48127:176","self::pattern":"2:11169:2101"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48125:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11174:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11189:2095","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2516-0:121:1645":{"id":"b:2:2516-0:121:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2486:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2519:127","2:2520:1438"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3306-0:121:1645":{"id":"b:2:3306-0:121:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:2157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3304:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3308:1451"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11594:33485":{"id":"2:11594:33485","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4493:33485"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:50426:2115","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2715:2158-0:137:127":{"id":"a:2:2715:2158-0:137:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2715:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:70":{"id":"0:70","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,54],"end":[71,58]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:8872:140","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:71:714"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11499:30699":{"id":"2:11499:30699","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:50401:2102","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2237-0:48:1625":{"id":"b:2:2237-0:48:1625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:2157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2231:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2239:23337"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5224:2672":{"id":"5:5224:2672","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7094:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7094:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11470:33460":{"id":"2:11470:33460","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:80":{"id":"0:80","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,16],"end":[90,21]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8649:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:81:656"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2234-0:137:127":{"id":"b:2:2234-0:137:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:2157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2228:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2236:1971"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2715:2158-0:121:1645":{"id":"a:2:2715:2158-0:121:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2715:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11486:28070":{"id":"2:11486:28070","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9350:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9350:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:86":{"id":"0:86","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,27],"end":[90,36]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2280:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:87:601"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:85":{"id":"0:85","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,27],"end":[90,36]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2661:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:114":{"id":"0:114","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,38],"end":[147,41]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clamp","max","min"],"trait":{"name":"Ord","id":"2:2316:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:115:420"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:91:1013":{"id":"0:91:1013","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[90,43],"end":[90,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::option::Option","id":"2:48125:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:38204:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:20:126":{"id":"0:20:126","crate_id":0,"name":"Err","span":{"filename":"src/lib.rs","begin":[107,4],"end":[107,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"5:686:1720":{"id":"5:686:1720","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2651:217-0:95:1661":{"id":"a:2:2651:217-0:95:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2651:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11489:33465":{"id":"2:11489:33465","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12316:1363","crate::ops::IndexMut":"2:2974:7250","str::slice_unchecked":"2:11488:33464"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:59:413":{"id":"0:59:413","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[71,15],"end":[71,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11570:26095":{"id":"2:11570:26095","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12310:409","self::pattern":"2:11169:2101"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48125:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2239:23337":{"id":"2:2239:23337","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:39:1746":{"id":"0:39:1746","crate_id":0,"name":"source","span":{"filename":"src/lib.rs","begin":[327,4],"end":[336,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48125:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"error::Error","id":"2:2571:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11591:33484":{"id":"2:11591:33484","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4495:33484"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:50408:2113","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5240:2693":{"id":"5:5240:2693","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7094:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7094:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2665:225-0:95:1661":{"id":"a:2:2665:225-0:95:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2665:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:683-0:75:1638":{"id":"b:5:683-0:75:1638","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2251:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:685:2550","5:686:1720","5:687:2551"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11562:33477":{"id":"2:11562:33477","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:58":{"id":"0:58","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,15],"end":[71,20]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2251:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:59:413"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:685:2550":{"id":"5:685:2550","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:71:714":{"id":"0:71:714","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[71,54],"end":[71,58]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:8886:144","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5238:34137":{"id":"5:5238:34137","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7094:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7094:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:144:1753":{"id":"0:144:1753","crate_id":0,"name":"Utf8Error","span":{"filename":"src/lib.rs","begin":[352,4],"end":[352,29]},"visibility":"default","docs":"The output of `rustc -vV` was not valid utf-8.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:146:1564"]},"discriminant":null}},"2:11480:1724":{"id":"2:11480:1724","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:48127:176"},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48125:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9350:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9350:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:165:680":{"id":"0:165:680","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["e",{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2510-0:75:1638":{"id":"b:2:2510-0:75:1638","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2483:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2512:680"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11491:28094":{"id":"2:11491:28094","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:11490:28093"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11567:33480":{"id":"2:11567:33480","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:11169:2101","prim@char":"1:12310:409"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:115:420":{"id":"0:115:420","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[147,38],"end":[147,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:38204:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2521-0:48:1625":{"id":"b:2:2521-0:48:1625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2480:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2524:127","2:2525:1437"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3306-0:75:1638":{"id":"b:2:3306-0:75:1638","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:2157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3304:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3308:1451"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:124:1564":{"id":"0:124:1564","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[282,18],"end":[282,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"num::ParseIntError","id":"2:21453:1733","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"2:11476:26898":{"id":"2:11476:26898","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:10737:1693"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11523:28104":{"id":"2:11523:28104","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:11169:2101","str::split":"2:11517:1648","prim@char":"1:12310:409","`DoubleEndedIterator`":"2:7120:120"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:50127:2122","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11174:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11189:2095","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2715:2158-0:48:1625":{"id":"a:2:2715:2158-0:48:1625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2715:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:75:1638":{"id":"0:75:1638","crate_id":0,"name":"LlvmVersion","span":{"filename":"src/lib.rs","begin":[91,0],"end":[98,1]},"visibility":"public","docs":"LLVM version\n\nLLVM's version numbering scheme is not semver compatible until version 4.0\n\nrustc [just prints the major and minor versions], so other parts of the version are not included.\n\n[just prints the major and minor versions]: https://github.com/rust-lang/rust/blob/b5c9e2448c9ace53ad5c11585803894651b18b0a/compiler/rustc_codegen_llvm/src/llvm_util.rs#L173-L178","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":["0:76:1640","0:77:1642"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2715:2158-0:75:1638","a:2:2665:225-0:75:1638","a:2:2651:217-0:75:1638","a:2:7786:7361-0:75:1638","a:2:7787:7360-0:75:1638","b:2:3306-0:75:1638","b:2:2506-0:75:1638","b:2:2510-0:75:1638","b:2:2521-0:75:1638","b:2:2516-0:75:1638","b:2:2234-0:75:1638","b:2:2237-0:75:1638","b:5:683-0:75:1638","b:5:5488-0:75:1638","0:19","0:88","0:86","0:92","0:85","0:80","0:17","0:83","0:78","0:82","0:90"]}},"b:2:2237-0:121:1645":{"id":"b:2:2237-0:121:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:2157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2231:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2239:23337"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2525:1437":{"id":"2:2525:1437","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48269:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"2:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:5488-0:121:1645":{"id":"b:5:5488-0:121:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8654:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:2157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5486:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5490:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7787:7360-0:121:1645":{"id":"a:2:7787:7360-0:121:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7787:7360","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11493:6154":{"id":"2:11493:6154","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12310:409"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:50085:2108","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:137:127":{"id":"0:137:127","crate_id":0,"name":"Error","span":{"filename":"src/lib.rs","begin":[341,0],"end":[361,1]},"visibility":"public","docs":"The error type for this crate.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:138:1684","0:141:1687","0:144:1753","0:147:1729","0:149:1756","0:152:1719","0:155:1759"],"impls":["a:2:2715:2158-0:137:127","a:2:2665:225-0:137:127","a:2:2651:217-0:137:127","a:2:7786:7361-0:137:127","a:2:7787:7360-0:137:127","b:2:3306-0:137:127","b:2:2506-0:137:127","b:2:2510-0:137:127","b:2:2578-0:137:127","b:2:2521-0:137:127","b:2:2516-0:137:127","b:2:2234-0:137:127","b:2:2237-0:137:127","b:5:5488-0:137:127","0:42","0:162","0:164","0:160","0:40","0:158"]}},"b:5:5488-0:137:127":{"id":"b:5:5488-0:137:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8654:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:2157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5486:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5490:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:158":{"id":"0:158","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[340,9],"end":[340,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8649:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:159:656"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:88":{"id":"0:88","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,38],"end":[90,41]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clamp","max","min"],"trait":{"name":"Ord","id":"2:2316:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:89:420"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:67:420":{"id":"0:67:420","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[71,37],"end":[71,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:38204:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5241:23986":{"id":"5:5241:23986","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:11589:23989"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7094:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:49:1627":{"id":"0:49:1627","crate_id":0,"name":"Dev","span":{"filename":"src/lib.rs","begin":[74,4],"end":[74,7]},"visibility":"default","docs":"Development release channel","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:159:656":{"id":"0:159:656","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[340,9],"end":[340,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8609:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8598:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11588:23988":{"id":"2:11588:23988","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11473:33462":{"id":"2:11473:33462","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:11471:33461"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:24:1678":{"id":"0:24:1678","crate_id":0,"name":"for_command","span":{"filename":"src/lib.rs","begin":[176,4],"end":[190,5]},"visibility":"public","docs":"Returns the version metadata for `cmd`, which should be a `rustc` command.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["cmd",{"kind":"resolved_path","inner":{"name":"Command","id":"1:5720:1617","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:45:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11488:33464":{"id":"2:11488:33464","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"crate::ops::Index":"2:2970:7249","str::slice_mut_unchecked":"2:11489:33465","`str`":"1:12316:1363"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"5:5223:34134":{"id":"5:5223:34134","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:288:2098","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6845:5415","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:288:2098","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6845:5415","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:40":{"id":"0:40","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[363,0],"end":[382,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8654:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:41:656"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:82":{"id":"0:82","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,23],"end":[90,25]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2662:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:101:1672":{"id":"0:101:1672","crate_id":0,"name":"host","span":{"filename":"src/lib.rs","begin":[165,4],"end":[165,20]},"visibility":"public","docs":"Host target triple of the compiler","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:7094:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"b:2:2506-0:48:1625":{"id":"b:2:2506-0:48:1625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2483:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2480:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2509:1690"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2578-0:137:127":{"id":"b:2:2578-0:137:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:2571:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:2157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:3355:12572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:2651"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"E"}}},"2:11582:33483":{"id":"2:11582:33483","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:11169:2101","prim@char":"1:12310:409"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11174:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11189:2095","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11509:2531":{"id":"2:11509:2531","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"self::pattern":"2:11169:2101","`None`":"2:48127:176","prim@char":"1:12310:409"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48125:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11535:28107":{"id":"2:11535:28107","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12310:409","str::splitn":"2:11532:1708","self::pattern":"2:11169:2101"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:50231:2124","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11174:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11189:2095","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11471:33461":{"id":"2:11471:33461","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11585:1656":{"id":"2:11585:1656","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"`FromStr`":"2:11130:1621","FromStr::Err":"2:11131:126"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48269:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"2:11130:1621","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:11130:1621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2510-0:48:1625":{"id":"b:2:2510-0:48:1625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2483:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2512:680"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:81:656":{"id":"0:81:656","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[90,16],"end":[90,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8609:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8598:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:125:1652":{"id":"0:125:1652","crate_id":0,"name":"ComponentMustNotHaveLeadingZeros","span":{"filename":"src/lib.rs","begin":[284,4],"end":[284,36]},"visibility":"default","docs":"A version component must not have leading zeros","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"2:2524:127":{"id":"2:2524:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:39377:2039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:100:1670":{"id":"0:100:1670","crate_id":0,"name":"channel","span":{"filename":"src/lib.rs","begin":[162,4],"end":[162,24]},"visibility":"public","docs":"Release channel of the compiler","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:142:1688":{"id":"0:142:1688","crate_id":0,"name":"stdout","span":{"filename":"src/lib.rs","begin":[347,8],"end":[347,22]},"visibility":"default","docs":"stdout output from the command","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:7094:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"b:2:2521-0:121:1645":{"id":"b:2:2521-0:121:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2480:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2524:127","2:2525:1437"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:113:601":{"id":"0:113:601","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[147,27],"end":[147,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:89:420":{"id":"0:89:420","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[90,38],"end":[90,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:38204:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11560:33476":{"id":"2:11560:33476","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5239:34138":{"id":"5:5239:34138","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`String`":"5:7094:221","`Box<str>`":"5:288:2098"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:288:2098","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6845:5415","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7094:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5227:34135":{"id":"5:5227:34135","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7094:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7094:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:140:1564":{"id":"0:140:1564","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[343,27],"end":[343,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"io::Error","id":"1:2909:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:83":{"id":"0:83","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,23],"end":[90,25]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2285:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"5:687:2551":{"id":"5:687:2551","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11538:33469":{"id":"2:11538:33469","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48125:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:41:656":{"id":"0:41:656","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[364,4],"end":[381,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8609:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8598:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2665:225-0:48:1625":{"id":"a:2:2665:225-0:48:1625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2665:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:102:1674":{"id":"0:102:1674","crate_id":0,"name":"short_version_string","span":{"filename":"src/lib.rs","begin":[168,4],"end":[168,36]},"visibility":"public","docs":"Short version string of the compiler","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:7094:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:65:601":{"id":"0:65:601","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[71,26],"end":[71,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:683-0:95:1661":{"id":"b:5:683-0:95:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2251:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:685:2550","5:686:1720","5:687:2551"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2715:2158-0:95:1661":{"id":"a:2:2715:2158-0:95:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2715:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2234-0:95:1661":{"id":"b:2:2234-0:95:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:2157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2228:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2236:1971"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:61":{"id":"0:61","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,22],"end":[71,24]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2285:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:77:1642":{"id":"0:77:1642","crate_id":0,"name":"minor","span":{"filename":"src/lib.rs","begin":[96,4],"end":[96,18]},"visibility":"public","docs":"Minor version","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u64"}},"2:11469:2494":{"id":"2:11469:2494","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2651:217-0:75:1638":{"id":"a:2:2651:217-0:75:1638","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2651:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:157:1564":{"id":"0:157:1564","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[360,21],"end":[360,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"2:11494:2082":{"id":"2:11494:2082","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:50095:2107","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:18:656":{"id":"0:18:656","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[101,4],"end":[103,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8609:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8598:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:66":{"id":"0:66","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,37],"end":[71,40]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clamp","max","min"],"trait":{"name":"Ord","id":"2:2316:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:67:420"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:108":{"id":"0:108","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,23],"end":[147,25]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2662:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11495:30448":{"id":"2:11495:30448","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:11496:30460"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:50383:2105","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2506-0:137:127":{"id":"b:2:2506-0:137:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2483:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2480:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2509:1690"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11573:28111":{"id":"2:11573:28111","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12310:409","self::pattern":"2:11169:2101"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48125:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11174:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11189:2095","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:69:1013":{"id":"0:69:1013","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[71,42],"end":[71,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::option::Option","id":"2:48125:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:38204:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2516-0:48:1625":{"id":"b:2:2516-0:48:1625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2486:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2519:127","2:2520:1438"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11503:1651":{"id":"2:11503:1651","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"self::pattern":"2:11169:2101","prim@char":"1:12310:409"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:106":{"id":"0:106","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,16],"end":[147,21]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8649:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:107:656"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:21:1646":{"id":"0:21:1646","crate_id":0,"name":"from_str","span":{"filename":"src/lib.rs","begin":[109,4],"end":[143,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:45:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:11130:1621","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2516-0:137:127":{"id":"b:2:2516-0:137:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2486:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2519:127","2:2520:1438"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:5488-0:75:1638":{"id":"b:5:5488-0:75:1638","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8654:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:2157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5486:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5490:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11593:7227":{"id":"2:11593:7227","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4496:7227"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:50417:2114","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11468:796":{"id":"2:11468:796","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12310:409"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:26:1695":{"id":"0:26:1695","crate_id":0,"name":"version_meta","span":{"filename":"src/lib.rs","begin":[200,0],"end":[204,1]},"visibility":"public","docs":"Returns the `rustc` SemVer version and additional metadata\nlike the git short hash and build date.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:45:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11506:28110":{"id":"2:11506:28110","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12310:409","self::pattern":"2:11169:2101"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11174:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11189:2095","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:112":{"id":"0:112","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,27],"end":[147,36]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2280:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:113:601"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:154:1564":{"id":"0:154:1564","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[358,25],"end":[358,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:7094:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:73":{"id":"0:73","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,60],"end":[71,65]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8649:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:74:656"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:118":{"id":"0:118","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,55],"end":[147,59]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:8872:140","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:119:714"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2651:217-0:121:1645":{"id":"a:2:2651:217-0:121:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2651:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:7787:7360-0:75:1638":{"id":"a:2:7787:7360-0:75:1638","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7787:7360","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2521-0:75:1638":{"id":"b:2:2521-0:75:1638","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2480:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2524:127","2:2525:1437"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:37:656":{"id":"0:37:656","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[302,4],"end":[323,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8609:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8598:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:163:680":{"id":"0:163:680","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["e",{"kind":"resolved_path","inner":{"name":"semver::Error","id":"20:218:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11492:2134":{"id":"2:11492:2134","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12310:409"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:50079:2109","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11529:33468":{"id":"2:11529:33468","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"str::split":"2:11517:1648","prim@char":"1:12310:409","str::split_terminator":"2:11526:33467","self::pattern":"2:11169:2101"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:50177:2126","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11174:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11189:2095","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:90":{"id":"0:90","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,43],"end":[90,53]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","gt","ge","le"],"trait":{"name":"PartialOrd","id":"2:2322:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:91:1013"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11579:33482":{"id":"2:11579:33482","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:11169:2101","prim@char":"1:12310:409"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2665:225-0:137:127":{"id":"a:2:2665:225-0:137:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2665:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:104":{"id":"0:104","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,9],"end":[147,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2251:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:105:413"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:121:1645":{"id":"0:121:1645","crate_id":0,"name":"LlvmVersionParseError","span":{"filename":"src/lib.rs","begin":[280,0],"end":[293,1]},"visibility":"public","docs":"LLVM Version Parse Error","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:122:1733","0:125:1652","0:127:1655","0:129:1737","0:131:1657","0:133:1659"],"impls":["a:2:2715:2158-0:121:1645","a:2:2665:225-0:121:1645","a:2:2651:217-0:121:1645","a:2:7786:7361-0:121:1645","a:2:7787:7360-0:121:1645","b:2:3306-0:121:1645","b:2:2506-0:121:1645","b:2:2510-0:121:1645","b:2:2578-0:121:1645","b:2:2521-0:121:1645","b:2:2516-0:121:1645","b:2:2234-0:121:1645","b:2:2237-0:121:1645","b:5:5488-0:121:1645","0:34","0:38","0:36","0:164","0:135"]}},"0:25:1526":{"id":"0:25:1526","crate_id":0,"name":"version","span":{"filename":"src/lib.rs","begin":[194,0],"end":[196,1]},"visibility":"public","docs":"Returns the `rustc` SemVer version.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:45:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Version","id":"20:297:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5230:34136":{"id":"5:5230:34136","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7094:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7094:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:28:1692":{"id":"0:28:1692","crate_id":0,"name":"version_meta_for","span":{"filename":"src/lib.rs","begin":[209,0],"end":[262,1]},"visibility":"public","docs":"Parses a \"rustc -vV\" output string and returns\nthe SemVer version and additional metadata\nlike the git short hash and build date.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["verbose_version_string",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:45:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:99:1668":{"id":"0:99:1668","crate_id":0,"name":"build_date","span":{"filename":"src/lib.rs","begin":[159,4],"end":[159,34]},"visibility":"public","docs":"Build date of the compiler; this was removed between Rust 1.0.0 and 1.1.0.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48125:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:7094:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"2:11590:23990":{"id":"2:11590:23990","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2237-0:95:1661":{"id":"b:2:2237-0:95:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:2157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2231:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2239:23337"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:55:1633":{"id":"0:55:1633","crate_id":0,"name":"Stable","span":{"filename":"src/lib.rs","begin":[80,4],"end":[80,10]},"visibility":"default","docs":"Stable release channel","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"b:2:2506-0:75:1638":{"id":"b:2:2506-0:75:1638","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2483:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2480:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2509:1690"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11482:28068":{"id":"2:11482:28068","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:48127:176"},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48125:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9350:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9350:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11547:33471":{"id":"2:11547:33471","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"prim@char":"1:12310:409","`DoubleEndedIterator`":"2:7120:120","self::pattern":"2:11169:2101","str::matches":"2:11544:1987"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:50331:2121","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11174:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11174:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11189:2095","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:107:656":{"id":"0:107:656","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[147,16],"end":[147,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8609:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8598:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:60":{"id":"0:60","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,22],"end":[71,24]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2662:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2510-0:121:1645":{"id":"b:2:2510-0:121:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2483:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2512:680"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2510-0:95:1661":{"id":"b:2:2510-0:95:1661","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2483:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2512:680"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2237-0:75:1638":{"id":"b:2:2237-0:75:1638","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2658:2157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2231:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2239:23337"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:53:1631":{"id":"0:53:1631","crate_id":0,"name":"Beta","span":{"filename":"src/lib.rs","begin":[78,4],"end":[78,8]},"visibility":"default","docs":"Beta release channel","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:152:1719":{"id":"0:152:1719","crate_id":0,"name":"UnknownPreReleaseTag","span":{"filename":"src/lib.rs","begin":[358,4],"end":[358,32]},"visibility":"default","docs":"The pre-release tag is unknown.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:154:1564"]},"discriminant":null}},"a:2:2651:217-0:137:127":{"id":"a:2:2651:217-0:137:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2651:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:683-0:48:1625":{"id":"b:5:683-0:48:1625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2251:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:685:2550","5:686:1720","5:687:2551"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2520:1438":{"id":"2:2520:1438","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48269:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2490:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11589:23989":{"id":"2:11589:23989","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:133:1659":{"id":"0:133:1659","crate_id":0,"name":"TooManyComponents","span":{"filename":"src/lib.rs","begin":[292,4],"end":[292,21]},"visibility":"default","docs":"Too many components","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:19":{"id":"0:19","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[106,0],"end":[144,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:11130:1621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1638","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:20:126","0:21:1646"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11490:28093":{"id":"2:11490:28093","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:11491:28094"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"paths":{"6:581:4517":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"1:719:7232":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"16:2842:3987":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"9:592:18206":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"2:50373:2117":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:10679:26984":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"2:1733:12710":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:5016:7308":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"17:11893:3453":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"17:11774:3439":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"16:6816:5986":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"1:9842:6894":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"2:9158:2868":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"2:9662:6839":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"2:46885:30324":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"16:3566:4017":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"5:5661:2831":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"2:52240:5587":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"6:6448:5300":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"1:900:2431":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"5:1699:2796":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"2:53996:5662":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"6:6415:5284":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"18:652:3022":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"5:4567:656":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"2:29663:30338":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"16:5494:19267":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"12:1065:34273":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"2:46500:199":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"17:11813:3444":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"1:686:7231":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"0:155:1759":{"crate_id":0,"path":["rustc_version","Error","LlvmVersionError"],"kind":"variant"},"2:46480:196":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"2:11189:2095":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:8566:26063":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"16:5184:18382":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"17:13091:3794":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"1:8159:2684":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"16:7603:4190":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"5:4754:2658":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"19:0:1009":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"2:2921:2162":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"17:11356:3357":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"14:215:6014":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"1:954:2796":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"2:21326:30317":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"12:98:6016":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"12:810:6809":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"0:121:1645":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError"],"kind":"enum"},"2:11837:6846":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"16:6270:3992":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"17:13382:3889":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"2:6651:12651":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"2:2836:12685":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:4022:6874":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"17:10283:6724":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"17:9501:3151":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"2:2911:2159":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:49907:6856":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"1:8657:6901":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"5:5939:7473":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"1:7749:3251":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"1:4019:6873":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"2:50900:6177":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"2:4:993":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"16:6252:5946":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"5:3089:33135":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"2:51087:158":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:411:162":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:47648:6133":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:4317:7296":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"2:2794:4127":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"0:26:1695":{"crate_id":0,"path":["rustc_version","version_meta"],"kind":"function"},"17:11909:3458":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"6:7249:5399":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:11651:5784":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"6:6302:5246":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"17:10332:19447":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"6:4559:4883":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"18:736:23088":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"17:12955:3761":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"17:10121:3204":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"1:4430:7315":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"16:5203:3135":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"1:11957:6218":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"1:8699:6194":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"2:46378:12515":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"1:8625:5743":{"crate_id":1,"path":["std","net","socket_addr","SocketAddrV4"],"kind":"struct"},"1:11123:6209":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"6:567:4509":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"2:11812:189":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"2:46522:198":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"6:4475:4847":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"1:12327:1459":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"6:5749:5171":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"20:398:2151":{"crate_id":20,"path":["semver","BuildMetadata"],"kind":"struct"},"6:5684:5148":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"1:12329:1457":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"2:4749:780":{"crate_id":2,"path":["core","iter"],"kind":"module"},"17:12118:3507":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"2:56964:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"16:5628:5889":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"5:6420:2833":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"6:5541:5065":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"2:2483:132":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"17:12278:3535":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"12:751:2820":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"1:2411:7274":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"6:4231:4767":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"5:2867:5412":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"17:12514:3574":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"6:5835:5190":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"17:12884:3739":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"6:5727:5164":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"16:6359:5957":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"6:4206:4751":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"17:9193:34299":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"2:49456:6137":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:52338:5590":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"6:1532:4549":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"6:5595:5092":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"17:13031:3778":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"15:214:18369":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"17:12134:3508":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"2:4558:12607":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"16:5737:5904":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"17:10506:3224":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"2:48704:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"17:10752:3246":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"2:46633:6850":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"17:13100:3795":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"17:13413:3897":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"18:766:23089":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:8211:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"16:2825:3986":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"17:9857:6706":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"1:9225:183":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"17:420:3096":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"1:12322:730":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:10723:6845":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"2:49990:6064":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"2:48871:2450":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"2:49927:6857":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"6:131:13107":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"2:48269:207":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"17:13279:3869":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"16:5664:5895":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"17:10774:3214":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"6:4224:4763":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"17:11368:3360":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"2:52384:5592":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:53562:5655":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"6:7255:5400":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"6:4307:4801":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"2:21038:7306":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"16:6829:5989":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:9697:2122":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"16:7637:6002":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"1:11666:6213":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"6:560:4506":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"17:11787:3440":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"2:46925:6085":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:11964:6218":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"16:6284:4009":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"2:54014:5663":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"6:5443:5009":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"1:9295:5768":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"2:20095:30354":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:2571:127":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"1:9454:6914":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"17:12836:3732":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"17:10207:6715":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"9:33:18257":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"16:7909:6012":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"6:6981:5377":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:5877:6051":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:51116:5560":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"2:10993:2104":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"18:660:6640":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"5:5750:2658":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"16:6376:19272":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"1:2253:2850":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"6:4706:4955":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"6:7226:5393":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"17:12874:3738":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:48400:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"6:4212:4754":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"17:9722:1623":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"2:2658:2157":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"16:5447:6731":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"1:8088:6185":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"1:6244:203":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"2:47381:2670":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:2763:12676":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"16:5761:6733":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"17:12349:3545":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"17:9601:3166":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"17:12148:3510":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"17:12337:3219":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"1:12330:1458":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"16:6593:5976":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"5:7188:2840":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"5:6581:2837":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"1:11488:5554":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"5:6907:195":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"2:20335:7434":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"1:1002:6803":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"16:6210:5943":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"1:4771:7323":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"1:8958:6196":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"12:60:34278":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"1:7067:7432":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"2:50860:5554":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"17:13374:3888":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"1:10868:2688":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"6:4690:982":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"2:4103:6047":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"16:7452:195":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"16:7135:34293":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"16:2727:3982":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"1:2579:2681":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"16:2930:18411":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"1:12314:308":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"2:9790:2124":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"1:11681:6255":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"16:7298:5999":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"5:632:6812":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"1:9343:7394":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"1:6792:6889":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"12:762:2796":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"6:501:4469":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:48476:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"6:1668:4646":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:11174:2094":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:7860:7306":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:47043:2064":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"16:7435:4178":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"1:1114:6805":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"2:8609:131":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"2:50177:2126":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"17:12291:3536":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"5:6989:2016":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"6:1678:4652":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"9:649:18208":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"5:7048:30314":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"16:7319:6000":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"1:8239:2685":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"17:12550:3605":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"1:4329:7299":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"16:2341:3966":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"1:1105:6804":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"2:20116:30359":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"2:22476:2636":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"17:11330:3352":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"2:7470:2433":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"2:50259:2118":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"16:3026:3049":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"2:10707:12765":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"2:47606:6130":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"3:223:207":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:12333:1512":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"5:5552:2820":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"20:0:1622":{"crate_id":20,"path":["semver"],"kind":"module"},"18:690:5831":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"5:3077:2430":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"17:12934:3756":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"9:622:18207":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"1:6419:2892":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"5:219:2803":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"17:12630:3667":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"17:12964:3762":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"6:7220:5392":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"2:51785:5565":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"18:481:5823":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"6:575:4514":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"16:2367:3967":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"18:491:5824":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"16:5963:191":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"6:5876:5216":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"20:218:127":{"crate_id":20,"path":["semver","parse","Error"],"kind":"struct"},"2:2915:2160":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:2474:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"17:10528:6728":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"17:10455:3222":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"6:4737:4968":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"1:1626:6026":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"16:4606:4035":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"17:12609:3657":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"17:10532:127":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"1:8078:3089":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"2:2887:116":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"2:53064:5621":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"2:49917:6062":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:5189:7346":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"2:3484:2820":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"6:4653:4928":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"1:8447:2123":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"5:1423:6795":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"1:5837:2038":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"16:6330:4064":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"2:58291:5682":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"6:5841:5191":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"5:6537:241":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"5:7034:2063":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"16:2320:3965":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"2:2486:235":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"1:3274:2686":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"5:1082:32729":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"6:4726:4962":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"17:10257:6722":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:50489:12539":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"2:2781:12678":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:7310:25411":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"1:574:2876":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"16:4217:4024":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"2:2670:2288":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"17:11708:3428":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"17:10385:5855":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"2:49167:127":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"17:11841:3448":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"15:0:1881":{"crate_id":15,"path":["addr2line"],"kind":"module"},"2:11764:12624":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"2:2480:147":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:46901:5532":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:7887:5688":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"17:9250:6666":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"2:50632:6158":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"2:52640:5598":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"17:12695:3703":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"2:29587:5451":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"17:11639:3421":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"2:2742:7428":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"1:4215:7290":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"6:1686:4653":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:9517:2431":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"17:11174:3313":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"1:8342:2699":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"5:1378:2432":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"17:9433:6677":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"2:46566:2010":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"16:5703:5898":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"18:531:5825":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"1:11318:2035":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"6:6430:5289":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"17:9947:19422":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:21403:30320":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"6:4621:4914":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"2:2828:12683":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"2:52010:5574":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"1:1828:2596":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"17:12730:3704":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"16:6241:5945":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"20:318:2147":{"crate_id":20,"path":["semver","VersionReq"],"kind":"struct"},"17:11617:3414":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"1:628:7225":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"2:46968:12614":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"12:632:2430":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"16:534:5865":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"1:9835:128":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"2:49641:5549":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"1:6795:7390":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"17:11528:3400":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"9:111:18201":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"5:4234:2825":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"16:5433:5872":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"2:1639:5417":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"17:10854:19343":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"2:51023:208":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"5:1404:6024":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"5:6860:6042":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"2:22011:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"5:7064:2061":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"2:51909:5570":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:11456:2033":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"16:6528:5963":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"16:7543:3996":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"6:1636:4623":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"17:247:6646":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"2:54171:5674":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"2:46617:5527":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"6:4257:4779":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"2:20366:7436":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"0:75:1638":{"crate_id":0,"path":["rustc_version","LlvmVersion"],"kind":"struct"},"17:8510:3136":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"1:969:6796":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"2:10958:6145":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"6:4367:4831":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"1:7817:2904":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"2:20775:7439":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"17:8494:3135":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"16:7267:5995":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"1:681:6867":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:3184:12512":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"5:5079:2100":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"6:5720:5163":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"1:8375:2695":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"5:1454:6814":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"16:6517:5962":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"2:53000:5619":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"5:2875:33175":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"6:4605:4907":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"2:52029:5575":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"5:7001:2017":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"6:4778:4983":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"17:9488:6683":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"5:6915:6043":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"1:1889:2614":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"6:1505:4538":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"16:6781:6769":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"6:5504:5051":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"17:11734:3174":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"6:539:4494":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:11240:12541":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"2:4217:6830":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"16:7117:34291":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"12:2178:4363":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"6:592:4522":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"5:4171:2825":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"2:51940:5571":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2:1747:5418":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"2:46858:2114":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"5:2871:33174":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"1:5238:7352":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"5:5641:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"17:13436:3910":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"1:11797:6873":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"1:484:2914":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"17:9658:6689":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"16:2771:3984":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"2:56951:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:931:6024":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"2:3140:231":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"17:12748:3709":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"0:122:1733":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","ParseIntError"],"kind":"variant"},"1:12281:7233":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"17:9350:3130":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"1:3159:26519":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:51104:6180":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"2:46937:2115":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:5018:7309":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"1:7967:6182":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"6:6293:5240":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:47298:6115":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:4510:6876":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"1:9847:2906":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"17:12756:3710":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"2:50848:6174":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"9:505:18331":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"17:9223:19348":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"16:7659:19279":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"17:10949:3263":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"1:2250:6872":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"1:10456:25410":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"17:10997:3278":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"2:49426:144":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"2:20118:30357":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"16:4327:4027":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"5:6877:2812":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"5:36:2801":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"2:47599:6129":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"2:50526:6152":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"2:53874:5659":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"12:985:5994":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"1:9237:2033":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"18:707:2096":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"6:513:4474":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"16:7044:34290":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"2:47246:6108":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:11105:6203":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"17:10394:5856":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"17:10520:3227":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"9:863:18186":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"1:3165:27316":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"2:50231:2124":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"16:5981:5935":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"17:9183:6665":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"1:11175:27891":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"6:519:4477":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"16:3263:4015":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"6:1574:4577":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"17:13580:3940":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"17:9820:6700":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"6:5625:5115":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"5:2085:6034":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"2:50717:2128":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"1:12308:367":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"2:7143:2163":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:46339:2434":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:979:7235":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"1:774:141":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"17:8418:19337":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"18:521:23090":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"2:9735:6840":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"9:382:18291":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"1:5328:6879":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:0:1355":{"crate_id":1,"path":["std"],"kind":"module"},"18:0:1884":{"crate_id":18,"path":["memchr"],"kind":"module"},"5:4201:2658":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"2:51761:5564":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:1615:2796":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"1:12316:1363":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"17:9382:3153":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"2:46599:6849":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"17:12033:3494":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"12:1832:2430":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"6:7266:5404":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"1:11145:129":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"5:3614:6815":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:50694:6160":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:8637:5744":{"crate_id":1,"path":["std","net","socket_addr","SocketAddrV6"],"kind":"struct"},"17:12008:3491":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"2:52954:5618":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"17:9021:6662":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"2:48742:6836":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"6:6269:5223":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"17:10608:3110":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"17:12797:3723":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"17:11137:3307":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"1:3491:2050":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"17:13168:3816":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"6:4598:4905":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"16:7357:4174":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"2:2785:12677":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"17:13518:3927":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"6:7166:5389":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"17:11235:3324":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"12:1681:143":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"6:5554:5074":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"6:4280:4787":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"17:9553:3158":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"17:13184:3819":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"2:8886:144":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"6:4191:4744":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"1:8083:6894":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"5:6093:2820":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"2:2477:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"2:2832:12684":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"12:1518:18347":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"17:13327:3870":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"1:7994:6848":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"17:8561:3138":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"17:12176:3516":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"16:7249:6779":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"2:51739:5563":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"5:3671:2796":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"1:8899:5762":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"12:1085:6806":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"2:49438:5545":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"1:8234:6898":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:20497:7435":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"1:5657:2027":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"18:507:3022":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"0:127:1655":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","ComponentMustNotHaveSign"],"kind":"variant"},"1:11081:6925":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"6:545:4497":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"1:12309:920":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"17:8162:19329":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"6:4239:4770":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:47640:5534":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"2:2150:578":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:6848:7392":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"1:2907:207":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"17:11500:3393":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"16:5793:5867":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"1:8118:129":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"2:54054:5667":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"17:10921:3257":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"7:32:18173":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"20:333:2148":{"crate_id":20,"path":["semver","Comparator"],"kind":"struct"},"6:4300:4798":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"2:50383:2105":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"5:7171:2796":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"16:3854:4022":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"2:46998:6094":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"2:20944:30712":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"16:2433:3970":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"17:9317:6672":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"2:49898:6060":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"17:10360:5847":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"16:7825:4228":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"1:6506:2884":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"1:1938:2645":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"6:487:4461":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"16:4144:4023":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"17:12251:3531":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"12:387:34277":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"8:0:1875":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"17:12850:3736":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"5:7094:221":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2:1668:1065":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"2:4213:204":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"2:48878:2452":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"18:614:34310":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"2:10882:6140":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"12:777:2798":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"17:10625:3242":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"2:3304:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"16:8014:4169":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"6:4761:4975":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"12:1120:6807":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"1:4974:7347":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"6:6311:5247":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"16:3402:4016":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"16:8056:4241":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"12:274:6017":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"6:4551:4879":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"12:119:2790":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"12:1628:2799":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"2:51869:5568":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"6:646:13448":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"6:4565:4885":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"1:8500:5735":{"crate_id":1,"path":["std","net","ip_addr","Ipv6Addr"],"kind":"struct"},"17:10088:3201":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"12:646:2431":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"1:4273:7294":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"17:8822:34302":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"16:6865:5993":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"2:20492:7306":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"2:53420:5654":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"17:10296:6725":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:50401:2102":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"5:3559:2804":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"17:11186:3314":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"5:1413:6809":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"2:49448:6136":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"2:12003:202":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"17:8666:3141":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"17:10708:5863":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"17:9844:6704":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"5:6899:2432":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"1:7551:26595":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"17:10796:3248":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"2:51715:5562":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"17:9577:3164":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"2:2789:12679":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"2:20247:7442":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"9:709:5545":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"2:10336:6844":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"2:57016:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"18:515:3025":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"1:5891:203":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"6:5582:5086":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"16:5525:5881":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"2:53812:5658":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"2:8668:2455":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"2:6860:2897":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"2:50313:2120":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"17:9712:3167":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"0:129:1737":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","MinorVersionMustBeZeroAfter4"],"kind":"variant"},"16:2993:4011":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"1:12326:725":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"1:4408:25417":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"17:8752:2107":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"6:554:4503":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"12:697:6796":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"12:1872:6028":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"2:47592:6128":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"11:36:4368":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"17:8368:19335":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"17:12237:3530":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"5:6885:33136":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"17:9700:6695":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"1:4122:6875":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"17:11536:3402":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"12:0:1879":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"17:11149:3308":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"6:600:4527":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"2:49656:6138":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"2:20525:5426":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"16:2282:3957":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"9:800:4424":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"2:47278:6113":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"2:51031:192":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"1:3382:2658":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"6:4489:4848":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"17:9627:6686":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"17:8941:6660":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"17:10583:19340":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"16:6171:4061":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"6:4644:4922":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"16:3632:4019":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"17:11271:3329":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"2:48885:2453":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"18:719:3043":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"1:3475:25463":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"17:11661:3422":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"2:12084:7252":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"2:4222:6831":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"12:1840:2820":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"6:4294:4795":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:21432:6074":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:1826:2595":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"17:8212:19330":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"1:3162:27326":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"17:13478:3916":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"1:5072:2882":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"2:1632:577":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"1:12292:26894":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"2:39377:2039":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"16:6146:5938":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2:46425:6080":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"2:21349:5437":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:20516:7306":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"2:54210:5675":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:6451:6886":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"6:1714:4666":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"5:1434:6796":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"2:21813:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"16:7469:4007":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"1:9462:5773":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"17:10670:5862":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"9:188:18236":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"2:8654:119":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"16:7872:6006":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"1:12323:727":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"2:54080:5669":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"2:47621:2696":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"16:6052:6765":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:9043:2859":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"17:10108:6714":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"1:2026:182":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"2:8666:2454":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"6:586:4519":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"1:8717:6902":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"2:50127:2122":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"16:5839:19270":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"6:1541:4554":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"17:10245:6721":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"5:273:2804":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"6:4673:4938":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"16:2631:3978":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"1:7861:5684":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"6:7208:5390":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"6:4629:4918":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"6:4126:4698":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"17:13354:3882":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"2:2845:12687":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:5691:2029":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"6:4379:4840":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"2:2316:179":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"1:4307:7295":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"1:12320:630":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:3221:12513":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:11507:5778":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"2:21453:1733":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"17:3249:6658":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"16:2705:3981":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"1:9548:5777":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"17:9831:6701":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"2:4076:6829":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"16:6298:5947":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"5:1234:6804":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"16:6059:34292":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"16:6070:4056":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"16:5541:5883":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"1:4913:5271":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"14:221:4317":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"1:8711:7319":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"16:7372:34289":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"1:5706:2030":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"5:0:283":{"crate_id":5,"path":["alloc"],"kind":"module"},"6:4745:4970":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"16:7511:4181":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"2:2811:12682":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"17:10310:6726":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"1:7760:6929":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"17:11014:3281":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"1:3958:7287":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"2:2747:7430":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"2:47228:6105":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"17:9362:3158":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"2:2663:108":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"12:815:6797":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"6:4354:4827":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"6:4317:4808":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:29649:67":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"2:58312:5683":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"2:3157:12590":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"16:5460:5876":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:9585:2104":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"5:1248:6808":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"2:3635:2432":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"6:4515:4862":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"5:5133:1363":{"crate_id":5,"path":["alloc","str"],"kind":"module"},"2:49417:2441":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:12334:1101":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"6:6998:5388":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"16:7329:4005":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"2:22044:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"6:4274:4785":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"17:8441:19338":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"2:50009:6065":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"17:10434:5857":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"16:7890:6009":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"6:4534:4870":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:51695:5561":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"2:53030:5620":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"2:7467:2092":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"2:2702:2290":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"1:887:2430":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"17:8871:6659":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"16:3188:4014":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"16:6137:5937":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"2:3996:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"5:1367:2431":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"17:11217:3323":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"17:13366:3885":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"1:5905:2885":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"18:574:3022":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"16:2657:3979":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"2:7474:12655":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"6:1738:4674":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"16:7211:4171":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"5:784:2807":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:6605:31776":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"17:9303:3151":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"12:1029:6805":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"16:3716:4021":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"1:9219:2031":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"2:21439:2640":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:1864:2606":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"16:2683:3980":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"17:9885:6709":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"1:960:6809":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"9:920:18188":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"6:7289:5407":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"1:8749:6903":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"2:48261:190":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"16:5163:4047":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"16:7093:4151":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"2:4723:31475":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"15:193:18365":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"2:2918:2161":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:4259:7292":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"2:51891:5569":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"2:50392:2103":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"9:19:18256":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"2:50109:2123":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"6:1654:4635":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"1:9396:6906":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"1:4662:6878":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"5:6449:2846":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"2:46864:6082":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"2:50053:1753":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:9567:5778":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"2:7787:7360":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:5671:2028":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"5:5327:2833":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"1:7908:2908":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"17:2916:6656":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:20050:2298":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"6:6554:5365":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:46873:6083":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"2:48312:2430":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"6:4635:4919":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"17:8814:128":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"2:47289:6114":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"16:2557:3975":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"16:7929:6788":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"17:1931:6652":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"1:11300:26061":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"17:10233:6720":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"5:6854:2432":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:11169:2101":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"2:3927:2658":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"1:11932:5786":{"crate_id":1,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"6:5861:5205":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"2:48210:5536":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"1:7872:27328":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"17:8241:19331":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"6:1707:4663":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"2:20284:7443":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"12:669:6795":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"1:3352:2696":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"1:3235:2690":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"1:11858:6875":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"1:10874:2686":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"0:125:1652":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","ComponentMustNotHaveLeadingZeros"],"kind":"variant"},"16:6903:5773":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"2:52362:5591":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2:47208:6102":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:12311:1475":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"17:12816:3724":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"17:9691:6692":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"2:2822:4132":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"16:6619:4098":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"2:46991:6093":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"1:9265:2035":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:2285:124":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"5:2153:6039":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"5:3110:6027":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"2:54095:5670":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"2:49889:6059":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:12332:774":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"2:54118:5671":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"5:2864:2550":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"2:20310:7444":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"17:9897:6710":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"16:5596:4050":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"17:12674:3698":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"5:872:2430":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"6:6545:5362":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"5:679:228":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"5:3863:2820":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"1:8382:2697":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"17:11721:3431":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"12:2205:2016":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"2:8921:2439":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:53214:5622":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"12:2190:34272":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"2:2801:12680":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"17:11547:3405":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"17:1771:6651":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"5:5486:229":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"2:49122:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"1:12325:729":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"12:1852:6025":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"12:725:6023":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"17:9681:3088":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"16:6200:5942":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"16:2509:3973":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"2:20323:7306":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"16:7388:6786":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"2:2437:7306":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"12:2053:5994":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"16:4441:4031":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"16:3689:4020":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:51807:5566":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"2:9776:2125":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:2385:7264":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"6:4286:4790":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"1:6327:1625":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"6:4102:4681":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:13024:3777":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"17:12073:3498":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"1:944:2820":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"2:49660:6139":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"17:12781:3720":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"2:47024:5533":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:3466:2053":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"18:609:6639":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"17:10546:19339":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"1:8517:7286":{"crate_id":1,"path":["std","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"2:48328:2432":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"13:220:4362":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"9:586:4372":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"16:4297:4026":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"2:50844:6173":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"6:507:4472":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"1:12276:26604":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"16:6668:4104":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"1:11525:5783":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"17:11684:3427":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"12:1866:6027":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"16:6842:5992":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"2:3367:6826":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"1:12331:1455":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"2:20063:30708":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"1:3237:2691":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"5:2056:6032":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"2:48438:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:6896:214":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"2:50856:6176":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"17:9293:6670":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"2:47311:6116":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"6:4816:5005":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"6:1701:4662":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"16:7980:19280":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"17:11576:3410":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"2:49964:6063":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"16:5374:3990":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"1:1620:6025":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"16:6123:3989":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"6:4427:4843":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"6:4683:4944":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"2:2728:2293":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"17:1021:6650":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:50019:6860":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:11315:3346":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"16:4749:4040":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"2:51992:5573":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:47269:6112":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"17:13340:3876":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"17:0:1883":{"crate_id":17,"path":["object"],"kind":"module"},"5:5031:2804":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"5:7017:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"0:147:1729":{"crate_id":0,"path":["rustc_version","Error","UnexpectedVersionFormat"],"kind":"variant"},"5:2046:2815":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"17:11259:3328":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"2:2777:7431":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"17:10075:6712":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"1:2613:2673":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"16:8069:127":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"16:6654:4102":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"17:13148:3810":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"2:48362:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:9289:2432":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"0:0:1772":{"crate_id":0,"path":["rustc_version"],"kind":"module"},"2:4019:12511":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"2:20364:7306":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"2:52718:5614":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"6:1525:4546":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"6:4185:4742":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"6:4417:4842":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"2:50159:2127":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:47148:6063":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"17:11087:3298":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"16:7557:6001":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"0:49:1627":{"crate_id":0,"path":["rustc_version","Channel","Dev"],"kind":"variant"},"17:13459:3911":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"16:2487:3972":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"1:9649:2613":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"14:202:12551":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"1:11544:5777":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"17:11974:3488":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"2:7092:2164":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"5:6869:2820":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"2:39426:2291":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:6862:2898":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"12:822:7235":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"1:1091:5994":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"2:46640:2465":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"1:8135:118":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"1:5720:1617":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"1:8725:6899":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"6:5510:5052":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:21366:30322":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"17:11485:3389":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"16:7426:6787":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"5:688:110":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"17:386:6647":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"16:6472:4087":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:8375:32519":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:47237:6107":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"16:6567:5975":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"2:21274:6069":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"17:967:6649":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"2:9350:219":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:7046:12656":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"2:48590:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"9:956:18189":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"17:9328:6673":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"2:2952:12514":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"2:9340:7306":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:2399:7268":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"1:8151:2682":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"18:644:3022":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"6:608:4532":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"1:10662:1617":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"6:4115:4690":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"12:1044:18346":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"2:49137:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"18:96:23078":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"6:6524:5350":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"0:152:1719":{"crate_id":0,"path":["rustc_version","Error","UnknownPreReleaseTag"],"kind":"variant"},"1:8753:5256":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"1:8651:6899":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"6:6329:5256":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"1:7936:7228":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"2:47190:6100":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:51066:6316":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"5:4875:2831":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"1:2383:5420":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"0:141:1687":{"crate_id":0,"path":["rustc_version","Error","CommandError"],"kind":"variant"},"1:8460:152":{"crate_id":1,"path":["std","net","ip_addr","IpAddr"],"kind":"enum"},"2:3169:32607":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"17:12225:3529":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"17:12638:3668":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"2:11961:106":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"17:8774:3144":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2:2752:4125":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"17:8110:19315":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"6:4527:4869":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:1821:5424":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"6:4716:4961":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"16:7396:19277":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"16:2261:18384":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"2:21040:7437":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"16:7237:4172":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"0:48:1625":{"crate_id":0,"path":["rustc_version","Channel"],"kind":"enum"},"12:1138:6808":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"17:3125:6657":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"1:6650:6887":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"17:8055:19317":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"16:7278:4003":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:53920:5660":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"16:7567:19278":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"0:53:1631":{"crate_id":0,"path":["rustc_version","Channel","Beta"],"kind":"variant"},"2:47330:6118":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"6:4804:5000":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"2:48337:180":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"6:7237:5397":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"5:5677:13015":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"1:8826:5759":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"2:10942:6144":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"18:538:3027":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"6:4139:4708":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:21314:2639":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"2:51013:202":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"1:1608:2432":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"16:153:2787":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"2:4348:2466":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"2:49401:2442":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"2:50836:6171":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"17:13557:3936":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"2:54034:5665":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"18:564:3029":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"16:6109:4059":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"1:8424:2669":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"16:2579:3976":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"1:2248:128":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"1:5517:187":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"17:13047:3780":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"17:9031:34295":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"17:9764:5844":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"17:10321:3209":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"1:8589:6193":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"2:52794:5616":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"6:4665:4933":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"17:9671:6690":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"5:1203:5994":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"17:10894:3256":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"1:11774:2915":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:8649:111":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"17:11515:3398":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"16:7956:4010":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"2:52560:5597":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:9382:5772":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"6:6375:5275":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"16:4786:4041":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"12:1859:6026":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"2:50408:2113":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"2:2900:2435":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"5:1950:2684":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"1:1632:6027":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"2:21290:5432":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:6228:2884":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"6:4267:4782":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"16:4662:4037":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"2:54023:5664":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"2:48176:2429":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"1:11100:6201":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"6:4152:4718":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"1:9476:25653":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"1:8454:2116":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"1:910:2432":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"6:4247:4773":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:9165:34296":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"17:8881:34301":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"12:1534:6810":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"5:1046:32731":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"2:48201:2432":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"1:661:2647":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"1:12315:1333":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"16:5388:3993":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"14:40:3278":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"2:11395:111":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"6:5605:5099":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"6:4335:4817":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"2:48552:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"2:52286:5588":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"0:45:207":{"crate_id":0,"path":["rustc_version","Result"],"kind":"typedef"},"5:1395:6023":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"2:52094:5577":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"2:8872:140":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"16:3010:18412":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"6:4810:5002":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"17:13527:3931":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"1:4251:7291":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"1:9401:106":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"2:12029:139":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"2:54043:5666":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"17:11343:3356":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"1:5095:7304":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"17:10420:3218":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"17:13492:3918":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"2:8662:2453":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"17:9155:6664":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"5:781:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"17:11800:3442":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"2:4702:2078":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"1:8434:2670":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"17:11951:3479":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"5:4040:2430":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"17:11873:3452":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"12:853:6802":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"12:861:6803":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"2:7892:2094":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"17:12768:3715":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"0:55:1633":{"crate_id":0,"path":["rustc_version","Channel","Stable"],"kind":"variant"},"1:10506:6917":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"2:48628:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"17:11300:3340":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"1:9419:25556":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"5:288:2098":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"1:996:6802":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"10:0:1877":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"6:6538:5359":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"2:39413:6848":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"2:2231:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"2:38221:2298":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"2:48243:6852":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"16:7970:6013":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"16:6316:5955":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"6:4797:4997":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"11:0:1878":{"crate_id":11,"path":["adler"],"kind":"module"},"6:5523:5053":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"6:4361:4829":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"6:7214:5391":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"6:1580:4579":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:50511:6146":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"6:6975:5375":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"11:44:4369":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"17:9475:6682":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"6:1500:4536":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"17:13134:3808":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"2:6800:2695":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:4909:5267":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"1:6028:6883":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"17:9778:5845":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"6:4659:4930":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"17:11106:3303":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"2:50704:6164":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"6:4200:4749":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"1:7160:6959":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"2:7083:149":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"2:3972:6827":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"5:6845:5415":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"16:3457:3053":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"1:1931:1618":{"crate_id":1,"path":["std","error"],"kind":"module"},"1:12335:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"6:4461:4846":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"16:5235:4048":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"0:51:1629":{"crate_id":0,"path":["rustc_version","Channel","Nightly"],"kind":"variant"},"1:6554:203":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"2:11972:2873":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:50737:2129":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"12:738:6024":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"2:47630:2857":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"2:2715:2158":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"17:9283:6669":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"5:7116:6825":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"16:4262:4025":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"6:1562:4569":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"5:6287:2804":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"16:5558:19268":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"2:21465:2643":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"16:5122:4046":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"5:4156:242":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:47615:6131":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"17:10721:3245":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"5:7077:2062":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"1:4321:7297":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"6:1518:4544":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:6469:2505":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"2:24:598":{"crate_id":2,"path":["core","env"],"kind":"macro"},"17:487:6648":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"17:10497:19449":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"1:7882:6892":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"2:11751:135":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"2:50879:121":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"16:5614:5888":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"5:1964:6815":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"16:0:1882":{"crate_id":16,"path":["gimli"],"kind":"module"},"17:12739:3708":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"1:4899:7294":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"17:10875:3253":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"16:2465:3971":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"2:21747:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"17:9446:6678":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"14:160:6792":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"17:10159:3206":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"2:11130:1621":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"2:8599:2053":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"2:47409:6126":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"5:952:2804":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"2:52408:5593":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"17:8526:3137":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"1:2029:181":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"1:11693:6215":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"2:52170:5585":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:10767:2031":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"5:3236:2796":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"2:47168:6851":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"6:6509:5343":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:54148:5673":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"2:46456:195":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"2:51074:5557":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:10871:2690":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"5:6942:2432":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"17:10822:19342":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"2:49999:6859":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"2:48864:2451":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"2:47260:6111":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"17:9539:6685":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"2:56938:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:13192:3820":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"17:8596:3139":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"5:3144:6028":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"1:10810:2907":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"1:2653:2683":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"1:9527:164":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"17:9371:6663":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"1:3276:2687":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"1:7798:2902":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"5:1062:32701":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"17:9631:6687":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"17:9526:6684":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"1:9359:7395":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"1:11288:2032":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"16:5472:3994":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"2:47395:6125":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"16:6735:6768":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"1:11155:118":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"2:8656:2450":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"2:49241:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"3:0:433":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"1:11395:2910":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"6:4096:4680":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:2557:115":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"17:9791:5846":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"2:50079:2109":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"16:7847:4229":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"2:56581:7471":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"17:10682:3244":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"1:990:6800":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"0:149:1756":{"crate_id":0,"path":["rustc_version","Error","SemVerError"],"kind":"variant"},"16:5949:5932":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"5:3479:2430":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2:1915:5425":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"12:393:34274":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"2:20097:30356":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"6:4581:4894":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"6:4496:4850":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"16:6790:4112":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"2:7120:120":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"2:9804:6841":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:11401:2911":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"17:12307:3538":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"2:8598:207":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"1:9281:6905":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"2:7079:133":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:21714:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"1:1476:143":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"5:1219:6805":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"17:8631:3140":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"17:8991:34300":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"2:21846:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:8403:2667":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"17:10476:19448":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"1:11480:27893":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"1:6054:6884":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"2:51970:5572":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"16:4545:4033":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"16:6345:3997":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"16:5996:6740":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"1:545:2815":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"2:20413:5426":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"2:50085:2108":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"2:50557:6156":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:1611:2820":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"1:9497:5776":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"2:50852:6175":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"17:1903:19380":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"1:11715:2914":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"16:4385:4029":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"2:11183:2096":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"5:6139:2804":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"17:8701:3142":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"17:10062:6711":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"1:4438:7316":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"2:21945:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"2:50331:2121":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:5014:7305":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"2:3151:12591":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"16:7942:6791":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"17:10403:3246":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"17:12980:3766":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"2:20780:7462":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"1:3197:2688":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"16:4817:4042":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"2:3130:12688":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"2:50067:2112":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"17:8475:19316":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"6:135:13108":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"17:13114:3802":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"16:4574:4034":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"2:2840:12686":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:3427:2041":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"17:9401:3155":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:1548:2658":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"2:2806:12681":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"2:2769:4126":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"6:1595:4591":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"17:10374:5851":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"2:3145:134":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"17:562:3251":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"12:1555:6811":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"1:11110:6185":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"16:4413:4030":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"1:2909:127":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"2:4394:2467":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"16:2749:3983":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"17:11070:3296":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"2:21184:6068":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"17:11853:3449":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"2:50213:2125":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"17:12265:3534":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"2:49938:5550":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2:50363:2116":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"2:50683:12544":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"6:1600:4593":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"6:4575:4891":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2:9493:2430":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:6090:6885":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"17:12617:3660":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"17:10845:3219":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"1:4221:7289":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"18:681:5828":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"2:54069:5668":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:6148:1625":{"crate_id":1,"path":["std","sync","mpmc","array","Channel"],"kind":"struct"},"2:20523:7440":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"5:3468:160":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"17:12926:3753":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"6:5692:5149":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"0:95:1661":{"crate_id":0,"path":["rustc_version","VersionMeta"],"kind":"struct"},"1:4843:7338":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"2:50426:2115":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:5489:6050":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"18:699:5832":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"5:2366:5409":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"1:8095:5689":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"16:5815:19269":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"2:7042:12657":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:22077:2641":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:8229:6897":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"12:353:2794":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"17:13203:3824":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"2:21341:5436":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"2:48252:12755":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"6:1887:14424":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"20:277:6912":{"crate_id":20,"path":["semver","error","Position"],"kind":"enum"},"5:6025:2837":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"1:8483:5733":{"crate_id":1,"path":["std","net","ip_addr","Ipv4Addr"],"kind":"struct"},"18:671:6644":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"1:6687:6130":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"18:599:34311":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"6:1695:4659":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"16:6017:6754":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"2:11785:31691":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"17:13572:3937":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"16:7166:19276":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"2:2757:4122":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"16:2793:3985":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"16:7497:3998":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"6:5480:5035":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"5:2133:34217":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"1:10333:6190":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"16:4635:4036":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"0:138:1684":{"crate_id":0,"path":["rustc_version","Error","CouldNotExecuteCommand"],"kind":"variant"},"16:2868:3988":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"17:13594:3943":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"1:4911:5269":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"1:12324:728":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"1:1123:6808":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"16:6034:6757":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"2:11194:2093":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:50828:6169":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:598:6864":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"16:5780:5907":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"2:8926:2440":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"6:1608:4598":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"1:6719:2896":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"1:8105:6186":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"17:12972:3764":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"1:11837:6874":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"2:20078:30708":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"17:9118:34297":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"2:8380:31212":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"6:1511:4541":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:50095:2107":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"17:13231:3832":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"1:2589:2863":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"17:10490:3223":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"2:46945:12613":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"1:11468:2034":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"6:7243:5398":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"17:9644:6688":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"5:6936:2432":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"2:8660:2452":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"17:12361:3552":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"2:52764:5615":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"17:11199:3315":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"1:10913:2908":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"17:10466:5859":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"9:896:18187":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"17:9873:6708":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"18:624:34309":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"17:13176:3817":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:46685:5529":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"12:320:2792":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"5:3048:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"13:0:1873":{"crate_id":13,"path":["std_detect"],"kind":"module"},"2:46626:4169":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"17:13506:3925":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"2:29721:30302":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"18:636:3042":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"0:131:1657":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","MinorVersionRequiredBefore4"],"kind":"variant"},"6:7279:5405":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:3599:25461":{"crate_id":1,"path":["std","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:2659:2287":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"2:50824:6168":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"2:6558:12659":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"14:7:6792":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"2:9126:2862":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"2:50417:2114":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"2:56977:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"6:5772:5177":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"2:52192:5586":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"2:49977:6858":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"17:12060:3497":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"17:12103:3503":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"17:9061:3158":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"1:5898:2884":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"6:4179:4741":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"1:6931:6887":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"2:25286:2637":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:8441:2107":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"16:3599:4018":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"17:9339:6674":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"17:8951:34303":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"17:11054:3292":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"2:47038:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"17:10221:6719":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"2:2438:12619":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"2:29827:30316":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"6:6322:5252":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"1:5585:119":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"5:2595:5413":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"17:11606:3413":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"2:2665:225":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"2:47360:6121":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"2:50912:12808":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:9314:5769":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"17:10182:3207":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"2:10303:6843":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:12321:631":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"17:10139:3158":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"17:11761:3437":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"20:297:1623":{"crate_id":20,"path":["semver","Version"],"kind":"struct"},"1:9586:6200":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"2:9143:2863":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"17:9805:3230":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"2:46440:197":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"6:6479:5326":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"13:108:34279":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"17:12198:3527":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"2:38204:180":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"5:3690:2804":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"16:6719:34288":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"1:5834:2036":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"16:6704:4107":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"17:8295:19333":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"1:8876:5545":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"2:21:667":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"17:13536:3933":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"6:6500:5340":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"1:12313:1027":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"5:6606:2849":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"6:6392:5277":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:4294:2465":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"17:11594:3411":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"6:4592:4902":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"17:11939:3477":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:49155:109":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"2:48666:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:14:1643":{"crate_id":2,"path":["core","write"],"kind":"macro"},"17:13214:3825":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"1:6021:6880":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"2:52876:5617":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"2:52316:5589":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"2:8658:2451":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"0:28:1692":{"crate_id":0,"path":["rustc_version","version_meta_for"],"kind":"function"},"17:8339:19334":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"2:7788:6834":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"2:47218:6104":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"6:6277:5228":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"1:4174:1620":{"crate_id":1,"path":["std","num"],"kind":"module"},"16:7309:4004":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"1:353:6861":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"17:12046:3496":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"17:11161:3311":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"4:0:1874":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"1:8731:5748":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"2:21780:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"5:4659:201":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"2:53958:5661":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"6:4698:4950":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:52047:5576":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"16:4689:4038":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"17:13059:3786":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"17:11247:3327":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:20932:5428":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:9449:6913":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"16:6161:19271":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"17:12860:3737":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"1:8546:5742":{"crate_id":1,"path":["std","net","ip_addr","fmt","Span"],"kind":"struct"},"2:50669:6159":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:47118:2080":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"17:13158:3813":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"2:2251:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"16:5411:3995":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:47321:6117":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:2401:7269":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"16:6463:5961":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"2:2280:185":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"12:659:2432":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"5:3893:2804":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"2:21879:2642":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"20:383:2150":{"crate_id":20,"path":["semver","Prerelease"],"kind":"struct"},"1:8985:6199":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"6:5568:5085":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"17:12164:3514":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"16:2389:3968":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"1:8808:7353":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"5:3118:6025":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"16:6877:19275":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"2:46984:2113":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"2:39417:6079":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"12:2184:4364":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:8216:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:11384:2909":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"6:0:801":{"crate_id":6,"path":["libc"],"kind":"module"},"2:47199:6101":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"5:3084:6026":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"6:5782:5179":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"6:4329:4814":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:50832:6170":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"17:13082:3791":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"12:300:6020":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"5:7105:6046":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"17:12948:3759":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"12:1845:2796":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"1:9327:7393":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"1:3199:2689":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"2:48320:2431":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"2:5656:32429":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"2:47071:6098":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"2:47055:30314":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:2970:7249":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:1756:5421":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"2:48193:2431":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"1:5180:7345":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"0:137:127":{"crate_id":0,"path":["rustc_version","Error"],"kind":"enum"},"17:10973:3277":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"16:6676:3999":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"17:11748:3436":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"2:7197:156":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"17:10445:3219":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"2:53672:5656":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"17:242:6645":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"16:5510:5878":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"6:5733:5167":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"1:5405:188":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"2:52140:5584":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"17:12909:3748":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"5:3934:2431":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"17:9751:5843":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"1:11279:4440":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"1:4977:7322":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"15:175:18364":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"2:4145:2464":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"18:548:140":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"5:6439:2845":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"2:9624:6838":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"2:2816:4131":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:524:2875":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"12:834:6800":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"6:1722:4670":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:52537:5596":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:8391:2040":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"18:582:2298":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"17:11288:3337":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"17:13141:3809":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:57003:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"5:5075:2099":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"1:12328:1456":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"2:49189:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"17:11559:3407":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"6:4768:4978":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"1:678:6865":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"1:12152:2919":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"17:9422:6676":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"14:165:18352":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"2:47005:12615":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"12:2198:4366":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"2:3067:7251":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:1637:6028":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"17:12896:3742":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"12:444:141":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"2:9542:2123":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"1:1967:2646":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"16:6496:19273":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"2:47370:6122":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2:4339:2855":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:4590:6877":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"6:5660:5136":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:2651:217":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"17:8911:34304":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"2:2661:223":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"6:62:13041":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"6:4449:4845":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"16:7343:4006":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"17:12322:3542":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"1:8602:6194":{"crate_id":1,"path":["std","net","socket_addr","SocketAddr"],"kind":"enum"},"2:46544:200":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:4459:7318":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"16:5878:18383":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"16:7288:5998":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"14:187:18359":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"5:1445:195":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"17:13071:3787":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"1:4446:7317":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"1:3484:2052":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"1:8706:6195":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"1:965:6795":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"1:9273:2430":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"9:0:1876":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"6:4346:4822":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"1:3409:2051":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"2:21237:5429":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"2:54133:5672":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"2:47177:2669":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"2:2322:186":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"16:6690:4000":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:46915:6084":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"17:12087:3501":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"1:7974:2601":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"9:827:18282":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"20:127:2152":{"crate_id":20,"path":["semver","identifier","Identifier"],"kind":"struct"},"16:2894:18410":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"17:9263:6667":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"2:21912:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"6:6572:5368":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:10737:1693":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"17:12485:3554":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"16:2605:3977":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"2:51839:5567":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"17:9458:6679":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"2:2773:7429":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:3319:2677":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"5:3602:2684":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"12:1003:6804":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"17:11034:3291":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"17:9274:6668":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"2:48185:2430":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"18:727:3046":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"17:10350:3214":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"2:21258:5431":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"5:855:2810":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"2:20372:7438":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:12310:409":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"5:1357:2430":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"1:9442:6912":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"1:6691:6888":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"16:5219:3136":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"2:53750:5657":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"2:0:486":{"crate_id":2,"path":["core"],"kind":"module"},"1:10437:2606":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"2:10919:6143":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"2:9818:6842":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"17:1962:6655":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"17:10270:6723":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"1:8775:5749":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"9:676:18194":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"5:6212:2432":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"20:88:6953":{"crate_id":20,"path":["semver","error","QuotedChar"],"kind":"struct"},"1:1811:598":{"crate_id":1,"path":["std","env"],"kind":"module"},"7:0:1502":{"crate_id":7,"path":["unwind"],"kind":"module"},"14:31:6792":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"6:6409:5282":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:21387:30315":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"17:12211:3528":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"2:3355:12572":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"17:13126:3805":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"1:7202:2900":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"1:5359:6879":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:8393:19336":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"18:80:23077":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:49409:6135":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"6:5741:5169":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"1:973:6797":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"12:1836:2432":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"17:8137:19328":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"16:4921:4045":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"0:25:1526":{"crate_id":0,"path":["rustc_version","version"],"kind":"function"},"1:11165:2040":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"5:3123:33137":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:49838:6855":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:1604:2430":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"1:7957:6181":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"1:11914:5785":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"2:21131:6067":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"2:8802:6837":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"6:5472:5033":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"5:1603:2804":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"17:10642:19341":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"17:11436:3364":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"6:4437:4844":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"1:1887:2613":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"17:8796:3145":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"1:11618:2045":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"6:5713:5161":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"20:352:2149":{"crate_id":20,"path":["semver","Op"],"kind":"enum"},"16:4519:4032":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"5:2865:33178":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"16:4888:4044":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"17:9909:3168":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"2:52459:5594":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:11596:2912":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"1:6403:2873":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"1:4749:7322":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"1:11612:6210":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"12:2080:6805":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"17:13221:3827":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"9:977:4443":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"1:7951:7230":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"6:5699:5150":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"2:50540:6155":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"0:133:1659":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","TooManyComponents"],"kind":"variant"},"6:1643:4627":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"0:144:1753":{"crate_id":0,"path":["rustc_version","Error","Utf8Error"],"kind":"variant"},"1:4267:7293":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"2:49128:130":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"2:52506:5595":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:5412:6048":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:9251:2034":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"16:2300:3959":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"1:9407:6908":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"1:7990:2608":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"1:9543:216":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"1:2871:2881":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"16:7059:5536":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"2:29627:5454":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"1:11699:6216":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"2:3984:6828":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"16:4849:4043":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"2:2974:7250":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"2:21978:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"18:755:5840":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"2:56990:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"7:79:18180":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"16:6186:3991":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"6:495:4466":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"5:1320:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"17:8981:6661":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"12:2069:6804":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"6:5587:5087":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"2:49104:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"1:11275:2608":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"6:1550:4560":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"16:4721:4039":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"17:9108:6663":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"6:5672:5141":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:50605:6157":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"2:48125:178":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"17:12022:3493":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"2:50840:6172":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:2257:2666":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"17:13404:3895":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"2:46962:2114":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:8974:5767":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"17:9071:34298":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"2:7786:7361":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:6614:163":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"17:13039:3779":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"17:9930:3170":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"16:2535:3974":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"18:113:23079":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"1:2516:2680":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"17:11125:3304":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"6:4398:4841":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"6:4506:4857":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"14:0:1880":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"6:4540:4873":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:8664:191":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"2:50277:2119":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:29621:5452":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:2426:1619":{"crate_id":1,"path":["std","io"],"kind":"module"},"1:918:6023":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"17:13007:3770":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"1:8662:7284":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"6:5534:5061":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"1:9538:215":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"2:47346:3040":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"2:29402:2638":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"2:47128:2079":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"17:11997:3489":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:2662:222":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"16:4357:4028":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"2:4368:2296":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"16:2411:3969":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"2:48514:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"17:11828:3447":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"6:6953:5374":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"1:8143:6896":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"6:4611:4910":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"1:10592:2043":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"18:590:3030":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"1:8916:7370":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"2:4284:2854":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"6:6424:5288":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"1:8968:2430":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"6:5498:5048":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:49225:2449":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"5:3492:2431":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"17:8272:19332":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"1:359:6862":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"16:6743:19274":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"1:3091:2698":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"1:11135:5689":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"2:2490:234":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"1:12317:1441":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"17:9738:5841":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"16:7483:4008":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"17:13393:3894":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"1:5774:2032":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:2228:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"6:6352:5274":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"}},"external_crates":{"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"20":{"name":"semver","html_root_url":"https://docs.rs/semver/1.0.16/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"}},"format_version":24}