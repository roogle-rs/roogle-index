{"root":"0:0:1832","crate_version":"0.4.0","includes_private":false,"index":{"0:149:1816":{"id":"0:149:1816","crate_id":0,"name":"SemVerError","span":{"filename":"src/lib.rs","begin":[356,4],"end":[356,30]},"visibility":"default","docs":"An error occurred in parsing the semver.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:151:1625"]},"discriminant":null}}},"a:2:2700:228-0:48:1686":{"id":"a:2:2700:228-0:48:1686","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12191:33943":{"id":"2:12191:33943","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11986:419","self::pattern":"2:11784:2150"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11789:2143","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11789:2143","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11804:2144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:74:673":{"id":"0:74:673","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[71,60],"end":[71,65]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9190:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9179:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12124:2547":{"id":"2:12124:2547","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41597:179","prim@char":"1:11986:419","self::pattern":"2:11784:2150"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41595:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11789:2143","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2554-0:121:1706":{"id":"b:2:2554-0:121:1706","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2557:128","2:2558:1495"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:108":{"id":"0:108","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,23],"end":[147,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2694:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1722","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:125:1713":{"id":"0:125:1713","crate_id":0,"name":"ComponentMustNotHaveLeadingZeros","span":{"filename":"src/lib.rs","begin":[284,4],"end":[284,36]},"visibility":"default","docs":"A version component must not have leading zeros","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:8322:8070-0:137:128":{"id":"a:2:8322:8070-0:137:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8322:8070","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"5:682:2566":{"id":"5:682:2566","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:28:1752":{"id":"0:28:1752","crate_id":0,"name":"version_meta_for","span":{"filename":"src/lib.rs","begin":[209,0],"end":[262,1]},"visibility":"public","docs":"Parses a \"rustc -vV\" output string and returns\nthe SemVer version and additional metadata\nlike the git short hash and build date.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["verbose_version_string",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"0:45:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"VersionMeta","id":"0:95:1722","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:43:1806":{"id":"0:43:1806","crate_id":0,"name":"source","span":{"filename":"src/lib.rs","begin":[385,4],"end":[395,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41595:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"dyn_trait":{"traits":[{"trait":{"name":"error::Error","id":"2:2602:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2554-0:137:128":{"id":"b:2:2554-0:137:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2557:128","2:2558:1495"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3319-0:95:1722":{"id":"b:2:3319-0:95:1722","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1722","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1509"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:91:1044":{"id":"0:91:1044","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[90,43],"end":[90,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:41595:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30921:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2609-0:121:1706":{"id":"b:2:2609-0:121:1706","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:2602:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:3373:13319","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2611:2662"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"E"}}}},"a:2:2700:228-0:75:1699":{"id":"a:2:2700:228-0:75:1699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:97:1725":{"id":"0:97:1725","crate_id":0,"name":"commit_hash","span":{"filename":"src/lib.rs","begin":[153,4],"end":[153,35]},"visibility":"public","docs":"Git short hash of the build of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41595:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"5:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"b:2:2539-0:137:128":{"id":"b:2:2539-0:137:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2542:1750"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:63":{"id":"0:63","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,26],"end":[71,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2693:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12209:7941":{"id":"2:12209:7941","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4539:7941"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:43864:2163","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2545:699":{"id":"2:2545:699","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5527:34600":{"id":"5:5527:34600","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7451:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:21:1707":{"id":"0:21:1707","crate_id":0,"name":"from_str","span":{"filename":"src/lib.rs","begin":[109,4],"end":[143,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"0:45:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:11744:1682","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:154:1625":{"id":"0:154:1625","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[358,25],"end":[358,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:158":{"id":"0:158","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[340,9],"end":[340,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9215:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:159:673"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:118":{"id":"0:118","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,55],"end":[147,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9435:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1722","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:119:734"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2740:2195-0:95:1722":{"id":"a:2:2740:2195-0:95:1722","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2740:2195","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1722","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:114":{"id":"0:114","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,38],"end":[147,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2349:182","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1722","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:115:430"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2542:1750":{"id":"2:2542:1750","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2516:133"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:98:1727":{"id":"0:98:1727","crate_id":0,"name":"commit_date","span":{"filename":"src/lib.rs","begin":[156,4],"end":[156,35]},"visibility":"public","docs":"Commit date of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41595:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"5:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"2:2553:1496":{"id":"2:2553:1496","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41739:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2252-0:75:1699":{"id":"b:2:2252-0:75:1699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2246:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2254:24409"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:42":{"id":"0:42","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[384,0],"end":[396,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["provide","type_id","description","source","cause"],"trait":{"name":"Error","id":"2:2602:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:43:1806"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12188:25074":{"id":"2:12188:25074","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11986:419","self::pattern":"2:11784:2150"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41595:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11789:2143","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11789:2143","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11804:2144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5528:34601":{"id":"5:5528:34601","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:276:2147","`String`":"5:7451:224"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:2147","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7184:5569","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2558:1495":{"id":"2:2558:1495","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:41739:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2683:220-0:137:128":{"id":"a:2:2683:220-0:137:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12203:24933":{"id":"2:12203:24933","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39634:24945","Self::is_ascii":"2:12202:24932"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41595:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39634:24945","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:61":{"id":"0:61","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,22],"end":[71,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2318:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:92":{"id":"0:92","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,55],"end":[90,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9435:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:93:734"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12086:33923":{"id":"2:12086:33923","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5511":{"id":"5:5511","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5512:34597","5:5513:13411","5:5516:34598","5:5519:34599","5:5527:34600","5:5528:34601","5:5529:2704","5:5530:26209","5:5531:26210"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:101:738":{"id":"0:101:738","crate_id":0,"name":"host","span":{"filename":"src/lib.rs","begin":[165,4],"end":[165,20]},"visibility":"public","docs":"Host target triple of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:99:1729":{"id":"0:99:1729","crate_id":0,"name":"build_date","span":{"filename":"src/lib.rs","begin":[159,4],"end":[159,34]},"visibility":"public","docs":"Build date of the compiler; this was removed between Rust 1.0.0 and 1.1.0.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41595:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"5:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:96:1683":{"id":"0:96:1683","crate_id":0,"name":"semver","span":{"filename":"src/lib.rs","begin":[150,4],"end":[150,23]},"visibility":"public","docs":"Version of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Version","id":"20:299:1684","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:12128:2509":{"id":"2:12128:2509","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41597:179","prim@char":"1:11986:419","self::pattern":"2:11784:2150"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41595:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11789:2143","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11789:2143","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11804:2144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2249-0:121:1706":{"id":"b:2:2249-0:121:1706","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2243:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2251:2040"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:39:1806":{"id":"0:39:1806","crate_id":0,"name":"source","span":{"filename":"src/lib.rs","begin":[327,4],"end":[336,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41595:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"dyn_trait":{"traits":[{"trait":{"name":"error::Error","id":"2:2602:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:15-20:299:1684":{"id":"0:15-20:299:1684","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[66,0],"end":[66,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"semver::Version","name":"Version","id":"20:299:1684","glob":false}}},"0:65:615":{"id":"0:65:615","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[71,26],"end":[71,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Channel","id":"0:48:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:78":{"id":"0:78","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,9],"end":[90,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2265:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:79:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:129:1797":{"id":"0:129:1797","crate_id":0,"name":"MinorVersionMustBeZeroAfter4","span":{"filename":"src/lib.rs","begin":[288,4],"end":[288,32]},"visibility":"default","docs":"Minor version component must be zero on LLVM versions later than 4.0","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:2683:220-0:121:1706":{"id":"a:2:2683:220-0:121:1706","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:40":{"id":"0:40","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[363,0],"end":[382,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9220:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:41:673"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12085:33922":{"id":"2:12085:33922","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12091:26191":{"id":"2:12091:26191","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11352:1753"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5529:2704":{"id":"5:5529:2704","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7451:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:57":{"id":"0:57","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,9],"end":[71,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2695:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:81:673":{"id":"0:81:673","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[90,16],"end":[90,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9190:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9179:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:88":{"id":"0:88","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,38],"end":[90,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2349:182","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:89:430"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:17":{"id":"0:17","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[100,0],"end":[104,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9220:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:18:673"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2543-0:137:128":{"id":"b:2:2543-0:137:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:699"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12156:33932":{"id":"2:12156:33932","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41595:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11789:2143","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11789:2143","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11804:2144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:90":{"id":"0:90","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,43],"end":[90,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","lt","ge","gt"],"trait":{"name":"PartialOrd","id":"2:2355:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:91:1044"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2249-0:95:1722":{"id":"b:2:2249-0:95:1722","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2243:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1722","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2251:2040"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12205:24936":{"id":"2:12205:24936","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:71:734":{"id":"0:71:734","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[71,54],"end":[71,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9443:145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8321:8071-0:75:1699":{"id":"a:2:8321:8071-0:75:1699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8321:8071","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:36":{"id":"0:36","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[301,0],"end":[324,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9220:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:37:673"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12179:33941":{"id":"2:12179:33941","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:11986:419","self::pattern":"2:11784:2150"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11789:2143","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11789:2143","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:11809:2142","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:26:1755":{"id":"0:26:1755","crate_id":0,"name":"version_meta","span":{"filename":"src/lib.rs","begin":[200,0],"end":[204,1]},"visibility":"public","docs":"Returns the `rustc` SemVer version and additional metadata\nlike the git short hash and build date.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Result","id":"0:45:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"VersionMeta","id":"0:95:1722","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2740:2195-0:48:1686":{"id":"a:2:2740:2195-0:48:1686","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2740:2195","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12107:6443":{"id":"2:12107:6443","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:11986:419"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43526:2158","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5516:34598":{"id":"5:5516:34598","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7451:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11789:2143","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12094:314":{"id":"2:12094:314","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12003:1518"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12204:24935":{"id":"2:12204:24935","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12092:33925":{"id":"2:12092:33925","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8322:8070-0:95:1722":{"id":"a:2:8322:8070-0:95:1722","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8322:8070","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1722","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2539-0:121:1706":{"id":"b:2:2539-0:121:1706","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2542:1750"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:131:1718":{"id":"0:131:1718","crate_id":0,"name":"MinorVersionRequiredBefore4","span":{"filename":"src/lib.rs","begin":[290,4],"end":[290,31]},"visibility":"default","docs":"Minor version component is required on LLVM versions earlier than 4.0","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12162:33933":{"id":"2:12162:33933","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:11784:2150","`DoubleEndedIterator`":"2:7306:121","prim@char":"1:11986:419","str::matches":"2:12159:2056"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:43778:2170","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11789:2143","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11789:2143","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11804:2144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:86":{"id":"0:86","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,27],"end":[90,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2313:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:87:615"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:684:2567":{"id":"5:684:2567","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8322:8070-0:121:1706":{"id":"a:2:8322:8070-0:121:1706","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8322:8070","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5513:13411":{"id":"5:5513:13411","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7451:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11789:2143","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:147:1789":{"id":"0:147:1789","crate_id":0,"name":"UnexpectedVersionFormat","span":{"filename":"src/lib.rs","begin":[354,4],"end":[354,27]},"visibility":"default","docs":"The output of `rustc -vV` was not in the expected format.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12175:33938":{"id":"2:12175:33938","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12093:315":{"id":"2:12093:315","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12094:314","`u8`":"1:12003:1518"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12084:2510":{"id":"2:12084:2510","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12197:33945":{"id":"2:12197:33945","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11986:419","self::pattern":"2:11784:2150"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11789:2143","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11789:2143","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11804:2144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2543-0:121:1706":{"id":"b:2:2543-0:121:1706","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:699"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12207:33946":{"id":"2:12207:33946","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4538:33946"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:43855:2162","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:143:1751":{"id":"0:143:1751","crate_id":0,"name":"stderr","span":{"filename":"src/lib.rs","begin":[349,8],"end":[349,22]},"visibility":"default","docs":"stderr output from the command","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:2611:2662":{"id":"2:2611:2662","crate_id":2,"name":"provide","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["demand",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Demand","id":"2:3385:7152","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:124:1625":{"id":"0:124:1625","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[282,18],"end":[282,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"num::ParseIntError","id":"2:22099:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:34":{"id":"0:34","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[295,0],"end":[299,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ParseIntError","id":"2:22099:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:35:699"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2249-0:48:1686":{"id":"b:2:2249-0:48:1686","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2243:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2251:2040"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12113:33928":{"id":"2:12113:33928","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:43820:2166","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12141:33929":{"id":"2:12141:33929","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:11784:2150","str::split":"2:12132:1709","prim@char":"1:11986:419","`DoubleEndedIterator`":"2:7306:121","str::rsplit_terminator":"2:12144:33930"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43606:2176","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11789:2143","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12150:25070":{"id":"2:12150:25070","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:11986:419","str::splitn":"2:12147:1768","self::pattern":"2:11784:2150"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43678:2173","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11789:2143","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11789:2143","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11804:2144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:161:699":{"id":"0:161:699","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["e",{"resolved_path":{"name":"str::Utf8Error","id":"2:43500:1813","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12171:33936":{"id":"2:12171:33936","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:23":{"id":"0:23","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[174,0],"end":[191,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1722","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:24:1738"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2554-0:75:1699":{"id":"b:2:2554-0:75:1699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2557:128","2:2558:1495"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:159:673":{"id":"0:159:673","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[340,9],"end":[340,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9190:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9179:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8321:8071-0:48:1686":{"id":"a:2:8321:8071-0:48:1686","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8321:8071","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2700:228-0:137:128":{"id":"a:2:2700:228-0:137:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:53:1692":{"id":"0:53:1692","crate_id":0,"name":"Beta","span":{"filename":"src/lib.rs","begin":[78,4],"end":[78,8]},"visibility":"default","docs":"Beta release channel","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2543-0:48:1686":{"id":"b:2:2543-0:48:1686","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:699"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:48:1686":{"id":"0:48:1686","crate_id":0,"name":"Channel","span":{"filename":"src/lib.rs","begin":[72,0],"end":[81,1]},"visibility":"public","docs":"Release channel of the compiler.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:49:1688","0:51:1690","0:53:1692","0:55:1694"],"impls":["a:2:8321:8071-0:48:1686","a:2:8322:8070-0:48:1686","a:2:2683:220-0:48:1686","a:2:2740:2195-0:48:1686","a:2:2700:228-0:48:1686","b:2:2554-0:48:1686","b:2:2543-0:48:1686","b:2:2252-0:48:1686","b:2:2539-0:48:1686","b:2:2249-0:48:1686","b:2:2549-0:48:1686","b:2:3319-0:48:1686","b:5:680-0:48:1686","0:63","0:58","0:70","0:61","0:60","0:68","0:73","0:64","0:57","0:66"]}}},"0:119:734":{"id":"0:119:734","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[147,55],"end":[147,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9443:145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:157:1625":{"id":"0:157:1625","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[360,21],"end":[360,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:106":{"id":"0:106","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,16],"end":[147,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9215:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1722","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:107:673"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:73":{"id":"0:73","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,60],"end":[71,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9215:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:74:673"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:35:699":{"id":"0:35:699","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[296,4],"end":[298,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["e",{"resolved_path":{"name":"num::ParseIntError","id":"2:22099:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2683:220-0:48:1686":{"id":"a:2:2683:220-0:48:1686","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2252-0:137:128":{"id":"b:2:2252-0:137:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2246:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2254:24409"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2254:24409":{"id":"2:2254:24409","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:76:1701":{"id":"0:76:1701","crate_id":0,"name":"major","span":{"filename":"src/lib.rs","begin":[94,4],"end":[94,18]},"visibility":"public","docs":"Major version","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u64"}}},"5:5775:1473":{"id":"5:5775:1473","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2740:2195-0:75:1699":{"id":"a:2:2740:2195-0:75:1699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2740:2195","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12168:33935":{"id":"2:12168:33935","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:11784:2150","`DoubleEndedIterator`":"2:7306:121","prim@char":"1:11986:419","str::match_indices":"2:12165:33934"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:43724:2168","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11789:2143","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11789:2143","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11804:2144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12185:24517":{"id":"2:12185:24517","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11986:419","self::pattern":"2:11784:2150"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41595:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11789:2143","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2740:2195-0:137:128":{"id":"a:2:2740:2195-0:137:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2740:2195","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2549-0:95:1722":{"id":"b:2:2549-0:95:1722","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2519:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1722","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2552:128","2:2553:1496"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:83":{"id":"0:83","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,23],"end":[90,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2318:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:680-0:48:1686":{"id":"b:5:680-0:48:1686","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2265:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:2566","5:683:1780","5:684:2567"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3319-0:137:128":{"id":"b:2:3319-0:137:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1509"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:104":{"id":"0:104","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,9],"end":[147,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2265:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1722","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:105:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:163:699":{"id":"0:163:699","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["e",{"resolved_path":{"name":"semver::Error","id":"20:220:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:116":{"id":"0:116","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,43],"end":[147,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","lt","ge","gt"],"trait":{"name":"PartialOrd","id":"2:2355:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"VersionMeta","id":"0:95:1722","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1722","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:117:1044"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:146:1625":{"id":"0:146:1625","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[352,14],"end":[352,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"str::Utf8Error","id":"2:43500:1813","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"a:2:2700:228-0:95:1722":{"id":"a:2:2700:228-0:95:1722","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1722","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:680-0:75:1699":{"id":"b:5:680-0:75:1699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2265:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:2566","5:683:1780","5:684:2567"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:87:615":{"id":"0:87:615","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[90,27],"end":[90,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:38":{"id":"0:38","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[326,0],"end":[337,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["provide","type_id","description","source","cause"],"trait":{"name":"Error","id":"2:2602:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:39:1806"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:144:1813":{"id":"0:144:1813","crate_id":0,"name":"Utf8Error","span":{"filename":"src/lib.rs","begin":[352,4],"end":[352,29]},"visibility":"default","docs":"The output of `rustc -vV` was not valid utf-8.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:146:1625"]},"discriminant":null}}},"b:2:2539-0:95:1722":{"id":"b:2:2539-0:95:1722","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1722","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2542:1750"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:59:423":{"id":"0:59:423","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[71,15],"end":[71,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Channel","id":"0:48:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8321:8071-0:95:1722":{"id":"a:2:8321:8071-0:95:1722","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8321:8071","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1722","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:41:673":{"id":"0:41:673","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[364,4],"end":[381,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9190:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9179:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:137:128":{"id":"0:137:128","crate_id":0,"name":"Error","span":{"filename":"src/lib.rs","begin":[341,0],"end":[361,1]},"visibility":"public","docs":"The error type for this crate.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:138:1744","0:141:1747","0:144:1813","0:147:1789","0:149:1816","0:152:1779","0:155:1819"],"impls":["a:2:8321:8071-0:137:128","a:2:8322:8070-0:137:128","a:2:2683:220-0:137:128","a:2:2740:2195-0:137:128","a:2:2700:228-0:137:128","b:2:2554-0:137:128","b:2:2543-0:137:128","b:2:2252-0:137:128","b:2:2539-0:137:128","b:2:2609-0:137:128","b:2:2249-0:137:128","b:2:2549-0:137:128","b:2:3319-0:137:128","b:5:5773-0:137:128","0:42","0:162","0:160","0:40","0:158","0:164"]}}},"0:24:1738":{"id":"0:24:1738","crate_id":0,"name":"for_command","span":{"filename":"src/lib.rs","begin":[176,4],"end":[190,5]},"visibility":"public","docs":"Returns the version metadata for `cmd`, which should be a `rustc` command.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["cmd",{"resolved_path":{"name":"Command","id":"1:5439:1678","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:45:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"VersionMeta","id":"0:95:1722","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12144:33930":{"id":"2:12144:33930","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:11784:2150","str::split":"2:12132:1709","prim@char":"1:11986:419","str::split_terminator":"2:12141:33929"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43624:2175","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11789:2143","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11789:2143","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11804:2144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12097:25031":{"id":"2:12097:25031","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41597:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41595:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9886:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9886:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2539-0:48:1686":{"id":"b:2:2539-0:48:1686","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2542:1750"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2251:2040":{"id":"2:2251:2040","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8322:8070-0:48:1686":{"id":"a:2:8322:8070-0:48:1686","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8322:8070","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:155:1819":{"id":"0:155:1819","crate_id":0,"name":"LlvmVersionError","span":{"filename":"src/lib.rs","begin":[360,4],"end":[360,43]},"visibility":"default","docs":"An error occurred in parsing a `LlvmVersion`.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:157:1625"]},"discriminant":null}}},"0:60":{"id":"0:60","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,22],"end":[71,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2694:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12111:31470":{"id":"2:12111:31470","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12110:31460"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:43839:2152","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:95:1722":{"id":"0:95:1722","crate_id":0,"name":"VersionMeta","span":{"filename":"src/lib.rs","begin":[148,0],"end":[172,1]},"visibility":"public","docs":"Rustc version plus metadata like git short hash and build date.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:96:1683","0:97:1725","0:98:1727","0:99:1729","0:100:1731","0:101:738","0:102:1734","0:103:1736"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:23","a:2:8321:8071-0:95:1722","a:2:8322:8070-0:95:1722","a:2:2683:220-0:95:1722","a:2:2740:2195-0:95:1722","a:2:2700:228-0:95:1722","b:2:2554-0:95:1722","b:2:2543-0:95:1722","b:2:2252-0:95:1722","b:2:2539-0:95:1722","b:2:2249-0:95:1722","b:2:2549-0:95:1722","b:2:3319-0:95:1722","b:5:680-0:95:1722","0:118","0:114","0:108","0:116","0:104","0:111","0:109","0:112","0:106"]}}},"b:2:3319-0:121:1706":{"id":"b:2:3319-0:121:1706","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1509"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5519:34599":{"id":"5:5519:34599","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7451:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:109":{"id":"0:109","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,23],"end":[147,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2318:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1722","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2543-0:75:1699":{"id":"b:2:2543-0:75:1699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:699"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:135":{"id":"0:135","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[279,9],"end":[279,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9215:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:136:673"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2549-0:48:1686":{"id":"b:2:2549-0:48:1686","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2519:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2552:128","2:2553:1496"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:70":{"id":"0:70","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,54],"end":[71,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9435:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:71:734"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2539-0:75:1699":{"id":"b:2:2539-0:75:1699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2542:1750"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:89:430":{"id":"0:89:430","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[90,38],"end":[90,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30921:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8321:8071-0:137:128":{"id":"a:2:8321:8071-0:137:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8321:8071","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:0:1832":{"id":"0:0:1832","crate_id":0,"name":"rustc_version","span":{"filename":"src/lib.rs","begin":[9,0],"end":[417,58]},"visibility":"public","docs":"Simple library for getting the version information of a `rustc`\ncompiler.\n\nThis can be used by build scripts or other tools dealing with Rust sources\nto make decisions based on the version of the compiler.\n\nIt calls `$RUSTC --version -v` and parses the output, falling\nback to `rustc` if `$RUSTC` is not set.\n\n# Example\n\n```rust\n// This could be a cargo build script\n\nuse rustc_version::{version, version_meta, Channel, Version};\n\n// Assert we haven't travelled back in time\nassert!(version().unwrap().major >= 1);\n\n// Set cfg flags depending on release channel\nmatch version_meta().unwrap().channel {\n    Channel::Stable => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_STABLE\");\n    }\n    Channel::Beta => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_BETA\");\n    }\n    Channel::Nightly => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_NIGHTLY\");\n    }\n    Channel::Dev => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_DEV\");\n    }\n}\n\n// Check for a minimum version\nif version().unwrap() >= Version::parse(\"1.4.0\").unwrap() {\n    println!(\"cargo:rustc-cfg=compiler_has_important_bugfix\");\n}\n```","links":{},"attrs":["#![warn(missing_docs)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:15-20:299:1684","0:48:1686","0:75:1699","0:95:1722","0:25:1586","0:26:1755","0:28:1752","0:121:1706","0:137:128","0:45:210"],"is_stripped":false}}},"0:152:1779":{"id":"0:152:1779","crate_id":0,"name":"UnknownPreReleaseTag","span":{"filename":"src/lib.rs","begin":[358,4],"end":[358,32]},"visibility":"default","docs":"The pre-release tag is unknown.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:154:1625"]},"discriminant":null}}},"2:12153:33931":{"id":"2:12153:33931","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41595:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11789:2143","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:683:1780":{"id":"5:683:1780","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:55:1694":{"id":"0:55:1694","crate_id":0,"name":"Stable","span":{"filename":"src/lib.rs","begin":[80,4],"end":[80,10]},"visibility":"default","docs":"Stable release channel","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12135:25065":{"id":"2:12135:25065","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:11986:419","self::pattern":"2:11784:2150"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:11608:2153","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11789:2143","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3321:1509":{"id":"2:3321:1509","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39426:5679","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:112":{"id":"0:112","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,27],"end":[147,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2313:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"VersionMeta","id":"0:95:1722","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1722","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:113:615"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2252-0:121:1706":{"id":"b:2:2252-0:121:1706","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2246:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2254:24409"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12103:33926":{"id":"2:12103:33926","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:11992:1415","str::slice_mut_unchecked":"2:12104:33927","crate::ops::Index":"2:2980:7963"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:69:1044":{"id":"0:69:1044","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[71,42],"end":[71,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Channel","id":"0:48:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:41595:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30921:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5773-0:75:1699":{"id":"b:5:5773-0:75:1699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9220:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5771:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5775:1473"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3319-0:75:1699":{"id":"b:2:3319-0:75:1699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1509"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:121:1706":{"id":"0:121:1706","crate_id":0,"name":"LlvmVersionParseError","span":{"filename":"src/lib.rs","begin":[280,0],"end":[293,1]},"visibility":"public","docs":"LLVM Version Parse Error","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:122:1793","0:125:1713","0:127:1716","0:129:1797","0:131:1718","0:133:1720"],"impls":["a:2:8321:8071-0:121:1706","a:2:8322:8070-0:121:1706","a:2:2683:220-0:121:1706","a:2:2740:2195-0:121:1706","a:2:2700:228-0:121:1706","b:2:2554-0:121:1706","b:2:2543-0:121:1706","b:2:2252-0:121:1706","b:2:2539-0:121:1706","b:2:2609-0:121:1706","b:2:2249-0:121:1706","b:2:2549-0:121:1706","b:2:3319-0:121:1706","b:5:5773-0:121:1706","0:36","0:34","0:38","0:135","0:164"]}}},"0:165:699":{"id":"0:165:699","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["e",{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:45:210":{"id":"0:45:210","crate_id":0,"name":"Result","span":{"filename":"src/lib.rs","begin":[417,0],"end":[417,58]},"visibility":"public","docs":"The result type for this crate.","links":{},"attrs":[],"deprecation":null,"inner":{"typedef":{"type":{"resolved_path":{"name":"std::result::Result","id":"2:41739:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"E"}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]}}}},"0:117:1044":{"id":"0:117:1044","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[147,43],"end":[147,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"VersionMeta","id":"0:95:1722","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:41595:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30921:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12194:33944":{"id":"2:12194:33944","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11986:419","self::pattern":"2:11784:2150"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11789:2143","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:113:615":{"id":"0:113:615","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[147,27],"end":[147,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"VersionMeta","id":"0:95:1722","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5773-0:121:1706":{"id":"b:5:5773-0:121:1706","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9220:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5771:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5775:1473"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8321:8071-0:121:1706":{"id":"a:2:8321:8071-0:121:1706","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8321:8071","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:115:430":{"id":"0:115:430","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[147,38],"end":[147,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"VersionMeta","id":"0:95:1722","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30921:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12088:33924":{"id":"2:12088:33924","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12086:33923"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:85":{"id":"0:85","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,27],"end":[90,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2693:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12202:24932":{"id":"2:12202:24932","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_is_ascii\", issue = \"111090\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:103:1736":{"id":"0:103:1736","crate_id":0,"name":"llvm_version","span":{"filename":"src/lib.rs","begin":[171,4],"end":[171,41]},"visibility":"public","docs":"Version of LLVM used by the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41595:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"b:2:2549-0:75:1699":{"id":"b:2:2549-0:75:1699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2519:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2552:128","2:2553:1496"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:64":{"id":"0:64","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,26],"end":[71,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2313:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Channel","id":"0:48:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:65:615"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:140:1625":{"id":"0:140:1625","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[343,27],"end":[343,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"io::Error","id":"1:2922:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:12200:1717":{"id":"2:12200:1717","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:11745:127","`FromStr`":"2:11744:1682"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41739:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:11744:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:11744:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:138:1744":{"id":"0:138:1744","crate_id":0,"name":"CouldNotExecuteCommand","span":{"filename":"src/lib.rs","begin":[343,4],"end":[343,37]},"visibility":"default","docs":"An error occurred while trying to find the `rustc` to run.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:140:1625"]},"discriminant":null}}},"b:2:2549-0:137:128":{"id":"b:2:2549-0:137:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2519:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2552:128","2:2553:1496"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:102:1734":{"id":"0:102:1734","crate_id":0,"name":"short_version_string","span":{"filename":"src/lib.rs","begin":[168,4],"end":[168,36]},"visibility":"public","docs":"Short version string of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"a:2:2683:220-0:95:1722":{"id":"a:2:2683:220-0:95:1722","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1722","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:160":{"id":"0:160","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Utf8Error","id":"2:43500:1813","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:161:699"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12177:33939":{"id":"2:12177:33939","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:19":{"id":"0:19","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[106,0],"end":[144,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:11744:1682","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:20:127","0:21:1707"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:680-0:95:1722":{"id":"b:5:680-0:95:1722","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2265:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1722","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:2566","5:683:1780","5:684:2567"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:122:1793":{"id":"0:122:1793","crate_id":0,"name":"ParseIntError","span":{"filename":"src/lib.rs","begin":[282,4],"end":[282,37]},"visibility":"default","docs":"An error occurred in parsing a version component as an integer","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:124:1625"]},"discriminant":null}}},"a:2:2700:228-0:121:1706":{"id":"a:2:2700:228-0:121:1706","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12095:1784":{"id":"2:12095:1784","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41597:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41595:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9886:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9886:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:51:1690":{"id":"0:51:1690","crate_id":0,"name":"Nightly","span":{"filename":"src/lib.rs","begin":[76,4],"end":[76,11]},"visibility":"default","docs":"Nightly release channel","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12147:1768":{"id":"2:12147:1768","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:11986:419","self::pattern":"2:11784:2150","str::rsplitn":"2:12150:25070"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43660:2174","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11789:2143","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:105:423":{"id":"0:105:423","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[147,9],"end":[147,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"VersionMeta","id":"0:95:1722","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12165:33934":{"id":"2:12165:33934","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:11784:2150","`DoubleEndedIterator`":"2:7306:121","prim@char":"1:11986:419","str::rmatch_indices":"2:12168:33935"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:43706:2167","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11789:2143","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:136:673":{"id":"0:136:673","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[279,9],"end":[279,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9190:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9179:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:20:127":{"id":"0:20:127","crate_id":0,"name":"Err","span":{"filename":"src/lib.rs","begin":[107,4],"end":[107,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:142:1748":{"id":"0:142:1748","crate_id":0,"name":"stdout","span":{"filename":"src/lib.rs","begin":[347,8],"end":[347,22]},"visibility":"default","docs":"stdout output from the command","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:2557:128":{"id":"2:2557:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32105:2100","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:2683:220-0:75:1699":{"id":"a:2:2683:220-0:75:1699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2609-0:137:128":{"id":"b:2:2609-0:137:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:2602:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:3373:13319","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2611:2662"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"E"}}}},"0:162":{"id":"0:162","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Error","id":"20:220:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:163:699"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12105:25056":{"id":"2:12105:25056","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:12106:25057"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2554-0:95:1722":{"id":"b:2:2554-0:95:1722","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1722","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2557:128","2:2558:1495"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12104:33927":{"id":"2:12104:33927","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:11992:1415","crate::ops::IndexMut":"2:2984:7964","str::slice_unchecked":"2:12103:33926"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:100:1731":{"id":"0:100:1731","crate_id":0,"name":"channel","span":{"filename":"src/lib.rs","begin":[162,4],"end":[162,24]},"visibility":"public","docs":"Release channel of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Channel","id":"0:48:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:12118:1712":{"id":"2:12118:1712","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:11986:419","self::pattern":"2:11784:2150"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11789:2143","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:141:1747":{"id":"0:141:1747","crate_id":0,"name":"CommandError","span":{"filename":"src/lib.rs","begin":[345,4],"end":[350,5]},"visibility":"default","docs":"Error output from the command that was run.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"struct":{"fields":["0:142:1748","0:143:1751"],"fields_stripped":false}},"discriminant":null}}},"2:12121:25073":{"id":"2:12121:25073","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:11986:419","self::pattern":"2:11784:2150"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11789:2143","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11789:2143","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11804:2144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2554-0:48:1686":{"id":"b:2:2554-0:48:1686","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2557:128","2:2558:1495"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:58":{"id":"0:58","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,15],"end":[71,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2265:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:59:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:93:734":{"id":"0:93:734","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[90,55],"end":[90,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9443:145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:49:1688":{"id":"0:49:1688","crate_id":0,"name":"Dev","span":{"filename":"src/lib.rs","begin":[74,4],"end":[74,7]},"visibility":"default","docs":"Development release channel","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:18:673":{"id":"0:18:673","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[101,4],"end":[103,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9190:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9179:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:82":{"id":"0:82","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,23],"end":[90,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2694:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2252-0:48:1686":{"id":"b:2:2252-0:48:1686","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2246:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2254:24409"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:75:1699":{"id":"0:75:1699","crate_id":0,"name":"LlvmVersion","span":{"filename":"src/lib.rs","begin":[91,0],"end":[98,1]},"visibility":"public","docs":"LLVM version\n\nLLVM's version numbering scheme is not semver compatible until version 4.0\n\nrustc [just prints the major and minor versions], so other parts of the version are not included.\n\n[just prints the major and minor versions]: https://github.com/rust-lang/rust/blob/b5c9e2448c9ace53ad5c11585803894651b18b0a/compiler/rustc_codegen_llvm/src/llvm_util.rs#L173-L178","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:76:1701","0:77:1703"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:8321:8071-0:75:1699","a:2:8322:8070-0:75:1699","a:2:2683:220-0:75:1699","a:2:2740:2195-0:75:1699","a:2:2700:228-0:75:1699","b:2:2554-0:75:1699","b:2:2543-0:75:1699","b:2:2252-0:75:1699","b:2:2539-0:75:1699","b:2:2249-0:75:1699","b:2:2549-0:75:1699","b:2:3319-0:75:1699","b:5:680-0:75:1699","b:5:5773-0:75:1699","0:86","0:85","0:90","0:78","0:92","0:83","0:80","0:19","0:88","0:17","0:82"]}}},"b:2:2543-0:95:1722":{"id":"b:2:2543-0:95:1722","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1722","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:699"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2249-0:75:1699":{"id":"b:2:2249-0:75:1699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2243:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2251:2040"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:127:1716":{"id":"0:127:1716","crate_id":0,"name":"ComponentMustNotHaveSign","span":{"filename":"src/lib.rs","begin":[286,4],"end":[286,28]},"visibility":"default","docs":"A version component has a sign","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12132:1709":{"id":"2:12132:1709","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:11784:2150","`DoubleEndedIterator`":"2:7306:121","prim@char":"1:11986:419","str::split_whitespace":"2:12110:31460","str::rsplit":"2:12138:25067"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43556:2172","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11789:2143","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12206:24937":{"id":"2:12206:24937","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:25:1586":{"id":"0:25:1586","crate_id":0,"name":"version","span":{"filename":"src/lib.rs","begin":[194,0],"end":[196,1]},"visibility":"public","docs":"Returns the `rustc` SemVer version.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Result","id":"0:45:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Version","id":"20:299:1684","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:164":{"id":"0:164","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:165:699"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:68":{"id":"0:68","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,42],"end":[71,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","lt","ge","gt"],"trait":{"name":"PartialOrd","id":"2:2355:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Channel","id":"0:48:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:69:1044"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8322:8070-0:75:1699":{"id":"a:2:8322:8070-0:75:1699","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8322:8070","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:79:423":{"id":"0:79:423","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[90,9],"end":[90,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:37:673":{"id":"0:37:673","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[302,4],"end":[323,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9190:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9179:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12099:25032":{"id":"2:12099:25032","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9886:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9886:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12210:33947":{"id":"2:12210:33947","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4536:33947"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:43873:2164","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:80":{"id":"0:80","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,16],"end":[90,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9215:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1699","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:81:673"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12101:25033":{"id":"2:12101:25033","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9886:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9886:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"5:5530:26209":{"id":"5:5530:26209","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12205:24936"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12106:25057":{"id":"2:12106:25057","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12105:25056"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2552:128":{"id":"2:2552:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"b:5:5773-0:137:128":{"id":"b:5:5773-0:137:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9220:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5771:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5775:1473"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12138:25067":{"id":"2:12138:25067","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:11784:2150","`DoubleEndedIterator`":"2:7306:121","prim@char":"1:11986:419","str::split":"2:12132:1709"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43574:2171","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11789:2143","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11789:2143","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11804:2144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5531:26210":{"id":"5:5531:26210","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12206:24937"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12083:820":{"id":"2:12083:820","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:11986:419"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12178:33940":{"id":"2:12178:33940","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:66":{"id":"0:66","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,37],"end":[71,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2349:182","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:67:430"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:77:1703":{"id":"0:77:1703","crate_id":0,"name":"minor","span":{"filename":"src/lib.rs","begin":[96,4],"end":[96,18]},"visibility":"public","docs":"Minor version","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u64"}}},"b:2:2252-0:95:1722":{"id":"b:2:2252-0:95:1722","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2246:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1722","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2254:24409"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:133:1720":{"id":"0:133:1720","crate_id":0,"name":"TooManyComponents","span":{"filename":"src/lib.rs","begin":[292,4],"end":[292,21]},"visibility":"default","docs":"Too many components","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:151:1625":{"id":"0:151:1625","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[356,16],"end":[356,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"semver::Error","id":"20:220:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:12110:31460":{"id":"2:12110:31460","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12111:31470"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:43830:2154","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12112:1764":{"id":"2:12112:1764","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:43810:2165","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5512:34597":{"id":"5:5512:34597","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:2147","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7184:5569","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:276:2147","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}},{"type":{"resolved_path":{"name":"Global","id":"5:7184:5569","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12182:33942":{"id":"2:12182:33942","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11986:419","self::pattern":"2:11784:2150"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11789:2143","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12159:2056":{"id":"2:12159:2056","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:11784:2150","`DoubleEndedIterator`":"2:7306:121","prim@char":"1:11986:419","str::rmatches":"2:12162:33933"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:43760:2169","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11789:2143","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12173:33937":{"id":"2:12173:33937","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12114:31465":{"id":"2:12114:31465","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:43848:2151","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2740:2195-0:121:1706":{"id":"a:2:2740:2195-0:121:1706","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2740:2195","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2249-0:137:128":{"id":"b:2:2249-0:137:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2243:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2251:2040"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2549-0:121:1706":{"id":"b:2:2549-0:121:1706","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2519:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1706","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2552:128","2:2553:1496"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:67:430":{"id":"0:67:430","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[71,37],"end":[71,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Channel","id":"0:48:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30921:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:111":{"id":"0:111","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,27],"end":[147,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2693:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1722","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12109:6338":{"id":"2:12109:6338","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43542:2156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12082":{"id":"2:12082","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12083:820","2:12084:2510","2:12085:33922","2:12086:33923","2:12088:33924","2:12091:26191","2:12092:33925","2:12093:315","2:12094:314","2:12095:1784","2:12097:25031","2:12099:25032","2:12101:25033","2:12103:33926","2:12104:33927","2:12105:25056","2:12106:25057","2:12107:6443","2:12108:6453","2:12109:6338","2:12110:31460","2:12111:31470","2:12112:1764","2:12113:33928","2:12114:31465","2:12115:25072","2:12118:1712","2:12121:25073","2:12124:2547","2:12128:2509","2:12132:1709","2:12135:25065","2:12138:25067","2:12141:33929","2:12144:33930","2:12147:1768","2:12150:25070","2:12153:33931","2:12156:33932","2:12159:2056","2:12162:33933","2:12165:33934","2:12168:33935","2:12171:33936","2:12173:33937","2:12175:33938","2:12177:33939","2:12178:33940","2:12179:33941","2:12182:33942","2:12185:24517","2:12188:25074","2:12191:33943","2:12194:33944","2:12197:33945","2:12200:1717","2:12202:24932","2:12203:24933","2:12204:24935","2:12205:24936","2:12206:24937","2:12207:33946","2:12209:7941","2:12210:33947"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:107:673":{"id":"0:107:673","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[147,16],"end":[147,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9190:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9179:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:48:1686":{"id":"b:2:3319-0:48:1686","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1686","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1509"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12115:25072":{"id":"2:12115:25072","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:11986:419","self::pattern":"2:11784:2150"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11789:2143","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12108:6453":{"id":"2:12108:6453","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:11986:419"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43532:2157","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"17:13125:3649":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"2:9180:2115":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"2:22099:1793":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"2:44588:6482":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"2:8911:30998":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:4693:8057":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"19:0:1040":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"1:8328:7238":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"17:13981:3920":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"18:96:24162":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"17:3186:6976":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"16:5737:20144":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"6:1603:4701":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"5:7201:6333":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"2:21050:7990":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"1:11111:2098":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"6:1638:4730":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:21995:5589":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:43977:6451":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"2:47809:5958":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"17:11098:6140":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"6:4483:4897":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"17:8924:20212":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"16:3867:4128":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:7268:152":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:5747:7214":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"6:119:13817":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"2:44533:5854":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2:47523:5953":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"1:477:2954":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"2:11497:6437":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"2:32232:2334":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"2:40520:6408":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:8115:2101":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"2:2740:2195":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"18:599:35303":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:39447:7177":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"2:43110:6435":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"17:12457:3532":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"2:43352:7183":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:45566:5859":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"2:20628:32987":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"5:7213:2891":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"1:12011:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"2:2691:2326":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"2:9226:2483":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"2:43830:2154":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2:2523:237":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"6:5793:5196":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:2804:4237":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"14:31:7117":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"1:12003:1518":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2:4:1023":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"2:2164:13440":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"0:147:1789":{"crate_id":0,"path":["rustc_version","Error","UnexpectedVersionFormat"],"kind":"variant"},"17:14301:4023":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"17:10654:3267":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"1:2380:7982":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"2:22012:31139":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"6:5994:5298":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"5:629:7137":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"17:10994:7046":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"2:43383:5847":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2:41646:2466":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"16:7622:7112":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:46915:5918":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"16:7474:4110":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"6:1709:4769":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:40198:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"16:3220:4121":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"2:4186:2491":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"17:13870:3887":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"2:2855:13430":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"0:53:1692":{"crate_id":0,"path":["rustc_version","Channel","Beta"],"kind":"variant"},"17:12424:3524":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"2:40660:2682":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:2779:4236":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:7761:2632":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"2:41722:13493":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"17:10671:20311":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"17:14315:4025":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"2:21242:8144":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"6:4436:4875":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"2:47984:5969":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"2:22049:31127":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"1:9111:6053":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"17:9118:3231":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"2:32105:2100":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:44303:6476":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:4957:8062":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"17:9296:3236":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"17:9926:6992":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"16:7525:4112":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"2:39426:5679":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"2:39440:4279":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"16:2519:4079":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"5:0:286":{"crate_id":5,"path":["alloc"],"kind":"module"},"5:3570:163":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"6:4446:4881":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"2:39343:201":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"6:1702:4766":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"6:5987:5297":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"17:9939:6993":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"17:0:1953":{"crate_id":17,"path":["object"],"kind":"module"},"17:11164:3315":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"11:447:142":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"2:8323:7160":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:3379:2707":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"17:10351:3263":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"6:6067:5326":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"16:6197:7078":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"1:2594:2683":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"1:9188:27878":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"17:14350:4038":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"2:44472:205":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"16:4698:4140":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"16:7445:7104":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"1:7022:2979":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"2:44363:13540":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"17:11416:6153":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"16:6815:4208":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"16:5704:6172":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"17:12631:3555":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"16:7707:4291":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"6:4291:4783":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"1:11150:6054":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"0:45:210":{"crate_id":0,"path":["rustc_version","Result"],"kind":"typedef"},"18:699:6112":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"6:6688:5425":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"5:6800:2920":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"2:40052:6375":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"16:4900:4147":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"17:13591:3822":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"11:97:6306":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"6:4304:4792":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"5:1776:2909":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"2:9215:112":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:20675:33107":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:11335:6509":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"2:42906:6433":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:20809:7990":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"1:6242:2964":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"6:6720:5436":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"17:12394:3521":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"2:40368:6389":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"6:6077:5328":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"18:690:6111":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"16:2465:4077":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"17:13732:3855":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"8:0:1945":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"16:7331:35285":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"0:138:1744":{"crate_id":0,"path":["rustc_version","Error","CouldNotExecuteCommand"],"kind":"variant"},"1:10808:2102":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"6:6834:5507":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"1:5610:206":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"18:755:6120":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"2:44120:6459":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"15:306:19239":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"6:4748:4985":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"0:51:1690":{"crate_id":0,"path":["rustc_version","Channel","Nightly"],"kind":"variant"},"2:9483:2476":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"6:7599:5559":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"6:4781:5004":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"1:9166:7251":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"1:5044:7210":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:10818:30006":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"2:21679:7990":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"2:4605:13353":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"2:9220:120":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"0:141:1747":{"crate_id":0,"path":["rustc_version","Error","CommandError"],"kind":"variant"},"17:10568:7027":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"2:46091:5884":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"16:8105:6302":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"17:11264:3324":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"2:30387:31114":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"6:1681:4756":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"17:12017:3426":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"1:4632:5420":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"17:14403:4047":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"11:1663:144":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2:20947:8148":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"1:4908:8056":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"5:6308:8225":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"16:530:6156":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"1:2362:5574":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"17:11600:20218":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"5:1411:2467":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"16:2825:4092":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"17:12365:3516":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"2:47874:5961":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"2:4335:2492":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"16:5720:6174":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"16:6977:7094":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"2:41739:210":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"2:6787:31659":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:8209:2156":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"16:3441:4123":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"6:5775:5183":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:21557:5582":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:2471:13364":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"6:4315:4800":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"5:7193:2469":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"1:4049:8010":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"2:9228:2484":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:5617:2964":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"6:4456:4884":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"17:14216:4001":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"17:13448:3778":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"2:43091:5846":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"11:2060:7130":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"1:2215:2925":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"5:276:2147":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"2:9443:145":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"6:4887:5052":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"1:11769:2997":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"1:3224:2700":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"16:5100:4153":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"16:6214:7081":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"17:10544:7023":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"2:7654:2141":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:3979:8003":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"2:40132:2162":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"11:667:7120":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"6:7575:5554":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"17:13923:3902":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2:42651:68":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"1:11935:6552":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"2:45546:5858":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:10518:2697":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"6:474:4564":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"2:45636:5862":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:8234:7236":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"5:895:2467":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"2:30317:5603":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"6:6008:5309":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"2:2683:220":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"1:7536:7268":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"17:14037:3932":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"17:9990:3250":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"17:14177:3989":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"17:13096:3646":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"2:44490:195":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"17:9409:35299":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"6:4469:4889":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"16:2637:4084":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"16:6502:6245":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"2:39246:6372":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"16:6396:6233":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"16:6658:6251":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"17:12254:3475":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"17:9274:2156":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"2:22591:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"2:45742:5866":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"17:10555:7024":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"17:12303:3500":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"2:44299:6475":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:7765:7175":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"2:2762:4235":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"17:10377:6121":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"16:6386:6232":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"6:6671:5424":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"16:149:2857":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"17:13847:3884":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"2:43820:2166":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:3409:2669":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"5:6888:244":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"1:12001:750":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"5:1473:6314":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"1:1574:6315":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"2:43778:2170":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2:3168:13336":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:12006:1517":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"2:46645:5913":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"5:3238:6318":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:40037:2163":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"16:2611:4083":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"16:8210:4279":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"1:1928:658":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"11:285:6307":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"6:506:4580":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"5:878:2882":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"17:14102:3976":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"1:12004:1515":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"2:6651:2521":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"2:42898:6432":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"5:4848:204":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"17:10812:3298":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"2:22657:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"0:26:1755":{"crate_id":0,"path":["rustc_version","version_meta"],"kind":"function"},"17:13795:3871":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"17:12053:3435":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"1:11968:27087":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"16:6763:6265":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"2:40359:6388":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"17:8659:20204":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"2:22111:2656":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:11123:30008":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"5:5130:2904":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"17:9665:35298":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"17:9706:6984":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"2:12380:151":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"16:3042:19286":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"5:5320:2874":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"2:9368:7163":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"6:4664:4949":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:5531:6341":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"2:2795:13420":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"2:20903:8147":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"17:14007:3926":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"14:187:19226":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:11352:1753":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"17:9840:6986":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"16:3635:3132":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"11:1538:7136":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"17:11220:20337":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"17:11568:20217":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"6:4787:5007":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"11:332:2863":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"2:5589:6343":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2:1543:2669":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"18:574:3100":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"5:1374:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"1:7639:5979":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"17:12727:3569":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"2:11744:1682":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:3935:8000":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"6:4678:4950":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"5:3171:2467":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"17:10148:7003":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"16:6900:4217":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"9:177:19199":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:2516:133":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"1:8844:2099":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"1:4490:8031":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"17:12579:3548":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"2:7264:134":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:46411:5894":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"6:4420:4869":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"17:11454:6154":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"2:39301:199":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"16:7855:20155":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"1:5964:2964":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"2:47725:5956":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"17:12618:3553":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"7:32:19118":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"2:40043:6374":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:2219:2677":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"6:4368:4843":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:4436:2494":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"17:8740:20206":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"17:12106:3448":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"16:6886:4107":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"11:1845:6316":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"16:5651:4101":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"6:4949:5093":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"17:9655:6983":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:41871:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:2925:2197":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"6:4723:4972":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:2783:8129":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"5:3583:2467":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"0:152:1779":{"crate_id":0,"path":["rustc_version","Error","UnknownPreReleaseTag"],"kind":"variant"},"1:8310:6024":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"5:7384:2121":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"1:1558:2467":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"6:4740:4981":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"2:40871:6415":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"2:41790:2468":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"17:10786:7034":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"17:11623:3351":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"2:45760:5867":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:8239:7997":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"17:9734:6985":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"17:9952:3217":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"1:7906:119":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"17:10621:7033":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"17:10199:3260":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"1:2572:2942":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"9:450:19132":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"1:3929:8001":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:7657:2470":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"2:22492:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"17:12333:3509":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"17:10511:6134":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"5:3217:35214":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"1:1586:6317":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"1:3437:2113":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"2:41671:2469":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"1:8150:2708":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"1:864:2469":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"17:12377:3518":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"17:10161:7004":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"1:9130:6054":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"16:2497:4078":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"6:1527:4652":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"2:47865:5960":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"2:42224:7162":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"5:4166:2669":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"2:41510:31125":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"14:0:1950":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"2:40203:2122":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"17:1075:6969":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"17:9083:3230":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"2:8428:2143":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"17:9777:20224":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"1:8288:8029":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"16:5882:6189":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"2:43372:7184":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:898:2891":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"5:1273:7130":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"6:4489:4900":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"6:1495:4639":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:47663:5955":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:8215:2172":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"16:5398:3228":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"1:8547:2467":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"2:39160:2471":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"2:8322:8070":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"2:40094:6376":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2:43435:6356":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"6:541:4606":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:2470:7990":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"16:7753:6291":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"1:6896:2978":{"crate_id":1,"path":["std","sys","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"2:45821:5869":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"17:11290:20214":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"1:7684:2987":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:42851:2478":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"2:40429:6399":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"17:12878:3608":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"17:11118:6145":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"16:5612:6163":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"6:4973:5105":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:4022:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"17:1184:6970":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"17:261:6966":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"2:39321:202":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"17:11210:6150":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"6:4862:5040":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"5:35:2870":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"2:12574:107":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"2:11534:6440":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"2:45945:5874":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"16:4536:4136":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"2:41569:5826":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"17:9442:35296":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"16:7407:4281":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"11:805:7949":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"2:4144:6340":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"17:11250:3321":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"2:21681:8137":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"6:6775:5474":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"5:5368:2149":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"5:4350:245":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:42066:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"17:12077:3439":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"2:12010:112":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"20:220:128":{"crate_id":20,"path":["semver","parse","Error"],"kind":"struct"},"17:14259:4017":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"16:8086:6299":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:46851:5916":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"2:4409:2335":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"11:1121:7133":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"17:10520:6135":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"17:11276:128":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:42346:2482":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"17:10110:7002":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"2:1629:589":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"6:5008:5118":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"17:9048:3229":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"1:12007:1514":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"2:40215:31132":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:13604:3827":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"1:10144:7254":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"17:2105:20269":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"1:8798:2096":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"6:6171:5365":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"1:1843:2628":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"2:7277:2201":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"16:8043:4339":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"17:12792:3599":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"5:782:2877":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"17:11791:3388":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"2:42586:5833":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"1:12008:796":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"17:11979:3422":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"2:41949:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"6:1911:15166":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"6:1595:4696":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"16:7665:4114":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:7329:2200":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"17:10499:6131":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"6:4626:4946":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"2:20658:33106":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"16:5301:4154":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"2:3385:7152":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"17:13830:3877":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"16:7494:6289":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"2:41798:2469":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:40449:6401":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"2:3151:234":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"5:5925:70":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"18:113:24163":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:43542:2156":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"6:6744:5448":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"1:5408:2090":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"2:2265:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:44155:6464":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:527:2955":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"17:11888:3407":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"17:11241:20338":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"2:46137:5885":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"16:4785:4143":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"20:400:2188":{"crate_id":20,"path":["semver","BuildMetadata"],"kind":"struct"},"1:1765:612":{"crate_id":1,"path":["std","env"],"kind":"module"},"17:12148:3463":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"16:2759:4089":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"5:7184:5569":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"16:6531:2860":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"17:10097:7001":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"2:44575:5857":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"16:5972:6158":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"1:8804:186":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"1:1077:7133":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"17:13368:3716":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"5:7367:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"16:5689:6169":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"6:4685:4952":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"1:3836:7206":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"2:11784:2150":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"1:8874:6044":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"2:8748:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:4258:7156":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"2:2152:590":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:1820:5578":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"2:2743:2331":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"1:4382:7209":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"17:9153:3232":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"16:8138:7116":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"11:793:7134":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"1:4158:8026":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"2:43678:2173":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:3993:8005":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"2:20861:13439":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"17:14054:3939":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"16:7289:4261":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"1:4630:5418":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"17:11872:3403":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"5:4076:2468":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"18:609:6959":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"2:41533:6428":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"1:11559:30645":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"2:41807:183":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:9198:6058":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"1:4628:5416":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"1:2495:2690":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"1:4027:8006":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"17:13456:3779":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"2:2757:8130":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"2:43283:7182":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:3987:8004":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"16:6232:7089":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:21244:5580":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"6:4895:5057":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"16:6128:6223":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"2:21112:8136":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"5:6771:2907":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"2:2811:13423":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:9278:2627":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"2:40919:5812":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"6:5829:5209":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"0:144:1813":{"crate_id":0,"path":["rustc_version","Error","Utf8Error"],"kind":"variant"},"6:1500:4641":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:43464:7187":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"18:548:141":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"17:11144:6146":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"2:7231:13398":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"17:13949:3912":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"1:6592:8099":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"17:14359:4040":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"1:10778:5981":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"1:3303:2698":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"6:573:4622":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"6:6868:5516":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"1:6155:2971":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"17:9032:3228":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"16:3025:4118":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"2:9435:141":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:4764:389":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"17:11815:3389":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"1:9475:7224":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"2:41595:181":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"17:13683:3844":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"1:11266:2107":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"16:2332:4066":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"6:6625:5405":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:44291:6473":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:21216:8135":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"17:13862:3886":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"6:1506:4644":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:41581:5827":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"2:40458:6402":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"2:1755:5575":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:9036:6049":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"17:10633:3265":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"16:5959:6198":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"2:49867:8151":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"6:6598:5395":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:24:612":{"crate_id":2,"path":["core","env"],"kind":"macro"},"1:11038:2989":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"2:42859:6431":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"6:4638:4947":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"1:2364:7977":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"14:215:6304":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"6:7558:5549":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"16:6724:6253":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"2:21465:8149":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"2:39454:2492":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"1:11996:645":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:44188:2178":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"16:2926:19284":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"5:3142:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"17:9336:129":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"1:4230:7207":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"17:12412:3522":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"17:9318:3237":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"6:7609:5561":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"2:46805:5915":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"2:25980:2650":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"2:40231:6384":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"2:47894:5963":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"18:0:1954":{"crate_id":18,"path":["memchr"],"kind":"module"},"17:13964:3916":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:41546:6488":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"2:21904:5583":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:9232:2485":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"17:13991:3923":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"2:21920:6361":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"17:13435:3771":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"6:568:4620":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"16:7484:6288":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"6:4770:4996":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"16:6142:194":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"17:9614:35297":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"11:2186:35265":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"17:11992:3424":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"2:20859:30935":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"2:44168:2177":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"1:6640:217":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"2:11809:2142":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:40530:6409":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"11:311:6310":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"11:836:7127":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"2:40688:6413":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"17:11109:6144":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"17:13707:3846":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"16:3295:4122":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"1:3186:27512":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"3:0:443":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:2931:2199":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:1885:1679":{"crate_id":1,"path":["std","error"],"kind":"module"},"5:1426:2468":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"11:2174:4478":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"6:5068:5147":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"2:43810:2165":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"1:9016:7247":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"11:0:1948":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"0:127:1716":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","ComponentMustNotHaveSign"],"kind":"variant"},"1:10558:2987":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"6:62:13763":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"17:9016:3227":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"17:9887:6989":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"17:10969:7044":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"1:7576:2981":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"6:5920:5263":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"6:5967:5289":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"1:8005:7228":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"17:3519:6978":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"2:46388:5893":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"16:6239:35288":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"2:5383:2669":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"17:12711:3564":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"2:48022:5971":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"2:4380:2930":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:12585:2952":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:22624:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"17:11272:7051":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"5:4761:673":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"2:2773:13419":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"16:6250:4165":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"17:12318:3504":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"17:12174:3468":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"6:4550:4931":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"6:7511:5539":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"17:13083:3645":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"17:10266:7007":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"1:12005:1516":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"6:4929:5082":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"2:9886:222":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"18:481:6103":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"1:8986:7243":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"16:7679:4115":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"17:13639:3831":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"1:9071:6052":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"6:4854:5035":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"1:2920:210":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"2:46213:5888":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"5:5977:13737":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"2:21569:32990":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"5:1138:35125":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"1:11293:6067":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"2:2821:13425":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"11:2168:4477":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"18:614:35301":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"2:46881:5917":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"2:1636:5571":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"2:7043:2967":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"2:39199:13268":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"6:4984:5111":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"1:11987:1534":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"2:43760:2169":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"0:149:1816":{"crate_id":0,"path":["rustc_version","Error","SemVerError"],"kind":"variant"},"15:327:19243":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"1:7854:7224":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"2:2313:188":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"2:44275:6469":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"17:11007:7047":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"1:3455:2103":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:41663:2468":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"1:933:7949":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"2:9230:194":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"17:12757:3588":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"1:908:2909":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"16:6357:4170":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"2:10345:7167":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"17:11467:3343":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"17:9561:6982":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"5:207:2872":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"1:8387:8066":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"5:1492:7120":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"1:8893:6045":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"17:8794:20208":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"2:46189:5887":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"16:7553:4284":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"5:822:2880":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"18:707:2145":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:41427:5816":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"1:4166:8027":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"2:44083:6458":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"17:12864:3607":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"1:615:2660":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"2:40894:6418":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"17:10845:3301":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"5:6932:2921":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"11:798:7122":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"16:5843:6186":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"17:13566:3820":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"2:46167:5886":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:3262:2701":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"5:1503:7121":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"1:3888:1681":{"crate_id":1,"path":["std","num"],"kind":"module"},"1:10922:4543":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"17:10361:1684":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"17:11498:3344":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"17:10863:3255":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"6:4506:4910":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"16:7631:4288":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"6:7564:5550":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"6:5979:5296":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"1:11099:2097":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:45612:5861":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:1562:2469":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"1:914:7134":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"16:3777:4126":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"1:673:7944":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"2:40481:6404":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"11:1517:7135":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"16:7061:6283":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"2:46491:5895":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"17:13894:3894":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"6:7523:5541":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"2:21:686":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"1:8860:7240":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"17:10223:3262":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"1:12002:746":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"1:3346:2687":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"18:507:3100":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"1:6539:8097":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"1:8332:5405":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"5:5841:2891":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"6:1575:4682":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"17:9866:6987":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"16:4965:4149":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:2748:2333":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"16:6571:20148":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"16:4814:4144":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"17:14189:3992":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"17:10080:6998":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"17:10293:7009":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"17:10458:6128":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"17:12526:3539":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"1:8455:5842":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"5:2461:5563":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"5:6790:2919":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"17:11955:3418":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"14:40:3389":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"2:1917:5579":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:5439:1678":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"17:14026:3931":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"1:8000:7227":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"2:41404:155":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"2:44283:6471":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"16:6986:4222":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"2:39261:200":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"6:4380:4846":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"2:43706:2167":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"7:79:19125":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"1:4791:2962":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"1:8830:2098":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"2:43940:13299":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:7889:130":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"16:5807:6180":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"17:13043:3640":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"9:393:19133":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"2:3317:69":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"6:1545:4663":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"1:9096:167":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"2:43660:2174":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"11:399:35266":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"2:46021:5882":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"11:1858:6318":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"2:11804:2144":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"6:4606:4944":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"2:43362:6354":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:12000:749":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"2:40878:6416":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"16:8252:4351":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"6:5025:5126":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"2:47885:5962":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"20:129:2193":{"crate_id":20,"path":["semver","identifier","Identifier"],"kind":"struct"},"0:137:128":{"crate_id":0,"path":["rustc_version","Error"],"kind":"enum"},"6:4800:5012":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"17:10303:3172":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"2:2752:8128":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"17:13787:3869":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"17:9744:35290":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"6:1673:4755":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"2:11608:2153":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"17:12691:3563":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"2:40674:6412":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:6187:7216":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"1:1580:6316":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"11:1838:6315":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"2:40308:6355":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"17:13719:3849":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"0:95:1722":{"crate_id":0,"path":["rustc_version","VersionMeta"],"kind":"struct"},"6:482:4569":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"13:226:4476":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:40350:6386":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"0:0:1832":{"crate_id":0,"path":["rustc_version"],"kind":"module"},"16:7463:6285":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"5:2170:6324":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"6:1520:4649":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"2:47969:5968":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"6:4543:4929":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"0:55:1694":{"crate_id":0,"path":["rustc_version","Channel","Stable"],"kind":"variant"},"1:635:7193":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"16:6516:4173":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"1:8354:6025":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"1:11993:1499":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"16:2421:4075":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"6:1631:4726":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"2:32141:7175":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"2:2842:13427":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"0:121:1706":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError"],"kind":"enum"},"6:1649:4738":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"16:8068:6296":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"16:6915:35283":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"1:410:165":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:44279:6470":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"5:2690:5567":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"5:1523:7140":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"1:9480:2985":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"17:12851:3605":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"6:4374:4844":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"1:5075:7210":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"16:5590:4102":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"17:12118:3451":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"1:8816:2097":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"17:12966:3621":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"17:11726:3365":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"1:8283:6489":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"17:13016:3638":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"2:40438:6400":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"17:9604:3255":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"6:1696:4765":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:10126:2153":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"17:14417:4050":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"2:11573:6442":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"2:45991:5881":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:7859:6486":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"16:4323:4131":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"16:2781:4090":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"1:2378:7981":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"18:736:24172":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"17:13029:3639":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"2:41910:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"11:2033:6284":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"6:7546:5547":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"1:2634:2693":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"16:7568:35287":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"17:9875:6988":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"17:12186:3471":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"6:4568:4942":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"6:4389:4851":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"17:12994:3627":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"1:5301:120":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"16:8166:6303":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"1:7638:7990":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:22360:178":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"11:1611:2867":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"6:123:13818":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"2:46259:5890":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"5:2243:6329":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"2:44351:6478":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"16:7539:4113":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"2:2510:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"2:42626:4315":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"20:299:1684":{"crate_id":20,"path":["semver","Version"],"kind":"struct"},"17:14150:3977":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"17:14395:4044":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"17:13179:3663":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"16:4620:4139":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"6:562:4617":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"2:9222:2481":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"5:1302:7133":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"2:21460:8141":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"2:1666:1096":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"17:9821:3245":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"17:10832:7037":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"17:14163:3983":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"17:11084:6136":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"6:5080:5152":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"1:4733:8016":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"1:1982:184":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:1732:13450":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"16:3580:4124":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"16:5775:4158":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"5:2049:7141":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"18:652:3100":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"2:2695:109":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"11:1852:6317":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"6:6565:5372":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"11:695:7121":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"16:6692:20149":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"2:47065:5919":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"5:7233:35210":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"17:12769:3590":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"17:10529:3328":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"5:1102:35124":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"5:7247:2469":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"2:3141:13431":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"16:6303:4096":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"2:39277:198":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"2:3078:7965":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"10:36:4483":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"16:6317:7092":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"16:5626:7054":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"2:43574:2171":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"17:8949:20213":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"2:42596:68":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"5:2962:5566":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"18:590:3108":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"5:7339:2085":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"1:3494:2115":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"13:0:1943":{"crate_id":13,"path":["std_detect"],"kind":"module"},"5:7284:2469":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"1:7930:2694":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"2:40471:6403":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"0:125:1713":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","ComponentMustNotHaveLeadingZeros"],"kind":"variant"},"2:11322:13500":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"6:6607:5396":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"18:521:24174":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"2:4010:7154":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"2:20847:8142":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr"],"kind":"trait"},"1:11985:945":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2:2791:13421":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"11:817:7125":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"5:2960:34725":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"1:11260:6504":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"1:10943:27083":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"6:6589:5389":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"6:6022:5312":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"1:3512:2114":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"1:0:1407":{"crate_id":1,"path":["std"],"kind":"module"},"5:3183:35213":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"1:1591:6318":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"4:0:1944":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"1:1780:2611":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"16:5414:4156":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"16:5382:3227":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:41832:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:11341:6510":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"16:6160:6226":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"11:403:35267":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"11:1027:19213":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"6:532:4600":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"1:8938:8103":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"2:22558:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"2:8321:8071":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"6:6850:5513":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"17:10253:7006":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"1:6139:2952":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"1:8202:2682":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"5:1482:7134":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"2:20656:33104":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"0:129:1797":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","MinorVersionMustBeZeroAfter4"],"kind":"variant"},"2:21851:6360":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"17:11428:3342":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"5:676:231":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"17:12089:3440":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"17:12035:3434":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"5:4004:2891":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"2:40151:6379":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"1:5980:206":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"17:13167:3656":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:10317:2174":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:43855:2162":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"5:6957:2924":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"1:11998:751":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"17:12891:3609":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"6:6044:5320":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"2:45898:5873":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:11989:1058":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"17:11924:3414":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"16:6554:6247":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:40124:2163":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"0:131:1718":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","MinorVersionRequiredBefore4"],"kind":"variant"},"2:40245:2123":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"typedef"},"6:547:4609":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"1:3113:2709":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"6:554:4612":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"11:1826:2891":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"16:4506:4135":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:44295:6474":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"2:44008:6455":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"17:9485:35295":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"17:14015:3927":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"17:10444:6127":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"16:7099:6049":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"1:4310:7208":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"6:5737:5156":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"1:1569:2909":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"5:4365:2898":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"1:6063:1686":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"2:47931:5966":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"17:14380:4043":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"2:2928:2198":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"2:45843:5870":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:1782:2612":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"17:10945:7042":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"1:3264:2702":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"1:5374:2088":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"15:288:19238":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"9:486:19131":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"17:12952:3619":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"1:10766:6503":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"16:6850:4212":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"0:48:1686":{"crate_id":0,"path":["rustc_version","Channel"],"kind":"enum"},"6:6156:5354":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"2:2787:8131":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"2:40900:2707":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:5773:7215":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"2:22723:2654":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"16:5342:4155":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"2:42642:71":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"6:4872:5046":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"1:885:6314":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"2:42367:2484":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"2:2737:2329":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"17:12346:3511":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"6:6711:5432":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"17:13937:3909":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"17:11542:3346":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"16:6931:7093":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"6:4842:5030":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"11:760:2909":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"16:6323:6228":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"1:1892:2658":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"2:43106:6434":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"2:4254:207":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"6:4475:4892":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"16:2567:4081":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"1:4735:8018":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"6:6015:5311":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"6:7540:5546":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"6:5767:5181":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:3934:2669":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"1:8405:6035":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"2:43724:2168":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"6:7278:5525":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"5:7351:2086":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"1:11991:1385":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"6:5051:5143":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"2:47601:5954":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"6:5849:5222":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:9682:2942":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"17:10609:7032":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"1:8228:7234":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"2:40328:7178":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"6:5955:5284":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"6:4833:5024":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"11:1501:19214":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"2:46569:5911":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"14:160:7117":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:40139:13359":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"6:4341:4820":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"5:685:111":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"16:7799:4300":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:42027:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"16:4841:4145":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"6:7463:5537":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"5:3671:2874":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:7876:6487":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"2:41680:5830":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:2243:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"17:13574:3821":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"2:47920:5965":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:9468:129":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"2:44563:6481":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"16:3744:4125":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"2:2816:13424":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"2:2745:106":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"16:7584:7111":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"6:4764:4993":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"1:4468:8030":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"5:4428:2898":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"1:11952:28319":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"6:1663:4749":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:46615:5912":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"2:47999:5970":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"2:2850:13429":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"17:11696:3361":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"16:2399:4074":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"2:11855:13293":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:7922:2692":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"17:12826:3602":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"5:261:2874":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"17:8771:20207":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"1:7849:3173":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"17:12161:3467":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"6:5882:5235":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"17:12354:3513":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"1:6427:7218":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"10:0:1947":{"crate_id":10,"path":["adler"],"kind":"module"},"18:719:3121":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"2:2602:128":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:14:1704":{"crate_id":2,"path":["core","write"],"kind":"macro"},"17:11767:3374":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"17:9223:3234":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"1:1068:7130":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"2:4045:13264":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"17:8711:20205":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"17:8632:20203":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"1:498:2890":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"17:8899:20211":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"2:40506:3118":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"2:3373:13319":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"16:3810:4127":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"1:10094:27090":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"1:3189:27516":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"1:1841:2627":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"16:6789:6266":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"16:6470:4116":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"16:7739:4103":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"17:9806:20225":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"17:13771:3866":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"1:11999:748":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"2:10165:7164":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"2:10331:2173":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"1:5493:2092":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"1:9101:218":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"17:12815:3600":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"16:2900:4095":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:39461:5681":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:2767:4232":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"17:9966:3255":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"17:11189:3316":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"6:4879:1010":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"6:4729:4975":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"16:5067:4152":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"5:1011:2874":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"5:7451:224":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2:3156:135":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"6:488:4572":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"17:13427:3768":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"6:6805:5491":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:43500:1813":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"11:630:2467":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"2:2507:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"1:352:7188":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"0:75:1699":{"crate_id":0,"path":["rustc_version","LlvmVersion"],"kind":"struct"},"16:4592:4138":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"17:11178:6148":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"6:5890:5240":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"0:25:1586":{"crate_id":0,"path":["rustc_version","version"],"kind":"function"},"16:4928:4148":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"18:80:24161":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"17:13854:3885":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"2:21132:5580":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"2:5471:2669":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"6:526:4597":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"16:6864:4214":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"1:358:7189":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"1:8922:8101":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"16:7833:6292":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2:2799:13422":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"18:582:2343":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"17:14329:4032":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"1:10743:6495":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"17:9899:3248":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"16:5639:6167":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"16:4868:4146":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"17:12539:3542":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"2:40288:2136":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"2:45880:5872":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"6:4908:5067":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"5:7547:2913":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"6:1717:4773":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"1:6423:6417":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"18:624:35302":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:2355:189":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"17:13999:3924":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:2694:225":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"16:5793:6179":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"5:778:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"1:11044:2990":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"6:587:4630":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"2:43422:7185":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"6:1690:4762":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"1:11547:6068":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"16:2352:4072":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"6:4401:4856":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"6:494:4575":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"17:13548:3815":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"15:0:1951":{"crate_id":15,"path":["addr2line"],"kind":"module"},"17:10471:6129":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"5:1442:2469":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"6:1733:4777":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"17:10323:7012":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"6:5015:5121":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"11:644:2468":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"1:728:142":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:3513:2891":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"1:4562:8048":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"17:12659:3559":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"17:12065:3438":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"5:1514:198":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"5:2141:6322":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"16:2589:4082":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:4811:802":{"crate_id":2,"path":["core","iter"],"kind":"module"},"16:2715:4087":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"1:919:7120":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"17:11234:3320":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"1:11984:372":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"6:7295:5536":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"5:3737:7141":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"6:4944:5091":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"5:6639:2874":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2:44307:6477":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:11957:7947":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"17:10123:3248":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"17:12646:3558":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"1:582:7940":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"2:45791:5868":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2:3196:13265":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:9028:7249":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"11:1012:7130":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"1:11131:5851":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"2:43873:2164":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"17:12905:3612":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"17:11074:3311":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"2:44287:6472":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"16:7515:6290":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"16:6289:4168":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:40104:6377":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:41713:7179":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"17:11520:3311":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"1:10410:2096":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"17:13749:3860":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"17:9850:20226":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"17:10313:7011":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"17:10280:7008":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"20:0:1683":{"crate_id":20,"path":["semver"],"kind":"module"},"6:6841:5510":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"2:2246:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"17:10175:3255":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"17:1973:6971":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"6:5863:5233":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"1:6350:166":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"2:42105:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"17:12605:3551":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"6:6036:5317":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:43556:2172":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"16:6667:4196":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:2690:2194":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"16:5994:20145":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"6:6573:5377":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"2:42146:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:41490:5825":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"16:8021:4338":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"1:7738:6483":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"1:10918:2632":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"14:165:19219":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"2:42185:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:6536:7219":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"2:40909:2936":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"6:4413:4865":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"3:234:210":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"17:10906:3304":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"17:13971:3917":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"17:13803:3873":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"1:1979:185":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"16:7763:20154":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"2:9190:132":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"5:1118:34713":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"2:20643:32987":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"17:11388:20216":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"1:8975:7241":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"1:8564:6493":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"1:2885:2961":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"1:7663:5980":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"2:6740:13401":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"2:40388:6392":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:10877:7170":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"1:2558:2691":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"1:9023:7248":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"5:2035:2694":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"2:21033:8139":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"1:8980:107":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"16:7255:5830":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"17:14227:4002":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"2:30351:5604":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:2210:129":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"5:7531:2909":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"2:8916:32434":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"2:40165:13360":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"17:11155:6147":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"17:9977:6983":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2:46357:5892":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"6:6648:5423":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:10844:7169":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"2:2838:13426":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:632:7191":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"5:6560:2469":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"17:13140:3653":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"16:5567:4100":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2:2513:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"9:357:19147":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"17:10799:7035":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"1:11308:6507":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"1:8192:2681":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"16:0:1952":{"crate_id":16,"path":["gimli"],"kind":"module"},"1:10753:6486":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"1:944:7125":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"16:2689:4086":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"2:39419:7176":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:3222:2699":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"1:8478:6038":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:41731:193":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"2:30921:183":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"16:8125:7113":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"18:644:3100":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"2:7227:13399":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"17:12982:3625":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"2:2318:125":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"2:21235:7990":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"2:11557:6441":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"6:4938:5088":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"5:3212:6315":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"1:12009:1572":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"1:5121:191":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"6:5044:5140":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"17:12502:3538":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"1:9149:6494":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"18:515:3103":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"2:43962:6445":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:6290:206":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"16:2857:4093":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"2:43624:2175":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"17:9518:6981":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"17:10597:7031":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"9:330:4523":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"2:40378:6391":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"2:30551:31158":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"17:13778:3868":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"17:10249:7005":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"11:1048:35264":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"16:6175:7063":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"2:39365:203":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"17:10430:6126":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"17:13620:3830":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"1:12010:1138":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"2:42669:128":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"17:12566:3547":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"17:13055:3641":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"6:4428:4872":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:12429:192":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"2:12622:140":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"1:11990:312":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"1:7525:3224":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"6:4992:5113":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"5:3204:6317":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"11:2194:4481":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"17:10981:7045":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"6:6705:5430":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"17:11753:3373":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"1:6675:7217":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"16:7693:4105":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"2:43532:2157":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"17:11045:3306":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"5:7255:198":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"9:507:4546":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"2:9665:2941":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"16:3894:4129":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:42876:145":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:11992:1415":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"2:44145:6460":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:5233:190":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"16:7433:4282":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"16:7648:198":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"1:10931:2092":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"6:5799:5199":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"16:5940:7056":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"14:202:13301":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"6:1536:4657":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"17:9188:3233":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"5:6441:2891":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"1:3734:7205":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"16:8176:20156":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"6:7250:5522":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"2:43454:6357":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"2:46043:5883":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"6:0:825":{"crate_id":6,"path":["libc"],"kind":"module"},"16:5028:4151":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"16:4441:4133":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"1:7712:7945":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"2:44134:13300":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:8852:2467":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"16:4996:4150":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"2:4113:7155":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"5:3722:2694":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"1:6811:8132":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"2:4389:2493":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"5:3596:2468":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"9:426:19134":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"17:400:6967":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"16:6438:6236":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"5:5614:2907":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"1:3965:8002":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"11:657:2469":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"2:46727:5914":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"2:21987:5588":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"17:13069:3642":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"2:40337:2681":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"2:40278:2137":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"6:4716:4971":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:41988:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"5:5956:2904":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"17:13155:3316":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"11:365:2865":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"1:10788:130":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"5:7398:31132":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"0:28:1752":{"crate_id":0,"path":["rustc_version","version_meta_for"],"kind":"function"},"18:491:6104":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"17:13109:3647":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"5:7427:2120":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"18:727:3124":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"6:4328:4810":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"18:766:24173":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"11:1831:2909":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"11:749:2891":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"11:119:2861":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"2:9599:2938":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"2:10083:2172":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"1:8294:7237":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"6:7517:5540":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"1:8010:2695":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"2:43839:2152":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"17:10581:7029":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"2:3233:13266":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:5553:2093":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"2:21798:6359":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"20:320:2192":{"crate_id":20,"path":["semver","VersionReq"],"kind":"struct"},"1:7658:7222":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"11:2201:2085":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"17:11905:3409":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"6:7552:5548":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"17:8605:20190":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"16:2663:4085":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"2:10238:2171":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"17:11642:3354":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"1:5818:2966":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"15:394:19249":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"2:43991:6454":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:41655:2467":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"2:40116:2164":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"5:7263:6334":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"16:7240:35284":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"6:5074:5149":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"17:14197:3995":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"2:22033:31133":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:4618:8005":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"1:841:2467":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"1:10515:2701":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"16:5673:20143":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"5:4236:2467":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"17:14205:3996":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"6:4754:4987":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:42360:2483":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"17:10957:7043":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"2:43444:7186":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"9:237:5842":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"2:22085:2653":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"17:11591:3316":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"17:13673:3843":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"2:12677:7950":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"2:2897:117":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"2:7698:30996":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:2349:182":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"1:5388:2089":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"1:11566:6512":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"16:4753:4142":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"16:6540:4104":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"13:110:35272":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"5:4395:2669":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"1:1818:2621":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"1:8302:7234":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"1:950:7127":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"17:10339:7018":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"2:7384:159":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"6:4848:5032":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"6:5836:5213":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"2:47946:5967":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"2:41782:2467":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"1:4737:8019":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"1:8537:6490":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"2:20811:8140":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"2:45720:5865":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"2:42353:2481":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"17:14044:3934":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"1:8906:8102":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"2:45590:5860":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:10961:2099":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"6:1513:4647":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:3181:31723":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"6:4616:4945":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"1:7374:28326":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"17:12936:3618":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"18:538:3105":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"17:14282:4018":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"1:3519:2112":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"2:7306:121":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"9:52:19150":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"2:43409:6355":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"6:4963:5099":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"1:10798:119":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"1:4179:8028":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"20:385:2191":{"crate_id":20,"path":["semver","Prerelease"],"kind":"struct"},"1:11027:2988":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"6:4794:5009":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"1:956:7128":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"6:500:4577":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"1:10322:27089":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"17:11034:7049":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"17:10486:6130":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"17:3395:6977":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2:21211:7990":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"2:43848:2151":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"5:1464:6313":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"17:10931:7038":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"16:7505:4111":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"16:2803:4091":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"17:10330:7015":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"5:4987:2669":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"2:45658:5863":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"2:2162:13439":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"18:636:3120":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"2:20673:33109":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"2:22525:2655":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"2:40927:6420":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"2:40490:6405":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"17:13492:3809":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"11:1818:2467":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"16:4396:4132":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"6:6130:5339":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"1:11997:647":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"6:7529:5542":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:2693:226":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"18:681:6108":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"17:11832:3392":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"2:30373:68":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"11:1103:7132":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"16:4564:4137":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"6:6028:5315":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:44330:122":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"2:9224:2482":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"1:4037:8007":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"16:5553:4097":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"20:279:7247":{"crate_id":20,"path":["semver","error","Position"],"kind":"enum"},"1:3731:7204":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"16:4724:4141":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"1:872:6313":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"16:2314:4064":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"2:21972:31144":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"17:12004:3425":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"1:7745:2631":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"6:6796:5488":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"17:2133:6972":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"1:6463:2975":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"16:7012:6276":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"1:11323:6551":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"6:4955:5094":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"6:1590:4694":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"5:1257:6284":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"2:10034:2467":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"2:10276:7166":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"6:7272:5523":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"16:7362:20152":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"17:9475:6980":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"6:4587:4943":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"5:2223:35204":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"1:854:2468":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"5:5771:232":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"2:22078:6366":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"5:2970:34726":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"1:2922:128":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"2:11338:7171":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"6:6136:5340":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"17:11354:3194":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"16:8265:128":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"17:11852:3402":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"17:10013:3252":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"16:4032:4130":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"1:11406:2993":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:11789:2143":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"6:1557:4672":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"6:579:4625":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"18:531:6105":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"2:2826:4241":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:7733:2722":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"16:6057:19257":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"5:2131:2890":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"2:44482:211":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"16:6332:6229":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"1:11243:2991":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"2:2519:238":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"17:13905:3898":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"1:7914:7226":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:10359:7168":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"2:8743:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:1430:144":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"2:48061:5972":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"17:11127:3344":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"5:7440:2905":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"1:10748:6497":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"5:5364:2148":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:44546:161":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"0:49:1688":{"crate_id":0,"path":["rustc_version","Channel","Dev"],"kind":"variant"},"16:5363:20142":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:9478:2475":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"17:13303:3665":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"17:9716:35293":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"1:3183:30519":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"17:12552:3271":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"6:4496:4903":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"11:1822:2469":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"2:41444:5818":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"2:9234:2486":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"16:4476:4134":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"20:90:7770":{"crate_id":20,"path":["semver","error","QuotedChar"],"kind":"struct"},"16:7592:20153":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"2:45690:5864":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2:44056:6457":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"5:7465:6339":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"17:13757:3863":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"17:13957:3915":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"16:3058:3128":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"17:12671:3560":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"1:11573:6512":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"1:11491:7206":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"11:2049:7129":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2:30949:2343":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"1:7727:7946":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"20:354:2190":{"crate_id":20,"path":["semver","Op"],"kind":"enum"},"2:4325:2929":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"1:3669:7999":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"2:2984:7964":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"11:2130:19208":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"1:1921:2659":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"2:2700:228":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"17:9571:35294":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"17:11329:20215":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"2:46235:5889":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"6:5900:5247":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"1:8171:2680":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"1:5624:2965":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"12:0:1949":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"1:11429:7204":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"6:4518:4916":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"9:0:1946":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"2:9179:210":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"1:7595:2983":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"2:43606:2176":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:10203:7165":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"6:4695:4959":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"11:736:6314":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"16:6347:20147":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"5:3330:2909":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"1:927:7122":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"1:10453:2986":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"2:2962:13267":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"11:844:7128":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"16:6456:4099":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"1:1059:7129":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"16:2737:4088":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"17:10051:6996":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"1:8961:6048":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"17:8542:20192":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"2:30445:31152":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"1:2390:7987":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"6:4524:4919":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"5:7476:7151":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"17:10390:6123":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"17:8841:20209":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"17:13557:3819":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"1:10724:7262":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"6:5818:5201":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:2590:116":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"2:12367:136":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"11:723:6313":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"16:6372:4098":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"1:10234:2105":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"2:4785:31087":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"2:9876:7990":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:6606:2976":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"2:21066:8134":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"2:43334:6351":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:8143:2706":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:47771:5957":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:6983:2706":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"17:12840:3604":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"18:660:6960":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:6980:7776":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"2:40885:6417":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"1:8495:8081":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"7:0:1562":{"crate_id":7,"path":["unwind"],"kind":"module"},"1:640:7943":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"16:55:4328":{"crate_id":16,"path":["gimli","endianity","Endianity"],"kind":"trait"},"2:21936:5584":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:9050:26845":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"2:11798:2145":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"6:7505:5538":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:40064:31153":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"2:3162:13337":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"6:4704:4964":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"17:504:6968":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"16:2541:4080":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"16:6484:6237":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"1:7866:5981":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"6:4535:4924":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"5:3802:2909":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"5:6487:2874":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"1:6386:7217":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"6:4463:4887":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:41461:7998":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"17:11943:3415":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"17:10403:6124":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"16:8152:4117":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"18:671:6964":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"14:221:4429":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"17:9399:6979":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:22426:176":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"1:4899:8055":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"6:4395:4853":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:2980:7963":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"17:8997:20191":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"1:1565:2891":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"10:44:4484":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"2:22393:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"5:2959:2566":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"6:4824:5021":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"5:7414:2119":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"17:12479:3533":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"2:44311:5851":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"2:21960:2652":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:4814:8015":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"2:40397:6394":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"16:6872:4106":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"1:10512:2699":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"17:13914:3901":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"17:11199:3319":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"6:653:14175":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"17:10066:6997":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"5:4034:2874":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"17:12921:3614":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"2:30126:2651":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"16:7025:6279":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"1:8993:24450":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"2:42691:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"1:8553:6043":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"1:3301:2697":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"2:47271:5951":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:4696:8030":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"6:6820:5498":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"6:4818:5020":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"17:13513:3814":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"2:5990:6344":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:2212:7200":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"18:564:3107":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"17:11020:7048":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"1:8276:6488":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"20:335:2189":{"crate_id":20,"path":["semver","Comparator"],"kind":"struct"},"17:582:3224":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"11:2180:4479":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"2:3647:2469":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"2:43343:6352":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"5:4196:2669":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"2:0:497":{"crate_id":2,"path":["core"],"kind":"module"},"5:2966:34724":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"1:923:7121":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"17:256:6965":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"16:6713:6252":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"17:9344:35292":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"2:43864:2163":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"17:9528:35291":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"2:2832:4242":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:11168:6066":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"2:43514:2161":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:9971:6425":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"2:39634:24945":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"2:40184:5811":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"17:14341:4034":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:30357:5606":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"0:155:1819":{"crate_id":0,"path":["rustc_version","Error","LlvmVersionError"],"kind":"variant"},"17:14236:4004":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"16:2293:19258":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"11:1068:7131":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"2:47847:5959":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:11470:7205":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"1:8222:2165":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"1:8159:2102":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"2:40406:6395":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"6:4556:4933":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"14:7:7117":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"2:9697:2947":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"6:4650:4948":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"17:11669:3355":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"5:7292:2469":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"2:44525:6637":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"17:12592:3550":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"17:2164:6975":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"17:12435:3525":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"6:595:4635":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"1:1045:6284":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"1:10305:1678":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"17:10417:6125":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"16:7038:6282":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"5:5422:1415":{"crate_id":5,"path":["alloc","str"],"kind":"module"},"2:23170:2649":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"5:7223:2886":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"16:6018:20146":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:46310:5891":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:551:7190":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"16:2373:4073":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"6:5877:5234":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"17:8872:20210":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"16:5916:6195":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"16:6939:20150":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"1:4041:8008":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:40158:6380":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"2:21110:7990":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"17:9913:6991":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"1:2405:1680":{"crate_id":1,"path":["std","io"],"kind":"module"},"5:3178:6316":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2:21118:8138":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"6:4810:5016":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"2:20615:2343":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"2:20980:8143":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr"],"kind":"trait"},"2:40420:6398":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"6:6726:5437":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"17:434:3180":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"2:3998:7153":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"2:47905:5964":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:22459:177":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"0:122:1793":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","ParseIntError"],"kind":"variant"},"2:6834:13393":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"2:42614:110":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"6:5058:5146":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:2705:2327":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"2:2910:2472":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:10058:2468":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"2:47413:5952":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"11:968:6284":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"1:7130:29969":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"17:13659:3839":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"16:2874:4094":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"16:6427:6235":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"1:3503:27829":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"2:43526:2158":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"6:5805:5200":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:45861:5871":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"17:11967:3419":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"2:12454:7173":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"2:2921:2196":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:20994:13439":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"1:9106:219":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"1:5424:2091":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"6:7586:5555":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"6:6618:5401":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"16:2443:4076":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"1:4150:8025":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"2:39387:2079":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"17:11056:20336":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"1:10075:2621":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"1:8868:2469":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"17:11371:3340":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"17:13697:3845":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"6:1569:4680":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"16:7073:20151":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"16:2962:19285":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"5:1672:2874":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"6:4917:5073":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"1:11187:6053":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"17:10038:6995":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"5:6081:2669":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"2:32145:6371":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"2:42888:5842":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"17:13332:3685":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"17:10883:3303":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"1:5740:7211":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"2:40080:5810":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2:22690:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"0:133:1720":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","TooManyComponents"],"kind":"variant"},"11:986:7129":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"17:13882:3893":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"2:42867:2477":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"17:12133:3457":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"2:1746:5572":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"2:7661:13397":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:5556:2095":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"2:4263:7157":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"16:7313:35286":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"1:4128:29977":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"2:2846:13428":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"2:12402:33643":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:11986:419":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"5:1288:7129":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"}},"external_crates":{"20":{"name":"semver","html_root_url":"https://docs.rs/semver/1.0.18/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":26}