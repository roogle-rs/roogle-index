{"root":"0:0:2128","crate_version":"0.4.0","includes_private":false,"index":{"2:13237:33786":{"id":"2:13237:33786","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12295:458","self::pattern":"2:12813:2454"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12819:2447","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:130:2017":{"id":"0:130:2017","crate_id":0,"name":"TooManyComponents","span":{"filename":"src/lib.rs","begin":[292,4],"end":[292,21]},"visibility":"default","docs":"Too many components","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:108":{"id":"0:108","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,27],"end":[147,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:31985:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13164:27287":{"id":"2:13164:27287","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12295:458","self::pattern":"2:12813:2454"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12819:2447","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12819:2447","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12834:2448","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13221:33782":{"id":"2:13221:33782","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:119:2089":{"id":"0:119:2089","crate_id":0,"name":"ParseIntError","span":{"filename":"src/lib.rs","begin":[282,4],"end":[282,37]},"visibility":"default","docs":"An error occurred in parsing a version component as an integer","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:121:1922"]},"discriminant":null}}},"2:2899:1756":{"id":"2:2899:1756","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:41617:225","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2864:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13251:28458":{"id":"2:13251:28458","crate_id":2,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:979:38778"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13256:33789":{"id":"2:13256:33789","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4894:33789"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:43683:2470","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:55:1991":{"id":"0:55:1991","crate_id":0,"name":"Stable","span":{"filename":"src/lib.rs","begin":[80,4],"end":[80,10]},"visibility":"default","docs":"Stable release channel","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:118:2003":{"id":"0:118:2003","crate_id":0,"name":"LlvmVersionParseError","span":{"filename":"src/lib.rs","begin":[280,0],"end":[293,1]},"visibility":"public","docs":"LLVM Version Parse Error","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:119:2089","0:122:2010","0:124:2013","0:126:2093","0:128:2015","0:130:2017"],"impls":["a:2:3103:246-0:118:2003","a:2:31983:236-0:118:2003","a:2:3138:2639-0:118:2003","a:2:32040:2501-0:118:2003","a:2:41599:8640-0:118:2003","a:2:41598:8517-0:118:2003","b:2:2605-0:118:2003","b:2:2895-0:118:2003","b:2:2608-0:118:2003","b:2:2890-0:118:2003","b:2:3713-0:118:2003","b:2:2884-0:118:2003","b:2:2880-0:118:2003","b:5:5848-0:118:2003","0:161","0:38","0:36","0:34","0:132"]}}},"0:140:2047":{"id":"0:140:2047","crate_id":0,"name":"stderr","span":{"filename":"src/lib.rs","begin":[349,8],"end":[349,22]},"visibility":"default","docs":"stderr output from the command","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7617:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:2893:136":{"id":"2:2893:136","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2864:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"a:2:3138:2639-0:93:2019":{"id":"a:2:3138:2639-0:93:2019","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3138:2639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:63":{"id":"0:63","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,26],"end":[71,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2655:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:64:679"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3138:2639-0:134:136":{"id":"a:2:3138:2639-0:134:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3138:2639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13225:33784":{"id":"2:13225:33784","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12295:458","self::pattern":"2:12813:2454"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12819:2447","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2890-0:134:136":{"id":"b:2:2890-0:134:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2864:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2860:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2893:136","2:2894:1758"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:41599:8640-0:74:1996":{"id":"a:2:41599:8640-0:74:1996","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41599:8640","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1996","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3713-0:118:2003":{"id":"b:2:3713-0:118:2003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31984:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3711:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3715:1771"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:73:781":{"id":"0:73:781","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[71,60],"end":[71,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10219:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10200:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:42":{"id":"0:42","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[384,0],"end":[396,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["cause","provide","description","source","type_id"],"trait":{"name":"Error","id":"2:2943:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:43:2102"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:155":{"id":"0:155","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[340,9],"end":[340,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10245:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:156:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13231:27288":{"id":"2:13231:27288","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12295:458","self::pattern":"2:12813:2454"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41504:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12819:2447","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12819:2447","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12834:2448","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:103:464":{"id":"0:103:464","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[147,9],"end":[147,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"VersionMeta","id":"0:93:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:53:1989":{"id":"0:53:1989","crate_id":0,"name":"Beta","span":{"filename":"src/lib.rs","begin":[78,4],"end":[78,8]},"visibility":"default","docs":"Beta release channel","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:41598:8517-0:118:2003":{"id":"a:2:41598:8517-0:118:2003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41598:8517","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:135:2040":{"id":"0:135:2040","crate_id":0,"name":"CouldNotExecuteCommand","span":{"filename":"src/lib.rs","begin":[343,4],"end":[343,37]},"visibility":"default","docs":"An error occurred while trying to find the `rustc` to run.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:137:1922"]},"discriminant":null}}},"2:13143:33770":{"id":"2:13143:33770","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12301:1673","str::slice_mut_unchecked":"2:13144:33771","crate::ops::Index":"2:39113:8537"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:3715:1771":{"id":"2:3715:1771","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39282:5926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13157:31880":{"id":"2:13157:31880","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:43658:2455","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13248:27059":{"id":"2:13248:27059","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3713-0:93:2019":{"id":"b:2:3713-0:93:2019","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31984:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3711:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3715:1771"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:124:2013":{"id":"0:124:2013","crate_id":0,"name":"ComponentMustNotHaveSign","span":{"filename":"src/lib.rs","begin":[286,4],"end":[286,28]},"visibility":"default","docs":"A version component has a sign","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:13199:27285":{"id":"2:13199:27285","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41504:193","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12819:2447","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12819:2447","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12834:2448","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2895-0:93:2019":{"id":"b:2:2895-0:93:2019","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2854:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2864:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2898:136","2:2899:1756"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:134:136":{"id":"0:134:136","crate_id":0,"name":"Error","span":{"filename":"src/lib.rs","begin":[341,0],"end":[361,1]},"visibility":"public","docs":"The error type for this crate.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:135:2040","0:138:2043","0:141:2109","0:144:2085","0:146:2112","0:149:2075","0:152:2115"],"impls":["a:2:3103:246-0:134:136","a:2:31983:236-0:134:136","a:2:3138:2639-0:134:136","a:2:32040:2501-0:134:136","a:2:41599:8640-0:134:136","a:2:41598:8517-0:134:136","b:2:2605-0:134:136","b:2:2895-0:134:136","b:2:2608-0:134:136","b:2:2890-0:134:136","b:2:3713-0:134:136","b:2:2884-0:134:136","b:2:2880-0:134:136","b:5:5848-0:134:136","0:161","0:155","0:40","0:157","0:159","0:42"]}}},"2:13156:33772":{"id":"2:13156:33772","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:43630:2472","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5850:1731":{"id":"5:5850:1731","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7617:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:40":{"id":"0:40","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[363,0],"end":[382,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10250:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:41:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:45:225":{"id":"0:45:225","crate_id":0,"name":"Result","span":{"filename":"src/lib.rs","begin":[417,0],"end":[417,58]},"visibility":"public","docs":"The result type for this crate.","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"std::result::Result","id":"2:41617:225","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"E"}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]}}}},"0:157":{"id":"0:157","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2857:143","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Utf8Error","id":"2:43312:2109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:158:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13135:2080":{"id":"2:13135:2080","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41506:190"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41504:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10901:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10901:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:152:2115":{"id":"0:152:2115","crate_id":0,"name":"LlvmVersionError","span":{"filename":"src/lib.rs","begin":[360,4],"end":[360,43]},"visibility":"default","docs":"An error occurred in parsing a `LlvmVersion`.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:154:1922"]},"discriminant":null}}},"0:57":{"id":"0:57","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,9],"end":[71,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3098:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:81":{"id":"0:81","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,23],"end":[90,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2660:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1996","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:17":{"id":"0:17","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[100,0],"end":[104,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10250:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1996","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:18:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:88":{"id":"0:88","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,43],"end":[90,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","lt","le","ge"],"trait":{"name":"PartialOrd","id":"2:2697:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1996","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:89:1253"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5618:27060":{"id":"5:5618:27060","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:13249:27058"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7617:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2895-0:48:1983":{"id":"b:2:2895-0:48:1983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2854:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2864:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2898:136","2:2899:1756"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32040:2501-0:134:136":{"id":"a:2:32040:2501-0:134:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32040:2501","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2880-0:134:136":{"id":"b:2:2880-0:134:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2857:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2854:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2883:2046"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:90":{"id":"0:90","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,55],"end":[90,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10461:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1996","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:91:851"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3713-0:74:1996":{"id":"b:2:3713-0:74:1996","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31984:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3711:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1996","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3715:1771"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13250:28457":{"id":"2:13250:28457","crate_id":2,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:979:38778"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2608-0:134:136":{"id":"b:2:2608-0:134:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31984:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2602:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2610:25937"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:67":{"id":"0:67","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,42],"end":[71,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","lt","le","ge"],"trait":{"name":"PartialOrd","id":"2:2697:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:68:1253"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:91:851":{"id":"0:91:851","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[90,55],"end":[90,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10469:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:36":{"id":"0:36","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[301,0],"end":[324,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10250:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:37:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2605-0:48:1983":{"id":"b:2:2605-0:48:1983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31984:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2599:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2607:2340"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13151:6791":{"id":"2:13151:6791","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12295:458"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43342:2463","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5617:27061":{"id":"5:5617:27061","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:13248:27059"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7617:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:161":{"id":"0:161","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2857:143","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:162:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:5848-0:118:2003":{"id":"b:5:5848-0:118:2003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10250:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:31984:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5846:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5850:1731"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3103:246-0:48:1983":{"id":"a:2:3103:246-0:48:1983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3103:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5599:34484":{"id":"5:5599:34484","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:296:2451","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:296:2451","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:116:851":{"id":"0:116:851","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[147,55],"end":[147,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10469:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5848-0:134:136":{"id":"b:5:5848-0:134:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10250:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:31984:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5846:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5850:1731"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:86":{"id":"0:86","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,38],"end":[90,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clamp","max","min"],"trait":{"name":"Ord","id":"2:2691:194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1996","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:87:471"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:97:2026":{"id":"0:97:2026","crate_id":0,"name":"build_date","span":{"filename":"src/lib.rs","begin":[159,4],"end":[159,34]},"visibility":"public","docs":"Build date of the compiler; this was removed between Rust 1.0.0 and 1.1.0.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41504:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"5:7617:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"5:5603:34485":{"id":"5:5603:34485","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7617:242"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7617:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12819:2447","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:41598:8517-0:48:1983":{"id":"a:2:41598:8517-0:48:1983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41598:8517","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:146:2112":{"id":"0:146:2112","crate_id":0,"name":"SemVerError","span":{"filename":"src/lib.rs","begin":[356,4],"end":[356,30]},"visibility":"default","docs":"An error occurred in parsing the semver.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:148:1922"]},"discriminant":null}}},"2:13202:2355":{"id":"2:13202:2355","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12813:2454","`DoubleEndedIterator`":"2:8197:129","prim@char":"1:12295:458","str::rmatches":"2:13205:33775"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:43570:2475","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12819:2447","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13124:2824":{"id":"2:13124:2824","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13126:33767":{"id":"2:13126:33767","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2880-0:74:1996":{"id":"b:2:2880-0:74:1996","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2857:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2854:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1996","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2883:2046"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:65":{"id":"0:65","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,37],"end":[71,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clamp","max","min"],"trait":{"name":"Ord","id":"2:2691:194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:66:471"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:85:679":{"id":"0:85:679","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[90,27],"end":[90,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1996","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3713-0:48:1983":{"id":"b:2:3713-0:48:1983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31984:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3711:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3715:1771"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:110:679":{"id":"0:110:679","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[147,27],"end":[147,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"VersionMeta","id":"0:93:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:34":{"id":"0:34","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[295,0],"end":[299,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2857:143","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ParseIntError","id":"2:22831:2089","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:35:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3713-0:134:136":{"id":"b:2:3713-0:134:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31984:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3711:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3715:1771"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2884-0:134:136":{"id":"b:2:2884-0:134:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2857:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2886:811"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13148:27275":{"id":"2:13148:27275","crate_id":2,"name":"split_at_mut_checked","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at_checked`] method.\n\n[`split_at_checked`]: str::split_at_checked\n\n# Examples\n\n```\n#![feature(split_at_checked)]\n\nlet mut s = \"Per Martin-Löf\".to_string();\nif let Some((first, last)) = s.split_at_mut_checked(3) {\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n\nassert_eq!(None, s.split_at_mut_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_mut_checked(16));  // Beyond the string length\n```","links":{"str::split_at_checked":"2:13147:27274"},"attrs":["#[must_use]","#[unstable(feature = \"split_at_checked\", reason = \"new API\", issue =\n\"119128\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:41504:193","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32040:2501-0:118:2003":{"id":"a:2:32040:2501-0:118:2003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32040:2501","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13243:2014":{"id":"2:13243:2014","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12774:135","`FromStr`":"2:12773:1979"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41617:225","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12773:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12773:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32040:2501-0:74:1996":{"id":"a:2:32040:2501-0:74:1996","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32040:2501","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1996","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:21:2004":{"id":"0:21:2004","crate_id":0,"name":"from_str","span":{"filename":"src/lib.rs","begin":[109,4],"end":[143,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"0:45:225","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:12773:1979","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:64:679":{"id":"0:64:679","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[71,26],"end":[71,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Channel","id":"0:48:1983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:84":{"id":"0:84","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,27],"end":[90,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2655:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1996","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:85:679"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3103:246-0:93:2019":{"id":"a:2:3103:246-0:93:2019","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3103:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:113":{"id":"0:113","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,43],"end":[147,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","lt","le","ge"],"trait":{"name":"PartialOrd","id":"2:2697:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:114:1253"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:93:2019":{"id":"0:93:2019","crate_id":0,"name":"VersionMeta","span":{"filename":"src/lib.rs","begin":[148,0],"end":[172,1]},"visibility":"public","docs":"Rustc version plus metadata like git short hash and build date.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:94:1980","0:95:2022","0:96:2024","0:97:2026","0:98:2028","0:99:855","0:100:2031","0:101:2033"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:23","a:2:3103:246-0:93:2019","a:2:31983:236-0:93:2019","a:2:3138:2639-0:93:2019","a:2:32040:2501-0:93:2019","a:2:41599:8640-0:93:2019","a:2:41598:8517-0:93:2019","b:2:2605-0:93:2019","b:2:2895-0:93:2019","b:2:2608-0:93:2019","b:2:2890-0:93:2019","b:2:3713-0:93:2019","b:2:2884-0:93:2019","b:2:2880-0:93:2019","b:5:725-0:93:2019","0:113","0:106","0:115","0:111","0:108","0:102","0:109","0:104"]}}},"2:2883:2046":{"id":"2:2883:2046","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2857:143"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:23":{"id":"0:23","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[174,0],"end":[191,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:24:2035"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13216:33779":{"id":"2:13216:33779","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3103:246-0:134:136":{"id":"a:2:3103:246-0:134:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3103:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2607:2340":{"id":"2:2607:2340","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2605-0:134:136":{"id":"b:2:2605-0:134:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31984:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2599:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2607:2340"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2608-0:93:2019":{"id":"b:2:2608-0:93:2019","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31984:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2602:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2610:25937"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13155:2060":{"id":"2:13155:2060","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:43620:2471","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13184:33773":{"id":"2:13184:33773","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12813:2454","str::split":"2:13175:2006","prim@char":"1:12295:458","`DoubleEndedIterator`":"2:8197:129","str::rsplit_terminator":"2:13187:33774"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43416:2482","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12819:2447","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:727:2882":{"id":"5:727:2882","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"2:13147:27274":{"id":"2:13147:27274","crate_id":2,"name":"split_at_checked","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut_checked`]\nmethod.\n\n[`split_at_mut_checked`]: str::split_at_mut_checked\n\n# Examples\n\n```\n#![feature(split_at_checked)]\n\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at_checked(3).unwrap();\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n\nassert_eq!(None, s.split_at_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_checked(16));  // Beyond the string length\n```","links":{"str::split_at_mut_checked":"2:13148:27275"},"attrs":["#[must_use]","#[unstable(feature = \"split_at_checked\", reason = \"new API\", issue =\n\"119128\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:41504:193","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5600:13997":{"id":"5:5600:13997","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7617:242"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7617:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12819:2447","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:106":{"id":"0:106","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,23],"end":[147,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2660:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2605-0:118:2003":{"id":"b:2:2605-0:118:2003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31984:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2599:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2607:2340"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:154:1922":{"id":"0:154:1922","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[360,21],"end":[360,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:139:2044":{"id":"0:139:2044","crate_id":0,"name":"stdout","span":{"filename":"src/lib.rs","begin":[347,8],"end":[347,22]},"visibility":"default","docs":"stdout output from the command","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7617:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:122:2010":{"id":"0:122:2010","crate_id":0,"name":"ComponentMustNotHaveLeadingZeros","span":{"filename":"src/lib.rs","begin":[284,4],"end":[284,36]},"visibility":"default","docs":"A version component must not have leading zeros","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:68:1253":{"id":"0:68:1253","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[71,42],"end":[71,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Channel","id":"0:48:1983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:41504:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30823:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2895-0:134:136":{"id":"b:2:2895-0:134:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2854:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2864:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2898:136","2:2899:1756"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5615:34488":{"id":"5:5615:34488","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:296:2451","`String`":"5:7617:242"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:296:2451","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7617:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:41599:8640-0:118:2003":{"id":"a:2:41599:8640-0:118:2003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41599:8640","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13154:31883":{"id":"2:13154:31883","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:13153:31882"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:43649:2456","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13190:2064":{"id":"2:13190:2064","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12295:458","self::pattern":"2:12813:2454","str::rsplitn":"2:13193:27282"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43470:2480","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12819:2447","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:48:1983":{"id":"0:48:1983","crate_id":0,"name":"Channel","span":{"filename":"src/lib.rs","begin":[72,0],"end":[81,1]},"visibility":"public","docs":"Release channel of the compiler.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:49:1985","0:51:1987","0:53:1989","0:55:1991"],"impls":["a:2:3103:246-0:48:1983","a:2:31983:236-0:48:1983","a:2:3138:2639-0:48:1983","a:2:32040:2501-0:48:1983","a:2:41599:8640-0:48:1983","a:2:41598:8517-0:48:1983","b:2:2605-0:48:1983","b:2:2895-0:48:1983","b:2:2608-0:48:1983","b:2:2890-0:48:1983","b:2:3713-0:48:1983","b:2:2884-0:48:1983","b:2:2880-0:48:1983","b:5:725-0:48:1983","0:65","0:72","0:67","0:69","0:62","0:60","0:57","0:58","0:63"]}}},"2:13208:33776":{"id":"2:13208:33776","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12813:2454","`DoubleEndedIterator`":"2:8197:129","prim@char":"1:12295:458","str::rmatch_indices":"2:13211:33777"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:43516:2473","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12819:2447","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:83":{"id":"0:83","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,27],"end":[90,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:31985:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1996","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3138:2639-0:74:1996":{"id":"a:2:3138:2639-0:74:1996","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3138:2639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1996","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:98:2028":{"id":"0:98:2028","crate_id":0,"name":"channel","span":{"filename":"src/lib.rs","begin":[162,4],"end":[162,24]},"visibility":"public","docs":"Release channel of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Channel","id":"0:48:1983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:13123:975":{"id":"2:13123:975","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12295:458"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:138:2043":{"id":"0:138:2043","crate_id":0,"name":"CommandError","span":{"filename":"src/lib.rs","begin":[345,4],"end":[350,5]},"visibility":"default","docs":"Error output from the command that was run.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"struct":{"fields":["0:139:2044","0:140:2047"],"fields_stripped":false}},"discriminant":null}}},"0:104":{"id":"0:104","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,16],"end":[147,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10245:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:105:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13158:27286":{"id":"2:13158:27286","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12295:458","self::pattern":"2:12813:2454"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12819:2447","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:114:1253":{"id":"0:114:1253","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[147,43],"end":[147,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"VersionMeta","id":"0:93:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:41504:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30823:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32040:2501-0:93:2019":{"id":"a:2:32040:2501-0:93:2019","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32040:2501","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2894:1758":{"id":"2:2894:1758","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41617:225","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2864:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13144:33771":{"id":"2:13144:33771","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12301:1673","crate::ops::IndexMut":"2:3374:8538","str::slice_unchecked":"2:13143:33770"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:725-0:74:1996":{"id":"b:5:725-0:74:1996","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2621:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:721:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1996","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:727:2882","5:728:2076","5:729:2883"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3138:2639-0:118:2003":{"id":"a:2:3138:2639-0:118:2003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3138:2639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2890-0:118:2003":{"id":"b:2:2890-0:118:2003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2864:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2860:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2893:136","2:2894:1758"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13234:33785":{"id":"2:13234:33785","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12295:458","self::pattern":"2:12813:2454"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12819:2447","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12819:2447","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12834:2448","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13245:27062":{"id":"2:13245:27062","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:39:2102":{"id":"0:39:2102","crate_id":0,"name":"source","span":{"filename":"src/lib.rs","begin":[327,4],"end":[336,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41504:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"dyn_trait":{"traits":[{"trait":{"name":"error::Error","id":"2:2943:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:38":{"id":"0:38","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[326,0],"end":[337,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["cause","provide","description","source","type_id"],"trait":{"name":"Error","id":"2:2943:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:39:2102"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13150:6781":{"id":"2:13150:6781","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12295:458"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43336:2464","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13178:27277":{"id":"2:13178:27277","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12295:458","self::pattern":"2:12813:2454"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:12629:2457","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12819:2447","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13187:33774":{"id":"2:13187:33774","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12813:2454","str::split":"2:13175:2006","prim@char":"1:12295:458","str::split_terminator":"2:13184:33773"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43434:2481","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12819:2447","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12819:2447","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12834:2448","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5598":{"id":"5:5598","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5599:34484","5:5600:13997","5:5603:34485","5:5606:34486","5:5614:34487","5:5615:34488","5:5616:3037","5:5617:27061","5:5618:27060"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:79":{"id":"0:79","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,16],"end":[90,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10245:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1996","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:80:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:41:781":{"id":"0:41:781","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[364,4],"end":[381,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10219:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10200:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:49:1985":{"id":"0:49:1985","crate_id":0,"name":"Dev","span":{"filename":"src/lib.rs","begin":[74,4],"end":[74,7]},"visibility":"default","docs":"Development release channel","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:75:1998":{"id":"0:75:1998","crate_id":0,"name":"major","span":{"filename":"src/lib.rs","begin":[94,4],"end":[94,18]},"visibility":"public","docs":"Major version","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u64"}}},"0:158:811":{"id":"0:158:811","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["e",{"resolved_path":{"name":"str::Utf8Error","id":"2:43312:2109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:41598:8517-0:93:2019":{"id":"a:2:41598:8517-0:93:2019","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41598:8517","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13175:2006":{"id":"2:13175:2006","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12813:2454","`DoubleEndedIterator`":"2:8197:129","prim@char":"1:12295:458","str::split_whitespace":"2:13153:31882","str::rsplit":"2:13181:27279"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43366:2478","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12819:2447","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13122":{"id":"2:13122","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:13123:975","2:13124:2824","2:13125:33766","2:13126:33767","2:13128:33768","2:13131:26353","2:13132:33769","2:13133:334","2:13134:27247","2:13135:2080","2:13137:27244","2:13139:27245","2:13141:27246","2:13143:33770","2:13144:33771","2:13145:27270","2:13146:27271","2:13147:27274","2:13148:27275","2:13150:6781","2:13151:6791","2:13152:6658","2:13153:31882","2:13154:31883","2:13155:2060","2:13156:33772","2:13157:31880","2:13158:27286","2:13161:2009","2:13164:27287","2:13167:2862","2:13171:2823","2:13175:2006","2:13178:27277","2:13181:27279","2:13184:33773","2:13187:33774","2:13190:2064","2:13193:27282","2:13196:27284","2:13199:27285","2:13202:2355","2:13205:33775","2:13208:33776","2:13211:33777","2:13214:33778","2:13216:33779","2:13218:33780","2:13220:33781","2:13221:33782","2:13222:33783","2:13225:33784","2:13228:26466","2:13231:27288","2:13234:33785","2:13237:33786","2:13240:33787","2:13243:2014","2:13245:27062","2:13246:28454","2:13247:27063","2:13248:27059","2:13249:27058","2:13250:28457","2:13251:28458","2:13252:28459","2:13253:33788","2:13255:8509","2:13256:33789"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2898:136":{"id":"2:2898:136","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:31911:2402","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:51:1987":{"id":"0:51:1987","crate_id":0,"name":"Nightly","span":{"filename":"src/lib.rs","begin":[76,4],"end":[76,11]},"visibility":"default","docs":"Nightly release channel","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:102":{"id":"0:102","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,9],"end":[147,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2621:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:103:464"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:28:2048":{"id":"0:28:2048","crate_id":0,"name":"version_meta_for","span":{"filename":"src/lib.rs","begin":[209,0],"end":[262,1]},"visibility":"public","docs":"Parses a \"rustc -vV\" output string and returns\nthe SemVer version and additional metadata\nlike the git short hash and build date.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["verbose_version_string",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"0:45:225","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"VersionMeta","id":"0:93:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:60":{"id":"0:60","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,22],"end":[71,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2660:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:151:1922":{"id":"0:151:1922","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[358,25],"end":[358,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7617:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:2890-0:93:2019":{"id":"b:2:2890-0:93:2019","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2864:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2860:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2893:136","2:2894:1758"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:31983:236-0:134:136":{"id":"a:2:31983:236-0:134:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31983:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13253:33788":{"id":"2:13253:33788","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4896:33788"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:43665:2468","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13133:334":{"id":"2:13133:334","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:13134:27247","`u8`":"1:12312:1800"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:149:2075":{"id":"0:149:2075","crate_id":0,"name":"UnknownPreReleaseTag","span":{"filename":"src/lib.rs","begin":[358,4],"end":[358,32]},"visibility":"default","docs":"The pre-release tag is unknown.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:151:1922"]},"discriminant":null}}},"2:13146:27271":{"id":"2:13146:27271","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_mut_checked`](str::split_at_mut_checked).\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:13145:27270","str::split_at_mut_checked":"2:13148:27275"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:109":{"id":"0:109","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,27],"end":[147,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2655:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:110:679"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:159":{"id":"0:159","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2857:143","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Error","id":"20:220:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:160:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:70:851":{"id":"0:70:851","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[71,54],"end":[71,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10469:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:78:464":{"id":"0:78:464","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[90,9],"end":[90,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1996","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:77":{"id":"0:77","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,9],"end":[90,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2621:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1996","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:78:464"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13249:27058":{"id":"2:13249:27058","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:96:2024":{"id":"0:96:2024","crate_id":0,"name":"commit_date","span":{"filename":"src/lib.rs","begin":[156,4],"end":[156,35]},"visibility":"public","docs":"Commit date of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41504:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"5:7617:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"2:13132:33769":{"id":"2:13132:33769","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2895-0:118:2003":{"id":"b:2:2895-0:118:2003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2854:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2864:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2898:136","2:2899:1756"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:132":{"id":"0:132","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[279,9],"end":[279,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10245:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:133:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5614:34487":{"id":"5:5614:34487","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7617:242"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7617:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13193:27282":{"id":"2:13193:27282","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12295:458","str::splitn":"2:13190:2064","self::pattern":"2:12813:2454"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43488:2479","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12819:2447","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12819:2447","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12834:2448","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13167:2862":{"id":"2:13167:2862","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41506:190","prim@char":"1:12295:458","self::pattern":"2:12813:2454"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41504:193","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12819:2447","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2884-0:48:1983":{"id":"b:2:2884-0:48:1983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2857:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2886:811"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2890-0:74:1996":{"id":"b:2:2890-0:74:1996","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2864:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2860:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1996","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2893:136","2:2894:1758"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13211:33777":{"id":"2:13211:33777","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12813:2454","`DoubleEndedIterator`":"2:8197:129","prim@char":"1:12295:458","str::match_indices":"2:13208:33776"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:43534:2474","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12819:2447","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12819:2447","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12834:2448","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:74:1996":{"id":"0:74:1996","crate_id":0,"name":"LlvmVersion","span":{"filename":"src/lib.rs","begin":[91,0],"end":[98,1]},"visibility":"public","docs":"LLVM version\n\nLLVM's version numbering scheme is not semver compatible until version 4.0\n\nrustc [just prints the major and minor versions], so other parts of the version are not included.\n\n[just prints the major and minor versions]: https://github.com/rust-lang/rust/blob/b5c9e2448c9ace53ad5c11585803894651b18b0a/compiler/rustc_codegen_llvm/src/llvm_util.rs#L173-L178","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:75:1998","0:76:2000"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:3103:246-0:74:1996","a:2:31983:236-0:74:1996","a:2:3138:2639-0:74:1996","a:2:32040:2501-0:74:1996","a:2:41599:8640-0:74:1996","a:2:41598:8517-0:74:1996","b:2:2605-0:74:1996","b:2:2895-0:74:1996","b:2:2608-0:74:1996","b:2:2890-0:74:1996","b:2:3713-0:74:1996","b:2:2884-0:74:1996","b:2:2880-0:74:1996","b:5:725-0:74:1996","b:5:5848-0:74:1996","0:81","0:17","0:19","0:77","0:86","0:90","0:88","0:83","0:84","0:79"]}}},"a:2:32040:2501-0:48:1983":{"id":"a:2:32040:2501-0:48:1983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32040:2501","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13246:28454":{"id":"2:13246:28454","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39468:13937","Self::is_ascii":"2:13245:27062"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41504:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39468:13937","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:725-0:93:2019":{"id":"b:5:725-0:93:2019","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2621:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:721:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:727:2882","5:728:2076","5:729:2883"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13205:33775":{"id":"2:13205:33775","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12813:2454","`DoubleEndedIterator`":"2:8197:129","prim@char":"1:12295:458","str::matches":"2:13202:2355"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:43588:2476","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12819:2447","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12819:2447","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12834:2448","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:43:2102":{"id":"0:43:2102","crate_id":0,"name":"source","span":{"filename":"src/lib.rs","begin":[385,4],"end":[395,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41504:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"dyn_trait":{"traits":[{"trait":{"name":"error::Error","id":"2:2943:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13134:27247":{"id":"2:13134:27247","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12312:1800"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:162:811":{"id":"0:162:811","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["e",{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13125:33766":{"id":"2:13125:33766","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5616:3037":{"id":"5:5616:3037","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7617:242"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7617:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:41599:8640-0:134:136":{"id":"a:2:41599:8640-0:134:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41599:8640","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:13240:33787":{"id":"2:13240:33787","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12295:458","self::pattern":"2:12813:2454"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12819:2447","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12819:2447","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12834:2448","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:87:471":{"id":"0:87:471","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[90,38],"end":[90,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1996","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30823:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:31983:236-0:118:2003":{"id":"a:2:31983:236-0:118:2003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31983:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:160:811":{"id":"0:160:811","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["e",{"resolved_path":{"name":"semver::Error","id":"20:220:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2608-0:118:2003":{"id":"b:2:2608-0:118:2003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31984:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2602:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2610:25937"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2880-0:93:2019":{"id":"b:2:2880-0:93:2019","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2857:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2854:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2883:2046"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2605-0:74:1996":{"id":"b:2:2605-0:74:1996","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31984:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2599:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1996","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2607:2340"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13255:8509":{"id":"2:13255:8509","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4897:8509"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:43674:2469","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13252:28459":{"id":"2:13252:28459","crate_id":2,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:979:38778"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:41599:8640-0:93:2019":{"id":"a:2:41599:8640-0:93:2019","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41599:8640","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:728:2076":{"id":"5:728:2076","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:66:471":{"id":"0:66:471","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[71,37],"end":[71,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Channel","id":"0:48:1983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30823:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:133:781":{"id":"0:133:781","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[279,9],"end":[279,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10219:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10200:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:95:2022":{"id":"0:95:2022","crate_id":0,"name":"commit_hash","span":{"filename":"src/lib.rs","begin":[153,4],"end":[153,35]},"visibility":"public","docs":"Git short hash of the build of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41504:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"5:7617:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"2:13171:2823":{"id":"2:13171:2823","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41506:190","prim@char":"1:12295:458","self::pattern":"2:12813:2454"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41504:193","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12819:2447","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12819:2447","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12834:2448","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:15-20:299:1981":{"id":"0:15-20:299:1981","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[66,0],"end":[66,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"semver::Version","name":"Version","id":"20:299:1981","glob":false}}},"0:105:781":{"id":"0:105:781","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[147,16],"end":[147,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10219:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10200:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:112:471":{"id":"0:112:471","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[147,38],"end":[147,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"VersionMeta","id":"0:93:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30823:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:31983:236-0:48:1983":{"id":"a:2:31983:236-0:48:1983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31983:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2890-0:48:1983":{"id":"b:2:2890-0:48:1983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2864:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2860:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2893:136","2:2894:1758"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:25:1878":{"id":"0:25:1878","crate_id":0,"name":"version","span":{"filename":"src/lib.rs","begin":[194,0],"end":[196,1]},"visibility":"public","docs":"Returns the `rustc` SemVer version.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Result","id":"0:45:225","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Version","id":"20:299:1981","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3103:246-0:118:2003":{"id":"a:2:3103:246-0:118:2003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3103:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13220:33781":{"id":"2:13220:33781","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:19":{"id":"0:19","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[106,0],"end":[144,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12773:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1996","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:20:135","0:21:2004"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5606:34486":{"id":"5:5606:34486","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7617:242"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7617:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2895-0:74:1996":{"id":"b:2:2895-0:74:1996","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2854:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2864:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1996","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2898:136","2:2899:1756"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2884-0:118:2003":{"id":"b:2:2884-0:118:2003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2857:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2886:811"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:143:1922":{"id":"0:143:1922","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[352,14],"end":[352,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"str::Utf8Error","id":"2:43312:2109","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:2610:25937":{"id":"2:2610:25937","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:76:2000":{"id":"0:76:2000","crate_id":0,"name":"minor","span":{"filename":"src/lib.rs","begin":[96,4],"end":[96,18]},"visibility":"public","docs":"Minor version","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u64"}}},"0:148:1922":{"id":"0:148:1922","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[356,16],"end":[356,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"semver::Error","id":"20:220:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"a:2:41598:8517-0:74:1996":{"id":"a:2:41598:8517-0:74:1996","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41598:8517","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1996","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:69":{"id":"0:69","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,54],"end":[71,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10461:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:70:851"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:62":{"id":"0:62","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,26],"end":[71,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:31985:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:0:2128":{"id":"0:0:2128","crate_id":0,"name":"rustc_version","span":{"filename":"src/lib.rs","begin":[9,0],"end":[417,58]},"visibility":"public","docs":"Simple library for getting the version information of a `rustc`\ncompiler.\n\nThis can be used by build scripts or other tools dealing with Rust sources\nto make decisions based on the version of the compiler.\n\nIt calls `$RUSTC --version -v` and parses the output, falling\nback to `rustc` if `$RUSTC` is not set.\n\n# Example\n\n```rust\n// This could be a cargo build script\n\nuse rustc_version::{version, version_meta, Channel, Version};\n\n// Assert we haven't travelled back in time\nassert!(version().unwrap().major >= 1);\n\n// Set cfg flags depending on release channel\nmatch version_meta().unwrap().channel {\n    Channel::Stable => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_STABLE\");\n    }\n    Channel::Beta => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_BETA\");\n    }\n    Channel::Nightly => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_NIGHTLY\");\n    }\n    Channel::Dev => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_DEV\");\n    }\n}\n\n// Check for a minimum version\nif version().unwrap() >= Version::parse(\"1.4.0\").unwrap() {\n    println!(\"cargo:rustc-cfg=compiler_has_important_bugfix\");\n}\n```","links":{},"attrs":["#![warn(missing_docs)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:15-20:299:1981","0:48:1983","0:74:1996","0:93:2019","0:25:1878","0:26:2051","0:28:2048","0:118:2003","0:134:136","0:45:225"],"is_stripped":false}}},"2:13139:27245":{"id":"2:13139:27245","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10901:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10901:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:41599:8640-0:48:1983":{"id":"a:2:41599:8640-0:48:1983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41599:8640","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:72":{"id":"0:72","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,60],"end":[71,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10245:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:73:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:35:811":{"id":"0:35:811","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[296,4],"end":[298,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["e",{"resolved_path":{"name":"num::ParseIntError","id":"2:22831:2089","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5848-0:74:1996":{"id":"b:5:5848-0:74:1996","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10250:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:31984:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5846:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1996","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5850:1731"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13228:26466":{"id":"2:13228:26466","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns the substring after the prefix,\nwrapped in `Some`. Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12295:458","self::pattern":"2:12813:2454"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41504:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12819:2447","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3103:246-0:74:1996":{"id":"a:2:3103:246-0:74:1996","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3103:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1996","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:31983:236-0:74:1996":{"id":"a:2:31983:236-0:74:1996","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31983:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1996","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13137:27244":{"id":"2:13137:27244","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41506:190"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41504:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10901:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10901:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2608-0:74:1996":{"id":"b:2:2608-0:74:1996","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31984:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2602:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1996","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2610:25937"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13196:27284":{"id":"2:13196:27284","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41504:193","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12819:2447","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:59:464":{"id":"0:59:464","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[71,15],"end":[71,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Channel","id":"0:48:1983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:58":{"id":"0:58","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,15],"end":[71,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2621:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:59:464"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:18:781":{"id":"0:18:781","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[101,4],"end":[103,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10219:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10200:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:94:1980":{"id":"0:94:1980","crate_id":0,"name":"semver","span":{"filename":"src/lib.rs","begin":[150,4],"end":[150,23]},"visibility":"public","docs":"Version of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Version","id":"20:299:1981","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:13218:33780":{"id":"2:13218:33780","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2608-0:48:1983":{"id":"b:2:2608-0:48:1983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31984:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2602:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2610:25937"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:137:1922":{"id":"0:137:1922","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[343,27],"end":[343,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"io::Error","id":"1:3022:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:13128:33768":{"id":"2:13128:33768","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:13126:33767"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2880-0:48:1983":{"id":"b:2:2880-0:48:1983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2857:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2854:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2883:2046"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:115":{"id":"0:115","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,55],"end":[147,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10461:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:116:851"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:126:2093":{"id":"0:126:2093","crate_id":0,"name":"MinorVersionMustBeZeroAfter4","span":{"filename":"src/lib.rs","begin":[288,4],"end":[288,32]},"visibility":"default","docs":"Minor version component must be zero on LLVM versions later than 4.0","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:128:2015":{"id":"0:128:2015","crate_id":0,"name":"MinorVersionRequiredBefore4","span":{"filename":"src/lib.rs","begin":[290,4],"end":[290,31]},"visibility":"default","docs":"Minor version component is required on LLVM versions earlier than 4.0","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:37:781":{"id":"0:37:781","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[302,4],"end":[323,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10219:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10200:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13145:27270":{"id":"2:13145:27270","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_checked`](str::split_at_checked).\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_checked":"2:13147:27274","str::split_at_mut":"2:13146:27271"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:26:2051":{"id":"0:26:2051","crate_id":0,"name":"version_meta","span":{"filename":"src/lib.rs","begin":[200,0],"end":[204,1]},"visibility":"public","docs":"Returns the `rustc` SemVer version and additional metadata\nlike the git short hash and build date.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Result","id":"0:45:225","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"VersionMeta","id":"0:93:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13181:27279":{"id":"2:13181:27279","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12813:2454","`DoubleEndedIterator`":"2:8197:129","prim@char":"1:12295:458","str::split":"2:13175:2006"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43384:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12819:2447","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12819:2447","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12834:2448","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:729:2883":{"id":"5:729:2883","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:121:1922":{"id":"0:121:1922","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[282,18],"end":[282,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"num::ParseIntError","id":"2:22831:2089","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:89:1253":{"id":"0:89:1253","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[90,43],"end":[90,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1996","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:41504:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30823:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:80:781":{"id":"0:80:781","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[90,16],"end":[90,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10219:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10200:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:101:2033":{"id":"0:101:2033","crate_id":0,"name":"llvm_version","span":{"filename":"src/lib.rs","begin":[171,4],"end":[171,41]},"visibility":"public","docs":"Version of LLVM used by the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41504:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1996","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"b:2:2884-0:93:2019":{"id":"b:2:2884-0:93:2019","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2857:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2886:811"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13131:26353":{"id":"2:13131:26353","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12361:2049"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:725-0:48:1983":{"id":"b:5:725-0:48:1983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2621:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:721:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:727:2882","5:728:2076","5:729:2883"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:24:2035":{"id":"0:24:2035","crate_id":0,"name":"for_command","span":{"filename":"src/lib.rs","begin":[176,4],"end":[190,5]},"visibility":"public","docs":"Returns the version metadata for `cmd`, which should be a `rustc` command.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["cmd",{"resolved_path":{"name":"Command","id":"1:5587:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:45:225","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"VersionMeta","id":"0:93:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:156:781":{"id":"0:156:781","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[340,9],"end":[340,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10219:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10200:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13247:27063":{"id":"2:13247:27063","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:41598:8517-0:134:136":{"id":"a:2:41598:8517-0:134:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41598:8517","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"a:2:3138:2639-0:48:1983":{"id":"a:2:3138:2639-0:48:1983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3138:2639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13141:27246":{"id":"2:13141:27246","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10901:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10901:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:20:135":{"id":"0:20:135","crate_id":0,"name":"Err","span":{"filename":"src/lib.rs","begin":[107,4],"end":[107,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:99:855":{"id":"0:99:855","crate_id":0,"name":"host","span":{"filename":"src/lib.rs","begin":[165,4],"end":[165,20]},"visibility":"public","docs":"Host target triple of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7617:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:13214:33778":{"id":"2:13214:33778","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13161:2009":{"id":"2:13161:2009","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, in which case this function will return true if\nthe `&str` is a prefix of this string slice.\n\nThe [pattern] can also be a [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\nThese will only be checked against the first character of this string slice.\nLook at the second example below regarding behavior for slices of [`char`]s.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```\n\n```\nlet bananas = \"bananas\";\n\n// Note that both of these assert successfully.\nassert!(bananas.starts_with(&['b', 'a', 'n', 'a']));\nassert!(bananas.starts_with(&['a', 'b', 'c', 'd']));\n```","links":{"prim@char":"1:12295:458","self::pattern":"2:12813:2454"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12819:2447","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2605-0:93:2019":{"id":"b:2:2605-0:93:2019","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31984:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2599:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2607:2340"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:144:2085":{"id":"0:144:2085","crate_id":0,"name":"UnexpectedVersionFormat","span":{"filename":"src/lib.rs","begin":[354,4],"end":[354,27]},"visibility":"default","docs":"The output of `rustc -vV` was not in the expected format.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:13152:6658":{"id":"2:13152:6658","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43352:2462","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2886:811":{"id":"2:2886:811","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2884-0:74:1996":{"id":"b:2:2884-0:74:1996","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2857:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1996","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2886:811"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:100:2031":{"id":"0:100:2031","crate_id":0,"name":"short_version_string","span":{"filename":"src/lib.rs","begin":[168,4],"end":[168,36]},"visibility":"public","docs":"Short version string of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7617:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:141:2109":{"id":"0:141:2109","crate_id":0,"name":"Utf8Error","span":{"filename":"src/lib.rs","begin":[352,4],"end":[352,29]},"visibility":"default","docs":"The output of `rustc -vV` was not valid utf-8.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:143:1922"]},"discriminant":null}}},"0:111":{"id":"0:111","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,38],"end":[147,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clamp","max","min"],"trait":{"name":"Ord","id":"2:2691:194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:112:471"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13222:33783":{"id":"2:13222:33783","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12295:458","self::pattern":"2:12813:2454"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12819:2447","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12819:2447","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12839:2446","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13153:31882":{"id":"2:13153:31882","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:13154:31883"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:43640:2458","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:31983:236-0:93:2019":{"id":"a:2:31983:236-0:93:2019","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31983:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2880-0:118:2003":{"id":"b:2:2880-0:118:2003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2857:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2854:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2883:2046"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}}},"paths":{"6:1485:4811":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:4391:13907":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"17:12543:7413":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"2:22922:5839":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU32Inner"],"kind":"struct"},"2:11856:7562":{"crate_id":2,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"1:9210:8670":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"1:3947:7604":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"1:11563:31390":{"crate_id":1,"path":["std","sys","thread_local","fast_local","DtorState"],"kind":"enum"},"17:14449:3712":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"2:40196:6726":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:5777:6822":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"9:330:4695":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"1:7881:29021":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"6:5457:5261":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"16:6263:6536":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"5:3871:7520":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"16:5385:3289":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:33243:14007":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"15:288:20395":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"17:15301:3967":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"6:4876:5018":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"11:2383:2778":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"6:523:4772":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"17:12353:6449":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"6:5002:5081":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"1:11179:26471":{"crate_id":1,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"6:5630:5333":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"1:6116:6822":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"11:1051:7501":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"17:11605:1981":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"16:2438:4245":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"11:700:2780":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"16:7813:6602":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"11:774:6627":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"17:14246:3675":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"1:894:7506":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"2:8118:13986":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:43416:2482":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:40037:106":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"17:14560:3726":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"2:42938:6097":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"17:13538:3523":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:45932:6176":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"5:868:8521":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"2:43273:7581":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"6:485:4747":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"2:5136:423":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"2:40275:6738":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"11:1903:6629":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"6:8351:5796":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"16:6560:4269":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"2:2044:14037":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:9244:7652":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"17:12993:21379":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"2:40243:6733":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:4279:8603":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"1:8226:3027":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"2:41599:8640":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"17:13473:3507":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"16:6927:4384":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"2:42491:73":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"6:5052:5104":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"16:7132:6594":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"6:5400:5225":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"16:2374:4242":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"5:721:249":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"20:395:2494":{"crate_id":20,"path":["semver","BuildMetadata"],"kind":"struct"},"17:15390:3991":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"2:41326:6073":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"16:5897:4328":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"2:39069:13841":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"11:0:2248":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"2:21477:32784":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"17:10439:3299":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"6:5653:5340":{"crate_id":6,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"5:2101:7521":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"17:11661:6430":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"2:44092:6810":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:12314:1788":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"2:22784:31826":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"6:5588:5308":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:40068:2424":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:7831:3286":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"2:22933:5840":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU64Inner"],"kind":"struct"},"1:8162:6830":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"5:7397:6653":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"18:521:25563":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"5:7421:2780":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"1:12318:1860":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"17:13581:3539":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"17:11063:7350":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"2:43293:7582":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"16:7604:4283":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"1:9316:26462":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"6:5290:5180":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"5:219:7512":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"17:11715:6434":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"2:33125:8698":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"18:581:2656":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"1:9670:28967":{"crate_id":1,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"14:40:3461":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"6:5515:5281":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"17:14147:3641":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"17:14516:3719":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"1:4048:8575":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"17:10818:7344":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:10698:29018":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"17:12929:3416":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"2:43534:2474":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"6:553:4790":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"1:12310:882":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"2:44381:6819":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:11801:7604":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"1:8051:2948":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"6:8317:5789":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"0:138:2043":{"crate_id":0,"path":["rustc_version","Error","CommandError"],"kind":"variant"},"1:8299:7640":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"1:5034:8626":{"crate_id":1,"path":["std","os","net","linux_ext","socket","UnixSocketExt"],"kind":"trait"},"17:15289:3961":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"6:8006:5758":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"6:6714:5534":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"2:5195:3042":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"6:6417:5383":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"17:13509:3512":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"17:14325:3685":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"1:3337:3035":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"17:13797:3590":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"2:2932:123":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"1:8577:8605":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"2:40328:6743":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:5556:2392":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"0:28:2048":{"crate_id":0,"path":["rustc_version","version_meta_for"],"kind":"function"},"17:13015:3382":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"6:1707:4945":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"6:1517:4824":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"14:7:7487":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"6:4952:5055":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:39998:6719":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"1:10939:26467":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"3:234:225":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:5048:8627":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"17:14386:3694":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"2:6843:6678":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"2:2826:8564":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"16:7509:7473":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"2:39295:5928":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"6:4971:5063":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"1:9180:8669":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"2:40503:6750":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"6:1503:4819":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:6837:6679":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"16:5075:4321":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"1:10911:138":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"16:6872:6577":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"17:13526:3520":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"6:5064:5113":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"2:46536:6230":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"6:5466:5267":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"1:12317:944":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"1:10982:26470":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"2:10461:152":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:22240:8788":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"2:42538:2804":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"1:7968:6262":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"1:11635:6902":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"6:5146:5119":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"1:9386:7632":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockReadGuard"],"kind":"struct"},"6:5423:5236":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"6:5112:5116":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"1:8828:2778":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"16:4802:4312":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"2:46065:6181":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"17:11128:3279":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"1:4708:8624":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"1:1825:2927":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"6:5181:5123":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:10252:2793":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"16:6098:21304":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"18:608:7318":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"16:7428:21312":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"17:0:2253":{"crate_id":17,"path":["object"],"kind":"module"},"1:1073:7504":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"16:4743:4310":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"2:45496:6131":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:4786:2808":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:2700:3016":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"6:4897:5028":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"17:13594:3540":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"17:12175:7397":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"2:43181:7578":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"17:14503:3718":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"5:4467:2998":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"6:5344:5197":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"2:22818:2969":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"6:4916:5041":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"20:333:2495":{"crate_id":20,"path":["semver","Comparator"],"kind":"struct"},"2:2848:77":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"1:8642:6307":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"2:41598:8517":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"2:45657:6147":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"20:220:136":{"crate_id":20,"path":["semver","parse","Error"],"kind":"struct"},"2:2864:256":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"2:40090:2428":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"17:12572:3322":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"2:15:2001":{"crate_id":2,"path":["core","write"],"kind":"macro"},"17:2234:7334":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"17:11115:7354":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"2:2515:14027":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"16:7306:35196":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"16:4468:4302":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"2:45767:6153":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:6139:6670":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:10264:2937":{"crate_id":1,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"6:6379:5356":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"14:0:2250":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"2:2984:2990":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"6:5200:5135":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"5:7538:2422":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"18:113:25552":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:41266:6064":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"2:37875:14016":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:10848:7672":{"crate_id":1,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"17:10018:21355":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"2:37710:14013":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"6:6768:5549":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"17:11102:7353":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"1:8140:7636":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"6:5174:5121":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"5:824:101":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"2:45330:6117":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:1976:764":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"6:6698:5526":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"5:2112:7522":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"2:10262:2797":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"17:13999:3620":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"16:5769:6475":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:11371:7561":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"2:41940:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:4150:8582":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"1:1591:6629":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"17:12362:6450":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"2:10254:2794":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"2:42706:6769":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"2:39935:6715":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"5:1309:6595":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"2:42723:156":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:8675:8636":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"11:1603:7508":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"2:43112:7577":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:12312:1800":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"1:1064:7501":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"2:42059:97":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:9255:7654":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"17:14529:3720":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"17:10612:7341":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"2:3103:246":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"2:39282:5926":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"17:12597:3393":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"6:6664:5512":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"1:4753:5653":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"function"},"1:8524:7648":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:22646:5819":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:22414:8564":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"6:1510:4821":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"5:5404:34590":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"1:4078:8577":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"16:5817:6477":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"17:12724:21377":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"2:22977:5844":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI16Inner"],"kind":"struct"},"2:43342:2463":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:2446:8555":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"1:2664:3024":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"1:10642:3030":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"5:1189:34687":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"16:3329:4291":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"2:45362:6119":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:850:2779":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"2:2599:102":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"17:11313:6424":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"1:8740:6093":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"1:11621:6853":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"17:15324:3972":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"17:14723:3738":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"11:811:7520":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"17:4821:7338":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"2:41532:2778":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"6:4909:5037":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"6:5415:5231":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"6:5336:5196":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"17:12824:21378":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"6:1535:4835":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"17:13116:3433":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"2:45525:6133":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"2:2058:5809":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"17:14436:3711":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"5:6032:6650":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"1:12307:888":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"1:940:7496":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"17:12043:7394":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"6:1565:4854":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"5:941:2778":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"2:3345:141":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"17:11493:7366":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"1:8429:3039":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"16:2878:4265":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:10264:2798":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"17:11915:21475":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:3234:4409":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"1:6307:29014":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"2:3184:13838":{"crate_id":2,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"1:10890:6849":{"crate_id":1,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"5:1153:34686":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"17:9886:21371":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"1:5536:2391":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"2:11095:2478":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"6:6729:5536":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"17:10661:7342":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"17:15678:4091":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"2:40717:6755":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"17:12342:6445":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"2:22109:8564":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"17:13375:3490":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"16:3842:4296":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"16:6278:7432":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"2:44084:6808":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:10577:29028":{"crate_id":1,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"2:43640:2458":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"16:3669:3188":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"16:5367:21301":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:5157:31779":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:11205:6336":{"crate_id":1,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"2:43941:13873":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:4819:8628":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"2:41623:135":{"crate_id":2,"path":["rustc_version","Result","Err"],"kind":"variant"},"17:12530:7412":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"1:1582:7506":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"16:5781:4271":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"17:13024:21380":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"2:7934:6826":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"6:8247:5773":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"11:1883:2778":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"5:7348:5806":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"11:351:35160":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"17:15463:4008":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"2:43251:7580":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"2:32832:14006":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"0:93:2019":{"crate_id":0,"path":["rustc_version","VersionMeta"],"kind":"struct"},"11:434:35170":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"1:12246:6903":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"18:515:3158":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"17:15197:3941":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"17:13674:3547":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"16:2768:4260":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"1:11607:6349":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"9:53:20306":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"5:3660:2779":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"6:5329:5195":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"5:7407:35048":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"16:6648:6558":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"18:754:6420":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"6:5361:5202":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"2:43649:2456":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"16:6940:4386":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"9:357:20303":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"0:48:1983":{"crate_id":0,"path":["rustc_version","Channel"],"kind":"enum"},"2:39972:2468":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"17:11865:7392":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"16:6079:6465":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"6:5528:5282":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"16:7656:21313":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"6:7348:5633":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"2:30454:5853":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"7:31:20274":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"17:1207:7329":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"6:5225:5146":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:44104:6813":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"6:6409:5381":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"16:4502:4303":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"11:1566:20370":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"16:5846:6482":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"17:16235:4225":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"17:11510:7368":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"16:3778:4294":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"16:4641:4308":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"1:837:2778":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"6:5320:5192":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:22456:8784":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"6:6900:5591":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"6:1593:4873":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"2:46559:6237":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"16:5914:6487":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"2:3335:2502":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:3616:2414":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"6:4924:5044":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:23473:235":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"2:40080:2462":{"crate_id":2,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"16:3014:20444":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"2:44365:179":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"16:4352:4300":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"2:39896:6714":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"11:2423:2780":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"6:8271:5777":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"1:8218:3025":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"5:281:34590":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"17:10068:21358":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"17:16269:3496":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"5:828:7514":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"5:4501:34597":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"2:9399:2447":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"17:12238:7405":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"11:844:8520":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"2:11329:2480":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"17:14025:3623":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"2:41600:14080":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"17:12671:7416":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"1:7900:29030":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"1:9290:7659":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"17:12707:7419":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"2:40042:2423":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"2:43683:2470":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:22302:8564":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"5:7606:7540":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"1:3606:2416":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"2:44277:149":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"16:6749:6562":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"16:7799:4273":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"17:13272:3474":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"2:3138:2639":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"17:13064:3426":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:2660:133":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"17:13785:3588":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"2:3954:2780":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:12262:29090":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"6:5536:5287":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"16:2936:20443":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"17:16121:4198":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"16:5722:4272":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:44404:6820":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"6:6447:5400":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"1:11062:29032":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"17:11841:7390":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"16:3614:4293":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"17:13855:3597":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"2:4372:13835":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"6:4885:5023":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"6:5102:5115":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"16:7085:6587":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"17:11730:6435":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"5:4422:264":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"1:4608:8606":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"18:613:35211":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"5:6947:13892":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"2:41523:172":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"16:5006:4319":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"17:12201:7402":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"17:10997:3308":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"16:7539:4280":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"17:10905:7346":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"17:15222:3946":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"2:39945:6716":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"17:9755:21351":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"6:6471:5409":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:8250:2503":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:21460:32779":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"17:12792:3253":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"18:623:35210":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"6:5296:5183":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"16:6066:6506":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"1:9137:7651":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"16:6895:4380":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"17:10720:35201":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"2:8306:177":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"6:578:4803":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"11:837:7493":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"1:0:1665":{"crate_id":1,"path":["std"],"kind":"module"},"5:5506:1673":{"crate_id":5,"path":["alloc","str"],"kind":"module"},"5:3208:100":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"5:7523:2388":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"5:6753:34590":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"6:5122:5117":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"2:39922:6057":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"17:10759:3322":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"1:8499:2462":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"2:4963:13925":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"17:11341:7362":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"16:7473:4453":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"17:12494:3387":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"16:7823:21314":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"16:7755:4275":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"16:7144:21311":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"6:4932:5046":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"16:7549:6599":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"2:12819:2447":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"16:4718:4309":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"2:45607:6145":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"5:4437:34597":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"6:7366:5642":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"1:6651:6825":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"1:8135:3232":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"2:46309:6217":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"16:2418:4244":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"2:40053:14067":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"16:6433:6538":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"2:8122:13985":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"0:130:2017":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","TooManyComponents"],"kind":"variant"},"2:41823:93":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"2:22725:5824":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"17:14986:3893":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"2:22911:5838":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU16Inner"],"kind":"struct"},"16:2838:4263":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"1:9295:7660":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"17:9807:21359":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"6:559:4793":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"2:39956:2470":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"2:21685:8702":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:7331:26302":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"5:1828:7520":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"2:42463:31816":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"5:7437:6654":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"17:15720:4097":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"6:5407:1219":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"1:1575:2778":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:4349:109":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"1:11574:6850":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"11:1025:7500":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"2:21475:32770":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"2:41784:86":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:9435:6839":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"16:6456:21307":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"1:1447:155":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"2:42446:2803":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"1:12301:1673":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"6:4800:4964":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"6:5014:5087":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"6:564:4795":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"6:1692:4938":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"2:30469:2803":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"1:1863:2937":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"17:14177:3660":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"1:9262:26461":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"5:3237:2778":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"16:7321:6078":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"2:46464:6224":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:8583:7649":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"5:6590:34590":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"17:16223:4222":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"1:1888:2944":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"2:43264:6692":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"16:5686:4267":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"6:4985:5071":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"6:1680:4934":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"17:12647:7414":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"1:8174:138":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"2:21958:8564":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"1:9665:7636":{"crate_id":1,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"17:12454:6455":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"2:44335:6964":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"11:2369:7511":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"20:381:2497":{"crate_id":20,"path":["semver","Prerelease"],"kind":"struct"},"17:12863:3414":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"17:9671:21354":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"1:504:8496":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"2:41484:6075":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"17:11016:7347":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"17:15616:4069":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"2:39275:7571":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"6:4824:4982":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:44280:163":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"2:2655:200":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"17:12127:3371":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"6:4864:5015":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"1:12302:1761":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"6:8306:5785":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"2:46044:6180":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"17:15313:3968":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"16:6849:6576":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"6:8288:5782":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"5:7594:2427":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"11:328:6623":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"1:2283:6843":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"14:31:7487":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"18:80:25550":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"17:12189:7401":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"17:11877:3332":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"17:14260:3677":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"6:8197:5772":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"16:7497:4454":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"2:42745:6770":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"11:2352:7501":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"1:9336:6335":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"2:44088:6809":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:12315:1794":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"17:16187:4215":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"18:573:3155":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:45429:6127":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:8152:6263":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"2:10250:128":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"1:10967:2394":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"6:5244:5156":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"6:7389:5660":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"17:15400:3994":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"17:11189:3315":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"17:16105:4193":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"1:8201:6832":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"2:3293:13840":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"1:2039:197":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"17:15445:4005":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"2:40005:13932":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"5:2195:8496":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"17:12213:7403":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"0:122:2010":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","ComponentMustNotHaveLeadingZeros"],"kind":"variant"},"2:3149:8695":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"17:11142:3322":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"1:11155:2399":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"1:11884:6858":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"6:1671:4928":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"6:5352:5198":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"2:39907:31823":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"2:13478:204":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"6:6460:5401":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"17:14575:3382":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"5:2525:5798":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"2:43352:2462":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"17:16176:4214":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"18:589:3163":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"16:4560:4305":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"5:3283:35047":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"3:0:487":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"5:5846:250":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"1:11187:6102":{"crate_id":1,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"17:16138:4200":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"0:49:1985":{"crate_id":0,"path":["rustc_version","Channel","Dev"],"kind":"variant"},"1:9249:115":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"2:12591:6780":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"2:13645:6695":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"19:0:1249":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"1:5641:2394":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"17:13844:3596":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"2:22328:32257":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"5:1516:6627":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"2:43952:6798":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"17:1098:7328":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"16:7570:4281":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"2:45298:6113":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"17:15206:3942":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"17:14402:3698":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"5:1325:7501":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:1827:2928":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"17:11293:21406":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"1:12305:718":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:4532:2805":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"16:6231:6533":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"11:299:6620":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"17:9737:21353":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"17:16151:4206":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"17:15944:3460":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"1:12298:1270":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"6:1580:4866":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"6:5020:5090":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"2:31953:4451":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"17:2175:21433":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"17:15701:4092":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"2:46264:6216":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:2943:136":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"1:8778:8650":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"2:43975:2483":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"2:12813:2454":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"5:7084:34600":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"2:44096:6811":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"16:5347:4324":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"17:12621:3394":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"2:21421:2656":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"17:13292:3475":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"1:12311:863":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"17:12969:3418":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"14:160:7487":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"17:15582:4057":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"1:3500:2998":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"2:39225:215":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"2:39167:211":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"17:14189:3663":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"17:10350:3296":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"16:2572:4251":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"6:5677:5352":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"2:6648:6671":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:1930:1976":{"crate_id":1,"path":["std","error"],"kind":"module"},"5:1525:6628":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2:10615:14098":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"1:12316:1776":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"11:2304:6595":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"5:1354:7504":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"1:534:8500":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"17:11688:6432":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"2:42714:2789":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"6:517:4769":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"17:15376:3989":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"2:21458:32785":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"1:9095:2399":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"1:910:7505":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:46006:6178":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"2:7650:32095":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"2:40205:6727":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"16:2458:4246":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"2:38454:14017":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"2:5237:955":{"crate_id":2,"path":["core","iter"],"kind":"module"},"17:13959:3614":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"1:8482:3014":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"2:21963:8707":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"2:45805:6155":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"16:6385:4338":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:22842:2983":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"16:7769:4463":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"2:45347:6118":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"6:6657:5511":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"17:12300:21499":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"1:357:7584":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"16:7618:4456":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"1:7437:30436":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"2:2602:103":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"17:12584:7344":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"2:22863:8564":{"crate_id":2,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"1:9121:2401":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:6025:6668":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"5:2756:5803":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"16:8136:6610":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"1:4154:8583":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:3179:13837":{"crate_id":2,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"17:14212:3672":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"16:2612:4253":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:2860:257":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"5:7429:209":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"2:30416:5850":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"0:126:2093":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","MinorVersionMustBeZeroAfter4"],"kind":"variant"},"16:860:7422":{"crate_id":16,"path":["gimli","read","endian_slice","DebugBytes"],"kind":"struct"},"2:43212:6098":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"6:6519:5434":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"2:5852:2998":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"2:2133:188":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:4263:8601":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"10:36:4655":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"18:765:25562":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"6:8253:5774":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"17:11419:3322":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:3176:13836":{"crate_id":2,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"16:7006:7462":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:43784:6789":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"2:41557:6078":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"1:4241:30446":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"1:7944:8564":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"17:13363:3487":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"17:15092:3916":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"6:5160:5120":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:7586:13988":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"11:687:2779":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"6:6788:5557":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"2:42210:2795":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"17:15799:4117":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"2:40108:2442":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"17:11547:3231":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"1:3549:2405":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:41298:8573":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"5:1426:99":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"1:6794:7630":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLockGuard"],"kind":"struct"},"2:13047:119":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:9364:7619":{"crate_id":1,"path":["std","sync","mutex","MappedMutexGuard"],"kind":"struct"},"5:1169:34563":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"1:9078:2398":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"16:2528:4249":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"1:1597:6630":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"2:25:676":{"crate_id":2,"path":["core","env"],"kind":"macro"},"17:15635:4075":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"17:15418:3998":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"16:7528:6596":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"2:4675:6662":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"17:513:7327":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"17:12659:7415":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"2:21489:32777":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"2:32460:4407":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"2:31960:7570":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"6:1628:4902":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"18:726:3179":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"17:13922:3610":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"16:0:2252":{"crate_id":16,"path":["gimli"],"kind":"module"},"2:22811:6705":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"5:7377:7506":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"2:44158:6816":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"16:6026:6503":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"2:22593:6699":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"2:11250:2477":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"11:2542:4650":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"6:5046:5102":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"2:43325:2467":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"17:15931:3446":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"5:6392:8795":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"6:4942:5052":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"2:42203:2793":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"2:10509:2788":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"2:45592:6144":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:3427:3020":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"1:638:7589":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"11:1142:7503":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"1:923:7493":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"1:10948:26455":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"16:5927:6488":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"1:9658:137":{"crate_id":1,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"16:2808:4262":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"12:0:2249":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"2:12834:2448":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"17:13308:3479":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"1:3845:7603":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"1:4822:8606":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"2:22:796":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"16:4976:4318":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"16:2902:20442":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"2:22428:8783":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"2:22661:6700":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"17:2203:7331":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"2:12552:6778":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"2:45674:6148":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:7259:29034":{"crate_id":1,"path":["std","sys","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"16:6160:20414":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"5:3244:6630":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"17:14847:3841":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"2:42500:2803":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"2:46495:6227":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:1940:2985":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"2:10901:238":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"0:134:136":{"crate_id":0,"path":["rustc_version","Error"],"kind":"enum"},"1:8597:6306":{"crate_id":1,"path":["std","os","unix","net","ucred","UCred"],"kind":"struct"},"11:396:35158":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"1:9108:2400":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"2:44356:7583":{"crate_id":2,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"6:532:4778":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"1:3242:27048":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"5:3647:2778":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"17:16050:3474":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"0:45:225":{"crate_id":0,"path":["rustc_version","Result"],"kind":"type_alias"},"1:11056:29027":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"1:7945:6261":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"6:7546:5729":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"1:4743:8580":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"17:14131:3636":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"6:7306:5609":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"14:202:13874":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"2:3558:13904":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"17:13424:3497":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"17:14788:3789":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"2:43993:2484":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"11:832:7505":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"2:39145:209":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"16:7580:6601":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"2:11215:7558":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"5:1534:7505":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"6:6435:5396":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"17:15836:4124":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"5:924:8522":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"16:7695:4460":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"1:8529:8572":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"17:10534:35203":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"2:736:189":{"crate_id":2,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"17:10419:3298":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"9:0:2246":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"16:7559:6600":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"6:5219:5143":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"16:6317:7450":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"2:46651:6256":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"17:256:7324":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"1:8591:7646":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"1:7963:7634":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"17:15748:4106":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"2:30448:5851":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"6:4870:5016":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"1:9084:198":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"17:15126:3919":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"2:43815:6793":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"7:78:20281":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"1:9283:7658":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"2:33439:14010":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"17:12443:3385":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"17:16079:4187":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"1:7077:8699":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"2:43748:13872":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"6:5671:5349":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"1:10872:6842":{"crate_id":1,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"2:42953:6772":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"16:5307:4323":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"17:12399:6452":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"18:635:3175":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"17:13235:3461":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"16:6574:4286":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"17:11574:6633":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"17:14066:3630":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"6:6821:5565":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"17:14968:3888":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"11:673:2778":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"6:5445:5252":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"17:12388:6451":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"6:8265:5776":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"2:3552:13905":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"6:5390:5218":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"6:4965:5060":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"17:11051:7349":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"2:42735:6093":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"17:13972:3339":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"6:5598:5313":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"18:507:3155":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"17:10457:137":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"10:0:2247":{"crate_id":10,"path":["adler"],"kind":"module"},"2:37820:14015":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"17:12422:6453":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"5:5448:2452":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:32041:2643":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"17:15249:3950":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"2:43336:2464":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"2:8615:148":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"2:2691:194":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"2:40358:6746":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"17:13986:3619":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"17:11354:7363":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"16:6335:7458":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:43674:2469":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"17:15760:4108":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"0:51:1987":{"crate_id":0,"path":["rustc_version","Channel","Nightly"],"kind":"variant"},"5:7715:6967":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"2:2067:5812":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:952:7499":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"2:11046:2778":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"2:40751:6059":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"5:5062:2998":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"1:622:2987":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"17:14356:3691":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"17:13173:3445":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"2:45706:6150":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:31949:7569":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"2:43434:2481":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"2:7585:13987":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"2:40215:6729":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"5:4148:2779":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"6:6811:5563":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"1:11222:6341":{"crate_id":1,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"2:3098:117":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"16:2748:4259":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"2:46589:6239":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"2:33184:14008":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"0:74:1996":{"crate_id":0,"path":["rustc_version","LlvmVersion"],"kind":"struct"},"17:11755:6439":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"16:5742:6470":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"1:9372:2998":{"crate_id":1,"path":["std","sync","poison","Guard"],"kind":"struct"},"6:7359:5638":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:21987:5818":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"6:5212:5142":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"17:15176:3936":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"1:646:8511":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"2:33612:14011":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"2:31985:243":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:9231:6331":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"6:1723:4949":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"6:4837:4992":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"1:6611:6755":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"16:2394:4243":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"1:10351:2407":{"crate_id":1,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"2:42753:6771":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"11:2554:35168":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"2:45554:6142":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"2:40165:7572":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"6:7452:5669":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"1:10639:3034":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"17:13766:3583":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"2:39205:213":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"2:42698:2790":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:12319:1372":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"2:43384:2477":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"16:6758:4368":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"17:15116:3918":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"15:327:20400":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"6:570:4798":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"17:15151:3928":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"17:13089:3427":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"1:11876:6858":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"2:40732:3040":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"6:545:4785":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"6:6775:5550":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"6:5502:5280":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"17:12107:3322":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"2:44392:6108":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"1:2678:29018":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:46612:6240":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:11270:6342":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"17:11166:3313":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"1:9376:233":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"2:0:545":{"crate_id":2,"path":["core"],"kind":"module"},"17:11026:21388":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"16:150:6460":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"2:41588:7573":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"5:4238:2998":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"5:7512:2387":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"2:12828:2449":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"17:14271:3678":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"2:40296:6740":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"17:10399:2462":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"1:3780:8574":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"11:883:7499":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"1:5712:2397":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"2:41901:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"17:12408:3381":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"17:9858:21370":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"2:22966:5843":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI8Inner"],"kind":"struct"},"0:128:2015":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","MinorVersionRequiredBefore4"],"kind":"variant"},"16:6634:4274":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"2:12575:6779":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"17:14341:3687":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"2:41444:6833":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"1:12308:870":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"6:465:4736":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"1:5381:202":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"6:1686:4937":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:11343:2479":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"16:4940:4317":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"16:2548:4250":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"2:46417:6221":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"6:7984:5757":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"5:1575:7519":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"17:14545:3722":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"1:5522:2390":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"17:12768:21356":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"2:46484:6226":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"17:15273:3959":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"2:8624:13984":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"2:40138:2403":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"1:3588:2417":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"11:490:153":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"5:3032:34564":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"14:220:4601":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"17:11075:3311":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"5:4103:34590":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"17:12695:7418":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"16:6120:21305":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"1:724:153":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"6:6763:5548":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"17:16069:4186":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"11:787:6628":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"1:3378:3030":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"16:6480:4268":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"2:43769:6783":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"16:7590:4282":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"17:3597:7337":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"2:46219:6215":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"2:22733:5825":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"20:0:1980":{"crate_id":20,"path":["semver"],"kind":"module"},"2:3324:2784":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:43658:2455":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"16:5700:4270":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"1:4425:7606":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"1:3999:1978":{"crate_id":1,"path":["std","num"],"kind":"module"},"17:15624:4070":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"17:15456:4006":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"17:12433:3382":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"6:479:4744":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"5:7357:2780":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"6:5306:5187":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"0:118:2003":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError"],"kind":"enum"},"2:41282:6066":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"6:5283:5178":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"5:2087:3027":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"17:3264:7335":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"5:5712:13890":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"16:3925:4298":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"6:4959:5058":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"16:2303:20415":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"17:10828:35199":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"2:45315:6116":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"17:12464:21500":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"2:3374:8538":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"0:53:1989":{"crate_id":0,"path":["rustc_version","Channel","Beta"],"kind":"variant"},"1:8845:6838":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:9903:32062":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"17:9938:21373":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"17:13774:3585":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"1:8492:3015":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"17:15342:3976":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"6:5624:5330":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"17:11743:6436":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"17:15646:4076":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"2:7702:13980":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"2:8618:2781":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"2:3546:145":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"2:22988:5845":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI32Inner"],"kind":"struct"},"2:2697:201":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:11580:2409":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"17:15473:4013":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"17:15039:3903":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"17:11537:7370":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"2:3586:13839":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:3108:2637":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"1:3597:31435":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"11:102:6618":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"6:7412:5661":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"6:5277:5175":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"6:5236:5152":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"5:3249:35046":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"16:2998:4288":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"17:10218:3292":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"5:1544:7491":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2:41244:169":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"6:6597:5485":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"5:6053:14328":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"16:6962:4277":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"5:4073:7506":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"17:14933:3887":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"2:45383:6124":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"2:22540:6698":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"17:12478:3386":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"0:146:2112":{"crate_id":0,"path":["rustc_version","Error","SemVerError"],"kind":"variant"},"5:6000:71":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"2:44284:218":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"2:39886:6713":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"16:4531:4304":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:22196:8787":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"5:3278:6629":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"2:22111:8703":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"5:5452:2453":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"1:6615:7622":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"2:46510:6228":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"17:15383:3990":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"17:12225:7404":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"16:2636:4254":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"16:5107:4322":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"17:14311:3682":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"17:13832:3594":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"1:3380:3031":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"17:15822:4121":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"2:45738:6152":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:7841:7682":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"17:10877:7345":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"1:3245:30991":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"6:5581:5306":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"17:9984:21374":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"2:21560:8564":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"17:11634:6428":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"2:10048:2815":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"6:7561:5736":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"1:919:7492":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"1:3470:3040":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"17:403:7326":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"11:1676:35165":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"17:12318:3379":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"16:5415:4325":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"2:41673:2780":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"16:6802:6563":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"9:424:20290":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"1:11168:2400":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"17:14038:3625":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"2:40710:6754":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"6:7602:5751":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"1:10534:2398":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"2:46455:6223":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"5:2307:6646":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"17:16259:3491":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"17:13553:3529":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"16:8175:7483":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"2:43238:6691":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:12299:333":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"1:1579:2780":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"17:15190:3939":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"17:10137:21352":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"6:6721:5535":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"2:40344:3173":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"5:7582:2426":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"5:6937:13891":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"2:40187:6724":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:22900:5837":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU8Inner"],"kind":"struct"},"2:43927:6797":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"16:5831:6480":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"6:4787:4955":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"1:5770:219":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:3623:13842":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"17:14912:3882":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"5:7617:242":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"17:13325:3481":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"17:15734:4099":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"2:12629:2457":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"16:3899:4297":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"1:1810:676":{"crate_id":1,"path":["std","env"],"kind":"module"},"2:40266:6737":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"2:21568:8704":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:8030:8515":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"17:12851:6457":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"18:598:35213":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"17:10671:35207":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"2:2501:653":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"20:90:7719":{"crate_id":20,"path":["semver","error","QuotedChar"],"kind":"struct"},"17:14855:3844":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"1:10425:113":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"17:11367:3311":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"16:7061:4394":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"6:8282:5781":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"1:4861:8593":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"17:11621:6426":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"6:6670:5515":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:7874:3039":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"6:6636:5499":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"6:0:980":{"crate_id":6,"path":["libc"],"kind":"module"},"11:1923:6632":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"2:10713:31759":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"16:6412:21306":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCacheStrategy"],"kind":"enum"},"1:5572:2393":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"5:3036:34565":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"17:11242:7358":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"2:43163:6688":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"17:10092:21376":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"17:15168:3933":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"1:1886:2943":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:40759:6758":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"17:10769:35206":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"2:21509:8705":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"11:2548:4651":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"17:12056:3366":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"17:14111:3635":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"2:3531:14018":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"0:25:1878":{"crate_id":0,"path":["rustc_version","version"],"kind":"function"},"17:14051:3627":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"1:11467:29015":{"crate_id":1,"path":["std","sys","sync","once","futex","CompletionGuard"],"kind":"struct"},"17:10710:7343":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"16:8216:6615":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"1:12267:8516":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"2:9908:32422":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"5:3026:34562":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"17:15569:4051":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"17:11799:7383":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"1:929:8520":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"2:21431:32774":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"16:6782:21309":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"1:11857:6350":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"17:11324:7359":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"2:42098:7556":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:6339:7617":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"1:8763:6321":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"1:4092:8578":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"1:6442:219":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"16:6466:4342":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"5:3791:3027":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"18:481:6403":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"16:3029:3183":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"17:15426:4000":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"1:9168:6328":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"1:9151:6327":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"16:3196:4233":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"1:2197:128":{"crate_id":1,"path":["std","ffi","os_str","Display"],"kind":"struct"},"2:43588:2476":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"17:14876:3852":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"6:5617:5327":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"2:42020:90":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:10258:2796":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"2:30480:31830":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"17:11853:7391":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"18:706:2449":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:44302:206":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"2:8159:164":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"16:2592:4252":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"1:5709:2395":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"6:5370:5208":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"6:8300:5784":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"2:13757:8523":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"17:11788:7382":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"1:12320:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"2:39185:214":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"6:7429:5662":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"16:7857:4472":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"16:4882:4315":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"6:6689:5520":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"2:41706:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"2:44169:14131":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"5:1062:34590":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"2:44294:226":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"2:23010:5847":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI128Inner"],"kind":"struct"},"2:2854:162":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:21507:8564":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"6:5557:5299":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"1:9145:2780":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"18:680:6408":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"5:4923:216":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"2:22677:5820":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"5:7365:6652":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"2:22711:31894":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:6723:7623":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"1:11717:26837":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"8:0:2245":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"17:13211:3460":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"17:13899:3605":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"17:13187:3446":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"5:3025:2882":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"20:299:1981":{"crate_id":20,"path":["semver","Version"],"kind":"struct"},"17:11825:7388":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"16:2854:4264":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"18:698:6412":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"16:5960:6494":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"17:12557:3311":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"2:40174:3014":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"17:11042:7348":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"17:11467:3329":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"2:40493:3015":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"11:2151:7501":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"2:22369:8793":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"16:6543:6547":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"0:119:2089":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","ParseIntError"],"kind":"variant"},"1:4292:8604":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"16:6300:7447":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"1:4106:8580":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"1:641:7591":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"1:11780:7603":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"1:8016:8514":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"6:6621:5497":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"6:6562:5463":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"10:44:4656":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"0:55:1991":{"crate_id":0,"path":["rustc_version","Channel","Stable"],"kind":"variant"},"18:491:6404":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"17:14599:3736":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"5:669:7513":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"2:733:2970":{"crate_id":2,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"17:15010:3895":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"17:261:7325":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"2:30823:195":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"1:10959:2948":{"crate_id":1,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"16:4913:4316":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"17:9916:21372":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"1:8692:6318":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"2:10245:119":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"1:8196:6831":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"1:10877:6829":{"crate_id":1,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"16:3810:4295":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"17:10284:3294":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"17:11557:7371":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"16:7910:21315":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"1:9359:186":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"1:8145:6829":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"17:11269:21405":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"16:6813:6564":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"2:43863:6795":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"0:135:2040":{"crate_id":0,"path":["rustc_version","Error","CouldNotExecuteCommand"],"kind":"variant"},"17:13455:3506":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"1:1055:7500":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"1:6394:6822":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"1:415:184":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:40257:6736":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"2:4458:7547":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"17:10573:35205":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"17:15368:3986":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"5:3304:6632":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"17:11674:6431":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"17:11443:3327":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"17:15992:4172":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"2:22999:5846":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI64Inner"],"kind":"struct"},"5:2234:6641":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"2:45450:6128":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"5:1463:2778":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:41548:2780":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"17:16165:4209":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"1:4042:8576":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"17:10317:3295":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"6:6880:5577":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"18:689:6411":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"16:5863:21303":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"6:5382:5213":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"6:5031:5095":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"2:41745:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"6:4891:5025":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:37765:14014":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"9:178:20355":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"6:1490:4813":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"18:643:3155":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"2:4248:2998":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"17:3473:7336":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"1:3842:7602":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"2:40319:6742":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"2:8155:144":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"17:16093:4191":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"11:1066:20369":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"6:7339:5632":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"17:13485:3510":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"17:10155:3289":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"17:13946:3611":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"1:904:7520":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"1:12300:1639":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:10256:2795":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:5970:7616":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"1:5192:7609":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"16:8313:136":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"5:7640:7541":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"2:43312:2109":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"16:6246:205":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"17:12485:21501":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"2:10504:2787":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:5104:8632":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"2:45915:6175":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"6:5376:5210":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:11357:7560":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"17:11647:6429":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"6:5134:5118":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"16:8188:7486":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"1:10285:7663":{"crate_id":1,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"11:2231:6633":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"2:45721:6151":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"17:14977:3892":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"5:5212:6650":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"11:1582:7507":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"2:33302:14009":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"16:2728:4258":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"5:4268:2998":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"16:6427:7461":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"1:8818:6835":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"2:22769:31827":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:11541:7678":{"crate_id":1,"path":["std","sys","thread_local","fast_local","Key"],"kind":"struct"},"6:5546:5293":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"6:6738:5539":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"2:46367:6219":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"18:0:2254":{"crate_id":18,"path":["memchr"],"kind":"module"},"17:12150:3372":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"2:39245:2381":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"6:1559:4852":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:11889:7563":{"crate_id":2,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"2:45283:6112":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"11:2403:2779":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"17:10982:21387":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"17:13046:3423":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"16:7888:6603":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"16:7111:6593":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"16:8118:6607":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"1:6726:8665":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"2:12361:2049":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"2:45268:6109":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"17:12328:6441":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"6:4992:5074":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"2:44100:6812":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:4271:8602":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"1:10867:6840":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"2:46574:6238":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"2:2827:13936":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"16:6504:6544":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"16:6047:7425":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"2:32646:4404":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"2:3339:139":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"1:8834:6326":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"6:6678:5517":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"1:12081:28621":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"1:1041:6595":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"1:868:6627":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"1:5269:203":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"2:46438:6222":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:8294:7639":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"13:0:2243":{"crate_id":13,"path":["std_detect"],"kind":"module"},"1:11652:6856":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"17:14284:3680":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"1:8450:2404":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"16:7379:35195":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"2:4685:2806":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"17:10954:21386":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"6:538:4781":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"17:15596:4063":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"2:2254:5816":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"16:4587:4306":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"11:1896:7520":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"5:1494:2780":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"2:22955:5842":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroUsizeInner"],"kind":"struct"},"17:15957:4142":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"6:5489:5275":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"6:7330:5626":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"16:6588:6548":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"2:42196:2794":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:8565:6833":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"1:12296:1821":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"5:7038:263":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:41620:192":{"crate_id":2,"path":["rustc_version","Result","Ok"],"kind":"variant"},"2:42517:136":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"2:12515:6775":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"17:12887:6458":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"6:5266:5167":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:44343:6105":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"16:6532:6546":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"5:1724:34590":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"1:2432:8551":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"5:7554:2425":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"2:3468:210":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"17:15521:4050":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"5:1566:209":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"17:14372:3692":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"18:548:152":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"17:10170:3290":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"11:2326:7500":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"16:7711:209":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"1:3020:225":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"2:22316:8792":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"11:2536:4649":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"17:12508:3391":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"17:13387:3491":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"16:5995:6497":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"2:43630:2472":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:9195:8668":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"6:1585:4868":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"11:2443:7506":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"2:22461:8782":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"20:129:2499":{"crate_id":20,"path":["semver","identifier","Identifier"],"kind":"struct"},"11:1910:6630":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"2:3154:8697":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:8304:3028":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"17:12949:3379":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"1:946:7498":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"5:7457:2780":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"1:5025:8625":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"11:1107:7502":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"2:39468:13937":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"2:41410:31897":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"0:0:2128":{"crate_id":0,"path":["rustc_version"],"kind":"module"},"1:9381:234":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"9:392:20289":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"2:30197:2967":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"1:5223:7609":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"16:867:7324":{"crate_id":16,"path":["gimli","read","endian_slice","DebugByte"],"kind":"struct"},"11:1917:6631":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"17:11898:3334":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"6:1496:4816":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"16:6442:6539":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"17:2037:7330":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"17:14091:3632":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"17:10524:7340":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"17:15102:3917":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"17:14012:3622":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"5:1340:7500":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"2:13702:151":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"2:40726:6756":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"16:8226:21316":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"17:12683:7417":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"17:14475:3714":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"17:11595:3330":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"17:597:3286":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"6:6609:5490":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:44134:130":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"16:2660:4255":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"9:502:4718":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"1:1969:2986":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"5:3740:34590":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"5:3028:5802":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"11:430:35169":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"1:12309:876":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"5:3396:7520":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"17:14298:3681":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"17:11392:7364":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"1:2280:7598":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"17:11227:7357":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"16:542:6463":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"2:22749:31809":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"17:15138:3922":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"16:2684:4256":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"17:13497:3511":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"6:7467:5675":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"2:45820:6156":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"0:141:2109":{"crate_id":0,"path":["rustc_version","Error","Utf8Error"],"kind":"variant"},"17:10622:35200":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"6:8328:5790":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"6:5039:5100":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"2:31984:2500":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"17:16032:3464":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"17:13738:3576":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"11:2469:7520":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"16:5037:4320":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"17:12251:7406":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"16:7098:6590":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:1859:2998":{"crate_id":2,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"2:43798:6792":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"6:6478:5413":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:8616:7650":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"14:214:6616":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"2:8662:32066":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"1:3248:30993":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"1:8462:3013":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"11:875:7498":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"5:6544:7506":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"17:16249:4226":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"17:13606:3543":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"2:40368:6747":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2:42217:2796":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"17:13412:3496":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"1:1608:6632":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"17:13252:3464":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"11:710:7491":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"18:659:7319":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"17:15410:3997":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"1:9399:161":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"11:1728:155":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2:2851:76":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"17:13146:3437":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"1:8190:127":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"2:10681:31744":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"2:11288:7559":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"17:10915:35204":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"20:319:2498":{"crate_id":20,"path":["semver","VersionReq"],"kind":"struct"},"11:2140:7500":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"0:124:2013":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","ComponentMustNotHaveSign"],"kind":"variant"},"6:6524:5435":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"17:11764:6440":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"2:4759:2645":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"2:13503:7566":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"6:8029:5771":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"17:13814:3593":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"2:40287:6739":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:8210:7638":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"6:7516:5712":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"11:2569:2387":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"1:7682:29097":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"6:6505:5433":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"17:14868:3851":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"2:21676:8564":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"2:40118:2441":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"5:7630:6659":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"2:4611:7549":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"6:6650:5510":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"1:6132:219":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"2:1975:1313":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"6:586:4807":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"0:152:2115":{"crate_id":0,"path":["rustc_version","Error","LlvmVersionError"],"kind":"variant"},"17:12076:7396":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"2:9721:91":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:12839:2446":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:46475:6225":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:4140:8581":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"1:3287:3033":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"17:15356:3983":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"2:39991:6718":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"2:22278:8789":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"2:44108:6814":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"16:8093:4511":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"6:1699:4941":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:45482:6130":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"17:15655:4078":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"1:2596:3023":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"2:40517:6751":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"2:22700:2968":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:4499:7607":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"2:4325:7545":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:915:7491":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"17:11812:7386":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"1:10920:127":{"crate_id":1,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"16:8073:4510":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"2:13627:115":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"17:13877:3604":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"2:23021:5848":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroIsizeInner"],"kind":"struct"},"2:43488:2479":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"2:7480:2835":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"2:43470:2480":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"17:10887:35202":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"2:31974:6710":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"2:41979:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"17:11214:7356":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"1:5449:128":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"18:651:3155":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"17:10185:3291":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"6:5665:5347":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"1:10684:3337":{"crate_id":1,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"1:8620:5642":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"6:6915:5602":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:40145:6691":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"16:2788:4261":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"2:40703:6753":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"2:22330:14027":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"function"},"16:4424:4301":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"6:6532:5440":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"16:4856:4314":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"2:3145:2641":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"1:7988:3337":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"9:447:20288":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"16:7168:6332":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"2:33066:8696":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"5:0:307":{"crate_id":5,"path":["alloc"],"kind":"module"},"2:41617:225":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"6:5260:5164":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"5:7109:34620":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"16:7397:35197":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"6:1653:4921":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"6:5636:5336":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"1:6849:232":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"16:2478:4247":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"2:21562:8701":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"16:7052:7463":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"2:44080:6807":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"1:10283:7664":{"crate_id":1,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"17:13344:3486":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"1:4917:7608":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"2:1945:5808":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"6:497:4752":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"6:473:4741":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"2:40024:6058":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"16:8259:4451":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"6:6542:5447":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:39113:8537":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"18:670:7323":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"5:6411:8796":{"crate_id":5,"path":["alloc","task","LocalWake"],"kind":"trait"},"6:1639:4910":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"6:5250:5158":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"6:6441:5399":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"17:14235:3673":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"15:0:2251":{"crate_id":15,"path":["addr2line"],"kind":"module"},"11:2562:4653":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"1:3022:136":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"6:5643:5339":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:40741:6757":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"6:5191:5130":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"0:149:2075":{"crate_id":0,"path":["rustc_version","Error","UnknownPreReleaseTag"],"kind":"variant"},"1:5784:6823":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"2:10200:225":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"6:7485:5686":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"16:872:7325":{"crate_id":16,"path":["gimli","read","endian_slice","DebugLen"],"kind":"struct"},"2:3342:140":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"2:4606:7548":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"9:482:20287":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"1:6505:185":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"14:187:20383":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:46142:6214":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"5:40:8539":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"1:12313:1782":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"2:41682:195":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"6:7314:5614":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"17:9781:21369":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"17:12278:7408":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"11:1891:7506":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"6:7446:5667":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"17:12089:3369":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"1:11377:4715":{"crate_id":1,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"5:6914:13890":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"1:2448:8556":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"6:6756:5547":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"11:123:6619":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"2:4489:6661":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:1603:6631":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"1:11240:161":{"crate_id":1,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"6:1547:4844":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"16:5756:7423":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"1:3531:2415":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"1:8512:2471":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"6:8259:5775":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"17:13753:3581":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"1:12295:458":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"1:589:8508":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"5:2287:35085":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"2:4337:7546":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"16:4830:4313":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"17:11089:7352":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"16:7355:4433":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"2:3820:7506":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"2:13451:32508":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"17:4986:7339":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"17:13399:3494":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"1:4755:5655":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"function"},"16:7686:7482":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"16:6494:6543":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"6:8341:5794":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"2:10469:156":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"17:16198:4216":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"2:21580:5817":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"6:5472:5270":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"6:8294:5783":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:9497:2943":{"crate_id":1,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"2:39033:2783":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"18:735:25561":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"16:7648:7481":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"1:5587:113":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"17:13568:3535":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"11:1087:35157":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"1:8505:2478":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"1:11646:6855":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"1:5925:7615":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"1:2430:5811":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"2:5948:2998":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"2:6848:6676":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"1:8572:6834":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"2:41466:6074":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"1:4859:8591":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"6:5483:5273":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"1:10157:6763":{"crate_id":1,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"2:12329:14087":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"18:563:3162":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"1:12278:26460":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"17:15214:3944":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"9:238:6093":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"2:45865:6173":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:4630:8607":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"17:11702:6433":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"1:8438:3041":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"1:482:29023":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"1:4344:7605":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"16:4614:4307":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"17:11567:7372":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"17:12711:136":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:40225:6730":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"18:538:3160":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:45977:6177":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"2:41609:2782":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"2:3096:2636":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"2:43366:2478":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"17:14079:3631":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"17:13723:3572":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"16:2338:4234":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"17:11524:7369":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"6:6746:5540":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"1:2739:3026":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"16:6620:4345":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"2:46521:6229":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"17:437:3239":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"1:4162:8585":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"17:10251:3293":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"0:144:2085":{"crate_id":0,"path":["rustc_version","Error","UnexpectedVersionFormat"],"kind":"variant"},"16:2708:4257":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"2:45575:6143":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"16:6991:35189":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"1:6291:6695":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"2:22831:2089":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"6:1663:4927":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"11:1887:2780":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"16:7741:4285":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"1:558:7588":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"17:15608:4066":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"6:5565:5301":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:4739:2807":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"17:14752:3758":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"6:1526:4829":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"16:4771:4311":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"17:12808:3412":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"17:14489:3715":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"1:10901:6263":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"18:718:3176":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"17:13437:3498":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"6:4811:4972":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"4:0:2244":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"1:2504:1977":{"crate_id":1,"path":["std","io"],"kind":"module"},"2:21687:5817":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"2:2517:14028":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"6:1621:4898":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"2:10260:205":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"6:7537:5726":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"17:15023:3900":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"2:31983:236":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"1:7288:7725":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"6:7461:5673":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:21443:32774":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"17:11153:7344":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2:39117:6711":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"2:44112:6815":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:10930:2404":{"crate_id":1,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"2:41657:2778":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"1:3285:3032":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"2:43665:2468":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"2:41432:6766":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"6:8012:5760":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"14:165:20376":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"11:800:7506":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"16:2355:4236":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"17:15434:4001":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"2:32040:2501":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"17:11583:7377":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"1:2458:8561":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"20:280:7658":{"crate_id":20,"path":["semver","error","Position"],"kind":"enum"},"2:45400:6125":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"2:4602:220":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"6:4979:5068":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:41665:2779":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"5:2205:6638":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"5:3634:181":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"1:8518:7646":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"1:860:2780":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"5:1555:7492":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"15:306:20396":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"16:5400:3290":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"1:9129:2778":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"2:43962:6802":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"13:109:35175":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"5:4834:781":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"2:32070:2642":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"15:394:20406":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"16:8202:4287":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"17:12516:7410":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"17:15814:4118":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"1:12306:734":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"17:15333:3975":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"2:9716:84":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:13665:6697":{"crate_id":2,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"2:11933:2459":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"17:12371:3416":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"2:8197:129":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"2:41504:193":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"5:6671:2780":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"1:2042:196":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:43890:6796":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"5:7465:2780":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"1:4940:8590":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"6:7575:5745":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"2:46396:6220":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:45894:6174":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"2:45415:6126":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"18:96:25551":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"17:14463:3713":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"1:11869:31055":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"2:43283:6693":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"6:5436:5246":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"1:2987:7600":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"16:7014:21310":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"1:11740:7602":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:4730:13915":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:3335:3034":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"17:15778:4114":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"6:6491:5422":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"6:6706:5530":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"17:14414:3700":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"11:1160:7504":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"2:39880:2469":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"2:39979:13931":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"17:15266:3958":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"16:6948:4276":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"17:11773:3398":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"17:15058:3904":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"17:12264:7407":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:40309:6741":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"2:43620:2471":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"6:5314:5191":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"1:9391:7633":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockWriteGuard"],"kind":"struct"},"6:5477:5272":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:31967:2806":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"1:6215:1983":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"16:3475:4292":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"2:2621:112":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"1:10999:2401":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"2:39964:2469":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"16:7633:35188":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"2:43201:7579":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"17:12289:3374":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"11:2124:6595":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"1:10442:28965":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"20:351:2496":{"crate_id":20,"path":["semver","Op"],"kind":"enum"},"2:46338:6218":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:9417:6336":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"2:22944:5841":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU128Inner"],"kind":"struct"},"11:856:7496":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"7:0:1850":{"crate_id":7,"path":["unwind"],"kind":"module"},"1:8036:2947":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"2:8168:2504":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"17:11405:7365":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"2:45689:6149":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"16:6353:4335":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"16:2508:4248":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"1:2287:3006":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"17:16212:4220":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"6:6629:5498":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:32072:114":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"17:15769:4112":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"5:5916:7506":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"17:10044:21375":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"6:7584:5748":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"16:6606:6556":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"5:296:2451":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"1:5898:7614":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"2:35834:4414":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:5891:7610":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"5:3270:6631":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"17:12900:3415":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"1:881:6628":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"18:531:6405":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"2:2857:143":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:43191:6690":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"17:15078:3912":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"2:21999:32781":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"16:6976:4389":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:30850:2656":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"13:226:4648":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"1:12294:1150":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"1:12293:405":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"2:3164:4408":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"2:10219:142":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"11:742:7492":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"1:4863:8594":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"2:9289:7554":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"2:11070:2779":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"2:3571:32194":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"5:1478:2779":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"2:42475:4487":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"5:7567:14067":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"16:6342:35198":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"1:11315:7677":{"crate_id":1,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"16:4062:4299":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"17:14994:3894":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"1:2278:137":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"2:1938:652":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"16:2323:20441":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"2:45511:6132":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"17:15281:3960":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"16:6665:21308":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"16:7727:4284":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:40234:6732":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:11045:29025":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"16:8155:6613":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"2:3541:253":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"2:33785:14012":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1:363:7586":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"5:730:118":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"2:46027:6179":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"2:11138:2457":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"6:6874:5576":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:42436:6082":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"16:6398:4266":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"5:4308:2778":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2:45636:6146":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:4100:8579":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"11:1007:6595":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"5:3806:7521":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:12773:1979":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"2:39130:212":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"11:2498:20365":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"2:22383:14027":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"function"},"11:364:35163":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"16:5802:21302":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"2:10201:2417":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"2:44116:6102":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"2:43516:2473":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"2:12345:7564":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"2:31911:2402":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"0:26:2051":{"crate_id":0,"path":["rustc_version","version_meta"],"kind":"function"},"1:6780:7626":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLock"],"kind":"struct"},"2:12887:13866":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"5:7699:7520":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"17:12030:7393":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"2:4:1232":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"1:1586:7520":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"2:33958:4413":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"6:491:4749":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"2:45788:6154":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"2:41540:2779":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"6:5083:5114":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:43172:6689":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:4757:5657":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"function"},"1:10636:3032":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"2:41862:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"5:7387:7539":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"1:9303:6332":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"2:45467:6129":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:3711:70":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"2:25873:266":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"2:42957:6773":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"2:10891:8564":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"16:8301:4523":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"2:43570:2475":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"2:3311:124":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"17:14587:3729":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"17:11497:7367":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:11177:7557":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"17:11256:6421":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"5:6157:2998":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"}},"external_crates":{"20":{"name":"semver","html_root_url":"https://docs.rs/semver/1.0.22/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":28}