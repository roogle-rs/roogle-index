{"root":"0:0:1778","crate_version":"0.4.0","includes_private":false,"index":{"0:98:1672":{"id":"0:98:1672","crate_id":0,"name":"commit_date","span":{"filename":"src/lib.rs","begin":[156,4],"end":[156,35]},"visibility":"public","docs":"Commit date of the compiler","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48673:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:7157:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"2:11833:32764":{"id":"2:11833:32764","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"üóª‚ààüåè\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"üçî‚ààüåè\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:11945:25072":{"id":"2:11945:25072","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Gr√º√üe, J√ºrgen ‚ù§\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GR√º√üE, J√ºRGEN ‚ù§\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:687:2514":{"id":"5:687:2514","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:108":{"id":"0:108","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,23],"end":[147,25]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2685:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1667","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:157:1570":{"id":"0:157:1570","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[360,21],"end":[360,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"a:2:8144:7356-0:95:1667":{"id":"a:2:8144:7356-0:95:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8144:7356","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1667","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2240-0:137:127":{"id":"b:2:2240-0:137:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2234:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2242:23349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3330-0:121:1651":{"id":"b:2:3330-0:121:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3328:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3332:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11943:25070":{"id":"2:11943:25070","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:136:657":{"id":"0:136:657","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[279,9],"end":[279,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8970:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8959:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:21:1652":{"id":"0:21:1652","crate_id":0,"name":"from_str","span":{"filename":"src/lib.rs","begin":[109,4],"end":[143,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:45:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:11486:1627","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:63":{"id":"0:63","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,26],"end":[71,35]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2684:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2529-0:121:1651":{"id":"b:2:2529-0:121:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2506:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2532:1696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2237-0:137:127":{"id":"b:2:2237-0:137:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2231:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2239:1978"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:118":{"id":"0:118","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,55],"end":[147,59]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9234:140","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1667","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:119:716"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:158":{"id":"0:158","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[340,9],"end":[340,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9011:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:159:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:114":{"id":"0:114","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,38],"end":[147,41]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["min","clamp","max"],"trait":{"name":"Ord","id":"2:2339:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1667","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:115:421"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:163:681":{"id":"0:163:681","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["e",{"kind":"resolved_path","inner":{"name":"semver::Error","id":"20:220:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11850:6026":{"id":"2:11850:6026","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:50650:2097","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2674:217-0:95:1667":{"id":"a:2:2674:217-0:95:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2674:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1667","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11926:23985":{"id":"2:11926:23985","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11864:410","self::pattern":"2:11525:2091"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48673:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11530:2084","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5302:33438":{"id":"5:5302:33438","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"ÂÜúÂéÜÊñ∞Âπ¥\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tsch√º√ü\";\n\nassert_eq!(\"TSCH√úSS\", s.to_uppercase());\n```","links":{"`String`":"5:7157:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7157:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:140:1570":{"id":"0:140:1570","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[343,27],"end":[343,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"io::Error","id":"1:2869:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:42":{"id":"0:42","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[384,0],"end":[396,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["source","cause","type_id","provide","description"],"trait":{"name":"Error","id":"2:2594:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:43:1752"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:121:1651":{"id":"0:121:1651","crate_id":0,"name":"LlvmVersionParseError","span":{"filename":"src/lib.rs","begin":[280,0],"end":[293,1]},"visibility":"public","docs":"LLVM Version Parse Error","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:122:1739","0:125:1658","0:127:1661","0:129:1743","0:131:1663","0:133:1665"],"impls":["a:2:2674:217-0:121:1651","a:2:2738:2136-0:121:1651","a:2:8144:7356-0:121:1651","a:2:2688:225-0:121:1651","a:2:8143:7357-0:121:1651","b:2:2529-0:121:1651","b:2:3330-0:121:1651","b:2:2240-0:121:1651","b:2:2544-0:121:1651","b:2:2601-0:121:1651","b:2:2533-0:121:1651","b:2:2539-0:121:1651","b:2:2237-0:121:1651","b:5:5551-0:121:1651","0:34","0:135","0:38","0:36","0:164"]}},"b:5:5551-0:137:127":{"id":"b:5:5551-0:137:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9016:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5549:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5553:1423"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3330-0:137:127":{"id":"b:2:3330-0:137:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3328:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3332:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2688:225-0:75:1644":{"id":"a:2:2688:225-0:75:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2688:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:8144:7356-0:48:1631":{"id":"a:2:8144:7356-0:48:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8144:7356","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11918:32778":{"id":"2:11918:32778","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™\";\nassert!(Some('◊¢') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:152:1725":{"id":"0:152:1725","crate_id":0,"name":"UnknownPreReleaseTag","span":{"filename":"src/lib.rs","begin":[358,4],"end":[358,32]},"visibility":"default","docs":"The pre-release tag is unknown.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:154:1570"]},"discriminant":null}},"2:2547:127":{"id":"2:2547:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:39773:2038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:2544-0:95:1667":{"id":"b:2:2544-0:95:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1667","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2547:127","2:2548:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2529-0:48:1631":{"id":"b:2:2529-0:48:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2506:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2532:1696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:161:681":{"id":"0:161:681","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["e",{"kind":"resolved_path","inner":{"name":"str::Utf8Error","id":"2:50608:1759","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11854:32767":{"id":"2:11854:32767","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:50928:2107","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2532:1696":{"id":"2:2532:1696","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2506:132"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:65:602":{"id":"0:65:602","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[71,26],"end":[71,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:61":{"id":"0:61","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,22],"end":[71,24]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2308:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:92":{"id":"0:92","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,55],"end":[90,59]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9234:140","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:93:716"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:99:1674":{"id":"0:99:1674","crate_id":0,"name":"build_date","span":{"filename":"src/lib.rs","begin":[159,4],"end":[159,34]},"visibility":"public","docs":"Build date of the compiler; this was removed between Rust 1.0.0 and 1.1.0.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48673:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:7157:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"b:2:2601-0:121:1651":{"id":"b:2:2601-0:121:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:2594:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:3379:12569","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2603:2612"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"E"}}},"0:43:1752":{"id":"0:43:1752","crate_id":0,"name":"source","span":{"filename":"src/lib.rs","begin":[385,4],"end":[395,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48673:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"error::Error","id":"2:2594:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:113:602":{"id":"0:113:602","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[147,27],"end":[147,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1667","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11919:32779":{"id":"2:11919:32779","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊™') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2539-0:75:1644":{"id":"b:2:2539-0:75:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2509:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2542:127","2:2543:1444"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2240-0:121:1651":{"id":"b:2:2240-0:121:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2234:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2242:23349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2237-0:121:1651":{"id":"b:2:2237-0:121:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2231:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2239:1978"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:103:1682":{"id":"0:103:1682","crate_id":0,"name":"llvm_version","span":{"filename":"src/lib.rs","begin":[171,4],"end":[171,41]},"visibility":"public","docs":"Version of LLVM used by the compiler","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48673:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"a:2:8143:7357-0:48:1631":{"id":"a:2:8143:7357-0:48:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8143:7357","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2674:217-0:137:127":{"id":"a:2:2674:217-0:137:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2674:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2539-0:121:1651":{"id":"b:2:2539-0:121:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2509:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2542:127","2:2543:1444"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11909:32774":{"id":"2:11909:32774","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:11525:2091","`DoubleEndedIterator`":"2:7129:120","prim@char":"1:11864:410","str::match_indices":"2:11906:32773"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:50832:2109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11530:2084","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11530:2084","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11545:2085","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2539-0:95:1667":{"id":"b:2:2539-0:95:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2509:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1667","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2542:127","2:2543:1444"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:78":{"id":"0:78","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,9],"end":[90,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2254:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:79:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:81:657":{"id":"0:81:657","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[90,16],"end":[90,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8970:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8959:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8143:7357-0:95:1667":{"id":"a:2:8143:7357-0:95:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8143:7357","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1667","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2544-0:137:127":{"id":"b:2:2544-0:137:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2547:127","2:2548:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:40":{"id":"0:40","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[363,0],"end":[382,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9016:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:41:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:49:1633":{"id":"0:49:1633","crate_id":0,"name":"Dev","span":{"filename":"src/lib.rs","begin":[74,4],"end":[74,7]},"visibility":"default","docs":"Development release channel","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"2:11862:23984":{"id":"2:11862:23984","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:11864:410","self::pattern":"2:11525:2091"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11530:2084","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11530:2084","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11545:2085","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:57":{"id":"0:57","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,9],"end":[71,13]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2686:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:17":{"id":"0:17","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[100,0],"end":[104,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9016:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:18:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:88":{"id":"0:88","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,38],"end":[90,41]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["min","clamp","max"],"trait":{"name":"Ord","id":"2:2339:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:89:421"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:76:1646":{"id":"0:76:1646","crate_id":0,"name":"major","span":{"filename":"src/lib.rs","begin":[94,4],"end":[94,18]},"visibility":"public","docs":"Major version","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u64"}},"b:2:2533-0:137:127":{"id":"b:2:2533-0:137:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2506:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2535:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11842:23943":{"id":"2:11842:23943","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"üóª‚ààüåè\");\nunsafe {\n    assert_eq!(\"üóª\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"‚àà\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"üåè\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9706:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9706:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:11852:30994":{"id":"2:11852:30994","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:11851:30999"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:50947:2093","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2533-0:48:1631":{"id":"b:2:2533-0:48:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2506:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2535:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11827:32762":{"id":"2:11827:32762","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji üßë‚Äçüî¨ (scientist) could be split so that the string only\nincludes üßë (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"‚ù§Ô∏èüß°üíõüíöüíôüíú\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"‚ù§Ô∏èüß°\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2242:23349":{"id":"2:2242:23349","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11882:32768":{"id":"2:11882:32768","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:11525:2091","str::split":"2:11873:1654","prim@char":"1:11864:410","`DoubleEndedIterator`":"2:7129:120","str::rsplit_terminator":"2:11885:32769"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:50714:2117","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11530:2084","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2240-0:48:1631":{"id":"b:2:2240-0:48:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2234:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2242:23349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:686:1726":{"id":"5:686:1726","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:79:414":{"id":"0:79:414","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[90,9],"end":[90,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:90":{"id":"0:90","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,43],"end":[90,53]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ge","le","gt","lt"],"trait":{"name":"PartialOrd","id":"2:2345:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:91:1016"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:96:1628":{"id":"0:96:1628","crate_id":0,"name":"semver","span":{"filename":"src/lib.rs","begin":[150,4],"end":[150,23]},"visibility":"public","docs":"Version of the compiler","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Version","id":"20:299:1629","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"2:11849:6147":{"id":"2:11849:6147","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"yÃÜes\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'yÃÜ')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:11864:410"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:50640:2098","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:36":{"id":"0:36","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[301,0],"end":[324,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9016:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:37:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11873:1654":{"id":"2:11873:1654","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:11525:2091","`DoubleEndedIterator`":"2:7129:120","prim@char":"1:11864:410","str::split_whitespace":"2:11851:30999","str::rsplit":"2:11879:23978"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:50664:2113","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11530:2084","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11950:32786":{"id":"2:11950:32786","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4500:32786"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:50981:2105","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:154:1570":{"id":"0:154:1570","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[358,25],"end":[358,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:7157:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"2:2603:2612":{"id":"2:2603:2612","crate_id":2,"name":"provide","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["demand",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Demand","id":"2:3391:6814","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:39:1752":{"id":"0:39:1752","crate_id":0,"name":"source","span":{"filename":"src/lib.rs","begin":[327,4],"end":[336,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48673:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"error::Error","id":"2:2594:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:25:1532":{"id":"0:25:1532","crate_id":0,"name":"version","span":{"filename":"src/lib.rs","begin":[194,0],"end":[196,1]},"visibility":"public","docs":"Returns the `rustc` SemVer version.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:45:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Version","id":"20:299:1629","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:141:1693":{"id":"0:141:1693","crate_id":0,"name":"CommandError","span":{"filename":"src/lib.rs","begin":[345,4],"end":[350,5]},"visibility":"default","docs":"Error output from the command that was run.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"struct":{"fields":["0:142:1694","0:143:1697"],"fields_stripped":false}},"discriminant":null}},"0:155:1765":{"id":"0:155:1765","crate_id":0,"name":"LlvmVersionError","span":{"filename":"src/lib.rs","begin":[360,4],"end":[360,43]},"visibility":"default","docs":"An error occurred in parsing a `LlvmVersion`.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:157:1570"]},"discriminant":null}},"5:5303:33439":{"id":"5:5303:33439","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:288:2088","`String`":"5:7157:221"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:288:2088","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6908:5387","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7157:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:86":{"id":"0:86","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,27],"end":[90,36]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2303:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:87:602"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11946:25073":{"id":"2:11946:25073","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GR√ú√üE, J√úRGEN ‚ù§\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"gr√ú√üe, j√úrgen ‚ù§\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2529-0:75:1644":{"id":"b:2:2529-0:75:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2506:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2532:1696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3330-0:95:1667":{"id":"b:2:3330-0:95:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3328:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1667","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3332:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:127:1661":{"id":"0:127:1661","crate_id":0,"name":"ComponentMustNotHaveSign","span":{"filename":"src/lib.rs","begin":[286,4],"end":[286,28]},"visibility":"default","docs":"A version component has a sign","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"a:2:2688:225-0:137:127":{"id":"a:2:2688:225-0:137:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2688:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11912:32775":{"id":"2:11912:32775","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11938:32784":{"id":"2:11938:32784","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11864:410","self::pattern":"2:11525:2091"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11530:2084","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11530:2084","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11545:2085","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:34":{"id":"0:34","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[295,0],"end":[299,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2506:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ParseIntError","id":"2:21744:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:35:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:45:207":{"id":"0:45:207","crate_id":0,"name":"Result","span":{"filename":"src/lib.rs","begin":[417,0],"end":[417,58]},"visibility":"public","docs":"The result type for this crate.","links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"std::result::Result","id":"2:48817:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]}}},"2:2543:1444":{"id":"2:2543:1444","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48817:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11941:1662":{"id":"2:11941:1662","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:11487:126","`FromStr`":"2:11486:1627"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48817:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"2:11486:1627","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:11486:1627","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3330-0:48:1631":{"id":"b:2:3330-0:48:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3328:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3332:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11846:23967":{"id":"2:11846:23967","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-L√∂f\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-L√∂f\", last);\n```","links":{"str::split_at_mut":"2:11847:23968"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11897:32771":{"id":"2:11897:32771","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48673:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11530:2084","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11530:2084","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11545:2085","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2533-0:95:1667":{"id":"b:2:2533-0:95:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2506:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1667","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2535:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:67:421":{"id":"0:67:421","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[71,37],"end":[71,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:38600:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:125:1658":{"id":"0:125:1658","crate_id":0,"name":"ComponentMustNotHaveLeadingZeros","span":{"filename":"src/lib.rs","begin":[284,4],"end":[284,36]},"visibility":"default","docs":"A version component must not have leading zeros","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"a:2:8143:7357-0:75:1644":{"id":"a:2:8143:7357-0:75:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8143:7357","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11859:1657":{"id":"2:11859:1657","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:11864:410","self::pattern":"2:11525:2091"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11530:2084","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11920:32780":{"id":"2:11920:32780","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:11864:410","self::pattern":"2:11525:2091"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11530:2084","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11530:2084","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:11550:2083","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:71:716":{"id":"0:71:716","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[71,54],"end":[71,58]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9248:144","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:23":{"id":"0:23","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[174,0],"end":[191,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1667","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:24:1684"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2738:2136-0:95:1667":{"id":"a:2:2738:2136-0:95:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2738:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1667","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11935:32783":{"id":"2:11935:32783","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11864:410","self::pattern":"2:11525:2091"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11530:2084","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:165:681":{"id":"0:165:681","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["e",{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11888:1714":{"id":"2:11888:1714","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:11864:410","self::pattern":"2:11525:2091","str::rsplitn":"2:11891:23981"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:50768:2115","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11530:2084","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2674:217-0:75:1644":{"id":"a:2:2674:217-0:75:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2674:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11900:1994":{"id":"2:11900:1994","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:11525:2091","`DoubleEndedIterator`":"2:7129:120","prim@char":"1:11864:410","str::matches":"2:11900:1994"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:50868:2110","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11530:2084","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2237-0:48:1631":{"id":"b:2:2237-0:48:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2231:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2239:1978"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:106":{"id":"0:106","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,16],"end":[147,21]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9011:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1667","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:107:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11885:32769":{"id":"2:11885:32769","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:11525:2091","str::split":"2:11873:1654","prim@char":"1:11864:410","str::split_terminator":"2:11882:32768"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:50732:2116","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11530:2084","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11530:2084","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11545:2085","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2539-0:48:1631":{"id":"b:2:2539-0:48:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2509:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2542:127","2:2543:1444"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:73":{"id":"0:73","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,60],"end":[71,65]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9011:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:74:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:101:1678":{"id":"0:101:1678","crate_id":0,"name":"host","span":{"filename":"src/lib.rs","begin":[165,4],"end":[165,20]},"visibility":"public","docs":"Host target triple of the compiler","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:7157:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"5:5286":{"id":"5:5286","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5197:1369","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:5287:33435","5:5288:2633","5:5291:33436","5:5294:33437","5:5302:33438","5:5303:33439","5:5304:2655","5:5305:25201","5:5306:25202"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11929:23986":{"id":"2:11929:23986","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11864:410","self::pattern":"2:11525:2091"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48673:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11530:2084","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11530:2084","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11545:2085","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:83":{"id":"0:83","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,23],"end":[90,25]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2308:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:104":{"id":"0:104","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,9],"end":[147,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2254:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1667","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:105:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:683-0:95:1667":{"id":"b:5:683-0:95:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2254:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1667","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:685:2513","5:686:1726","5:687:2514"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:24:1684":{"id":"0:24:1684","crate_id":0,"name":"for_command","span":{"filename":"src/lib.rs","begin":[176,4],"end":[190,5]},"visibility":"public","docs":"Returns the version metadata for `cmd`, which should be a `rustc` command.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["cmd",{"kind":"resolved_path","inner":{"name":"Command","id":"1:5378:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:45:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1667","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:116":{"id":"0:116","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,43],"end":[147,53]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ge","le","gt","lt"],"trait":{"name":"PartialOrd","id":"2:2345:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1667","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1667","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:117:1016"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:95:1667":{"id":"0:95:1667","crate_id":0,"name":"VersionMeta","span":{"filename":"src/lib.rs","begin":[148,0],"end":[172,1]},"visibility":"public","docs":"Rustc version plus metadata like git short hash and build date.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":["0:96:1628","0:97:1670","0:98:1672","0:99:1674","0:100:1676","0:101:1678","0:102:1680","0:103:1682"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:23","a:2:2674:217-0:95:1667","a:2:2738:2136-0:95:1667","a:2:8144:7356-0:95:1667","a:2:2688:225-0:95:1667","a:2:8143:7357-0:95:1667","b:2:2529-0:95:1667","b:2:3330-0:95:1667","b:2:2240-0:95:1667","b:2:2544-0:95:1667","b:2:2533-0:95:1667","b:2:2539-0:95:1667","b:2:2237-0:95:1667","b:5:683-0:95:1667","0:108","0:112","0:111","0:109","0:118","0:104","0:116","0:114","0:106"]}},"0:100:1676":{"id":"0:100:1676","crate_id":0,"name":"channel","span":{"filename":"src/lib.rs","begin":[162,4],"end":[162,24]},"visibility":"public","docs":"Release channel of the compiler","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:102:1680":{"id":"0:102:1680","crate_id":0,"name":"short_version_string","span":{"filename":"src/lib.rs","begin":[168,4],"end":[168,36]},"visibility":"public","docs":"Short version string of the compiler","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:7157:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"b:2:2533-0:121:1651":{"id":"b:2:2533-0:121:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2506:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2535:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:38":{"id":"0:38","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[326,0],"end":[337,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["source","cause","type_id","provide","description"],"trait":{"name":"Error","id":"2:2594:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:39:1752"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:41:657":{"id":"0:41:657","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[364,4],"end":[381,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8970:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8959:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11838:23941":{"id":"2:11838:23941","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:48675:176"},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48673:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9706:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9706:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11894:32770":{"id":"2:11894:32770","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48673:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11530:2084","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11835:23944":{"id":"2:11835:23944","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:11881:1465"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8144:7356-0:137:127":{"id":"a:2:8144:7356-0:137:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8144:7356","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:2601-0:137:127":{"id":"b:2:2601-0:137:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:2594:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:3379:12569","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2603:2612"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"E"}}},"2:2535:681":{"id":"2:2535:681","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11840:23942":{"id":"2:11840:23942","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"üóª‚ààüåè\";\nunsafe {\n    assert_eq!(\"üóª\", v.get_unchecked(0..4));\n    assert_eq!(\"‚àà\", v.get_unchecked(4..7));\n    assert_eq!(\"üåè\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9706:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9706:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:138:1690":{"id":"0:138:1690","crate_id":0,"name":"CouldNotExecuteCommand","span":{"filename":"src/lib.rs","begin":[343,4],"end":[343,37]},"visibility":"default","docs":"An error occurred while trying to find the `rustc` to run.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:140:1570"]},"discriminant":null}},"b:2:2240-0:95:1667":{"id":"b:2:2240-0:95:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2234:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1667","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2242:23349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:133:1665":{"id":"0:133:1665","crate_id":0,"name":"TooManyComponents","span":{"filename":"src/lib.rs","begin":[292,4],"end":[292,21]},"visibility":"default","docs":"Too many components","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"5:685:2513":{"id":"5:685:2513","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:53:1637":{"id":"0:53:1637","crate_id":0,"name":"Beta","span":{"filename":"src/lib.rs","begin":[78,4],"end":[78,8]},"visibility":"default","docs":"Beta release channel","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:147:1735":{"id":"0:147:1735","crate_id":0,"name":"UnexpectedVersionFormat","span":{"filename":"src/lib.rs","begin":[354,4],"end":[354,27]},"visibility":"default","docs":"The output of `rustc -vV` was not in the expected format.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"2:11847:23968":{"id":"2:11847:23968","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-L√∂f\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-L√∂f\", last);\n}\nassert_eq!(\"PER Martin-L√∂f\", s);\n```","links":{"str::split_at":"2:11846:23967"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:60":{"id":"0:60","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,22],"end":[71,24]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2685:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:37:657":{"id":"0:37:657","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[302,4],"end":[323,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8970:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8959:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:146:1570":{"id":"0:146:1570","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[352,14],"end":[352,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"str::Utf8Error","id":"2:50608:1759","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:144:1759":{"id":"0:144:1759","crate_id":0,"name":"Utf8Error","span":{"filename":"src/lib.rs","begin":[352,4],"end":[352,29]},"visibility":"default","docs":"The output of `rustc -vV` was not valid utf-8.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:146:1570"]},"discriminant":null}},"2:11932:32782":{"id":"2:11932:32782","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11864:410","self::pattern":"2:11525:2091"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11530:2084","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11530:2084","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11545:2085","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:142:1694":{"id":"0:142:1694","crate_id":0,"name":"stdout","span":{"filename":"src/lib.rs","begin":[347,8],"end":[347,22]},"visibility":"default","docs":"stdout output from the command","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:7157:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"b:2:2237-0:95:1667":{"id":"b:2:2237-0:95:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2231:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1667","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2239:1978"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:149:1762":{"id":"0:149:1762","crate_id":0,"name":"SemVerError","span":{"filename":"src/lib.rs","begin":[356,4],"end":[356,30]},"visibility":"default","docs":"An error occurred in parsing the semver.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:151:1570"]},"discriminant":null}},"2:11855:32134":{"id":"2:11855:32134","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Za≈º√≥≈Çƒá gƒô≈õlƒÖ ja≈∫≈Ñ\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:50956:2092","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:109":{"id":"0:109","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,23],"end":[147,25]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2308:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1667","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:115:421":{"id":"0:115:421","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[147,38],"end":[147,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1667","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:38600:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:135":{"id":"0:135","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[279,9],"end":[279,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9011:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:136:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:119:716":{"id":"0:119:716","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[147,55],"end":[147,59]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9248:144","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2529-0:137:127":{"id":"b:2:2529-0:137:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2506:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2532:1696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11832:27338":{"id":"2:11832:27338","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11093:1699"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:70":{"id":"0:70","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,54],"end":[71,58]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9234:140","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:71:716"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:59:414":{"id":"0:59:414","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[71,15],"end":[71,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2544-0:121:1651":{"id":"b:2:2544-0:121:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2547:127","2:2548:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11851:30999":{"id":"2:11851:30999","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:11852:30994"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:50938:2095","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5288:2633":{"id":"5:5288:2633","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7157:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7157:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11530:2084","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:15-20:299:1629":{"id":"0:15-20:299:1629","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[66,0],"end":[66,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"semver::Version","name":"Version","id":"20:299:1629","glob":false}},"0:112":{"id":"0:112","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,27],"end":[147,36]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2303:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1667","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1667","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:113:602"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:137:127":{"id":"0:137:127","crate_id":0,"name":"Error","span":{"filename":"src/lib.rs","begin":[341,0],"end":[361,1]},"visibility":"public","docs":"The error type for this crate.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:138:1690","0:141:1693","0:144:1759","0:147:1735","0:149:1762","0:152:1725","0:155:1765"],"impls":["a:2:2674:217-0:137:127","a:2:2738:2136-0:137:127","a:2:8144:7356-0:137:127","a:2:2688:225-0:137:127","a:2:8143:7357-0:137:127","b:2:2529-0:137:127","b:2:3330-0:137:127","b:2:2240-0:137:127","b:2:2544-0:137:127","b:2:2601-0:137:127","b:2:2533-0:137:127","b:2:2539-0:137:127","b:2:2237-0:137:127","b:5:5551-0:137:127","0:42","0:162","0:160","0:40","0:158","0:164"]}},"0:151:1570":{"id":"0:151:1570","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[356,16],"end":[356,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"semver::Error","id":"20:220:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"2:11834:310":{"id":"2:11834:310","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:11835:23944","`u8`":"1:11881:1465"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11914:32776":{"id":"2:11914:32776","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊¢') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:28:1698":{"id":"0:28:1698","crate_id":0,"name":"version_meta_for","span":{"filename":"src/lib.rs","begin":[209,0],"end":[262,1]},"visibility":"public","docs":"Parses a \"rustc -vV\" output string and returns\nthe SemVer version and additional metadata\nlike the git short hash and build date.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["verbose_version_string",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:45:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1667","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2548:1443":{"id":"2:2548:1443","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48817:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11836:1730":{"id":"2:11836:1730","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"üóª‚ààüåè\");\n\nassert_eq!(Some(\"üóª\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:48675:176"},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48673:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9706:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9706:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3332:1457":{"id":"2:3332:1457","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:47012:5499","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2738:2136-0:48:1631":{"id":"a:2:2738:2136-0:48:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2738:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:89:421":{"id":"0:89:421","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[90,38],"end":[90,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:38600:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11906:32773":{"id":"2:11906:32773","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:11525:2091","`DoubleEndedIterator`":"2:7129:120","prim@char":"1:11864:410","str::rmatch_indices":"2:11909:32774"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:50814:2108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11530:2084","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2738:2136-0:121:1651":{"id":"a:2:2738:2136-0:121:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2738:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:131:1663":{"id":"0:131:1663","crate_id":0,"name":"MinorVersionRequiredBefore4","span":{"filename":"src/lib.rs","begin":[290,4],"end":[290,31]},"visibility":"default","docs":"Minor version component is required on LLVM versions earlier than 4.0","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:85":{"id":"0:85","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,27],"end":[90,36]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2684:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2738:2136-0:75:1644":{"id":"a:2:2738:2136-0:75:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2738:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2240-0:75:1644":{"id":"b:2:2240-0:75:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2234:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2242:23349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11829:32763":{"id":"2:11829:32763","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"‚ù§Ô∏èüß°üíõüíöüíôüíú\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"‚ù§Ô∏èüß°üíõ\");\n```","links":{"str::floor_char_boundary":"2:11827:32762"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11947:32785":{"id":"2:11947:32785","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"‚ù§\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_debug().to_string(), \"‚ù§\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4502:32785"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:50963:2103","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8143:7357-0:137:127":{"id":"a:2:8143:7357-0:137:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8143:7357","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:124:1570":{"id":"0:124:1570","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[282,18],"end":[282,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"num::ParseIntError","id":"2:21744:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:64":{"id":"0:64","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,26],"end":[71,35]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2303:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:65:602"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:74:657":{"id":"0:74:657","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[71,60],"end":[71,65]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8970:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8959:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:20:126":{"id":"0:20:126","crate_id":0,"name":"Err","span":{"filename":"src/lib.rs","begin":[107,4],"end":[107,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:143:1697":{"id":"0:143:1697","crate_id":0,"name":"stderr","span":{"filename":"src/lib.rs","begin":[349,8],"end":[349,22]},"visibility":"default","docs":"stderr output from the command","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:7157:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"5:5306:25202":{"id":"5:5306:25202","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert_eq!(\"gr√º√üe, j√ºrgen ‚ù§\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:11946:25073"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7157:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11869:2456":{"id":"2:11869:2456","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('√©'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:48675:176","prim@char":"1:11864:410","self::pattern":"2:11525:2091"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48673:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11530:2084","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11530:2084","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11545:2085","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:48:1631":{"id":"0:48:1631","crate_id":0,"name":"Channel","span":{"filename":"src/lib.rs","begin":[72,0],"end":[81,1]},"visibility":"public","docs":"Release channel of the compiler.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:49:1633","0:51:1635","0:53:1637","0:55:1639"],"impls":["a:2:2674:217-0:48:1631","a:2:2738:2136-0:48:1631","a:2:8144:7356-0:48:1631","a:2:2688:225-0:48:1631","a:2:8143:7357-0:48:1631","b:2:2529-0:48:1631","b:2:3330-0:48:1631","b:2:2240-0:48:1631","b:2:2544-0:48:1631","b:2:2533-0:48:1631","b:2:2539-0:48:1631","b:2:2237-0:48:1631","b:5:683-0:48:1631","0:57","0:70","0:63","0:64","0:61","0:73","0:60","0:66","0:58","0:68"]}},"2:11825:2457":{"id":"2:11825:2457","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2674:217-0:121:1651":{"id":"a:2:2674:217-0:121:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2674:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:117:1016":{"id":"0:117:1016","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[147,43],"end":[147,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1667","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::option::Option","id":"2:48673:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:38600:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:160":{"id":"0:160","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2506:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Utf8Error","id":"2:50608:1759","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:161:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11879:23978":{"id":"2:11879:23978","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:11525:2091","`DoubleEndedIterator`":"2:7129:120","prim@char":"1:11864:410","str::split":"2:11873:1654"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:50682:2112","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11530:2084","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11530:2084","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11545:2085","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2688:225-0:48:1631":{"id":"a:2:2688:225-0:48:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2688:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:19":{"id":"0:19","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[106,0],"end":[144,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:11486:1627","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:20:126","0:21:1652"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5553:1423":{"id":"5:5553:1423","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7157:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:87:602":{"id":"0:87:602","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[90,27],"end":[90,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8143:7357-0:121:1651":{"id":"a:2:8143:7357-0:121:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8143:7357","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11865:2494":{"id":"2:11865:2494","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('√©'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:48675:176","prim@char":"1:11864:410","self::pattern":"2:11525:2091"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48673:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11530:2084","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5287:33435":{"id":"5:5287:33435","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:288:2088","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6908:5387","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:288:2088","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6908:5387","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11944:25071":{"id":"2:11944:25071","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferr√∂s\".eq_ignore_ascii_case(\"FERR√∂S\"));\nassert!(!\"Ferr√∂s\".eq_ignore_ascii_case(\"FERR√ñS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11823":{"id":"2:11823","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:11088:1369","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:11824:797","2:11825:2457","2:11826:32761","2:11827:32762","2:11829:32763","2:11832:27338","2:11833:32764","2:11834:310","2:11835:23944","2:11836:1730","2:11838:23941","2:11840:23942","2:11842:23943","2:11844:32765","2:11845:32766","2:11846:23967","2:11847:23968","2:11848:6137","2:11849:6147","2:11850:6026","2:11851:30999","2:11852:30994","2:11853:1710","2:11854:32767","2:11855:32134","2:11856:23983","2:11859:1657","2:11862:23984","2:11865:2494","2:11869:2456","2:11873:1654","2:11876:23976","2:11879:23978","2:11882:32768","2:11885:32769","2:11888:1714","2:11891:23981","2:11894:32770","2:11897:32771","2:11900:1994","2:11903:32772","2:11906:32773","2:11909:32774","2:11912:32775","2:11914:32776","2:11916:32777","2:11918:32778","2:11919:32779","2:11920:32780","2:11923:32781","2:11926:23985","2:11929:23986","2:11932:32782","2:11935:32783","2:11938:32784","2:11941:1662","2:11943:25070","2:11944:25071","2:11945:25072","2:11946:25073","2:11947:32785","2:11949:7225","2:11950:32786"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11923:32781":{"id":"2:11923:32781","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11864:410","self::pattern":"2:11525:2091"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11530:2084","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11949:7225":{"id":"2:11949:7225","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4503:7225"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:50972:2104","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:122:1739":{"id":"0:122:1739","crate_id":0,"name":"ParseIntError","span":{"filename":"src/lib.rs","begin":[282,4],"end":[282,37]},"visibility":"default","docs":"An error occurred in parsing a version component as an integer","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:124:1570"]},"discriminant":null}},"0:162":{"id":"0:162","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2506:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"20:220:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:163:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:18:657":{"id":"0:18:657","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[101,4],"end":[103,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8970:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8959:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:35:681":{"id":"0:35:681","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[296,4],"end":[298,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["e",{"kind":"resolved_path","inner":{"name":"num::ParseIntError","id":"2:21744:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11876:23976":{"id":"2:11876:23976","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:11864:410","self::pattern":"2:11525:2091"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:11349:2094","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11530:2084","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:51:1635":{"id":"0:51:1635","crate_id":0,"name":"Nightly","span":{"filename":"src/lib.rs","begin":[76,4],"end":[76,11]},"visibility":"default","docs":"Nightly release channel","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:91:1016":{"id":"0:91:1016","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[90,43],"end":[90,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::option::Option","id":"2:48673:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:38600:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:5551-0:121:1651":{"id":"b:5:5551-0:121:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9016:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5549:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5553:1423"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11916:32777":{"id":"2:11916:32777","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊™') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:58":{"id":"0:58","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,15],"end":[71,20]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2254:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:59:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3330-0:75:1644":{"id":"b:2:3330-0:75:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3328:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3332:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:683-0:75:1644":{"id":"b:5:683-0:75:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2254:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:685:2513","5:686:1726","5:687:2514"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:82":{"id":"0:82","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,23],"end":[90,25]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2685:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2544-0:48:1631":{"id":"b:2:2544-0:48:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2547:127","2:2548:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:164":{"id":"0:164","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2506:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:165:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2539-0:137:127":{"id":"b:2:2539-0:137:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2509:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2542:127","2:2543:1444"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:68":{"id":"0:68","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,42],"end":[71,52]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ge","le","gt","lt"],"trait":{"name":"PartialOrd","id":"2:2345:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:69:1016"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:26:1701":{"id":"0:26:1701","crate_id":0,"name":"version_meta","span":{"filename":"src/lib.rs","begin":[200,0],"end":[204,1]},"visibility":"public","docs":"Returns the `rustc` SemVer version and additional metadata\nlike the git short hash and build date.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:45:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1667","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2688:225-0:95:1667":{"id":"a:2:2688:225-0:95:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2688:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1667","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11853:1710":{"id":"2:11853:1710","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:50918:2106","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:5551-0:75:1644":{"id":"b:5:5551-0:75:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9016:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5549:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5553:1423"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2674:217-0:48:1631":{"id":"a:2:2674:217-0:48:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2674:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11826:32761":{"id":"2:11826:32761","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nassert!(s.is_char_boundary(0));\n// start of `ËÄÅ`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `√∂`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `ËÄÅ`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11856:23983":{"id":"2:11856:23983","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:11864:410","self::pattern":"2:11525:2091"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11530:2084","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11903:32772":{"id":"2:11903:32772","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:11525:2091","`DoubleEndedIterator`":"2:7129:120","prim@char":"1:11864:410","str::matches":"2:11900:1994"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:50886:2111","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11530:2084","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11530:2084","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11545:2085","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11845:32766":{"id":"2:11845:32766","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:11870:1369","crate::ops::IndexMut":"2:2997:7248","str::slice_unchecked":"2:11844:32765"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:80":{"id":"0:80","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,16],"end":[90,21]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9011:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:81:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:55:1639":{"id":"0:55:1639","crate_id":0,"name":"Stable","span":{"filename":"src/lib.rs","begin":[80,4],"end":[80,10]},"visibility":"default","docs":"Stable release channel","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:77:1648":{"id":"0:77:1648","crate_id":0,"name":"minor","span":{"filename":"src/lib.rs","begin":[96,4],"end":[96,18]},"visibility":"public","docs":"Minor version","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u64"}},"0:97:1670":{"id":"0:97:1670","crate_id":0,"name":"commit_hash","span":{"filename":"src/lib.rs","begin":[153,4],"end":[153,35]},"visibility":"public","docs":"Git short hash of the build of the compiler","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48673:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:7157:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"b:2:2529-0:95:1667":{"id":"b:2:2529-0:95:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2506:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1667","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2532:1696"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2533-0:75:1644":{"id":"b:2:2533-0:75:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2506:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2535:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:75:1644":{"id":"0:75:1644","crate_id":0,"name":"LlvmVersion","span":{"filename":"src/lib.rs","begin":[91,0],"end":[98,1]},"visibility":"public","docs":"LLVM version\n\nLLVM's version numbering scheme is not semver compatible until version 4.0\n\nrustc [just prints the major and minor versions], so other parts of the version are not included.\n\n[just prints the major and minor versions]: https://github.com/rust-lang/rust/blob/b5c9e2448c9ace53ad5c11585803894651b18b0a/compiler/rustc_codegen_llvm/src/llvm_util.rs#L173-L178","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":["0:76:1646","0:77:1648"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2674:217-0:75:1644","a:2:2738:2136-0:75:1644","a:2:8144:7356-0:75:1644","a:2:2688:225-0:75:1644","a:2:8143:7357-0:75:1644","b:2:2529-0:75:1644","b:2:3330-0:75:1644","b:2:2240-0:75:1644","b:2:2544-0:75:1644","b:2:2533-0:75:1644","b:2:2539-0:75:1644","b:2:2237-0:75:1644","b:5:5551-0:75:1644","b:5:683-0:75:1644","0:83","0:92","0:78","0:19","0:17","0:85","0:80","0:86","0:82","0:88","0:90"]}},"2:2239:1978":{"id":"2:2239:1978","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:683-0:48:1631":{"id":"b:5:683-0:48:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2254:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:685:2513","5:686:1726","5:687:2514"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8144:7356-0:75:1644":{"id":"a:2:8144:7356-0:75:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8144:7356","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:66":{"id":"0:66","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,37],"end":[71,40]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["min","clamp","max"],"trait":{"name":"Ord","id":"2:2339:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:67:421"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:0:1778":{"id":"0:0:1778","crate_id":0,"name":"rustc_version","span":{"filename":"src/lib.rs","begin":[9,0],"end":[417,58]},"visibility":"public","docs":"Simple library for getting the version information of a `rustc`\ncompiler.\n\nThis can be used by build scripts or other tools dealing with Rust sources\nto make decisions based on the version of the compiler.\n\nIt calls `$RUSTC --version -v` and parses the output, falling\nback to `rustc` if `$RUSTC` is not set.\n\n# Example\n\n```rust\n// This could be a cargo build script\n\nuse rustc_version::{version, version_meta, Channel, Version};\n\n// Assert we haven't travelled back in time\nassert!(version().unwrap().major >= 1);\n\n// Set cfg flags depending on release channel\nmatch version_meta().unwrap().channel {\n    Channel::Stable => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_STABLE\");\n    }\n    Channel::Beta => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_BETA\");\n    }\n    Channel::Nightly => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_NIGHTLY\");\n    }\n    Channel::Dev => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_DEV\");\n    }\n}\n\n// Check for a minimum version\nif version().unwrap() >= Version::parse(\"1.4.0\").unwrap() {\n    println!(\"cargo:rustc-cfg=compiler_has_important_bugfix\");\n}\n```","links":{},"attrs":["#![warn(missing_docs)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:15-20:299:1629","0:48:1631","0:75:1644","0:95:1667","0:25:1532","0:26:1701","0:28:1698","0:121:1651","0:137:127","0:45:207"],"is_stripped":false}},"2:11844:32765":{"id":"2:11844:32765","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nunsafe {\n    assert_eq!(\"L√∂we ËÄÅËôé L√©opard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:11870:1369","str::slice_mut_unchecked":"2:11845:32766","crate::ops::Index":"2:2993:7247"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:159:657":{"id":"0:159:657","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[340,9],"end":[340,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8970:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8959:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11824:797":{"id":"2:11824:797","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"∆íoo\".len(), 4); // fancy f!\nassert_eq!(\"∆íoo\".chars().count(), 3);\n```","links":{"prim@char":"1:11864:410"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:105:414":{"id":"0:105:414","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[147,9],"end":[147,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1667","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2542:127":{"id":"2:2542:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"a:2:2738:2136-0:137:127":{"id":"a:2:2738:2136-0:137:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2738:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:137:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:93:716":{"id":"0:93:716","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[90,55],"end":[90,59]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9248:144","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5305:25201":{"id":"5:5305:25201","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert_eq!(\"GR√º√üE, J√ºRGEN ‚ù§\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:11945:25072"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7157:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5294:33437":{"id":"5:5294:33437","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Œ£\";\n\nassert_eq!(\"œÉ\", sigma.to_lowercase());\n\n// but at the end of a word, it's œÇ, not œÉ:\nlet odysseus = \"·ΩàŒîŒ•Œ£Œ£ŒïŒéŒ£\";\n\nassert_eq!(\"·ΩÄŒ¥œÖœÉœÉŒµœçœÇ\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"ÂÜúÂéÜÊñ∞Âπ¥\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7157:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7157:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2237-0:75:1644":{"id":"b:2:2237-0:75:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:2135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2231:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2239:1978"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:107:657":{"id":"0:107:657","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[147,16],"end":[147,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8970:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8959:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:111":{"id":"0:111","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,27],"end":[147,36]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2684:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"VersionMeta","id":"0:95:1667","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:69:1016":{"id":"0:69:1016","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[71,42],"end":[71,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Channel","id":"0:48:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::option::Option","id":"2:48673:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:38600:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2688:225-0:121:1651":{"id":"a:2:2688:225-0:121:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2688:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:5304:2655":{"id":"5:5304:2655","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7157:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7157:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8144:7356-0:121:1651":{"id":"a:2:8144:7356-0:121:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8144:7356","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersionParseError","id":"0:121:1651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:129:1743":{"id":"0:129:1743","crate_id":0,"name":"MinorVersionMustBeZeroAfter4","span":{"filename":"src/lib.rs","begin":[288,4],"end":[288,32]},"visibility":"default","docs":"Minor version component must be zero on LLVM versions later than 4.0","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"2:11848:6137":{"id":"2:11848:6137","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"yÃÜ\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'yÃÜ'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:11864:410"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:50634:2099","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11891:23981":{"id":"2:11891:23981","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:11864:410","str::splitn":"2:11888:1714","self::pattern":"2:11525:2091"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:50786:2114","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11530:2084","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11530:2084","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11545:2085","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2544-0:75:1644":{"id":"b:2:2544-0:75:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LlvmVersion","id":"0:75:1644","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2547:127","2:2548:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5291:33436":{"id":"5:5291:33436","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7157:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7157:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11530:2084","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"paths":{"2:48624:6181":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"5:1366:2406":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"17:1962:6642":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"17:11217:3291":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"1:8926:106":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"6:5845:5162":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:2685:222":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"17:11174:3281":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"2:20814:7438":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:7953:2646":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"1:621:2610":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"6:4471:4817":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"17:10625:3209":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"2:22269:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"2:39813:6060":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"2:47395:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:9185:2576":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"1:10704:118":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"2:2681:2135":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"17:12756:3678":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"12:985:5973":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"16:6123:3958":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"2:22767:2599":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"17:13126:3774":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"17:9644:6675":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"17:10490:3190":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"17:9263:6654":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"17:12087:3469":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"17:9339:6661":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"2:47012:5499":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"5:6917:2408":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:1753:5390":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"0:152:1725":{"crate_id":0,"path":["rustc_version","Error","UnknownPreReleaseTag"],"kind":"variant"},"16:6790:4081":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"2:50928:2107":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"18:636:3008":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"16:6186:3960":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"17:9844:6691":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"2:47585:6086":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:2549:2830":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"1:4102:7313":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"1:11867:1030":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"2:29693:2601":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"6:1568:4540":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"16:6270:3961":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"12:1065:34339":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"2:2460:7302":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"18:113:23092":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"18:736:23101":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"16:7659:19292":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"5:6999:2408":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"5:1387:2408":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"16:4786:4010":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:46940:200":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"16:4545:4002":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"2:50006:5535":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"1:11391:6867":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"5:2880:33921":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"17:8241:19344":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"18:0:1891":{"crate_id":18,"path":["memchr"],"kind":"module"},"17:11800:3410":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"1:2476:2641":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"17:10875:3220":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"1:2573:2634":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"2:4565:12604":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"16:2727:3951":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"2:4401:2441":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"2:47428:6079":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:8762:2032":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"1:679:7230":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"1:10944:2876":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"17:11259:3296":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"2:52737:5577":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"2:50786:2114":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"6:4106:4651":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:2686:108":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"1:4673:7305":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"2:22071:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"2:2461:12616":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"20:400:2133":{"crate_id":20,"path":["semver","BuildMetadata"],"kind":"struct"},"2:47703:3006":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"2:47956:6110":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"17:8137:19341":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"2:11275:6134":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:3283:2638":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"2:2751:2270":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"5:3086:2406":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"14:215:5993":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"2:52559:5565":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"17:12008:3459":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"5:5139:2089":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"12:387:34338":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"17:9778:5824":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"2:21678:30591":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:2869:127":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"1:3316:2658":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"17:10088:3168":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"2:51263:6157":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"2:3379:12569":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"17:12730:3672":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:54525:5653":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"16:5525:5860":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"5:6003:7471":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"5:3057:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"1:10001:27248":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"2:48482:152":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"1:10357:2873":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"5:836:2765":{"crate_id":5,"path":["alloc","collections","binary_heap","retain","RebuildOnDrop"],"kind":"struct"},"16:6676:3968":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"17:10374:5830":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"17:11708:3396":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"2:52352:5557":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"6:4550:4844":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"5:5741:13019":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"5:3132:33761":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:50442:6040":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"16:5949:5911":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"1:11885:1461":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"6:1701:4630":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"17:13478:3885":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"16:4357:3997":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"17:11054:3260":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"17:13176:3786":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"6:5751:5140":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:9487:2829":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"16:7543:3965":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"6:595:4503":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"1:5432:2031":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:54487:5652":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:54590:5656":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"2:11550:2083":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:9283:2414":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"16:6376:19285":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"16:4519:4001":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"6:4234:4734":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:1436:143":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"6:4516:4828":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"1:5378:1623":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"2:48809:190":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"16:2341:3935":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"1:7275:27393":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"2:9504:2830":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"18:548:140":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"6:1531:4517":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"17:10257:6709":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"12:2053:5973":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:7091:149":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"17:8911:34362":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"1:10630:6923":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"5:1463:6802":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"1:7819:6180":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"16:4817:4011":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"6:5737:5135":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"5:0:283":{"crate_id":5,"path":["alloc"],"kind":"module"},"17:10608:3076":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"16:4721:4008":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"5:5615:2781":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"1:1575:2749":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"6:488:4440":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"6:1707:4633":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:8143:7357":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"0:137:127":{"crate_id":0,"path":["rustc_version","Error"],"kind":"enum"},"2:52975:5585":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:51683:5552":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"2:12141:32104":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"6:5520:5023":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"0:28:1698":{"crate_id":0,"path":["rustc_version","version_meta_for"],"kind":"function"},"1:11518:6205":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"2:49230:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:49705:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"2:57004:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:10139:3124":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"17:9250:6653":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"2:53597:5612":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:7473:3218":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"6:5551:5036":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"2:9234:140":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"1:1898:2608":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"9:676:18207":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"1:8161:2113":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"0:48:1631":{"crate_id":0,"path":["rustc_version","Channel"],"kind":"enum"},"9:0:1883":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"2:8249:2084":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"1:3240:2649":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"1:11886:775":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"2:49453:2427":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"17:13572:3906":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"2:51671:6174":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"2:22335:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"1:10051:6915":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"16:6034:6744":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"2:2770:7428":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"2:20807:7302":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"6:4408:4812":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:11596:12539":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"2:52306:5555":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"6:0:802":{"crate_id":6,"path":["libc"],"kind":"module"},"1:847:2406":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"6:5792:5151":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"5:6088:2800":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"1:956:6789":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"1:7832:129":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"2:47575:6085":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"17:13279:3838":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"20:129:2134":{"crate_id":20,"path":["semver","identifier","Identifier"],"kind":"struct"},"1:10724:25821":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"6:1586:4550":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"6:4663:4899":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:8959:207":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"18:521:23103":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"12:2190:34333":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"18:707:2086":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"6:5670:5107":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:20601:7442":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"17:10296:6712":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"1:11267:2880":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"2:49977:6125":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"2:53987:5646":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"16:2579:3945":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:11525:2091":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"16:6704:4076":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"16:5219:3102":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"2:7521:30067":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"6:5592:5057":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"17:11734:3141":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"17:9947:19435":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:49070:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:3208:12510":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:48659:5521":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"5:6948:33760":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"5:6600:241":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"1:11350:6866":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"1:11830:27401":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"1:1891:1624":{"crate_id":1,"path":["std","error"],"kind":"module"},"1:5060:188":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"16:4385:3998":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"5:4103:2406":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"1:10138:2043":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"1:1568:2408":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"1:5563:2853":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"12:1845:2749":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"16:7388:6773":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"2:6868:2855":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"6:7236:5365":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"6:5682:5112":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:50918:2106":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"5:5143:2090":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"17:11721:3399":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"6:6519:5315":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:48791:6842":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:4064:27249":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"17:10310:6713":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"6:5709:5121":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"5:688:110":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"1:7585:5676":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"6:579:4493":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"2:20663:7436":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:51296:2119":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"14:165:18365":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"1:10849:25827":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"17:9722:1629":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"2:51383:6162":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"6:6419:5254":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"17:12955:3729":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"16:7237:4141":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"6:5544:5032":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"17:8110:19328":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"2:49994:144":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"2:47230:6064":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"20:299:1629":{"crate_id":20,"path":["semver","Version"],"kind":"struct"},"16:5472:3963":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"16:6463:5940":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"1:10654:6190":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"6:4189:4712":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:51276:2118":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"2:53207:5590":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:3159:2650":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"14:160:6779":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"16:2411:3938":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"2:52661:5569":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"2:3193:31056":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"17:9303:3117":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"16:3263:3984":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"2:1739:12708":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"12:1534:6797":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"6:4277:4753":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"16:5780:5886":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"17:13340:3845":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"1:11884:1464":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"2:47348:6074":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"17:10434:5836":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"6:6332:5224":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"1:10422:2648":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"6:562:4485":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"2:9248:144":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"17:13134:3777":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"2:12359:202":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"2:2308:124":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"5:2604:5385":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"16:5460:5855":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"17:12934:3724":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"1:588:7223":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"2:46774:12513":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"15:214:18382":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"2:49793:2423":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"17:8871:6646":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"1:5492:2035":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"1:558:6853":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"6:6385:5247":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"16:5596:4019":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"17:10973:3244":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"17:9658:6676":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"16:8069:127":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"17:3125:6644":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2:54317:5649":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"2:6476:2468":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"9:622:18220":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"1:8155:2097":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"1:1824:2569":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"1:4629:7343":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"2:48568:5519":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"1:8222:6181":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"1:4426:7319":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"16:2930:18424":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"6:5730:5134":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"17:11576:3378":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"1:7596:6885":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"2:11751:111":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"2:49969:2417":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"2:21744:1739":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:11835:7231":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"17:13141:3778":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"17:9475:6669":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"5:6932:2781":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"16:6690:3969":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"17:12485:3522":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"11:36:4339":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"6:554:4480":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"17:11939:3445":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"1:9001:25807":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"1:10672:6196":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"17:11368:3328":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"16:7211:4140":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"2:2944:2140":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:9063:215":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"1:8852:7389":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"6:1538:4520":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"2:25577:2600":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:11887:1518":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"2:46821:6061":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"5:7251:2803":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"5:6202:2759":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"17:10207:6702":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"1:534:2843":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"17:12739:3676":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"16:6059:34351":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"2:48505:5510":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"17:12550:3573":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"16:2825:3955":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"1:7484:6927":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"2:53781:5614":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"2:2800:7429":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"17:2916:6643":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"1:11029:25817":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"6:6339:5228":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"17:386:6634":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"0:133:1665":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","TooManyComponents"],"kind":"variant"},"5:6970:195":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"2:47400:2060":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"2:11238:6131":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"2:48990:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"12:669:6782":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"6:5490:5006":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"16:3457:3019":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"2:1638:578":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"2:46735:2410":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"2:2775:4094":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"1:8499:5740":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"6:5759:5143":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"2:2674:217":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"5:6908:5387":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"2:0:487":{"crate_id":2,"path":["core"],"kind":"module"},"17:13382:3858":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"6:7224:5363":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"6:4525:4833":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"17:11536:3370":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"17:8418:19350":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"17:13413:3866":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"2:47594:6088":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"5:219:2757":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"5:2162:6018":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"1:9111:6187":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"2:10146:2114":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"17:8475:19329":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"1:10867:2034":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"17:9764:5823":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"6:6312:5218":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:7100:2142":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"6:5615:5070":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"1:7809:5678":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"5:6962:2408":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"1:11875:632":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"1:4835:7341":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"2:50981:2105":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"6:7265:5372":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"7:79:18193":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"1:7873:2645":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"17:9422:6663":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"16:6829:5968":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"1:4844:7342":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"5:1228:6792":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:11846:25808":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"6:1728:4641":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:2156:579":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:4568:5243":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"17:9751:5822":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"2:48611:6122":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"17:12797:3691":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"2:11314:6136":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"17:10949:3230":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"5:273:2759":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"6:5597:5058":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"20:279:6910":{"crate_id":20,"path":["semver","error","Position"],"kind":"enum"},"1:10649:6188":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"16:2993:3980":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"6:1601:4562":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"1:4498:7334":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"2:54738:5666":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:8056:2039":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"16:4262:3994":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"6:7259:5371":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"17:10321:3176":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"2:54621:5659":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"12:1555:6798":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"17:12265:3502":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"2:7152:2141":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:20657:7434":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"2:4026:12509":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"2:46852:195":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"1:8967:6910":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"16:6359:5936":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"1:5916:203":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"17:12278:3503":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"16:7929:6775":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"2:52853:5580":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"2:47525:6841":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"6:5635:5086":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"5:6512:2809":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"5:3488:2406":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"16:5433:5851":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"1:8820:5741":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"1:4750:7300":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"6:5605:5063":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"17:12874:3706":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:2345:186":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:3391:2041":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"17:13024:3746":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"0:26:1701":{"crate_id":0,"path":["rustc_version","version_meta"],"kind":"function"},"2:2506:132":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"5:7052:2023":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"6:4639:4889":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"1:5686:6876":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"6:4290:4758":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"6:4683:4909":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"17:9283:6656":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"18:531:5804":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"17:12909:3716":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"17:10997:3245":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"1:8987:5746":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"2:4110:6028":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"2:20626:7432":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"17:11161:3279":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"17:9805:3197":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"6:4210:4720":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"12:1866:6006":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"1:3448:2052":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"5:2094:6013":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"16:6719:34350":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"2:11093:1699":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"2:47534:2630":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"2:12107:135":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"17:8981:6648":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"16:5815:19282":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"2:2829:12679":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"17:487:6635":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"2:3508:2781":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"16:5510:5857":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"1:3923:7289":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"16:2749:3952":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"2:47302:12610":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"6:4447:4815":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"17:11761:3405":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"17:12251:3499":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"2:51641:5549":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:2359:7266":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"2:48522:5512":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"2:2682:2264":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"2:20369:31010":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"2:51242:12542":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"6:4195:4713":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"16:3402:3985":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"19:0:1012":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"17:12816:3692":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"17:11125:3272":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"17:12964:3730":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"12:0:1886":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"2:47282:6066":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:54581:5655":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"17:11853:3417":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"6:1556:4531":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"16:6017:6741":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"1:4318:6871":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"5:1432:6782":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"1:11871:1447":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"17:10385:5834":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"2:57017:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:47738:2631":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:22005:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"1:9022:5749":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"5:5549:229":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"17:247:6633":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"2:47215:2104":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"5:784:2762":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"13:226:4333":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:49809:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"2:50868:2110":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"18:599:34367":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"1:4983:6872":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:11882:1462":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"17:8666:3107":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"2:10174:6831":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"6:4561:4850":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"6:6440:5261":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"17:8796:3111":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"12:697:6783":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"12:1628:2753":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"16:6298:5926":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"2:3180:12587":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"16:3566:3986":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"16:6345:3966":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"6:4377:4802":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"1:10416:2650":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"1:1083:6795":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"16:6781:6756":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"17:9371:6650":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"1:1564:2406":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:2796:7427":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"2:4709:2074":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"1:7665:7228":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"1:1771:599":{"crate_id":1,"path":["std","env"],"kind":"module"},"2:21617:30583":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:0:1361":{"crate_id":1,"path":["std"],"kind":"module"},"5:7234:2749":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"16:2465:3940":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"6:4621:4881":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"16:5793:5846":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"1:11511:6205":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"2:48860:2406":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"17:12948:3727":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"6:6458:5272":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"16:6528:5942":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"1:2343:5392":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"2:51070:6139":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"2:50947:2093":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:3161:2651":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"17:12638:3636":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"1:2361:7267":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"2:1674:1068":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"2:20388:31151":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:8921:6904":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"1:2613:2644":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"16:7890:5988":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:39773:2038":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:51253:6153":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"6:4257:4744":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:11974:3456":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"16:3632:3988":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"1:8117:2628":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"17:12211:3496":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"6:5782:5149":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"2:50016:6126":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"16:2683:3949":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"2:47635:6094":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"5:4034:2619":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"17:10822:19355":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"8:0:1882":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"16:2261:18397":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"1:2345:7262":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"1:10950:2877":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"2:10091:6829":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:47258:5504":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"18:582:2275":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"17:12695:3671":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"6:6434:5260":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:7477:2082":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"12:444:141":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"1:10314:2030":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"16:6137:5916":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"2:8960:2053":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"2:4229:6820":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"12:1852:6004":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"17:11684:3395":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"1:9982:2569":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"17:11909:3426":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"17:13071:3756":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"17:9539:6672":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"2:48758:5524":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:4756:781":{"crate_id":2,"path":["core","iter"],"kind":"module"},"16:3010:18425":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"2:2231:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"1:646:7229":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"2:29941:67":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"17:10445:3186":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"2:21475:6049":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"5:2876:5384":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"1:5014:6872":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"6:568:4488":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"17:11639:3389":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"17:8055:19330":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"17:13374:3857":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"1:8229:6182":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"16:2771:3953":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"5:7157:221":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"5:4297:2788":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"2:48950:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:3201:2653":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"16:7357:4143":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"2:2688:225":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"1:3439:29937":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"1:7541:2870":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"17:12198:3495":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"12:815:6784":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"6:4499:4819":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"2:47963:6111":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"2:52614:5568":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"5:6923:6021":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"1:939:7233":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"17:12307:3506":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"2:29919:5426":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"2:39809:6838":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"14:40:3245":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"1:8256:5721":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"2:20704:5398":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"2:2580:115":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"1:11870:1369":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"18:727:3012":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"17:10796:3215":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"1:8744:2030":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"16:5963:191":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"2:47997:5506":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"16:7329:3974":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"17:10752:3213":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"6:1713:4634":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"1:1051:5973":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"2:52537:5564":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"9:896:18200":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:47362:12612":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"2:49270:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"12:646:2407":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"9:592:18219":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"2:7087:133":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:9068:216":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"1:5495:2037":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"1:1571:2781":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"7:32:18186":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"17:11594:3379":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"17:13506:3894":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"16:7309:3973":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"2:56965:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:11606:3381":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"1:1788:2559":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"16:2657:3948":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"12:1859:6005":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"1:1927:2609":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"1:8185:7280":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"6:4201:4715":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"17:9897:6697":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"17:9700:6682":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"2:21605:2602":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"2:53631:5613":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:920:6796":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:2234:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"2:52328:5556":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:860:2407":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"17:12609:3625":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"16:0:1889":{"crate_id":16,"path":["gimli"],"kind":"module"},"16:5761:6720":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"2:2500:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"1:3123:29232":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"2:10659:6832":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"2:2808:12675":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"17:12884:3707":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"2:47042:5501":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:50460:6846":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:8573:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"17:11893:3421":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"2:47325:12611":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"17:12134:3476":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"17:11235:3292":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"0:0:1778":{"crate_id":0,"path":["rustc_version"],"kind":"module"},"17:12980:3734":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"5:1071:33919":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"3:0:434":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"17:13327:3839":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"16:5628:5868":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"1:2831:2849":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"2:2975:12512":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"17:11199:3283":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"12:274:5996":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"12:1872:6007":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"17:3249:6645":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"6:4693:4915":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"2:24:599":{"crate_id":2,"path":["core","env"],"kind":"macro"},"2:20386:31146":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:10160:6830":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:2812:12677":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"2:49690:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"5:5814:2619":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"2:2339:179":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"17:10466:5838":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"16:5839:19283":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"17:9274:6655":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"1:11056:5751":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"16:6070:4025":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"2:4346:2818":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"6:4716:4926":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"5:3093:6005":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"1:6576:214":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"17:8752:2097":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"2:7480:2409":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:5679:6873":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"6:6555:5334":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"17:10121:3171":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"17:11661:3390":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"17:10403:3213":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"5:781:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"2:47341:2103":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"2:1762:5393":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"5:3699:2759":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"5:5705:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"17:10506:3191":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"17:11356:3325":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"2:2993:7247":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"17:9930:3137":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"17:12118:3475":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"1:3901:7287":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"1:641:6856":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:52807:5579":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"2:47727:6103":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2:52883:5581":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"0:49:1633":{"crate_id":0,"path":["rustc_version","Channel","Dev"],"kind":"variant"},"5:7080:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"1:5556:2852":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"17:11547:3373":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"1:10933:2875":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"17:9061:3124":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"2:6659:12649":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"2:21331:7435":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:3824:1626":{"crate_id":1,"path":["std","num"],"kind":"module"},"17:8881:34361":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"6:506:4448":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"2:51099:6148":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"0:25:1532":{"crate_id":0,"path":["rustc_version","version"],"kind":"function"},"16:5664:5874":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"0:141:1693":{"crate_id":0,"path":["rustc_version","Error","CommandError"],"kind":"variant"},"6:1684:4623":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"16:5203:3101":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"16:7603:4159":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"17:11149:3276":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"2:52577:5566":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"0:127:1661":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","ComponentMustNotHaveSign"],"kind":"variant"},"16:2320:3934":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"17:11300:3308":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"9:33:18270":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"0:45:207":{"crate_id":0,"path":["rustc_version","Result"],"kind":"typedef"},"1:7849:118":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"2:46876:196":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"17:10670:5841":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"1:8932:6906":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"17:12514:3542":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"1:929:6783":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"17:9433:6664":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"6:4296:4761":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"6:4485:4818":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"6:6564:5337":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"5:6644:2800":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"6:6425:5256":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"6:1660:4606":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"2:21:668":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"2:53127:5589":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"17:11500:3361":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"5:7005:2408":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"3:223:207":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"2:47565:6083":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"5:1973:6803":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"16:7956:3979":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"12:1138:6795":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"12:2080:6792":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"6:474:4432":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"18:671:6631":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"1:3973:7292":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"17:10774:3181":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"2:5419:6029":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"5:4234:2788":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"16:4217:3993":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"2:48885:180":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"6:4788:4954":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"6:7276:5376":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"6:5851:5163":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"6:6287:5200":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"12:119:2743":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"5:5391:2796":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"2:56952:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:2594:127":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:51598:192":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"0:138:1690":{"crate_id":0,"path":["rustc_version","Error","CouldNotExecuteCommand"],"kind":"variant"},"17:12850:3704":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"2:47626:6093":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"2:48588:30576":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"2:47355:6075":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"2:2910:116":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"6:4645:4890":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"17:9909:3135":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"1:7688:2564":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"6:1642:4594":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:11889:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"2:12193:6836":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"2:21528:5401":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"17:9691:6679":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"17:1021:6637":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"1:11869:1339":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:47717:6102":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"17:11070:3264":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"1:2371:7272":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"6:526:4465":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"1:3977:7293":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"6:5508:5019":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"1:8105:2040":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"2:2503:147":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"16:4921:4014":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"17:8526:3103":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"1:11864:410":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"17:420:3062":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"5:7111:30558":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"12:2198:4337":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"17:0:1890":{"crate_id":17,"path":["object"],"kind":"module"},"1:1989:181":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"16:7059:5524":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"1:5712:6877":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"2:54610:5658":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:7708:6838":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"17:8774:3110":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"17:9317:6659":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"14:31:6779":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"1:6926:2866":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"15:175:18377":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"2:47687:6099":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:4671:7304":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"2:48733:2406":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"2:20816:5398":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:5755:2854":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"2:47766:6107":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"16:6284:3978":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"1:4727:2850":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"2:3163:231":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:7948:6891":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:21632:5408":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"5:4064:2619":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"1:11170:2045":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"16:3854:3991":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"17:13527:3900":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"6:4585:4862":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"17:11828:3415":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"17:12103:3471":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"2:50768:2115":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"2:20409:31148":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"2:4291:2817":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"12:810:6796":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"16:7093:4120":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"1:10684:5678":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"5:7064:2024":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"2:9030:2429":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"2:47412:30558":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:21223:5400":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"0:122:1739":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","ParseIntError"],"kind":"variant"},"2:21694:30551":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"1:10659:6179":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"16:2535:3943":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"5:2884:33923":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"2:51395:6165":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:9020:2425":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"16:5981:5914":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"1:6399:2863":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"2:9898:2113":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"5:3477:160":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"2:10018:6828":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"2:22170:2605":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"17:8822:34357":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"16:5388:3962":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"16:7452:195":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"6:4814:4971":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"6:1506:4507":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"1:8776:2033":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"2:47381:5505":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"2:4083:6817":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"17:12896:3710":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"1:413:162":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"16:5996:6727":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"16:3716:3990":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"1:355:6851":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"2:6565:12657":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"2:47646:6095":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"17:12674:3666":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"6:6963:5346":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"16:6743:19287":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"2:3991:6816":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"17:9118:34363":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"0:75:1644":{"crate_id":0,"path":["rustc_version","LlvmVersion"],"kind":"struct"},"2:56978:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:21329:7302":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"2:12440:7250":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"6:573:4490":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"17:11787:3408":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"6:6985:5347":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"13:0:1880":{"crate_id":13,"path":["std_detect"],"kind":"module"},"1:8806:6903":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"17:10894:3223":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"1:962:6790":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"1:4115:7314":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"2:2941:2139":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"2:38600:180":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"6:7230:5364":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"1:4166:6869":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"17:10182:3174":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"16:7278:3972":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:47021:4138":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"1:10837:2031":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"1:9382:6887":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"1:11093:5750":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"1:5549:203":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"5:1612:2759":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"2:4:996":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"1:4404:7318":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"5:4818:2619":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"2:48749:2408":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"1:10694:129":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"16:4327:3996":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"18:609:6626":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"16:7249:6766":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"16:7557:5980":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"16:7469:3976":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"17:12361:3520":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"17:13492:3887":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"17:11271:3297":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"2:54239:5648":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"17:9671:6677":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"2:12328:2840":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"1:8351:5732":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"2:9519:2835":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"2:4224:6819":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"17:10233:6707":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"2:50228:6129":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"2:3934:2619":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"2:3642:2408":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"12:822:7233":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"17:9401:3121":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"12:1840:2781":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"6:4669:4901":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"14:221:4286":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"2:47442:2061":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"typedef"},"2:3391:6814":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"1:1592:6006":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"16:6903:5746":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"17:13221:3796":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"2:50956:2092":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"2:50530:6848":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"17:13031:3747":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"2:7484:12653":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"2:50963:2103":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"2:22236:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"2:20407:31150":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"16:2631:3947":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"17:10583:19353":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"2:47272:6065":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"17:10075:6699":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"2:3153:12686":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"17:13148:3779":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"16:6619:4067":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"1:8974:6911":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"6:7247:5369":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"16:7319:5979":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"1:7034:27250":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"16:2433:3939":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"11:0:1885":{"crate_id":11,"path":["adler"],"kind":"module"},"16:5235:4017":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"9:827:18295":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"16:6241:5924":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"16:5411:3964":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"0:155:1765":{"crate_id":0,"path":["rustc_version","Error","LlvmVersionError"],"kind":"variant"},"2:56582:7469":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"17:12781:3688":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"2:47655:6096":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"2:22137:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:8240:6900":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"1:933:6784":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"1:8510:6186":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"20:354:2131":{"crate_id":20,"path":["semver","Op"],"kind":"enum"},"1:1065:6791":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"17:11315:3314":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"1:4632:7318":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"1:2213:2813":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"5:632:6799":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"2:29955:30561":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"6:4216:4722":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"17:12617:3628":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"17:8561:3104":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"16:2793:3954":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"16:7135:34352":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"17:12022:3461":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"17:12225:3497":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"17:10476:19461":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"12:853:6789":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"2:5663:31806":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"6:1894:14434":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"17:12176:3484":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"2:1645:5389":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"16:6668:4073":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"5:864:2767":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"6:4162:4689":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"5:1243:6791":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"2:52759:5578":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"17:10108:6701":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"2:22104:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"6:5723:5132":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"2:51411:6169":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"6:4747:4939":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"5:7168:6027":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"17:12322:3510":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"16:2300:3928":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"6:4267:4750":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"2:12385:139":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"6:4389:4811":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"9:956:18202":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"2:2859:12683":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"16:2367:3936":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"15:193:18378":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"18:614:34366":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"2:21640:5409":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"17:11617:3382":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"5:1959:2645":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"2:38617:2275":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"18:80:23090":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:51471:12809":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"2:52707:5576":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"2:3174:12588":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:9018:2424":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"4:0:1881":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"17:9631:6674":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"1:4246:6870":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"6:4575:4856":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"6:5886:5188":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"1:8148:2631":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"16:5614:5867":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"1:8248:6897":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"17:12860:3705":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"17:9165:34360":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"0:53:1637":{"crate_id":0,"path":["rustc_version","Channel","Beta"],"kind":"variant"},"16:5163:4016":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"1:1074:6792":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"2:10692:6833":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"17:8441:19351":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"2:21549:5403":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:1597:6007":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"5:6350:2759":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"5:3501:2407":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"2:4375:2273":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:4564:5239":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"17:10532:127":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"20:90:6951":{"crate_id":20,"path":["semver","error","QuotedChar"],"kind":"struct"},"2:11539:2086":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"18:755:5819":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"1:7681:6176":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"1:8096:2659":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"17:11873:3420":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"18:515:2991":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"16:2605:3946":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"1:11706:2885":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"2:48647:5520":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"2:9164:6826":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"6:4304:4766":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"14:202:12549":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"16:6052:6752":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"17:9681:3054":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"16:4662:4006":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"2:50517:6044":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:10209:1623":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"2:8970:131":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"1:7671:6175":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"6:482:4437":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"2:7050:12655":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:8868:7390":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"2:9026:191":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"1:8884:7391":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"5:1091:33785":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"2:48724:2405":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"6:4506:4821":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"6:4364:4798":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"2:9024:2427":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"2:52406:5559":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2:47978:2658":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"6:4459:4816":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"1:11877:729":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"1:8790:2034":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"18:652:2988":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"16:2894:18423":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"2:3245:12511":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"17:13114:3771":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"6:5514:5022":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"16:2557:3944":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"16:4635:4005":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"18:644:2988":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"2:50391:6845":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"17:8941:6647":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"1:1580:6004":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"2:54715:5665":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"17:13184:3788":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"2:9288:2415":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"17:9553:3124":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"1:11218:6200":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"16:5541:5862":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"1:3772:6868":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"5:3902:2759":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"1:11412:6868":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"2:52905:5582":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"16:2842:3956":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"1:3605:7283":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"1:9387:2872":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"2:50682:2112":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:4094:7312":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"2:52951:5584":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"17:10420:3185":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"6:4631:4885":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"1:3051:2660":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"2:4152:2438":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"2:7129:120":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"2:8145:6823":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:484:2842":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"1:5172:187":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"6:4356:4793":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"17:13082:3760":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"17:9885:6696":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"17:10497:19462":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"16:6593:5955":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"2:48868:2407":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"17:13518:3896":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"7:0:1508":{"crate_id":7,"path":["unwind"],"kind":"module"},"16:6109:4028":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:2845:4101":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"17:1771:6638":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"1:11879:731":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"5:6275:2408":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"5:3153:6007":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"6:4284:4756":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"18:699:5811":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"2:20788:7433":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"17:13580:3909":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"1:8493:2406":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"1:1847:2576":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"6:6489:5298":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"1:3199:2652":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"2:51403:6167":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"16:6816:5965":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"18:481:5802":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"5:1443:6783":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"6:6402:5249":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:49110:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:3670:6867":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"1:8174:6897":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"6:4820:4973":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"2:46896:199":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"16:4749:4009":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"2:2839:4100":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"6:7253:5370":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"1:11868:308":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"17:12836:3700":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"12:1029:6792":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"12:861:6790":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"1:9119:28194":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","fast","DtorState"],"kind":"enum"},"1:2210:6863":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:47505:6044":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"2:47319:2104":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"16:4689:4007":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"5:4219:242":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"16:6842:5971":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"17:8701:3108":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"2:53104:5588":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"5:1413:6003":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"6:6362:5246":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"17:13366:3854":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"5:3119:6006":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"2:30013:30550":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"2:50650:2097":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"2:21071:7460":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"1:11147:2878":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"1:5999:1631":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"9:863:18199":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"17:9031:34364":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"2:20614:7302":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"2:11349:2094":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:9016:119":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"1:8979:6912":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"6:1517:4512":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"6:6582:5340":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:21422:6048":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"2:50622:2102":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"6:6991:5349":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"17:12291:3504":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"1:904:2781":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"1:5347:2028":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"2:9873:2407":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"2:47987:2824":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"2:9022:2426":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"0:121:1651":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError"],"kind":"enum"},"5:3098:33759":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"2:58313:5675":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"17:13459:3880":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"2:53443:5609":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"6:494:4443":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"1:6747:7430":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"2:4301:2439":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"1:11251:6203":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"6:5533:5024":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"6:4317:4772":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"5:3245:2749":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"2:49735:127":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"16:5494:19280":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"16:6567:5954":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"20:385:2132":{"crate_id":20,"path":["semver","Prerelease"],"kind":"struct"},"17:13039:3748":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"6:1744:4645":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"17:11528:3368":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"2:22302:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"2:47752:6106":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"2:14:1649":{"crate_id":2,"path":["core","write"],"kind":"macro"},"17:11330:3320":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"18:590:2996":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"17:11841:3416":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"17:12630:3635":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"18:690:5810":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"17:11951:3447":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"9:19:18269":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"2:49150:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"5:2375:5381":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"17:10360:5826":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"1:2208:128":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"17:13231:3801":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"12:60:34337":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"6:4112:4652":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"6:4826:4976":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"2:52596:5567":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:8401:5535":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"16:3188:3983":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"2:53073:5587":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"17:13594:3912":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"17:10455:3189":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"2:2513:234":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"16:6252:5925":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"16:7825:4197":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"2:8741:31835":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"2:50562:6046":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"2:50886:2111":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2:11063:12766":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"5:4264:2619":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"5:1257:6795":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"16:7497:3967":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"16:5447:6718":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"6:119:13099":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"2:2765:7426":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"2:51654:158":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"2:49439:2424":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"16:7970:5992":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"5:2065:6011":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"2:9980:6827":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"17:12164:3482":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"2:2693:2265":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"6:7299:5379":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"17:9382:3119":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"5:6978:6022":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"17:10270:6710":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"2:50480:6847":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"17:12148:3478":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"2:54662:5662":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:6475:7386":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"2:54129:5647":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"2:8736:30066":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"16:6654:4071":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"18:538:2993":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:51116:6149":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:7704:2571":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"17:13091:3763":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"1:9073:5750":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:51633:6303":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"2:1827:5396":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:4566:5241":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"17:11186:3282":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"1:8333:7349":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"17:8162:19342":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"2:2851:12681":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:6827:2880":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","fast","Key"],"kind":"struct"},"1:7865:2643":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"2:22368:2604":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"2:21657:30580":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"2:22203:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"1:8300:5722":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"2:56991:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"16:6316:5934":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"1:10714:2040":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"6:5578:5056":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"17:8510:3102":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"1:9877:6119":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"2:2863:12684":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:2539:2642":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"16:7511:4150":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"16:7942:6778":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"1:6884:6957":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"1:11881:1465":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2:46836:197":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"2:47547:6081":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:50972:2104":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"17:10332:19460":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"2:46994:6839":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"0:95:1667":{"crate_id":0,"path":["rustc_version","VersionMeta"],"kind":"struct"},"16:7980:19293":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"18:507:2988":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"1:8483:6183":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"17:11034:3259":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"12:2184:4335":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:52476:5562":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:4554:7290":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"2:51387:6163":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"5:1376:2407":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"18:766:23102":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"0:147:1735":{"crate_id":0,"path":["rustc_version","Error","UnexpectedVersionFormat"],"kind":"variant"},"1:5240:119":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"1:10226:28235":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"12:1085:6793":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"5:3568:2759":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:6123:6878":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"1:7792:3055":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"2:2725:2267":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"1:2386:1625":{"crate_id":1,"path":["std","io"],"kind":"module"},"17:10642:19354":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"2:12317:106":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"6:4136:4669":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"5:2142:33895":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"2:12168:189":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"1:6472:6881":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"2:49190:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"9:505:18344":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:56939:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:2217:2627":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"2:4730:32221":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"17:9362:3124":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"2:50491:5540":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2:20538:7440":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"2:49310:6825":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"6:5482:5004":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"1:10419:2652":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"6:7289:5377":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"2:48876:2408":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"17:9526:6671":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"2:52458:5561":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"2:53331:5607":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"17:9446:6665":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"9:111:18214":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"2:2684:223":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"16:7166:19289":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"2:50938:2095":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:925:6782":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"6:5743:5138":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"1:10462:2874":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"12:1518:18360":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"1:10828:4411":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"6:4736:4933":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:47556:6082":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"2:49030:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"17:11436:3332":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"16:6517:5941":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"17:9857:6693":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"1:8424:5735":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:50714:2117":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"17:9873:6695":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"1:7943:6890":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"2:48539:7282":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"6:4708:4921":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"17:9458:6666":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"2:51085:6145":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"17:13007:3738":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"17:12046:3464":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"6:5702:5120":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"1:11017:2033":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"1:6178:2852":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"2:2934:2137":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:53567:5611":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"16:7372:34349":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"5:679:228":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:51438:121":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"6:4700:984":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"17:11774:3407":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"18:96:23091":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"2:47028:6840":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"9:709:5535":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"5:7097:2059":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"1:4086:7311":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"2:51415:6170":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"6:4544:4841":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"5:5095:2759":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"6:4241:4738":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"6:1606:4564":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:54636:5660":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:11327:2881":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"9:188:18249":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"5:2874:33922":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"5:6940:2771":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"5:1454:195":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"2:11079:6834":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"2:3979:6815":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"16:7872:5985":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"1:3373:2051":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"1:6075:2840":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"1:3126:29243":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"1:3871:7285":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"1:7802:6179":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"16:7267:5974":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"2:9849:2406":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"17:967:6636":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"16:6865:5972":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"2:47603:6089":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"18:719:3009":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"16:6171:4030":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"1:11203:5760":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"17:9071:34365":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"1:7601:5677":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"1:8089:2657":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"16:4441:4000":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"2:50470:6043":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"16:6877:19288":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"16:3026:3015":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"2:47949:6109":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"12:632:2406":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"5:3623:6803":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"6:4755:4941":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:2938:2138":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"17:9577:3130":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"5:4722:201":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"12:1836:2408":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"6:4149:4679":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"5:5197:1369":{"crate_id":5,"path":["alloc","str"],"kind":"module"},"6:6321:5219":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"16:4849:4012":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"2:2738:2136":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"6:1524:4515":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"1:9375:128":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"2:50832:2109":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:3328:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"2:3168:134":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"5:6483:2796":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"2:30119:30567":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"2:5884:6032":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"18:681:5807":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"16:5558:19281":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"17:10528:6715":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"17:8339:19347":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"16:5878:18396":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"6:5871:5177":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"16:8014:4138":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"1:8180:6899":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"16:4606:4004":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"6:4591:4865":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:54700:5664":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"2:2804:12676":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"5:7140:2058":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"6:1580:4548":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"1:870:2408":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:49696:130":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"16:6146:5917":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"17:11247:3295":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"5:6669:2812":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"12:353:2747":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"2:50552:6849":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"5:1422:6796":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"2:47221:6063":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"2:29913:5424":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"6:4537:4840":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:1554:2619":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"17:10845:3186":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"17:10159:3173":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"2:53285:5606":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:11245:6202":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"9:586:4343":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"2:4355:2440":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"2:54777:5667":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"2:2786:12674":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:734:141":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"1:3929:7290":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"5:1329:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"12:1120:6794":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"2:54441:5651":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"2:54685:5663":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"2:51391:6164":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"2:2780:4091":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"6:4615:4878":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"1:6091:2859":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"1:10824:2571":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"2:54601:5657":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:4893:7348":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"1:8907:5745":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"11:44:4340":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"1:1786:2558":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"5:36:2755":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"2:51399:6166":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:6322:6879":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"2:2997:7248":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"2:11545:2085":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"6:4654:4893":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"17:9183:6652":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"17:9021:6649":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"18:491:5803":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"17:10062:6698":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"17:8393:19349":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"1:1849:2577":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"2:8144:7356":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"6:6279:5195":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"16:7343:3975":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"16:7483:3977":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"16:4574:4003":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"12:2069:6791":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"16:7909:5991":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"17:8272:19345":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"17:242:6632":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"1:11005:2032":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:10053:2112":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"17:9350:3096":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"2:49446:2426":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"2:52374:5558":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"5:1055:33784":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"2:29879:5423":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"17:11485:3357":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"2:50634:2099":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"6:652:13457":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"17:13059:3755":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"2:48817:207":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"6:7008:5360":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"1:6611:6879":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"2:8568:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:51164:6150":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"6:547:4477":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"5:961:2759":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"17:9601:3132":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"17:9831:6688":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"6:5564:5045":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"17:12060:3465":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"17:562:3218":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"16:6330:4033":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"2:49757:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"2:46962:2017":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"16:7288:5977":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"6:4726:4932":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"1:7797:6887":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"1:5363:2029":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"17:10283:6711":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"17:13436:3879":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"10:0:1884":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"1:11865:1481":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"6:4608:4876":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"1:6286:163":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"1:11468:5761":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"0:144:1759":{"crate_id":0,"path":["rustc_version","Error","Utf8Error"],"kind":"variant"},"17:9488:6670":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"17:9155:6651":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"0:149:1762":{"crate_id":0,"path":["rustc_version","Error","SemVerError"],"kind":"variant"},"17:11748:3404":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"5:2055:2776":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"17:12237:3498":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"2:50224:6128":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:8168:2106":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"15:0:1888":{"crate_id":15,"path":["addr2line"],"kind":"module"},"2:47668:6097":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"6:541:4474":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"17:11087:3266":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"5:3943:2407":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"17:9712:3133":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"14:7:6779":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"12:393:34334":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"5:3680:2749":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"1:11878:730":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"6:6510:5312":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"16:7426:6774":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"20:320:2129":{"crate_id":20,"path":["semver","VersionReq"],"kind":"struct"},"17:11813:3412":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"2:7207:156":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"17:9328:6660":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"16:6735:6755":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"6:1674:4617":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"17:11106:3271":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"16:6472:4056":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"1:7857:6889":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:49432:2425":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"18:624:34369":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"17:8631:3106":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"17:9820:6687":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"2:11530:2084":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"6:532:4468":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"2:39822:2268":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"2:51407:6168":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"17:10245:6708":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"16:534:5844":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"6:123:13100":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"2:3090:7249":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"16:5703:5877":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"20:220:127":{"crate_id":20,"path":["semver","parse","Error"],"kind":"struct"},"1:8234:7315":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"6:1720:4637":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"12:300:5999":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"2:9696:7302":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"12:2205:2023":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"2:52262:5553":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"6:5453:4980":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"17:9791:5825":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"1:11074:5759":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"17:11515:3366":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"1:950:6787":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"17:8368:19348":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"16:2487:3941":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"2:2303:185":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"17:10854:19356":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"17:10721:3212":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"17:9108:6650":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"1:11883:1463":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"17:11288:3305":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"2:20575:7441":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"5:7179:6813":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"6:7176:5361":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"16:4413:3999":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"1:3985:7295":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"1:8138:2630":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"17:13214:3794":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"17:13100:3764":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"1:11233:6242":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"6:1547:4525":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"1:11862:367":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"2:54647:5661":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"17:9738:5820":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"17:10350:3181":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"16:4297:3995":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"5:1708:2749":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"0:55:1639":{"crate_id":0,"path":["rustc_version","Channel","Stable"],"kind":"variant"},"2:48673:178":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"2:50732:2116":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"6:4602:4873":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:51459:6171":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"2:6612:31027":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:3915:7288":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"5:6502:2808":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"1:1586:6005":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"17:13557:3905":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"2:47475:2076":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"16:2509:3942":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"1:7622:2874":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"6:4807:4968":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"1:8441:7366":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"16:7044:34354":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"1:9052:164":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"1:3120:28155":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"20:335:2130":{"crate_id":20,"path":["semver","Comparator"],"kind":"struct"},"1:11486:5762":{"crate_id":1,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"2:50608:1759":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"6:4222:4725":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:10132:2115":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:2834:12680":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:20655:7302":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"2:9405:2826":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"1:891:6003":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"6:4327:4779":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"1:7522:2868":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"1:11874:631":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:21730:2603":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"17:10708:5842":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"16:2868:3957":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"1:3667:6866":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"16:7298:5978":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"6:6548:5331":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"2:1921:5397":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"2:50572:6850":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:9293:6657":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"2:20341:2275":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"17:10682:3211":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"1:361:6852":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"2:2817:4096":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"1:2867:207":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"2:51228:6152":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"17:13404:3864":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"1:11863:921":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2:49672:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"14:0:1887":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"2:50451:6041":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:7650:7226":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"2:6808:2657":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"6:4437:4814":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"17:12349:3513":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"6:62:13045":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"17:12033:3462":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"17:13536:3902":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:2868:12685":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:5313:2026":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"2:48005:6114":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"12:1832:2406":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"16:3689:3989":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:51580:202":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"17:13354:3851":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"1:11880:727":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"2:47617:6092":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"5:3127:6004":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"17:8212:19343":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"2:4003:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"1:8750:183":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"16:6161:19284":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"17:12337:3186":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"1:8798:2406":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"12:751:2781":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"6:1649:4598":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"6:500:4445":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"2:47972:6112":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"2:49985:2416":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"17:11014:3249":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"6:4569:4854":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"6:4771:4946":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"1:3430:2053":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"1:878:6002":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"12:762:2749":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"13:110:34340":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"2:50640:2098":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"17:11559:3375":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"6:1614:4569":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"16:7396:19290":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"2:2923:2411":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"12:725:6002":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"17:13168:3785":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"2:47678:6098":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"16:5374:3959":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"2:2509:235":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"2:21723:6055":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"6:587:4498":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"17:8494:3101":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"6:7218:5362":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"6:4339:4785":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:21565:6050":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:8944:25805":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"14:187:18372":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"6:4345:4788":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"18:574:2988":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"0:125:1658":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","ComponentMustNotHaveLeadingZeros"],"kind":"variant"},"2:9941:2094":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:6359:6111":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"5:2873:2513":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"12:834:6787":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"2:47294:2105":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"5:288:2088":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"17:1931:6639":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"2:2254:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:20783:7302":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"2:47485:2075":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"2:2855:12682":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"6:1511:4509":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:4220:204":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"1:6363:6880":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"1:8814:2408":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"5:5725:2794":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"2:48910:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"12:2178:4334":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"17:8991:34359":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"2:50024:6127":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:50543:6045":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"2:21581:5404":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"16:5184:18395":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"16:8056:4210":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"1:11888:1105":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"17:13393:3863":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"2:53521:5610":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"9:382:18304":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"12:738:6003":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"1:8278:5228":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"1:6226:203":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"2:47035:2439":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"6:6534:5322":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:50814:2108":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"17:11343:3324":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"16:2705:3950":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"12:777:2752":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"1:914:2749":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"16:2389:3937":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"1:638:6854":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"2:48800:12756":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"18:660:6627":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"2:11486:1627":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"2:52507:5563":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"16:5122:4015":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"2:54379:5650":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:8274:6901":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"1:9092:5751":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"1:1986:182":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"2:9011:111":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:22038:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"17:11997:3457":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:2824:12678":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"17:9193:34356":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"16:6496:19286":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"1:11164:6197":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"5:3872:2781":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"17:10921:3224":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"5:1212:5973":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"1:8839:5742":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"2:5496:6031":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:4669:7301":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"18:564:2995":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"17:10546:19352":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"12:1681:143":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"12:659:2408":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"16:7117:34353":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"17:12768:3683":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"2:51590:208":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"2:54563:5654":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"9:800:4395":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"16:4144:3992":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"2:9706:219":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"6:4249:4741":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"17:12926:3721":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"5:6156:2781":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"9:920:18201":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"16:7847:4198":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"1:3865:7286":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"0:131:1663":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","MinorVersionRequiredBefore4"],"kind":"variant"},"17:13158:3782":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"17:1903:19393":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"17:10394:5835":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"12:320:2745":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"2:49723:109":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"2:52436:5560":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"2:47242:30552":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"5:881:2406":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"16:7637:5981":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"17:12748:3677":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"1:3238:2648":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"17:13203:3793":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"17:11137:3275":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"17:13192:3789":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"2:51191:6151":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"2:12120:12622":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"17:9627:6673":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"5:4630:657":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"16:4888:4013":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"2:2497:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"1:6528:7388":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"12:1003:6791":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"17:9501:3117":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"1:7584:7302":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:52929:5583":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2:48741:2407":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:53361:5608":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"6:4427:4813":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"9:977:4414":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"16:2282:3926":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"1:6542:2864":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"16:3599:3987":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"1:11037:5546":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"1:505:2776":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"9:649:18221":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"16:6210:5922":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"16:153:2740":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"2:52282:5554":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"17:10221:6706":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"1:3346:2619":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"5:4939:2794":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"17:8951:34358":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"0:51:1635":{"crate_id":0,"path":["rustc_version","Channel","Nightly"],"kind":"variant"},"5:1404:6002":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"17:12073:3466":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"17:8596:3105":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"16:6200:5921":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"2:21756:2606":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"2:7054:12654":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"6:4778:4949":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"17:8295:19346":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"1:3455:2050":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"1:11876:732":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"6:4371:4800":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"2:51419:5546":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"1:5327:2027":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"2:9028:2428":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"6:6303:5212":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"5:7127:2057":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"2:46918:198":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"5:3611:2645":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"12:98:5995":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"12:1044:18359":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"2:2792:4095":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"2:21235:31008":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"6:1692:4624":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"6:4675:4904":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"17:10520:3194":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"2:58292:5674":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"2:50664:2113":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"2:50209:5539":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"2:53026:5586":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"16:7567:19291":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"20:0:1628":{"crate_id":20,"path":["semver"],"kind":"module"},"2:11298:6135":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:21066:7437":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"6:4125:4661":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"16:5737:5883":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"6:4310:4769":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"17:9223:19361":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"6:5694:5119":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"17:8814:128":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"17:13047:3749":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"17:12972:3732":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"16:7435:4147":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"2:20354:31010":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"2:51048:12537":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:5900:2852":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"1:3963:7291":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"0:129:1743":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","MinorVersionMustBeZeroAfter4"],"kind":"variant"}},"external_crates":{"20":{"name":"semver","html_root_url":"https://docs.rs/semver/1.0.17/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":24}