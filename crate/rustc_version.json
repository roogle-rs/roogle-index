{"root":"0:0:2162","crate_version":"0.4.0","includes_private":false,"index":{"0:152:2149":{"id":"0:152:2149","crate_id":0,"name":"LlvmVersionError","span":{"filename":"src/lib.rs","begin":[360,4],"end":[360,43]},"visibility":"default","docs":"An error occurred in parsing a `LlvmVersion`.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:154:1956"]},"discriminant":null}}},"5:5613:34485":{"id":"5:5613:34485","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:304:2490","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:304:2490","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:148:1956":{"id":"0:148:1956","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[356,16],"end":[356,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"semver::Error","id":"20:220:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"5:5865:1763":{"id":"5:5865:1763","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7642:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:80:788":{"id":"0:80:788","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[90,16],"end":[90,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10253:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10234:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2908-0:74:2030":{"id":"b:2:2908-0:74:2030","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2882:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2878:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2030","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2911:136","2:2912:1790"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:108":{"id":"0:108","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,27],"end":[147,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32108:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2053","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:146:2146":{"id":"0:146:2146","crate_id":0,"name":"SemVerError","span":{"filename":"src/lib.rs","begin":[356,4],"end":[356,30]},"visibility":"default","docs":"An error occurred in parsing the semver.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:148:1956"]},"discriminant":null}}},"2:13157":{"id":"2:13157","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:13158:983","2:13159:2859","2:13160:33767","2:13161:33768","2:13163:33769","2:13166:28124","2:13167:33770","2:13168:334","2:13169:26929","2:13170:2114","2:13172:26926","2:13174:26927","2:13176:26928","2:13178:33771","2:13179:33772","2:13180:26952","2:13181:26953","2:13182:26956","2:13183:26957","2:13185:6818","2:13186:6828","2:13187:6697","2:13188:31991","2:13189:31985","2:13190:2094","2:13191:33773","2:13192:32165","2:13193:26968","2:13196:2043","2:13199:26476","2:13202:2897","2:13206:2858","2:13210:2040","2:13213:26959","2:13216:26961","2:13219:33774","2:13222:33775","2:13225:2098","2:13228:26964","2:13231:26966","2:13234:26967","2:13237:2393","2:13240:33776","2:13243:33777","2:13246:33778","2:13249:33779","2:13251:33780","2:13253:33781","2:13255:33782","2:13256:33783","2:13257:33784","2:13260:33785","2:13263:26454","2:13266:26969","2:13269:33786","2:13272:33787","2:13275:33788","2:13278:2048","2:13280:26817","2:13281:26818","2:13282:26820","2:13283:26821","2:13284:26822","2:13285:26824","2:13286:26825","2:13287:26826","2:13288:33789","2:13290:8549","2:13291:33790"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2913-0:74:2030":{"id":"b:2:2913-0:74:2030","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2872:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2882:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2030","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2916:136","2:2917:1788"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5620:34487":{"id":"5:5620:34487","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7642:242"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7642:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13225:2098":{"id":"2:13225:2098","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12332:459","self::pattern":"2:12848:2493","str::rsplitn":"2:13228:26964"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43860:2519","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12854:2486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:49:2019":{"id":"0:49:2019","crate_id":0,"name":"Dev","span":{"filename":"src/lib.rs","begin":[74,4],"end":[74,7]},"visibility":"default","docs":"Development release channel","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:55:2025":{"id":"0:55:2025","crate_id":0,"name":"Stable","span":{"filename":"src/lib.rs","begin":[80,4],"end":[80,10]},"visibility":"default","docs":"Stable release channel","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:59:463":{"id":"0:59:463","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[71,15],"end":[71,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Channel","id":"0:48:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:41969:8680-0:74:2030":{"id":"a:2:41969:8680-0:74:2030","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41969:8680","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2030","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13269:33786":{"id":"2:13269:33786","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12332:459","self::pattern":"2:12848:2493"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12854:2486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12854:2486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12869:2487","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:135:2074":{"id":"0:135:2074","crate_id":0,"name":"CouldNotExecuteCommand","span":{"filename":"src/lib.rs","begin":[343,4],"end":[343,37]},"visibility":"default","docs":"An error occurred while trying to find the `rustc` to run.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:137:1956"]},"discriminant":null}}},"b:2:2625-0:93:2053":{"id":"b:2:2625-0:93:2053","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32107:2539","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2619:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2053","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2627:2378"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:63":{"id":"0:63","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,26],"end":[71,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2675:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:64:686"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3156:2678-0:93:2053":{"id":"a:2:3156:2678-0:93:2053","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3156:2678","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2053","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:144:2119":{"id":"0:144:2119","crate_id":0,"name":"UnexpectedVersionFormat","span":{"filename":"src/lib.rs","begin":[354,4],"end":[354,27]},"visibility":"default","docs":"The output of `rustc -vV` was not in the expected format.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:25:1912":{"id":"0:25:1912","crate_id":0,"name":"version","span":{"filename":"src/lib.rs","begin":[194,0],"end":[196,1]},"visibility":"public","docs":"Returns the `rustc` SemVer version.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Result","id":"0:45:225","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Version","id":"20:299:2015","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13186:6828":{"id":"2:13186:6828","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12332:459"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43732:2502","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:41968:8557-0:74:2030":{"id":"a:2:41968:8557-0:74:2030","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41968:8557","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2030","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32106:236-0:93:2053":{"id":"a:2:32106:236-0:93:2053","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32106:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2053","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13167:33770":{"id":"2:13167:33770","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3121:246-0:134:136":{"id":"a:2:3121:246-0:134:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3121:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:41969:8680-0:134:136":{"id":"a:2:41969:8680-0:134:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41969:8680","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:42":{"id":"0:42","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[384,0],"end":[396,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["source","provide","description","cause","type_id"],"trait":{"name":"Error","id":"2:2961:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:43:2136"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:155":{"id":"0:155","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[340,9],"end":[340,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10279:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:156:788"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2908-0:93:2053":{"id":"b:2:2908-0:93:2053","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2882:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2878:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2053","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2911:136","2:2912:1790"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13234:26967":{"id":"2:13234:26967","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41874:193","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12854:2486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12854:2486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12869:2487","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13192:32165":{"id":"2:13192:32165","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:44048:2494","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13266:26969":{"id":"2:13266:26969","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12332:459","self::pattern":"2:12848:2493"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41874:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12854:2486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12854:2486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12869:2487","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:154:1956":{"id":"0:154:1956","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[360,21],"end":[360,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2037","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:94:2014":{"id":"0:94:2014","crate_id":0,"name":"semver","span":{"filename":"src/lib.rs","begin":[150,4],"end":[150,23]},"visibility":"public","docs":"Version of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Version","id":"20:299:2015","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:13251:33780":{"id":"2:13251:33780","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:121:1956":{"id":"0:121:1956","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[282,18],"end":[282,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"num::ParseIntError","id":"2:22886:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"a:2:41969:8680-0:118:2037":{"id":"a:2:41969:8680-0:118:2037","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41969:8680","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2037","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13260:33785":{"id":"2:13260:33785","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12332:459","self::pattern":"2:12848:2493"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12854:2486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13185:6818":{"id":"2:13185:6818","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12332:459"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43726:2503","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32165:2540-0:48:2017":{"id":"a:2:32165:2540-0:48:2017","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32165:2540","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:134:136":{"id":"0:134:136","crate_id":0,"name":"Error","span":{"filename":"src/lib.rs","begin":[341,0],"end":[361,1]},"visibility":"public","docs":"The error type for this crate.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:135:2074","0:138:2077","0:141:2143","0:144:2119","0:146:2146","0:149:2109","0:152:2149"],"impls":["a:2:32106:236-0:134:136","a:2:3121:246-0:134:136","a:2:3156:2678-0:134:136","a:2:32165:2540-0:134:136","a:2:41968:8557-0:134:136","a:2:41969:8680-0:134:136","b:2:2913-0:134:136","b:2:2898-0:134:136","b:2:2625-0:134:136","b:2:2902-0:134:136","b:2:2628-0:134:136","b:2:3737-0:134:136","b:2:2908-0:134:136","b:5:5863-0:134:136","0:157","0:42","0:40","0:161","0:159","0:155"]}}},"a:2:3121:246-0:118:2037":{"id":"a:2:3121:246-0:118:2037","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3121:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2037","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2625-0:74:2030":{"id":"b:2:2625-0:74:2030","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32107:2539","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2619:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2030","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2627:2378"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3156:2678-0:134:136":{"id":"a:2:3156:2678-0:134:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3156:2678","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2898-0:48:2017":{"id":"b:2:2898-0:48:2017","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2875:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2872:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2901:2080"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13174:26927":{"id":"2:13174:26927","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10938:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10938:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2625-0:48:2017":{"id":"b:2:2625-0:48:2017","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32107:2539","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2619:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2627:2378"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:40":{"id":"0:40","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[363,0],"end":[382,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10284:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:41:788"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:45:225":{"id":"0:45:225","crate_id":0,"name":"Result","span":{"filename":"src/lib.rs","begin":[417,0],"end":[417,58]},"visibility":"public","docs":"The result type for this crate.","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"std::result::Result","id":"2:42007:225","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"E"}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]}}}},"0:112:470":{"id":"0:112:470","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[147,38],"end":[147,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"VersionMeta","id":"0:93:2053","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30868:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:157":{"id":"0:157","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2875:143","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Utf8Error","id":"2:43702:2143","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:158:818"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:57":{"id":"0:57","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,9],"end":[71,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3116:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:81":{"id":"0:81","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,23],"end":[90,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2680:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2030","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:17":{"id":"0:17","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[100,0],"end":[104,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10284:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2030","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:18:788"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:88":{"id":"0:88","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,43],"end":[90,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ge","gt","lt","le"],"trait":{"name":"PartialOrd","id":"2:2717:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2030","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:89:1280"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32106:236-0:48:2017":{"id":"a:2:32106:236-0:48:2017","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32106:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2908-0:118:2037":{"id":"b:2:2908-0:118:2037","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2882:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2878:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2037","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2911:136","2:2912:1790"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:35:818":{"id":"0:35:818","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[296,4],"end":[298,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["e",{"resolved_path":{"name":"num::ParseIntError","id":"2:22886:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:96:2058":{"id":"0:96:2058","crate_id":0,"name":"commit_date","span":{"filename":"src/lib.rs","begin":[156,4],"end":[156,35]},"visibility":"public","docs":"Commit date of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41874:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"5:7642:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"b:2:3737-0:48:2017":{"id":"b:2:3737-0:48:2017","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32107:2539","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3735:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3739:1803"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:103:463":{"id":"0:103:463","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[147,9],"end":[147,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"VersionMeta","id":"0:93:2053","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:90":{"id":"0:90","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,55],"end":[90,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10495:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2030","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:91:858"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:137:1956":{"id":"0:137:1956","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[343,27],"end":[343,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"io::Error","id":"1:3057:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:158:818":{"id":"0:158:818","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["e",{"resolved_path":{"name":"str::Utf8Error","id":"2:43702:2143","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32106:236-0:134:136":{"id":"a:2:32106:236-0:134:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32106:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:67":{"id":"0:67","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,42],"end":[71,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ge","gt","lt","le"],"trait":{"name":"PartialOrd","id":"2:2717:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:68:1280"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:18:788":{"id":"0:18:788","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[101,4],"end":[103,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10253:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10234:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:36":{"id":"0:36","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[301,0],"end":[324,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10284:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2037","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:37:788"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:41968:8557-0:134:136":{"id":"a:2:41968:8557-0:134:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41968:8557","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:2625-0:134:136":{"id":"b:2:2625-0:134:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32107:2539","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2619:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2627:2378"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:161":{"id":"0:161","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2875:143","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2037","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:162:818"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2898-0:118:2037":{"id":"b:2:2898-0:118:2037","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2875:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2872:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2037","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2901:2080"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13179:33772":{"id":"2:13179:33772","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12338:1704","crate::ops::IndexMut":"2:3397:8578","str::slice_unchecked":"2:13178:33771"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3737-0:93:2053":{"id":"b:2:3737-0:93:2053","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32107:2539","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3735:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2053","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3739:1803"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:86":{"id":"0:86","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,38],"end":[90,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2711:194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2030","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:87:470"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13288:33789":{"id":"2:13288:33789","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4925:33789"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:44055:2507","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:119:2123":{"id":"0:119:2123","crate_id":0,"name":"ParseIntError","span":{"filename":"src/lib.rs","begin":[282,4],"end":[282,37]},"visibility":"default","docs":"An error occurred in parsing a version component as an integer","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:121:1956"]},"discriminant":null}}},"0:100:2065":{"id":"0:100:2065","crate_id":0,"name":"short_version_string","span":{"filename":"src/lib.rs","begin":[168,4],"end":[168,36]},"visibility":"public","docs":"Short version string of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7642:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"a:2:3156:2678-0:48:2017":{"id":"a:2:3156:2678-0:48:2017","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3156:2678","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:141:2143":{"id":"0:141:2143","crate_id":0,"name":"Utf8Error","span":{"filename":"src/lib.rs","begin":[352,4],"end":[352,29]},"visibility":"default","docs":"The output of `rustc -vV` was not valid utf-8.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:143:1956"]},"discriminant":null}}},"0:24:2069":{"id":"0:24:2069","crate_id":0,"name":"for_command","span":{"filename":"src/lib.rs","begin":[176,4],"end":[190,5]},"visibility":"public","docs":"Returns the version metadata for `cmd`, which should be a `rustc` command.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["cmd",{"resolved_path":{"name":"Command","id":"1:5642:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:45:225","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"VersionMeta","id":"0:93:2053","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13161:33768":{"id":"2:13161:33768","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13181:26953":{"id":"2:13181:26953","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_mut_checked`](str::split_at_mut_checked).\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:13180:26952","str::split_at_mut_checked":"2:13183:26957"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13199:26476":{"id":"2:13199:26476","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12332:459","self::pattern":"2:12848:2493"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12854:2486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12854:2486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12869:2487","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3737-0:118:2037":{"id":"b:2:3737-0:118:2037","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32107:2539","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3735:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2037","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3739:1803"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13178:33771":{"id":"2:13178:33771","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12338:1704","str::slice_mut_unchecked":"2:13179:33772","crate::ops::Index":"2:39420:8577"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13290:8549":{"id":"2:13290:8549","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4926:8549"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:44064:2508","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5632:28207":{"id":"5:5632:28207","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:13284:26822"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7642:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:149:2109":{"id":"0:149:2109","crate_id":0,"name":"UnknownPreReleaseTag","span":{"filename":"src/lib.rs","begin":[358,4],"end":[358,32]},"visibility":"default","docs":"The pre-release tag is unknown.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:151:1956"]},"discriminant":null}}},"0:65":{"id":"0:65","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,37],"end":[71,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2711:194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:66:470"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32165:2540-0:118:2037":{"id":"a:2:32165:2540-0:118:2037","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32165:2540","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2037","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32106:236-0:118:2037":{"id":"a:2:32106:236-0:118:2037","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32106:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2037","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2628-0:118:2037":{"id":"b:2:2628-0:118:2037","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32107:2539","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2622:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2037","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2630:25984"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:34":{"id":"0:34","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[295,0],"end":[299,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2875:143","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ParseIntError","id":"2:22886:2123","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2037","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:35:818"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2628-0:134:136":{"id":"b:2:2628-0:134:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32107:2539","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2622:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2630:25984"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3737-0:134:136":{"id":"b:2:3737-0:134:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32107:2539","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3735:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3739:1803"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2902-0:93:2053":{"id":"b:2:2902-0:93:2053","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2875:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2053","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2904:818"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:41968:8557-0:118:2037":{"id":"a:2:41968:8557-0:118:2037","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41968:8557","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2037","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2627:2378":{"id":"2:2627:2378","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:84":{"id":"0:84","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,27],"end":[90,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2675:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2030","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:85:686"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:99:862":{"id":"0:99:862","crate_id":0,"name":"host","span":{"filename":"src/lib.rs","begin":[165,4],"end":[165,20]},"visibility":"public","docs":"Host target triple of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7642:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:113":{"id":"0:113","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,43],"end":[147,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ge","gt","lt","le"],"trait":{"name":"PartialOrd","id":"2:2717:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2053","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:114:1280"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:139:2078":{"id":"0:139:2078","crate_id":0,"name":"stdout","span":{"filename":"src/lib.rs","begin":[347,8],"end":[347,22]},"visibility":"default","docs":"stdout output from the command","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7642:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:13166:28124":{"id":"2:13166:28124","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12395:2083"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:23":{"id":"0:23","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[174,0],"end":[191,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2053","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:24:2069"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:0:2162":{"id":"0:0:2162","crate_id":0,"name":"rustc_version","span":{"filename":"src/lib.rs","begin":[9,0],"end":[417,58]},"visibility":"public","docs":"Simple library for getting the version information of a `rustc`\ncompiler.\n\nThis can be used by build scripts or other tools dealing with Rust sources\nto make decisions based on the version of the compiler.\n\nIt calls `$RUSTC --version -v` and parses the output, falling\nback to `rustc` if `$RUSTC` is not set.\n\n# Example\n\n```rust\n// This could be a cargo build script\n\nuse rustc_version::{version, version_meta, Channel, Version};\n\n// Assert we haven't travelled back in time\nassert!(version().unwrap().major >= 1);\n\n// Set cfg flags depending on release channel\nmatch version_meta().unwrap().channel {\n    Channel::Stable => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_STABLE\");\n    }\n    Channel::Beta => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_BETA\");\n    }\n    Channel::Nightly => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_NIGHTLY\");\n    }\n    Channel::Dev => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_DEV\");\n    }\n}\n\n// Check for a minimum version\nif version().unwrap() >= Version::parse(\"1.4.0\").unwrap() {\n    println!(\"cargo:rustc-cfg=compiler_has_important_bugfix\");\n}\n```","links":{},"attrs":["#![warn(missing_docs)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:15-20:299:2015","0:48:2017","0:74:2030","0:93:2053","0:25:1912","0:26:2085","0:28:2082","0:118:2037","0:134:136","0:45:225"],"is_stripped":false}}},"2:13158:983":{"id":"2:13158:983","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12332:459"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13189:31985":{"id":"2:13189:31985","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:13188:31991"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:44039:2495","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:106":{"id":"0:106","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,23],"end":[147,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2680:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2053","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32106:236-0:74:2030":{"id":"a:2:32106:236-0:74:2030","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32106:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2030","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:85:686":{"id":"0:85:686","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[90,27],"end":[90,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2030","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2911:136":{"id":"2:2911:136","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2882:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"a:2:32165:2540-0:93:2053":{"id":"a:2:32165:2540-0:93:2053","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32165:2540","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2053","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:151:1956":{"id":"0:151:1956","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[358,25],"end":[358,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7642:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:13193:26968":{"id":"2:13193:26968","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12332:459","self::pattern":"2:12848:2493"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12854:2486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13282:26820":{"id":"2:13282:26820","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2902-0:74:2030":{"id":"b:2:2902-0:74:2030","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2875:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2030","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2904:818"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13256:33783":{"id":"2:13256:33783","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:89:1280":{"id":"0:89:1280","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[90,43],"end":[90,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2030","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:41874:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30868:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2625-0:118:2037":{"id":"b:2:2625-0:118:2037","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32107:2539","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2619:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2037","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2627:2378"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:75:2032":{"id":"0:75:2032","crate_id":0,"name":"major","span":{"filename":"src/lib.rs","begin":[94,4],"end":[94,18]},"visibility":"public","docs":"Major version","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u64"}}},"b:2:2628-0:48:2017":{"id":"b:2:2628-0:48:2017","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32107:2539","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2622:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2630:25984"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:41969:8680-0:48:2017":{"id":"a:2:41969:8680-0:48:2017","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41969:8680","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:83":{"id":"0:83","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,27],"end":[90,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32108:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2030","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2898-0:74:2030":{"id":"b:2:2898-0:74:2030","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2875:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2872:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2030","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2901:2080"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:104":{"id":"0:104","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,16],"end":[147,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10279:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2053","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:105:788"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13202:2897":{"id":"2:13202:2897","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41876:190","prim@char":"1:12332:459","self::pattern":"2:12848:2493"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41874:193","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12854:2486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:15-20:299:2015":{"id":"0:15-20:299:2015","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[66,0],"end":[66,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"semver::Version","name":"Version","id":"20:299:2015","glob":false}}},"0:130:2051":{"id":"0:130:2051","crate_id":0,"name":"TooManyComponents","span":{"filename":"src/lib.rs","begin":[292,4],"end":[292,21]},"visibility":"default","docs":"Too many components","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:38":{"id":"0:38","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[326,0],"end":[337,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["source","provide","description","cause","type_id"],"trait":{"name":"Error","id":"2:2961:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2037","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:39:2136"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:41968:8557-0:93:2053":{"id":"a:2:41968:8557-0:93:2053","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41968:8557","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2053","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13183:26957":{"id":"2:13183:26957","crate_id":2,"name":"split_at_mut_checked","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at_checked`] method.\n\n[`split_at_checked`]: str::split_at_checked\n\n# Examples\n\n```\n#![feature(split_at_checked)]\n\nlet mut s = \"Per Martin-Löf\".to_string();\nif let Some((first, last)) = s.split_at_mut_checked(3) {\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n\nassert_eq!(None, s.split_at_mut_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_mut_checked(16));  // Beyond the string length\n```","links":{"str::split_at_checked":"2:13182:26956"},"attrs":["#[must_use]","#[unstable(feature = \"split_at_checked\", reason = \"new API\", issue =\n\"119128\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:41874:193","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:51:2021":{"id":"0:51:2021","crate_id":0,"name":"Nightly","span":{"filename":"src/lib.rs","begin":[76,4],"end":[76,11]},"visibility":"default","docs":"Nightly release channel","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:13281:26818":{"id":"2:13281:26818","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39775:13979","Self::is_ascii":"2:13280:26817"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41874:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39775:13979","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3121:246-0:74:2030":{"id":"a:2:3121:246-0:74:2030","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3121:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2030","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:79":{"id":"0:79","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,16],"end":[90,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10279:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2030","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:80:788"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5629:34489":{"id":"5:5629:34489","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:304:2490","`String`":"5:7642:242"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:304:2490","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7642:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:93:2053":{"id":"0:93:2053","crate_id":0,"name":"VersionMeta","span":{"filename":"src/lib.rs","begin":[148,0],"end":[172,1]},"visibility":"public","docs":"Rustc version plus metadata like git short hash and build date.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:94:2014","0:95:2056","0:96:2058","0:97:2060","0:98:2062","0:99:862","0:100:2065","0:101:2067"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:23","a:2:32106:236-0:93:2053","a:2:3121:246-0:93:2053","a:2:3156:2678-0:93:2053","a:2:32165:2540-0:93:2053","a:2:41968:8557-0:93:2053","a:2:41969:8680-0:93:2053","b:2:2913-0:93:2053","b:2:2898-0:93:2053","b:2:2625-0:93:2053","b:2:2902-0:93:2053","b:2:2628-0:93:2053","b:2:3737-0:93:2053","b:2:2908-0:93:2053","b:5:736-0:93:2053","0:109","0:102","0:115","0:111","0:108","0:104","0:106","0:113"]}}},"2:2912:1790":{"id":"2:2912:1790","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:42007:225","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2882:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13284:26822":{"id":"2:13284:26822","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2913-0:48:2017":{"id":"b:2:2913-0:48:2017","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2872:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2882:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2916:136","2:2917:1788"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:95:2056":{"id":"0:95:2056","crate_id":0,"name":"commit_hash","span":{"filename":"src/lib.rs","begin":[153,4],"end":[153,35]},"visibility":"public","docs":"Git short hash of the build of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41874:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"5:7642:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"b:5:736-0:93:2053":{"id":"b:5:736-0:93:2053","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2641:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:732:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2053","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:738:2917","5:739:2110","5:740:2918"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:102":{"id":"0:102","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,9],"end":[147,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2641:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2053","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:103:463"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:73:788":{"id":"0:73:788","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[71,60],"end":[71,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10253:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10234:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:60":{"id":"0:60","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,22],"end":[71,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2680:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:5863-0:134:136":{"id":"b:5:5863-0:134:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10284:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32107:2539","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5861:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5865:1763"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2908-0:134:136":{"id":"b:2:2908-0:134:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2882:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2878:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2911:136","2:2912:1790"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:124:2047":{"id":"0:124:2047","crate_id":0,"name":"ComponentMustNotHaveSign","span":{"filename":"src/lib.rs","begin":[286,4],"end":[286,28]},"visibility":"default","docs":"A version component has a sign","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:13243:33777":{"id":"2:13243:33777","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12848:2493","`DoubleEndedIterator`":"2:8230:129","prim@char":"1:12332:459","str::rmatch_indices":"2:13246:33778"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:43906:2512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12854:2486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13283:26821":{"id":"2:13283:26821","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13286:26825":{"id":"2:13286:26825","crate_id":2,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:992:38094"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2917:1788":{"id":"2:2917:1788","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:42007:225","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2882:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13160:33767":{"id":"2:13160:33767","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:109":{"id":"0:109","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,27],"end":[147,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2675:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2053","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:110:686"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:26:2085":{"id":"0:26:2085","crate_id":0,"name":"version_meta","span":{"filename":"src/lib.rs","begin":[200,0],"end":[204,1]},"visibility":"public","docs":"Returns the `rustc` SemVer version and additional metadata\nlike the git short hash and build date.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Result","id":"0:45:225","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"VersionMeta","id":"0:93:2053","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:159":{"id":"0:159","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2875:143","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Error","id":"20:220:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:160:818"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13206:2858":{"id":"2:13206:2858","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41876:190","prim@char":"1:12332:459","self::pattern":"2:12848:2493"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41874:193","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12854:2486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12854:2486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12869:2487","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13210:2040":{"id":"2:13210:2040","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12848:2493","`DoubleEndedIterator`":"2:8230:129","prim@char":"1:12332:459","str::split_whitespace":"2:13188:31991","str::rsplit":"2:13216:26961"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43756:2517","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12854:2486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5863-0:118:2037":{"id":"b:5:5863-0:118:2037","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10284:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32107:2539","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5861:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2037","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5865:1763"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:77":{"id":"0:77","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,9],"end":[90,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2641:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2030","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:78:463"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2913-0:134:136":{"id":"b:2:2913-0:134:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2872:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2882:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2916:136","2:2917:1788"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13253:33781":{"id":"2:13253:33781","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13196:2043":{"id":"2:13196:2043","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, in which case this function will return true if\nthe `&str` is a prefix of this string slice.\n\nThe [pattern] can also be a [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\nThese will only be checked against the first character of this string slice.\nLook at the second example below regarding behavior for slices of [`char`]s.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```\n\n```\nlet bananas = \"bananas\";\n\n// Note that both of these assert successfully.\nassert!(bananas.starts_with(&['b', 'a', 'n', 'a']));\nassert!(bananas.starts_with(&['a', 'b', 'c', 'd']));\n```","links":{"prim@char":"1:12332:459","self::pattern":"2:12848:2493"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12854:2486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:132":{"id":"0:132","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[279,9],"end":[279,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10279:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2037","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:133:788"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:28:2082":{"id":"0:28:2082","crate_id":0,"name":"version_meta_for","span":{"filename":"src/lib.rs","begin":[209,0],"end":[262,1]},"visibility":"public","docs":"Parses a \"rustc -vV\" output string and returns\nthe SemVer version and additional metadata\nlike the git short hash and build date.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["verbose_version_string",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"0:45:225","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"VersionMeta","id":"0:93:2053","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13291:33790":{"id":"2:13291:33790","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4923:33790"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:44073:2509","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3156:2678-0:74:2030":{"id":"a:2:3156:2678-0:74:2030","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3156:2678","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2030","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2901:2080":{"id":"2:2901:2080","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2875:143"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:126:2127":{"id":"0:126:2127","crate_id":0,"name":"MinorVersionMustBeZeroAfter4","span":{"filename":"src/lib.rs","begin":[288,4],"end":[288,32]},"visibility":"default","docs":"Minor version component must be zero on LLVM versions later than 4.0","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:97:2060":{"id":"0:97:2060","crate_id":0,"name":"build_date","span":{"filename":"src/lib.rs","begin":[159,4],"end":[159,34]},"visibility":"public","docs":"Build date of the compiler; this was removed between Rust 1.0.0 and 1.1.0.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41874:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"5:7642:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"b:2:2628-0:93:2053":{"id":"b:2:2628-0:93:2053","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32107:2539","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2622:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2053","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2630:25984"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13287:26826":{"id":"2:13287:26826","crate_id":2,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:992:38094"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:98:2062":{"id":"0:98:2062","crate_id":0,"name":"channel","span":{"filename":"src/lib.rs","begin":[162,4],"end":[162,24]},"visibility":"public","docs":"Release channel of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Channel","id":"0:48:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:13231:26966":{"id":"2:13231:26966","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41874:193","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12854:2486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2916:136":{"id":"2:2916:136","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32030:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:13182:26956":{"id":"2:13182:26956","crate_id":2,"name":"split_at_checked","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut_checked`]\nmethod.\n\n[`split_at_mut_checked`]: str::split_at_mut_checked\n\n# Examples\n\n```\n#![feature(split_at_checked)]\n\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at_checked(3).unwrap();\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n\nassert_eq!(None, s.split_at_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_checked(16));  // Beyond the string length\n```","links":{"str::split_at_mut_checked":"2:13183:26957"},"attrs":["#[must_use]","#[unstable(feature = \"split_at_checked\", reason = \"new API\", issue =\n\"119128\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:41874:193","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:91:858":{"id":"0:91:858","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[90,55],"end":[90,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10503:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3739:1803":{"id":"2:3739:1803","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39589:5964","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3737-0:74:2030":{"id":"b:2:3737-0:74:2030","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32107:2539","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3735:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2030","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3739:1803"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:41969:8680-0:93:2053":{"id":"a:2:41969:8680-0:93:2053","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41969:8680","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2053","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3121:246-0:93:2053":{"id":"a:2:3121:246-0:93:2053","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3121:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2053","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:133:788":{"id":"0:133:788","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[279,9],"end":[279,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10253:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10234:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2902-0:118:2037":{"id":"b:2:2902-0:118:2037","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2875:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2037","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2904:818"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:128:2049":{"id":"0:128:2049","crate_id":0,"name":"MinorVersionRequiredBefore4","span":{"filename":"src/lib.rs","begin":[290,4],"end":[290,31]},"visibility":"default","docs":"Minor version component is required on LLVM versions earlier than 4.0","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:13190:2094":{"id":"2:13190:2094","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:44010:2510","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:160:818":{"id":"0:160:818","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["e",{"resolved_path":{"name":"semver::Error","id":"20:220:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:70:858":{"id":"0:70:858","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[71,54],"end":[71,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10503:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5863-0:74:2030":{"id":"b:5:5863-0:74:2030","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10284:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32107:2539","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5861:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2030","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5865:1763"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:41968:8557-0:48:2017":{"id":"a:2:41968:8557-0:48:2017","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41968:8557","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2913-0:93:2053":{"id":"b:2:2913-0:93:2053","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2872:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2882:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2053","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2916:136","2:2917:1788"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:143:1956":{"id":"0:143:1956","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[352,14],"end":[352,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"str::Utf8Error","id":"2:43702:2143","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:13188:31991":{"id":"2:13188:31991","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:13189:31985"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:44030:2497","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5631:28206":{"id":"5:5631:28206","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:13283:26821"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7642:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2628-0:74:2030":{"id":"b:2:2628-0:74:2030","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32107:2539","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2622:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2030","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2630:25984"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:736-0:48:2017":{"id":"b:5:736-0:48:2017","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2641:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:732:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:738:2917","5:739:2110","5:740:2918"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:101:2067":{"id":"0:101:2067","crate_id":0,"name":"llvm_version","span":{"filename":"src/lib.rs","begin":[171,4],"end":[171,41]},"visibility":"public","docs":"Version of LLVM used by the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41874:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2030","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:122:2044":{"id":"0:122:2044","crate_id":0,"name":"ComponentMustNotHaveLeadingZeros","span":{"filename":"src/lib.rs","begin":[284,4],"end":[284,36]},"visibility":"default","docs":"A version component must not have leading zeros","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:13228:26964":{"id":"2:13228:26964","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12332:459","str::splitn":"2:13225:2098","self::pattern":"2:12848:2493"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43878:2518","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12854:2486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12854:2486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12869:2487","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:64:686":{"id":"0:64:686","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[71,26],"end":[71,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Channel","id":"0:48:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:19":{"id":"0:19","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[106,0],"end":[144,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12808:2013","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2030","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:20:135","0:21:2038"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3156:2678-0:118:2037":{"id":"a:2:3156:2678-0:118:2037","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3156:2678","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2037","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13163:33769":{"id":"2:13163:33769","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:13161:33768"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13191:33773":{"id":"2:13191:33773","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:44020:2511","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13285:26824":{"id":"2:13285:26824","crate_id":2,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:992:38094"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:105:788":{"id":"0:105:788","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[147,16],"end":[147,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10253:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10234:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:21:2038":{"id":"0:21:2038","crate_id":0,"name":"from_str","span":{"filename":"src/lib.rs","begin":[109,4],"end":[143,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"0:45:225","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:12808:2013","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13170:2114":{"id":"2:13170:2114","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41876:190"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41874:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10938:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10938:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13219:33774":{"id":"2:13219:33774","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12848:2493","str::split":"2:13210:2040","prim@char":"1:12332:459","`DoubleEndedIterator`":"2:8230:129","str::rsplit_terminator":"2:13222:33775"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43806:2521","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12854:2486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13280:26817":{"id":"2:13280:26817","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2908-0:48:2017":{"id":"b:2:2908-0:48:2017","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2882:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2878:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2911:136","2:2912:1790"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:739:2110":{"id":"5:739:2110","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:138:2077":{"id":"0:138:2077","crate_id":0,"name":"CommandError","span":{"filename":"src/lib.rs","begin":[345,4],"end":[350,5]},"visibility":"default","docs":"Error output from the command that was run.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"struct":{"fields":["0:139:2078","0:140:2081"],"fields_stripped":false}},"discriminant":null}}},"2:13159:2859":{"id":"2:13159:2859","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2904:818":{"id":"2:2904:818","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:62":{"id":"0:62","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,26],"end":[71,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32108:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:69":{"id":"0:69","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,54],"end":[71,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10495:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:70:858"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:68:1280":{"id":"0:68:1280","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[71,42],"end":[71,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Channel","id":"0:48:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:41874:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30868:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13237:2393":{"id":"2:13237:2393","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12848:2493","`DoubleEndedIterator`":"2:8230:129","prim@char":"1:12332:459","str::rmatches":"2:13240:33776"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:43960:2514","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12854:2486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:72":{"id":"0:72","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,60],"end":[71,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10279:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:73:788"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:78:463":{"id":"0:78:463","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[90,9],"end":[90,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2030","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13172:26926":{"id":"2:13172:26926","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41876:190"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41874:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10938:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10938:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13263:26454":{"id":"2:13263:26454","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns the substring after the prefix,\nwrapped in `Some`. Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12332:459","self::pattern":"2:12848:2493"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41874:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12854:2486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2898-0:93:2053":{"id":"b:2:2898-0:93:2053","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2875:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2872:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2053","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2901:2080"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2630:25984":{"id":"2:2630:25984","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5614:14036":{"id":"5:5614:14036","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7642:242"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7642:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12854:2486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:140:2081":{"id":"0:140:2081","crate_id":0,"name":"stderr","span":{"filename":"src/lib.rs","begin":[349,8],"end":[349,22]},"visibility":"default","docs":"stderr output from the command","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7642:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:156:788":{"id":"0:156:788","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[340,9],"end":[340,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10253:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10234:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13180:26952":{"id":"2:13180:26952","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_checked`](str::split_at_checked).\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_checked":"2:13182:26956","str::split_at_mut":"2:13181:26953"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5617:34486":{"id":"5:5617:34486","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7642:242"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7642:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12854:2486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:58":{"id":"0:58","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,15],"end":[71,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2641:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:59:463"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:114:1280":{"id":"0:114:1280","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[147,43],"end":[147,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"VersionMeta","id":"0:93:2053","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:41874:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30868:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13272:33787":{"id":"2:13272:33787","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12332:459","self::pattern":"2:12848:2493"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12854:2486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3121:246-0:48:2017":{"id":"a:2:3121:246-0:48:2017","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3121:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:162:818":{"id":"0:162:818","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["e",{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2037","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13168:334":{"id":"2:13168:334","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:13169:26929","`u8`":"1:12351:1833"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:115":{"id":"0:115","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,55],"end":[147,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10495:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2053","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:116:858"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13213:26959":{"id":"2:13213:26959","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12332:459","self::pattern":"2:12848:2493"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:12663:2496","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12854:2486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:76:2034":{"id":"0:76:2034","crate_id":0,"name":"minor","span":{"filename":"src/lib.rs","begin":[96,4],"end":[96,18]},"visibility":"public","docs":"Minor version","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u64"}}},"0:74:2030":{"id":"0:74:2030","crate_id":0,"name":"LlvmVersion","span":{"filename":"src/lib.rs","begin":[91,0],"end":[98,1]},"visibility":"public","docs":"LLVM version\n\nLLVM's version numbering scheme is not semver compatible until version 4.0\n\nrustc [just prints the major and minor versions], so other parts of the version are not included.\n\n[just prints the major and minor versions]: https://github.com/rust-lang/rust/blob/b5c9e2448c9ace53ad5c11585803894651b18b0a/compiler/rustc_codegen_llvm/src/llvm_util.rs#L173-L178","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:75:2032","0:76:2034"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:32106:236-0:74:2030","a:2:3121:246-0:74:2030","a:2:3156:2678-0:74:2030","a:2:32165:2540-0:74:2030","a:2:41968:8557-0:74:2030","a:2:41969:8680-0:74:2030","b:2:2913-0:74:2030","b:2:2898-0:74:2030","b:2:2625-0:74:2030","b:2:2902-0:74:2030","b:2:2628-0:74:2030","b:2:3737-0:74:2030","b:2:2908-0:74:2030","b:5:736-0:74:2030","b:5:5863-0:74:2030","0:86","0:81","0:90","0:84","0:83","0:17","0:88","0:19","0:77","0:79"]}}},"5:5628:34488":{"id":"5:5628:34488","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7642:242"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7642:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2902-0:48:2017":{"id":"b:2:2902-0:48:2017","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2875:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2904:818"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:87:470":{"id":"0:87:470","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[90,38],"end":[90,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2030","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30868:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:736-0:74:2030":{"id":"b:5:736-0:74:2030","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2641:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:732:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2030","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:738:2917","5:739:2110","5:740:2918"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32165:2540-0:134:136":{"id":"a:2:32165:2540-0:134:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32165:2540","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2913-0:118:2037":{"id":"b:2:2913-0:118:2037","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2872:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2882:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2037","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2916:136","2:2917:1788"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13176:26928":{"id":"2:13176:26928","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10938:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10938:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13278:2048":{"id":"2:13278:2048","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12809:135","`FromStr`":"2:12808:2013"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42007:225","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12808:2013","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12808:2013","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5612":{"id":"5:5612","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5613:34485","5:5614:14036","5:5617:34486","5:5620:34487","5:5628:34488","5:5629:34489","5:5630:3074","5:5631:28206","5:5632:28207"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:118:2037":{"id":"0:118:2037","crate_id":0,"name":"LlvmVersionParseError","span":{"filename":"src/lib.rs","begin":[280,0],"end":[293,1]},"visibility":"public","docs":"LLVM Version Parse Error","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:119:2123","0:122:2044","0:124:2047","0:126:2127","0:128:2049","0:130:2051"],"impls":["a:2:32106:236-0:118:2037","a:2:3121:246-0:118:2037","a:2:3156:2678-0:118:2037","a:2:32165:2540-0:118:2037","a:2:41968:8557-0:118:2037","a:2:41969:8680-0:118:2037","b:2:2913-0:118:2037","b:2:2898-0:118:2037","b:2:2625-0:118:2037","b:2:2902-0:118:2037","b:2:2628-0:118:2037","b:2:3737-0:118:2037","b:2:2908-0:118:2037","b:5:5863-0:118:2037","0:132","0:38","0:36","0:161","0:34"]}}},"0:116:858":{"id":"0:116:858","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[147,55],"end":[147,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10503:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:66:470":{"id":"0:66:470","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[71,37],"end":[71,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Channel","id":"0:48:2017","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30868:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:20:135":{"id":"0:20:135","crate_id":0,"name":"Err","span":{"filename":"src/lib.rs","begin":[107,4],"end":[107,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2037","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:32165:2540-0:74:2030":{"id":"a:2:32165:2540-0:74:2030","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32165:2540","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2030","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2898-0:134:136":{"id":"b:2:2898-0:134:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2875:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2872:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2901:2080"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2902-0:134:136":{"id":"b:2:2902-0:134:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2875:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2904:818"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:41:788":{"id":"0:41:788","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[364,4],"end":[381,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10253:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10234:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13187:6697":{"id":"2:13187:6697","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43742:2501","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13249:33779":{"id":"2:13249:33779","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13255:33782":{"id":"2:13255:33782","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13246:33778":{"id":"2:13246:33778","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12848:2493","`DoubleEndedIterator`":"2:8230:129","prim@char":"1:12332:459","str::match_indices":"2:13243:33777"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:43924:2513","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12854:2486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12854:2486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12869:2487","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:738:2917":{"id":"5:738:2917","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"2:13222:33775":{"id":"2:13222:33775","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12848:2493","str::split":"2:13210:2040","prim@char":"1:12332:459","str::split_terminator":"2:13219:33774"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43824:2520","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12854:2486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12854:2486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12869:2487","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13169:26929":{"id":"2:13169:26929","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12351:1833"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13240:33776":{"id":"2:13240:33776","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12848:2493","`DoubleEndedIterator`":"2:8230:129","prim@char":"1:12332:459","str::matches":"2:13237:2393"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:43978:2515","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12854:2486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12854:2486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12869:2487","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:37:788":{"id":"0:37:788","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[302,4],"end":[323,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10253:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10234:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:39:2136":{"id":"0:39:2136","crate_id":0,"name":"source","span":{"filename":"src/lib.rs","begin":[327,4],"end":[336,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41874:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"dyn_trait":{"traits":[{"trait":{"name":"error::Error","id":"2:2961:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:53:2023":{"id":"0:53:2023","crate_id":0,"name":"Beta","span":{"filename":"src/lib.rs","begin":[78,4],"end":[78,8]},"visibility":"default","docs":"Beta release channel","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"5:740:2918":{"id":"5:740:2918","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:48:2017":{"id":"0:48:2017","crate_id":0,"name":"Channel","span":{"filename":"src/lib.rs","begin":[72,0],"end":[81,1]},"visibility":"public","docs":"Release channel of the compiler.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:49:2019","0:51:2021","0:53:2023","0:55:2025"],"impls":["a:2:32106:236-0:48:2017","a:2:3121:246-0:48:2017","a:2:3156:2678-0:48:2017","a:2:32165:2540-0:48:2017","a:2:41968:8557-0:48:2017","a:2:41969:8680-0:48:2017","b:2:2913-0:48:2017","b:2:2898-0:48:2017","b:2:2625-0:48:2017","b:2:2902-0:48:2017","b:2:2628-0:48:2017","b:2:3737-0:48:2017","b:2:2908-0:48:2017","b:5:736-0:48:2017","0:62","0:58","0:72","0:63","0:57","0:69","0:65","0:60","0:67"]}}},"0:110:686":{"id":"0:110:686","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[147,27],"end":[147,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"VersionMeta","id":"0:93:2053","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:111":{"id":"0:111","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,38],"end":[147,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2711:194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2053","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:112:470"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13275:33788":{"id":"2:13275:33788","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12332:459","self::pattern":"2:12848:2493"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12854:2486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12854:2486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12869:2487","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5630:3074":{"id":"5:5630:3074","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7642:242"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7642:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13257:33784":{"id":"2:13257:33784","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12332:459","self::pattern":"2:12848:2493"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12854:2486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12854:2486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12874:2485","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:43:2136":{"id":"0:43:2136","crate_id":0,"name":"source","span":{"filename":"src/lib.rs","begin":[385,4],"end":[395,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41874:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"dyn_trait":{"traits":[{"trait":{"name":"error::Error","id":"2:2961:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13216:26961":{"id":"2:13216:26961","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12848:2493","`DoubleEndedIterator`":"2:8230:129","prim@char":"1:12332:459","str::split":"2:13210:2040"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43774:2516","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12854:2486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12854:2486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12869:2487","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"1:11895:6389":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"16:5897:4365":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"2:46866:6262":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"2:40636:6774":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"2:43860:2519":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"2:10253:142":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"2:2071:5850":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"2:22780:5862":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"17:10419:3335":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"17:10622:35275":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"18:96:25593":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"17:0:2289":{"crate_id":17,"path":["object"],"kind":"module"},"5:3406:7556":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"20:90:7756":{"crate_id":20,"path":["semver","error","QuotedChar"],"kind":"struct"},"2:8151:14028":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"6:1692:4976":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"1:8873:6875":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"1:9290:26139":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"2:40508:2442":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"2:40666:6777":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"16:5960:6533":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"1:373:7623":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"2:30895:2695":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"2:22516:8822":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"17:11547:3268":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"1:1857:2963":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"2:41814:6870":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"1:8600:6871":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"2:2872:162":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"1:8208:138":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"2:22385:14066":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_exposed_provenance"],"kind":"function"},"18:706:2488":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:46446:6218":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:3582:2454":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"6:5212:5180":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"6:5174:5159":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"17:9984:21416":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"2:41780:32129":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"1:8179:6866":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"6:5472:5308":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"6:1723:4987":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"5:7655:6698":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"1:5087:8666":{"crate_id":1,"path":["std","os","net","linux_ext","socket","UnixSocketExt"],"kind":"trait"},"1:8186:6301":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"16:6813:6603":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"1:1638:6671":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"17:10284:3331":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"17:13024:21422":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"2:41874:193":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"17:11661:6469":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"1:10487:113":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"1:8703:8676":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"2:13538:7602":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"6:5266:5205":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"5:7607:2465":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"2:40187:2508":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"2:22839:32125":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"16:6231:6572":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"1:982:7535":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"5:289:34798":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"2:45831:6165":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2:40557:6761":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:43553:6727":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"6:1585:4906":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"1:867:2813":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"11:1896:7556":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"17:14066:3667":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"1:9179:6365":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"2:40234:32117":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"5:4113:34798":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"0:141:2143":{"crate_id":0,"path":["rustc_version","Error","Utf8Error"],"kind":"variant"},"5:2216:6677":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"6:7452:5707":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"6:1510:4859":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"17:13412:3533":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"0:149:2109":{"crate_id":0,"path":["rustc_version","Error","UnknownPreReleaseTag"],"kind":"variant"},"16:2303:20457":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"2:45670:6147":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"16:2660:4292":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"6:5515:5319":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"2:42449:97":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"17:15473:4050":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:43143:6808":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:11287:2516":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"5:2206:8535":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"1:10890:7709":{"crate_id":1,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"17:15214:3981":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"1:588:7625":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"2:46169:6191":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:8492:3049":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"17:14968:3925":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"11:2569:2426":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"16:150:6499":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"16:6648:6597":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"17:13832:3631":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"2:33467:14047":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"16:2684:4293":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"9:330:4733":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"16:3899:4334":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"5:219:7548":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"17:4821:7375":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"16:7590:4319":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"2:5981:3033":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"17:3597:7374":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"2:13743:151":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"16:4718:4346":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"17:11392:7400":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"5:835:101":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"2:41836:6112":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"17:12824:21420":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"6:5624:5368":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"6:4837:5030":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"17:13235:3498":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"6:5466:5305":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"16:7061:4431":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"2:2869:76":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"2:40863:3051":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"17:10155:3326":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"17:11915:21517":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"17:10137:21394":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"11:2542:4688":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"17:1098:7365":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"16:542:6502":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"6:5665:5385":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"0:130:2051":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","TooManyComponents"],"kind":"variant"},"1:12339:1793":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"6:7339:5670":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:21471:31856":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"17:11341:7398":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"2:44667:149":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"1:3385:3072":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"15:327:20442":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"2:41111:6794":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"17:15836:4161":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"2:46840:6260":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:4:1241":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"3:234:225":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"0:26:2085":{"crate_id":0,"path":["rustc_version","version_meta"],"kind":"function"},"2:38761:14056":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"17:12371:3453":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"16:860:7458":{"crate_id":16,"path":["gimli","read","endian_slice","DebugBytes"],"kind":"struct"},"16:6574:4323":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"16:7823:21356":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"20:0:2014":{"crate_id":20,"path":["semver"],"kind":"module"},"17:15313:4005":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"2:45764:6157":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"0:126:2127":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","MinorVersionMustBeZeroAfter4"],"kind":"variant"},"17:11405:7401":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"5:1586:7555":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"2:41614:169":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"11:2383:2813":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"18:726:3216":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"17:15931:3483":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"17:13509:3549":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"1:497:30446":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"2:41958:7610":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:426:184":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"1:9196:6366":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"5:1320:6634":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"1:3549:3033":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"1:7981:6299":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"17:14475:3751":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"6:6763:5586":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"5:5226:6689":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"2:40291:2508":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"17:15992:4209":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"2:40272:6755":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"16:6026:6542":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"2:8188:144":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:3194:13876":{"crate_id":2,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"2:44174:6826":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"17:12443:3422":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"18:521:25605":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"16:0:2288":{"crate_id":16,"path":["gimli"],"kind":"module"},"17:12900:3452":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"17:15078:3949":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"1:3831:8614":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"2:39424:6750":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"17:12597:3430":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"0:138:2077":{"crate_id":0,"path":["rustc_version","Error","CommandError"],"kind":"variant"},"2:22966:5876":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU16Inner"],"kind":"struct"},"6:1663:4965":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"16:2808:4299":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"2:46379:6215":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"17:9916:21414":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"6:5415:5269":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"6:5283:5216":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"17:14246:3712":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"2:40887:6788":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"2:47053:6294":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"20:299:2015":{"crate_id":20,"path":["semver","Version"],"kind":"struct"},"17:11898:3371":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"1:11505:30436":{"crate_id":1,"path":["std","sys","sync","once","futex","CompletionGuard"],"kind":"struct"},"20:220:136":{"crate_id":20,"path":["semver","parse","Error"],"kind":"struct"},"2:45994:6182":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"2:8283:2542":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:41854:6113":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"5:2112:7557":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"1:4683:8647":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"17:15266:3995":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"6:8253:5812":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"0:74:2030":{"crate_id":0,"path":["rustc_version","LlvmVersion"],"kind":"struct"},"14:202:13915":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"1:2317:3042":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"16:7580:6640":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"2:33919:14050":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:10710:3069":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"2:40627:6773":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"2:22038:31858":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"16:7695:4497":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"6:1517:4862":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"1:8064:8555":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"1:1071:6634":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"16:7006:7498":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"11:710:7527":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2:21620:5855":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"2:39602:5966":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"6:4897:5066":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:3581:13945":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"6:5102:5153":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"2:39532:215":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"6:6775:5588":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"5:5462:2491":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"6:4916:5079":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"17:11313:6463":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"2:21999:8604":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"0:152:2149":{"crate_id":0,"path":["rustc_version","Error","LlvmVersionError"],"kind":"variant"},"6:6471:5447":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"6:5557:5337":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"11:837:7529":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"17:16050:3511":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"16:6634:4311":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"2:46923:6267":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"2:40604:6769":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"6:7584:5786":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"5:3801:3064":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"11:102:6657":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"17:14298:3718":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"5:4278:3033":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"17:13568:3572":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"17:13999:3657":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"2:43663:7618":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"5:2245:6680":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"0:135:2074":{"crate_id":0,"path":["rustc_version","Error","CouldNotExecuteCommand"],"kind":"variant"},"17:16176:4251":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"2:41918:2815":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"6:7575:5783":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"1:3639:2456":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"2:43125:6131":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"17:13363:3524":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"20:280:7695":{"crate_id":20,"path":["semver","error","Position"],"kind":"enum"},"16:7306:35264":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"18:581:2695":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"6:4924:5082":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"16:3475:4329":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"2:13082:119":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"2:40262:6754":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"6:5489:5313":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"2:43702:2143":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"17:11647:6468":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"6:6505:5471":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"6:8265:5814":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"5:7631:7576":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"1:7980:8604":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"16:7355:4470":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"2:44039:2495":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"2:23054:5884":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI64Inner"],"kind":"struct"},"2:44205:6830":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"6:7389:5698":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"16:6480:4305":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"17:10185:3328":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"6:465:4774":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"2:3365:140":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:2006:771":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"2:43581:6729":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:1103:7540":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"2:40585:6766":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"5:7563:2461":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"6:1707:4983":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"1:9136:2439":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"17:11865:7428":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"16:8093:4548":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"16:2458:4283":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"6:1526:4867":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:43135:6807":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"2:13513:204":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"16:8175:7519":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"6:5112:5154":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"16:4502:4340":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"1:8670:6345":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"16:4468:4339":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"17:11269:21447":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"1:5504:128":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"1:7715:30003":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"1:8512:3050":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"2:42593:2828":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:11914:6895":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"1:4761:8664":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"16:3925:4335":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"17:11166:3350":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"1:10716:3067":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"1:3428:3068":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"1:10939:6301":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"0:119:2123":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","ParseIntError"],"kind":"variant"},"17:13252:3501":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"16:8073:4547":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"16:2438:4282":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"17:11510:7404":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"17:15301:4004":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"16:6940:4423":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"6:4965:5098":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:43104:2824":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"5:3288:6668":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"16:7910:21357":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"6:4800:5002":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"1:10949:138":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"1:4050:2012":{"crate_id":1,"path":["std","num"],"kind":"module"},"6:7602:5789":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"1:8333:7676":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"6:7366:5680":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"1:3476:3055":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"6:6532:5478":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"1:619:8548":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"17:15426:4037":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"6:6915:5640":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"6:5146:5157":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"11:2423:2815":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"1:4213:8625":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"17:13187:3483":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"2:44806:6857":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"2:43562:6728":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"17:256:7361":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"18:659:7356":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"16:6317:7486":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"6:491:4787":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"1:11659:6890":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"0:0:2162":{"crate_id":0,"path":["rustc_version"],"kind":"module"},"16:2338:4271":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"16:5367:21343":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"1:12357:1894":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"16:6620:4382":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"16:3778:4331":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"17:15822:4158":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"1:8856:2813":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"7:0:1884":{"crate_id":7,"path":["unwind"],"kind":"module"},"1:10639:30429":{"crate_id":1,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"6:6874:5614":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"17:15655:4115":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"17:15138:3959":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"11:1887:2815":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"2:32030:2441":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"16:6962:4314":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"11:1087:35237":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"17:12328:6480":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"14:214:6655":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"11:700:2815":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"16:8259:4488":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"2:34265:4450":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"2:747:3005":{"crate_id":2,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"9:424:20332":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"1:1085:7536":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"17:2234:7371":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"2:46108:6188":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"6:5181:5161":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"6:8247:5811":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"6:5376:5248":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"17:14560:3763":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"2:13706:6736":{"crate_id":2,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"17:15720:4134":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"16:5802:21344":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"1:11020:26131":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"1:0:1696":{"crate_id":1,"path":["std"],"kind":"module"},"1:11818:7640":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"1:12342:722":{"crate_id":1,"path":["std","f16"],"kind":"primitive"},"4:0:2280":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"1:8720:6356":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"1:8022:3374":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"1:2313:6880":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"1:3893:7639":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"16:5006:4356":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"15:0:2287":{"crate_id":15,"path":["addr2line"],"kind":"module"},"6:6821:5603":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"5:1536:6667":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"5:3036:34797":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"2:39775:13979":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"5:3314:6671":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"17:14529:3757":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"16:2355:4273":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"1:4550:7644":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"5:7432:34614":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"1:2488:8601":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:44331:13914":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"16:6120:21347":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:44670:163":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"2:4412:13948":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"1:3600:2444":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:22026:5856":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"11:2124:6634":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:4765:2842":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"2:41893:172":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"18:481:6442":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"6:5477:5310":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"16:7656:21355":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"2:2711:194":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"1:945:7527":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"2:39376:13881":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"18:80:25592":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:43878:2518":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"2:44030:2497":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2:13486:33049":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"6:6756:5585":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"1:4875:8646":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"17:15569:4088":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"17:14177:3697":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"17:10524:7377":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:4632:7584":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"2:4393:13875":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"2:3975:2815":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:12349:889":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"16:5781:4308":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"2:5190:33042":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"2:750:189":{"crate_id":2,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"2:11967:2498":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"9:0:2282":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"1:1918:2979":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"6:6542:5485":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"17:14012:3659":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"2:40613:6770":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"2:12663:2496":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:4510:6700":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"2:46621:6253":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"2:22897:3018":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"17:12238:7441":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"16:2768:4297":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"2:3397:8578":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:11579:7715":{"crate_id":1,"path":["std","sys","thread_local","fast_local","Key"],"kind":"struct"},"1:11217:30349":{"crate_id":1,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"2:41968:8557":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"6:8029:5809":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"2:45802:6163":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"6:1490:4851":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"5:7537:2426":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"1:6362:30448":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"1:8862:6364":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"1:1612:7542":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"17:11063:7387":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"6:4971:5101":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:46666:6254":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:12922:13907":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"16:6098:21346":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"11:1923:6671":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"2:45785:6162":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"2:40407:106":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"6:1686:4975":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"17:15769:4149":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"2:40394:6096":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:8648:5680":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"16:7755:4312":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"1:940:7541":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"17:14752:3795":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"2:45685:6150":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"16:7111:6632":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"2:44474:6845":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"6:5457:5299":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"6:5020:5128":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"2:10288:2829":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"2:23065:5885":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI128Inner"],"kind":"struct"},"1:11612:6887":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"18:765:25604":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:13686:6734":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"17:14855:3881":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:8656:14026":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:12359:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"2:41999:2817":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"17:11743:6475":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"2:9933:31913":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"17:13538:3560":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"5:7382:2815":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"17:10251:3330":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"6:0:988":{"crate_id":6,"path":["libc"],"kind":"module"},"17:11567:7408":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"2:22333:8829":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"5:2766:5841":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"1:11415:4753":{"crate_id":1,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"2:3121:246":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"2:4479:7583":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"16:5742:6509":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"2:23032:5882":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI16Inner"],"kind":"struct"},"17:16223:4259":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"1:3998:7641":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"17:14111:3672":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"2:4370:109":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"16:3029:3220":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"2:2675:200":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"2:22755:3003":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"2:41073:6790":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"2:40689:6779":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"16:6160:20456":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"2:43113:156":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"17:14575:3419":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"6:5536:5325":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:43960:2514":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"16:4771:4348":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"2:22483:8823":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"2:12395:2083":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"5:6931:13931":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"11:1007:6634":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"11:2562:4691":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"17:14131:3673":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"1:11094:30434":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"2:44498:6851":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"2:12363:14128":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"5:6069:14370":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"5:7592:14107":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"16:2748:4296":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"9:238:6131":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"1:1855:2962":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"2:45869:6167":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"17:11853:7427":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"16:7633:35261":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"2:42013:135":{"crate_id":2,"path":["rustc_version","Result","Err"],"kind":"variant"},"2:12609:6816":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:43924:2513":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"16:7497:4491":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"5:7619:2466":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"17:12175:7433":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"17:15368:4023":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"17:12225:7440":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"5:3259:34616":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"2:21549:8745":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"2:3564:253":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"5:4158:2814":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"2:42096:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"17:11634:6467":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"17:12213:7439":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"6:538:4819":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"1:11308:6381":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"17:14212:3709":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"6:523:4810":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"11:0:2284":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"16:5995:6536":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"1:1893:2972":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"18:563:3199":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"17:15760:4145":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"17:12076:7432":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"2:45977:6181":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"2:22371:8832":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"5:1839:7556":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"1:4201:8622":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"11:2548:4689":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"17:11051:7386":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"16:5722:4309":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"6:578:4841":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"2:40728:6783":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"17:12289:3411":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"2:46467:6219":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"2:7735:14022":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"1:11601:26142":{"crate_id":1,"path":["std","sys","thread_local","fast_local","DtorState"],"kind":"enum"},"1:12335:1299":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"16:2854:4301":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"1:7877:7719":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"17:15400:4031":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"18:515:3195":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"17:11227:7393":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"1:11839:7641":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"1:4129:8617":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"16:7686:7518":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"17:12362:6489":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"17:15324:4009":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"5:3046:34790":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"16:8226:21358":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"17:12863:3451":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"2:36141:4451":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"17:10170:3327":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"1:6497:219":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"2:41969:8680":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"2:4628:220":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"6:1639:4948":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"17:15176:3973":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"1:5436:202":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"16:3810:4332":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"2:3163:2680":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"6:6714:5572":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"2:9746:84":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:6841:7663":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLock"],"kind":"struct"},"17:12251:7442":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"5:2298:34688":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"6:7537:5764":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"2:11214:7593":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"17:14933:3924":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"17:12647:7450":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"2:2619:102":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:11394:7596":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"5:4477:3033":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"6:586:4845":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"2:3329:124":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"17:15197:3978":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"1:10713:3071":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"6:4952:5093":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:44048:2494":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:8251:3062":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"6:559:4831":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"16:6665:21350":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"1:8529:2501":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"16:4940:4354":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"2:12808:2013":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:12332:459":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"20:319:2537":{"crate_id":20,"path":["semver","VersionReq"],"kind":"struct"},"1:7917:30431":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"1:12333:1855":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"18:623:35285":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"11:673:2813":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"2:3311:13880":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"1:898:6666":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"17:15635:4112":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"6:6621:5535":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"2:7684:32350":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:1609:2815":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"5:680:7549":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"1:8196:6867":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"16:5347:4361":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"17:12969:3455":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"1:7936:30444":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"1:3330:3069":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"16:8216:6654":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"17:11493:7402":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"17:11016:7384":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"1:911:6667":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"1:1840:683":{"crate_id":1,"path":["std","env"],"kind":"module"},"17:12808:3449":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"2:46140:6190":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"11:2151:7537":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"2:40283:2509":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"6:6657:5549":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:21515:31854":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:8593:6870":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"2:42007:225":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"6:4870:5054":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"17:14051:3664":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"16:6466:4379":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"2:44365:2522":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"2:42907:136":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"1:4093:8616":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:40223:6753":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"11:800:7542":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"17:15116:3955":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"1:12356:952":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"1:8791:6359":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"0:93:2053":{"crate_id":0,"path":["rustc_version","VersionMeta"],"kind":"struct"},"17:14876:3889":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"1:8004:6300":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"6:5277:5213":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"5:4083:7542":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"6:7516:5750":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"17:15445:4042":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"6:6609:5528":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"6:497:4790":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"1:2534:2011":{"crate_id":1,"path":["std","io"],"kind":"module"},"6:5436:5284":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"11:1903:6668":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"2:22251:8827":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"2:40873:6787":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"16:7618:4493":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"11:1107:7538":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"2:44470:6844":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"2:8155:14027":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:12343:725":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:44280:6833":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"6:1496:4854":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"6:8006:5796":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"2:32637:4444":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"2:22918:8604":{"crate_id":2,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"17:13015:3419":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"17:11595:3367":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"2:46267:6211":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"2:2866:77":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"2:10495:152":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"16:7509:7509":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"1:2069:197":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"17:9737:21395":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"5:2098:3064":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"6:5528:5320":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"1:9419:7670":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockWriteGuard"],"kind":"struct"},"2:33746:14049":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"6:570:4836":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"6:5191:5168":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"6:5407:1228":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"1:9277:115":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"1:934:7556":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"2:46938:6268":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"2:10652:14140":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"17:14599:3773":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"17:11443:3364":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"17:10092:21418":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"2:30521:32135":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"2:10938:238":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:21728:5855":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"6:7359:5676":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:10286:2828":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"2:2875:143":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:41102:3077":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:8806:8690":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"1:4796:8620":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"1:9427:161":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"17:11042:7385":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"17:9807:21401":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"2:47014:6278":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"17:15624:4107":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"17:13785:3625":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"5:1437:99":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"17:13116:3470":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"2:44757:7620":{"crate_id":2,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"6:1503:4857":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"16:3329:4328":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"1:11193:2438":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"17:14356:3728":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"17:11674:6470":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"17:15434:4038":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"17:10915:35273":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"2:39492:214":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"2:44692:206":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"2:46877:6263":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"6:1671:4966":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:44559:14173":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"2:32072:7606":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"1:4808:5693":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"function"},"5:7724:7556":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"1:1627:6669":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"11:1051:7537":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"17:15456:4043":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"2:3491:210":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"17:15333:4012":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"1:8050:8554":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"19:0:1276":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"16:4976:4355":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"17:14079:3668":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:9751:91":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:39582:7608":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"17:13424:3534":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"6:5382:5251":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"17:13455:3543":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"16:7379:35265":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"17:14091:3669":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"2:10235:2456":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"2:42607:2831":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"2:22977:5877":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU32Inner"],"kind":"struct"},"1:9409:234":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"6:485:4785":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"2:10279:119":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"17:13497:3548":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"1:4314:8641":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"2:40575:6764":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"16:8188:7522":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"17:14038:3662":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"17:12342:6484":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"16:7098:6629":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"17:13526:3557":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"11:1582:7543":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"17:15039:3940":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"2:32165:2540":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"17:11799:7419":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"2:44674:218":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"1:8169:3269":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"2:22438:14066":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","with_exposed_provenance"],"kind":"function"},"5:4447:34818":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"2:0:551":{"crate_id":2,"path":["core"],"kind":"module"},"18:598:35283":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"17:14341:3724":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"17:14723:3775":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"5:5931:7542":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"3:0:493":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:3646:13883":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"17:12056:3403":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"17:11688:6471":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"17:13855:3634":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"17:13375:3527":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"0:146:2146":{"crate_id":0,"path":["rustc_version","Error","SemVerError"],"kind":"variant"},"17:12494:3424":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"1:12337:1670":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"17:13344:3523":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"1:2308:137":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"2:40714:3210":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"2:43683:7619":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:15023:3937":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"6:5546:5331":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:25928:266":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"2:21483:31856":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"17:11773:3435":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"0:55:2025":{"crate_id":0,"path":["rustc_version","Channel","Stable"],"kind":"variant"},"5:1073:34798":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"1:8230:6868":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"16:8202:4324":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"18:689:6450":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"17:4986:7376":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"1:4330:8643":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"2:21517:31852":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:12336:333":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"13:0:2279":{"crate_id":13,"path":["std_detect"],"kind":"module"},"2:42213:93":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"17:13594:3577":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"16:7888:6642":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"5:304:2490":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"11:2403:2814":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"2:22:803":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"1:1633:6670":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"11:2536:4687":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"2:23010:5880":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroUsizeInner"],"kind":"struct"},"17:15678:4128":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"2:22886:2123":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"2:46038:6184":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"2:3347:13882":{"crate_id":2,"path":["core","ops","deref","DerefPure"],"kind":"trait"},"2:43096:6806":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"2:3202:13878":{"crate_id":2,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"16:5307:4360":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"16:2418:4281":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"16:6504:6583":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"6:5636:5374":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"1:8644:7687":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"11:687:2814":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"6:5225:5184":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"0:134:136":{"crate_id":0,"path":["rustc_version","Error"],"kind":"enum"},"11:1883:2813":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"1:367:7621":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"2:32083:7607":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"0:45:225":{"crate_id":0,"path":["rustc_version","Result"],"kind":"type_alias"},"17:10068:21400":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"2:40299:2507":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"2:3182:4445":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"9:482:20329":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"2:3609:13879":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:754:153":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"17:16249:4263":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"1:2310:7635":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"5:3280:6670":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"5:879:8561":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"2:41668:8613":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"2:44352:6839":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:3657:2455":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"6:6636:5537":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"18:573:3192":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"16:6588:6587":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"11:2443:7542":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"2:44767:179":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:4810:5695":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"function"},"18:698:6451":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"18:635:3212":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"16:6532:6585":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"17:10018:21397":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"1:3287:30867":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"6:5344:5235":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"2:10290:2830":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"16:2936:20485":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"1:2712:30441":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"1:6171:6859":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"14:160:7523":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"17:14449:3749":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"17:13399:3531":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"5:6411:8835":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"1:5324:203":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"2:44486:6848":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"17:12683:7453":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"2:40379:6758":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"11:2469:7556":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"6:7306:5647":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"16:2394:4280":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"2:32076:4488":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"5:1577:209":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"1:9311:7695":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"17:14189:3700":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"17:11825:7424":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"2:2878:257":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"17:13738:3613":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"6:6447:5438":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:44317:6834":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:2521:14067":{"crate_id":2,"path":["core","ptr","with_exposed_provenance_mut"],"kind":"function"},"2:43641:7617":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"2:44482:6847":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:42586:2829":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"6:6706:5568":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"17:10457:137":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"1:970:7532":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"16:6442:6578":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"16:6427:7497":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"1:12283:6940":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"1:6187:219":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"17:12264:7443":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:12848:2493":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"1:9223:8708":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"6:5329:5233":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"1:5764:2434":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"1:5577:2429":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"1:8338:7677":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"6:5290:5218":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"1:10345:7701":{"crate_id":1,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"9:357:20345":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"2:2505:660":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:6881:6715":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"17:11242:7394":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"6:6519:5472":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"5:6609:34798":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"6:8341:5832":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"16:7648:7517":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"17:15608:4103":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"6:545:4823":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"6:1699:4979":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"1:6025:7653":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"11:2140:7536":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"1:8559:8612":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"1:7867:3323":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"17:13272:3511":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"2:42135:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:9364:6373":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"5:7422:6692":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"1:953:7529":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"2:21498:31861":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:7514:2870":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"2:42047:2813":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"6:5002:5119":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"14:187:20425":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:46857:6261":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"6:5565:5339":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"6:479:4782":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"5:1527:6666":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"17:11812:7422":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"11:2369:7547":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"1:12347:877":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"2:43732:2502":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:6670:7659":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"16:4802:4349":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"17:12150:3409":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"1:10997:2983":{"crate_id":1,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"2:22788:5863":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"17:13844:3633":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"1:10914:6879":{"crate_id":1,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"17:14436:3748":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"16:5037:4357":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"1:11243:6374":{"crate_id":1,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"2:42055:2814":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"2:40488:2480":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"1:12348:883":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"1:976:7534":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"17:14386:3731":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"16:4743:4347":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"16:8136:6649":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"16:6872:6616":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"5:5073:3033":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"1:9715:7673":{"crate_id":1,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"6:6417:5421":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:43806:2521":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:6172:6709":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:2227:128":{"crate_id":1,"path":["std","ffi","os_str","Display"],"kind":"struct"},"1:6787:8705":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"6:7485:5724":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"20:351:2535":{"crate_id":20,"path":["semver","Op"],"kind":"enum"},"2:30240:3002":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"2:15:2035":{"crate_id":2,"path":["core","write"],"kind":"macro"},"2:43347:6810":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"2:44073:2509":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"5:1735:34798":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"6:1485:4849":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"11:430:35238":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"2:43978:2515":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2:46207:6193":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"2:3362:139":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"1:12330:405":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"2:22866:6744":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"2:43591:7616":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:1999:3021":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"6:6670:5553":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"5:6690:2815":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"2:44478:6846":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"17:13959:3651":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"17:11497:7403":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"17:15383:4027":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:11083:2813":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"2:22732:5858":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"5:5466:2492":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"2:42010:192":{"crate_id":2,"path":["rustc_version","Result","Ok"],"kind":"variant"},"1:4661:8646":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"2:4358:7582":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"17:11128:3316":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"17:10534:35270":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"1:4806:5691":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"function"},"17:12485:21543":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"6:6597:5523":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:41910:2814":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"17:15418:4035":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"0:118:2037":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError"],"kind":"enum"},"5:6772:34798":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2:2641:112":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:10735:30441":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"2:22295:8828":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"6:5314:5229":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"12:0:2285":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"1:9720:30277":{"crate_id":1,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"2:2950:123":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"11:490:153":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"2:21602:8741":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"2:45700:6151":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"6:8197:5810":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:4711:2841":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"2:23528:235":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"16:4641:4345":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"1:12118:28219":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"2:11408:7597":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"0:53:2023":{"crate_id":0,"path":["rustc_version","Channel","Beta"],"kind":"variant"},"16:4587:4343":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"2:4637:7585":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"6:5122:5155":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"18:613:35282":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"15:394:20448":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"5:7490:2815":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"6:4979:5106":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"5:2123:7558":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"16:6543:6586":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"5:6016:71":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"1:7999:7671":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"5:3247:2813":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"2:22004:8747":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"17:15521:4087":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"5:4511:34818":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"16:5769:6514":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"17:15616:4106":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"5:732:249":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:40595:6767":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:10078:2850":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"2:42836:2838":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"2:10292:2831":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"11:434:35239":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"1:2628:3060":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"17:10887:35269":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"2:42174:86":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"10:44:4694":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"16:2788:4298":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"16:2636:4291":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"6:5445:5290":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"6:6478:5451":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:11005:2433":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"6:8288:5820":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"14:7:7523":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"16:4424:4338":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"1:5627:2432":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"17:2175:21475":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"16:2998:4325":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"2:2882:256":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"1:1094:7537":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"6:5370:5246":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:11380:2518":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:21500:31849":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"2:10718:32993":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"6:1680:4972":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"17:12695:7454":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"17:12949:3416":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"1:9387:186":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"1:3055:225":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"18:754:6459":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"11:1676:35233":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"6:5244:5194":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"16:7741:4322":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"6:6650:5548":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"1:2462:8591":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"1:8235:6869":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"17:11524:7405":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"6:4992:5112":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"2:42826:6120":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"5:2318:6685":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"6:5200:5173":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"1:4191:8621":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"6:6460:5439":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:10909:6877":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"20:129:2538":{"crate_id":20,"path":["semver","identifier","Identifier"],"kind":"struct"},"11:811:7556":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"6:6664:5550":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:42488:7592":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"17:13211:3497":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"2:46222:6194":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"17:16165:4246":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"2:3358:2541":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"16:6782:21351":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"1:1616:7556":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"2:22988:5878":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU64Inner"],"kind":"struct"},"1:9283:7691":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"17:13922:3647":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"6:5134:5156":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:21461:2695":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"1:8625:6344":{"crate_id":1,"path":["std","os","unix","net","ucred","UCred"],"kind":"struct"},"1:676:8551":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"2:2519:14066":{"crate_id":2,"path":["core","ptr","with_exposed_provenance"],"kind":"function"},"2:4996:13966":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"6:5160:5158":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"1:1605:2813":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"1:10986:30351":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"2:3735:70":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"1:9344:26149":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"17:12887:6497":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"1:1621:6668":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"2:10503:156":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"1:3383:3071":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"1:7352:7762":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"2:3126:2676":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"6:6900:5629":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"2:46076:6186":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"16:7473:4490":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"6:1535:4873":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"5:7104:34834":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"2:40193:6752":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:8473:3078":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"16:5700:4307":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"1:12350:870":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"1:6706:6862":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"1:12358:1402":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"2:3156:2678":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"11:2326:7536":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"17:10573:35276":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"6:6562:5501":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"2:12854:2486":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"2:40386:6759":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"struct"},"2:42369:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"16:6494:6582":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"10:36:4693":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"2:40345:6757":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"17:12584:7381":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"2:46009:6183":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"17:12792:3290":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"6:8259:5813":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"6:6729:5574":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"11:1603:7544":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"2:44548:6853":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"2:13798:8563":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"17:10877:7382":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"17:12408:3418":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"17:10317:3332":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"6:1565:4892":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"17:10399:2501":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"17:12707:7455":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"16:7052:7499":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"16:6948:4313":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"6:5336:5234":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"16:6079:6504":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"2:43328:6135":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"17:15799:4154":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"2:21716:8604":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"2:46059:6185":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:10504:30278":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"2:42881:73":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"17:14284:3717":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"17:14912:3919":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"17:14516:3756":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"17:14235:3710":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"17:12127:3408":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"1:9123:2438":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"11:2554:35236":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"16:5846:6521":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"16:7144:21353":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"11:856:7532":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"2:46897:6265":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"17:14402:3735":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"17:16079:4224":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"2:3116:117":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"16:6412:21348":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCacheStrategy"],"kind":"enum"},"1:9400:3033":{"crate_id":1,"path":["std","sync","poison","Guard"],"kind":"struct"},"16:6278:7468":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"16:5914:6526":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"2:44733:6143":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"16:7014:21352":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"2:4701:6701":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"17:15058:3941":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"16:7132:6633":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"1:924:7542":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"2:40679:6778":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"17:13325:3518":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"1:12304:8556":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"2:41990:14121":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"2:10538:2822":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"20:333:2534":{"crate_id":20,"path":["semver","Comparator"],"kind":"struct"},"2:1954:5846":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"2:3252:4446":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:45852:6166":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"11:883:7535":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"2:44783:6856":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:9392:7656":{"crate_id":1,"path":["std","sync","mutex","MappedMutexGuard"],"kind":"struct"},"1:2773:3063":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"5:1566:7528":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"17:14868:3888":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"16:5107:4359":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"17:13814:3630":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"17:12107:3359":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"2:43628:6730":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"16:6976:4426":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"17:15646:4113":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"6:4942:5090":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"18:651:3192":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"2:7620:13976":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1:5101:8667":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"16:6749:6601":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"16:872:7362":{"crate_id":16,"path":["gimli","read","endian_slice","DebugLen"],"kind":"struct"},"1:671:7628":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"6:1559:4890":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"17:13146:3474":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"1:6270:2017":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"2:33534:14046":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:7395:26458":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"11:1025:7536":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"17:13606:3580":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"1:8522:3051":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"2:2845:8604":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"17:10710:7380":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"17:10769:35274":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"2:44746:33175":{"crate_id":2,"path":["core","task","wake","ExtData"],"kind":"enum"},"16:6456:21349":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"2:8201:2543":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"2:10928:8604":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"16:7727:4321":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:44524:130":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"16:4856:4351":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"11:1910:6669":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"5:5418:34798":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"2:40423:14107":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:16259:3528":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"5:7373:5844":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"2:39474:211":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"16:5400:3327":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"17:14463:3750":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"17:11557:7407":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"16:7085:6626":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"2:8647:148":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"11:1160:7540":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"1:11778:7639":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"15:288:20437":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"17:13387:3528":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"17:15168:3970":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"17:12993:21421":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"1:8605:8645":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"17:2037:7367":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"2:32197:114":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"6:8300:5822":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"5:7579:2464":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"11:2304:6634":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"5:7454:209":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"16:4560:4342":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"2:22648:6738":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"16:6398:4303":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"11:774:6666":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"1:12345:720":{"crate_id":1,"path":["std","f128"],"kind":"primitive"},"1:9318:7696":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"11:351:35230":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"5:3254:6669":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"16:6895:4417":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"1:6666:6792":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"2:32097:6749":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"1:7471:29925":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"6:6409:5419":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"1:11037:2440":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"0:48:2017":{"crate_id":0,"path":["rustc_version","Channel"],"kind":"enum"},"2:22766:32121":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"11:2231:6672":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"5:7446:2815":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"2:2048:14076":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"18:718:3213":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"6:5588:5346":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"6:7412:5699":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:44684:226":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"17:14545:3759":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"17:13972:3376":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"1:4151:8619":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"2:42063:2815":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:3554:14057":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:2476:8595":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"16:7549:6638":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"6:5039:5138":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"2:43824:2520":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"17:12388:6490":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"17:513:7364":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"17:11089:7388":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"14:40:3498":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"2:1984:1342":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"2:22804:32118":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"2:46091:6187":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:11907:28526":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"2:41902:2813":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"6:473:4779":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"17:11841:7426":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"17:13089:3464":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"2:42853:32148":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"2:42291:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"2:43726:2503":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"2:11175:2496":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"16:4830:4350":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"1:5825:219":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"6:4985:5109":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:8548:7683":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"2:8230:129":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"17:14503:3755":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"17:11102:7389":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"11:2498:20407":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"17:12724:21419":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"2:3368:141":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"17:13723:3609":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"5:4844:788":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"17:10671:35268":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"18:608:7355":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"17:11755:6478":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"6:5031:5133":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"5:1365:7540":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"2:46123:6189":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:45817:6164":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:9208:8709":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"6:4932:5084":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"1:3519:3077":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:33601:14048":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"11:1566:20412":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"1:8482:2443":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"1:9157:2813":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"2:6058:6707":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"2:3342:2819":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"17:403:7363":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"6:5423:5274":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"5:952:2813":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"1:8174:7673":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"1:5946:7647":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"16:6385:4375":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:42252:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:9173:2815":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"16:867:7361":{"crate_id":16,"path":["gimli","read","endian_slice","DebugByte"],"kind":"struct"},"2:3172:8737":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"2:41636:6102":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"6:517:4807":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"17:12030:7429":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"17:15376:4026":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"6:6491:5460":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"1:5591:2430":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"6:6811:5601":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"16:5385:3326":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:46408:6216":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"11:742:7528":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"6:6379:5394":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"1:880:2814":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"2:39589:5964":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"16:2612:4290":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:30495:5891":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"2:46976:6276":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"2:44159:6820":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"17:16198:4253":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"16:8313:136":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"2:4816:2843":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"17:12621:3431":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"2:22159:8743":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"5:4318:2813":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"6:4864:5053":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"16:6246:205":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"2:41802:6803":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"6:5306:5225":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"11:844:8560":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"6:6880:5615":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"6:8306:5823":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"2:46711:6255":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:5247:7646":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:15582:4094":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"1:12346:895":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"16:6560:4306":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"2:2717:201":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:6449:6859":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"2:11132:2517":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"16:8155:6652":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"2:40535:7609":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"2:44188:6829":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:32090:2841":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"1:9165:7688":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"2:10296:2832":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:2478:8596":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"16:6927:4421":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"18:507:3192":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"2:12586:6815":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"2:5228:3079":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"2:43742:2501":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"9:53:20348":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"2:44494:6850":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:3022:7637":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"17:13774:3622":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"17:14147:3678":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"2:46296:6212":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"16:2528:4286":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"6:8282:5819":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:21600:8604":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"6:7467:5713":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"2:11893:7598":{"crate_id":2,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"1:12315:26136":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"16:5817:6516":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"2:12869:2487":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"17:11256:6460":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"17:12478:3423":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"2:8650:2816":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"0:51:2021":{"crate_id":0,"path":["rustc_version","Channel","Nightly"],"kind":"variant"},"17:15289:3998":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"2:32107:2539":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"17:12318:3416":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"11:396:35226":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"2:3575:13946":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:4756:13956":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:42928:2839":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"11:832:7541":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"5:1180:34794":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"18:680:6447":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"17:13946:3648":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"1:5642:113":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"6:5390:5256":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"16:7604:4320":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"17:12464:21542":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"1:4205:8623":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"17:16151:4243":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"2:45913:6170":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"17:14994:3931":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"2:45717:6154":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:6870:6718":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"9:447:20330":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"5:6955:13932":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"6:5083:5152":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:7967:6863":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"0:28:2082":{"crate_id":0,"path":["rustc_version","version_meta_for"],"kind":"function"},"1:10956:6377":{"crate_id":1,"path":["std","sys","pal","unix","fs","Mode"],"kind":"struct"},"1:1970:3020":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"17:14260:3714":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"16:6047:7461":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"11:328:6662":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"1:4970:7645":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"16:7321:6116":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"6:4959:5096":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"17:13674:3584":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"1:12352:1815":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"6:6738:5577":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"17:14271:3715":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"17:16093:4228":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"16:7570:4318":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"1:9708:137":{"crate_id":1,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"6:6698:5564":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"1:8464:3076":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:38072:14053":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"16:2572:4288":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"5:4432:264":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"6:7984:5795":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"18:548:152":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:2846:13978":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:4912:8631":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"16:3014:20486":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"17:16235:4262":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"1:3293:26374":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"1:11684:6892":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"1:10919:6866":{"crate_id":1,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"16:7711:209":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"17:12929:3453":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"2:9428:2486":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"17:11354:7399":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"17:10218:3329":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"1:4916:8634":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"1:5611:2431":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"2:43502:7614":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"18:643:3192":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"6:5064:5151":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"17:14311:3719":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"2:41096:6793":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"6:5320:5230":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"5:6965:13933":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"18:670:7360":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"1:12338:1704":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"6:5630:5371":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"17:14025:3660":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"11:875:7534":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"17:13292:3512":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"2:30457:5888":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"17:12353:6488":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"16:6263:6575":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"2:46544:6252":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:9106:2437":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"2:22383:32964":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"6:4876:5056":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"5:741:118":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"1:1916:2978":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"1:8554:7685":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"1:4322:8642":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"1:3426:3067":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"2:44383:2523":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"2:40412:2462":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"7:31:20316":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"1:890:2815":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"6:4824:5020":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"1:3332:3070":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"17:16138:4237":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"16:7813:6641":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"17:261:7362":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"2:12874:2485":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"5:7548:2427":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"17:12659:7451":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"6:8317:5827":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"17:15410:4034":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"1:3290:26367":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"17:16212:4257":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"17:11153:7381":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2:11926:7599":{"crate_id":2,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"5:3670:2814":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"6:6629:5536":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"18:491:6443":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"17:1207:7366":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"6:8328:5828":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"17:11730:6474":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"2:1947:659":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"17:11583:7413":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"2:40460:2467":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"2:46740:6256":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"6:5236:5190":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"17:3473:7373":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"16:2838:4300":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"17:12671:7452":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"6:7561:5774":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"1:9445:6374":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"2:44064:2508":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"6:5352:5236":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"14:220:4638":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"17:13553:3566":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"16:2374:4279":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"6:6435:5434":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"6:7330:5664":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"17:14977:3929":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"1:6784:7660":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"2:42330:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"2:45884:6168":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"17:13473:3544":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"1:6394:7654":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"17:15356:4020":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"17:11764:6479":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"2:44794:6146":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"2:39552:2420":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"17:15102:3954":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"11:123:6658":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"2:46991:6277":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"17:15249:3987":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"6:5052:5142":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"17:9886:21413":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"17:10905:7383":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"17:10997:3345":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"1:5157:8672":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"5:1474:2813":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"16:5756:7459":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"5:6173:3033":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"6:5361:5240":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"0:49:2019":{"crate_id":0,"path":["rustc_version","Channel","Dev"],"kind":"variant"},"2:32195:2681":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"17:10612:7378":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"1:8611:7686":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"2:25:683":{"crate_id":2,"path":["core","env"],"kind":"macro"},"6:8294:5821":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"0:144:2119":{"crate_id":0,"path":["rustc_version","Error","UnexpectedVersionFormat"],"kind":"variant"},"1:9331:6370":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"17:2203:7368":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"2:2622:103":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"16:7528:6635":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"2:10543:2823":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"2:42865:4524":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"0:25:1912":{"crate_id":0,"path":["rustc_version","version"],"kind":"function"},"2:39340:2818":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:4872:8668":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"2:40698:6780":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"2:10298:2833":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:9149:2440":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"11:1728:155":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2:22824:32163":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"5:2535:5836":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"18:735:25603":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"1:11673:6939":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"2:46798:6258":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:21529:31863":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"6:6788:5595":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"9:502:4756":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"1:8085:2983":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"1:11206:2439":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"2:32166:2682":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"2:38017:14052":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:11645:6388":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"16:5927:6527":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"6:7429:5700":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"6:7348:5671":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"2:10750:32175":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"16:2478:4284":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"17:12851:6496":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"2:3197:13877":{"crate_id":2,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"2:23021:5881":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI8Inner"],"kind":"struct"},"17:15206:3979":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"16:7539:4317":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"17:15596:4100":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"2:33333:8736":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:8542:2510":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"2:4346:7581":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:2460:5849":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"2:4785:2684":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"2:22424:8833":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"2:44138:13913":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"2:12863:2488":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"2:45732:6155":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"5:6430:8836":{"crate_id":5,"path":["alloc","task","LocalWake"],"kind":"trait"},"16:5075:4358":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"1:6560:185":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"2:40478:2481":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"6:1593:4911":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"2:41927:6116":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"5:3042:34791":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:42890:2838":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"6:4885:5061":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"6:564:4833":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"2:44725:7001":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:10930:6886":{"crate_id":1,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"17:12278:7444":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:3569:145":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"2:41087:6792":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"20:381:2536":{"crate_id":20,"path":["semver","Prerelease"],"kind":"struct"},"6:6689:5558":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"6:5014:5125":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"16:6335:7494":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:46819:6259":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:9414:7669":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockReadGuard"],"kind":"struct"},"2:30510:2838":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"17:9938:21415":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"2:40566:6763":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"2:33400:8738":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:9259:6369":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"1:5767:2436":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"1:12344:741":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"2:43715:2506":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"16:7428:21354":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"1:10596:2437":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"6:5400:5263":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"1:5078:8665":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"1:6910:232":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"17:15342:4013":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"6:553:4828":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"16:2878:4302":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"1:11690:6893":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"2:4269:3033":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"5:1164:34706":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"6:7546:5767":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"5:839:7550":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:46317:6213":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"17:11115:7390":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"2:43088:2825":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"17:13485:3547":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"16:2323:20483":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"5:1351:7536":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"6:6678:5555":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"5:0:307":{"crate_id":5,"path":["alloc"],"kind":"module"},"16:3842:4333":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"2:38127:14054":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"11:299:6659":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"2:11366:2519":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"17:11467:3366":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"5:1545:7541":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"1:9545:2978":{"crate_id":1,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"2:22955:5875":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU8Inner"],"kind":"struct"},"16:3669:3225":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"1:11755:28385":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"17:13877:3641":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"16:6300:7483":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"2:9938:33455":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"17:11324:7395":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"2:3114:2675":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"2:22873:3004":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:2734:3052":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"17:12201:7438":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"1:12351:1833":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"6:5219:5181":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:8338:177":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:43654:6731":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:11260:6380":{"crate_id":1,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"17:13173:3482":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"1:10326:2972":{"crate_id":1,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"2:30489:5889":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"17:12089:3406":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"1:3896:7640":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"17:10439:3336":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"1:12331:1159":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"1:11922:6895":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"1:10219:6800":{"crate_id":1,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"17:12557:3348":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"11:1142:7539":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"1:10968:2443":{"crate_id":1,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"2:44502:6852":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"17:13308:3516":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"1:668:7626":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"6:1621:4936":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"17:13899:3642":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"2:22595:6737":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"16:7857:4509":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"17:16187:4252":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"5:3644:181":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"5:7482:2815":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"1:8535:2517":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"1:6346:6734":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"17:11788:7418":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"17:14847:3878":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"16:4614:4344":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"2:1871:3033":{"crate_id":2,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"17:11075:3348":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"16:7769:4500":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"2:43906:2512":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:4343:8644":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"2:43571:7615":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:23076:5886":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroIsizeInner"],"kind":"struct"},"17:16069:4223":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"2:44010:2510":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"2:22469:8604":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"5:4934:216":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"17:13797:3627":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"1:8846:6872":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"5:5861:250":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"2:46190:6192":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"6:5598:5351":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"0:128:2049":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","MinorVersionRequiredBefore4"],"kind":"variant"},"17:16032:3501":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"1:9272:7689":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"16:6849:6615":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"15:306:20438":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"1:2698:3061":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"17:15463:4045":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"2:41652:6104":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"2:22716:6739":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"18:113:25594":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"16:5863:21345":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"16:2708:4294":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"5:5726:13931":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"2:40515:6730":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:9737:127":{"crate_id":1,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"5:3657:2813":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"1:7138:8739":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"2:39512:213":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"2:22511:8824":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"2:40738:6784":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:1477:155":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"10:0:2283":{"crate_id":10,"path":["adler"],"kind":"module"},"5:935:8562":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"1:524:8535":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"16:4531:4341":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"17:10818:7381":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"17:12530:7448":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"5:7642:242":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2:2062:5847":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"2:45898:6169":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"6:5483:5311":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"17:12508:3428":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"17:15957:4179":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"5:3881:7556":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"17:10828:35272":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"11:1917:6670":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"1:9323:7697":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"17:16121:4235":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"2:2258:5854":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"2:41129:6795":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:10977:30353":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"1:959:8560":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"14:31:7523":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"17:10044:21417":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"2:2137:188":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"16:5831:6519":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"1:9404:233":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"17:10954:21428":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"17:11419:3359":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"6:7314:5652":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"16:7799:4310":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"17:14986:3930":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"16:5415:4362":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"11:1891:7542":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"17:11026:21430":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"11:1066:20411":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"1:8259:3064":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"16:2548:4287":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"6:6768:5587":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"17:14414:3737":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"2:2680:133":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"17:12711:136":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"5:3218:100":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"6:5250:5196":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"16:7559:6639":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"2:30868:195":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"16:6342:35266":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"5:3816:7557":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"1:10756:3374":{"crate_id":1,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"2:23043:5883":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI32Inner"],"kind":"struct"},"17:14788:3826":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"1:10413:2446":{"crate_id":1,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"13:110:35244":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"2:8694:31917":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:22357:8604":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"6:5617:5365":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"6:1653:4959":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"17:11715:6473":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"1:4476:7643":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"5:1555:7527":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"18:589:3200":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"6:4909:5075":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"16:3614:4330":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"1:9238:8710":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"1:12299:29997":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"16:6991:35260":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"1:4993:8630":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"17:11367:3348":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"2:7619:13975":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"18:531:6444":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"17:12572:3359":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"5:7390:6691":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"1:7323:30451":{"crate_id":1,"path":["std","sys","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"1:9463:6876":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"1:8243:7675":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:41080:6791":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"17:15092:3953":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"6:532:4816":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:8192:164":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"6:4891:5063":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:40544:3050":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"6:6441:5437":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"5:1489:2814":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"2:43774:2516":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"6:7461:5711":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"17:12516:7446":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"2:42410:90":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:3167:8735":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"17:10982:21429":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"1:8343:3065":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"2:45927:6171":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:5953:7651":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"17:11702:6472":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"18:538:3197":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:10284:128":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"2:43343:6809":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:8070:2982":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"17:14587:3766":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:6876:6717":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"17:9755:21393":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"17:13581:3576":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"17:10759:3359":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"17:15273:3996":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"5:1505:2815":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"17:11877:3369":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"2:3842:7542":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"6:6746:5578":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"16:8118:6646":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"6:5643:5377":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:46429:6217":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"20:395:2533":{"crate_id":20,"path":["semver","BuildMetadata"],"kind":"struct"},"17:14372:3729":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"17:3264:7372":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"17:13046:3460":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"2:5885:3033":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"16:7168:6370":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"2:3594:33252":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:5278:7646":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:32106:236":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"17:10720:35271":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"6:1547:4882":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"17:14489:3752":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"5:1200:34707":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"2:4558:2840":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"5:3038:5840":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"1:4292:29928":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"17:15010:3932":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"5:5520:1704":{"crate_id":5,"path":["alloc","str"],"kind":"module"},"16:6353:4372":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"16:2508:4285":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"16:3196:4270":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"16:4352:4337":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"17:15701:4129":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"2:7907:3076":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"5:7740:7004":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"2:44490:6849":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"2:11107:2814":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"2:41121:6097":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"2:43673:6732":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:3057:136":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"17:15190:3976":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"17:13064:3463":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"11:787:6667":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"6:5296:5221":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:40306:13972":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"16:2902:20484":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"6:5677:5390":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"1:11278:161":{"crate_id":1,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"2:12379:7600":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"2:21608:8744":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:564:8540":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"16:5686:4304":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"1:6855:7667":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLockGuard"],"kind":"struct"},"2:41696:6111":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"16:4882:4352":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"17:11621:6465":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"5:6563:7542":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"1:5832:6859":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"5:7665:7577":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"2:32108:243":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"6:5653:5378":{"crate_id":6,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"2:10294:205":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"2:46886:6264":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:22701:5857":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:12355:1809":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"17:11574:6672":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"2:6681:6710":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"17:15944:3497":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"9:392:20331":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"17:15748:4143":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"2:11252:7594":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"6:8012:5798":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"5:40:8579":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"2:40645:6775":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"8:0:2281":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"2:2961:136":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:10234:225":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"2:32849:4441":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"2:44055:2507":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"17:15222:3983":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"2:46961:6275":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"17:15778:4151":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"6:4787:4993":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"1:11083:30449":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"2:5270:963":{"crate_id":2,"path":["core","iter"],"kind":"module"},"6:5502:5318":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"17:12399:6491":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"2:44342:6835":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"17:13766:3620":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"16:6802:6602":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"2:3002:3025":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"2:39437:212":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"2:9317:7590":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"2:42600:2830":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:11225:6140":{"crate_id":1,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"17:10350:3333":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"17:12043:7430":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"17:11142:3359":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"16:4062:4336":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"17:12189:7437":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"1:11353:7714":{"crate_id":1,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"1:12354:1827":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"16:6066:6545":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"6:6721:5573":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"1:4143:8618":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"0:124:2047":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","ComponentMustNotHaveSign"],"kind":"variant"},"16:4913:4353":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"2:43602:6136":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"17:16105:4230":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"17:9858:21412":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"2:46769:6257":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"13:229:4686":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:33061:14045":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:45956:6180":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"2:44506:6140":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"2:46912:6266":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:40657:6776":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:3667:2453":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"16:6758:4405":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"5:7056:263":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"18:0:2290":{"crate_id":18,"path":["memchr"],"kind":"module"},"6:5046:5140":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"6:1580:4904":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"1:8768:6131":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"17:15126:3956":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"1:2072:196":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:21726:8742":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"6:5581:5344":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"17:13986:3656":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"2:39452:209":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"17:11189:3352":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:42072:195":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"2:21547:8604":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"1:3648:30060":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"14:0:2286":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"1:949:7528":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"17:12433:3419":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"17:11605:2015":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"2:38182:14055":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"17:437:3276":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"17:15281:3997":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"5:7412:7575":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"16:6433:6577":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"17:12422:6492":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"17:13753:3618":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"17:13437:3535":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"1:9112:198":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"6:1628:4940":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"1:4395:7642":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"2:11325:7595":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:40450:2501":{"crate_id":2,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"1:5839:6860":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"6:5671:5387":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"0:122:2044":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","ComponentMustNotHaveLeadingZeros"],"kind":"variant"},"16:8301:4560":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"2:13663:115":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"11:2352:7537":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"17:10661:7379":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"7:78:20323":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"1:12353:1821":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"1:5980:7652":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"2:22157:8604":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"2:40438:2463":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"17:15814:4155":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"2:40249:6095":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"17:12300:21541":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"17:597:3323":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"9:178:20397":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"6:4811:5010":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"6:8271:5815":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"1:11618:2448":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"17:12768:21398":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"17:16269:3533":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"17:14325:3722":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"1:10347:7700":{"crate_id":1,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"17:12543:7449":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"2:34092:14051":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"5:7129:34827":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"1:652:3022":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"2:46334:6214":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"17:11214:7392":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"17:15734:4136":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"1:1960:2010":{"crate_id":1,"path":["std","error"],"kind":"module"},"5:4248:3033":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"2:44020:2511":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"16:2592:4289":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"11:364:35228":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"5:1336:7537":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"5:3293:34618":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"17:11293:21448":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"1:8224:127":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"2:44253:6832":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"17:15151:3965":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"17:9781:21411":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"5:6048:6689":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"17:9671:21396":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"1:4157:8620":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"2:5169:423":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"16:2728:4295":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"2:39420:8577":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"1:11100:30435":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"5:3035:2917":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"17:12454:6494":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"16:6606:6595":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"2:45749:6156":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"5:7402:7542":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"2:12625:6817":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"16:7397:35263":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"5:3750:34798":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:5696:2433":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"6:6524:5473":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"2:43756:2517":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"17:11537:7406":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"6:8351:5834":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"1:4914:8633":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"1:8619:7683":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"6:7446:5705":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"5:7462:6693":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"6:5260:5202":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"1:4099:8615":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"2:22999:5879":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU128Inner"],"kind":"struct"},"14:165:20418":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"17:15390:4028":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"2:12549:6812":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"}},"external_crates":{"20":{"name":"semver","html_root_url":"https://docs.rs/semver/1.0.22/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":29}