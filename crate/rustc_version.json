{"root":"0:0:2499","crate_version":"0.4.0","includes_private":false,"index":{"2:2986:2418":{"id":"2:2986:2418","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2960:144"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2987-0:118:2375":{"id":"b:2:2987-0:118:2375","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2960:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2989:838"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:99:884":{"id":"0:99:884","crate_id":0,"name":"host","span":{"filename":"src/lib.rs","begin":[165,4],"end":[165,20]},"visibility":"public","docs":"Host target triple of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7747:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:2713-0:48:2355":{"id":"b:2:2713-0:48:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32386:2877","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2707:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2715:26301"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5692:34723":{"id":"5:5692:34723","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:303:2828","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:303:2828","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:108":{"id":"0:108","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,27],"end":[147,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32387:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2391","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5946:1794":{"id":"5:5946:1794","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7747:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:118:2375":{"id":"0:118:2375","crate_id":0,"name":"LlvmVersionParseError","span":{"filename":"src/lib.rs","begin":[280,0],"end":[293,1]},"visibility":"public","docs":"LLVM Version Parse Error","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:119:2460","0:122:2382","0:124:2385","0:126:2464","0:128:2387","0:130:2389"],"impls":["a:2:32385:236-0:118:2375","a:2:32444:2878-0:118:2375","a:2:42247:8860-0:118:2375","a:2:3241:3017-0:118:2375","a:2:42248:8984-0:118:2375","a:2:3206:246-0:118:2375","b:2:2987-0:118:2375","b:2:2983-0:118:2375","b:2:2998-0:118:2375","b:2:2993-0:118:2375","b:2:2713-0:118:2375","b:2:2710-0:118:2375","b:2:3822-0:118:2375","b:5:5944-0:118:2375","0:132","0:161","0:38","0:34","0:36"]}}},"0:158:838":{"id":"0:158:838","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["e",{"resolved_path":{"name":"str::Utf8Error","id":"2:43980:2480","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:128:2387":{"id":"0:128:2387","crate_id":0,"name":"MinorVersionRequiredBefore4","span":{"filename":"src/lib.rs","begin":[290,4],"end":[290,31]},"visibility":"default","docs":"Minor version component is required on LLVM versions earlier than 4.0","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"5:794:3259":{"id":"5:794:3259","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:162:838":{"id":"0:162:838","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["e",{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3001:137":{"id":"2:3001:137","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32309:2779","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:2989:838":{"id":"2:2989:838","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:80:808":{"id":"0:80:808","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[90,16],"end":[90,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10345:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10326:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:101:2405":{"id":"0:101:2405","crate_id":0,"name":"llvm_version","span":{"filename":"src/lib.rs","begin":[171,4],"end":[171,41]},"visibility":"public","docs":"Version of LLVM used by the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:42153:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"b:2:2987-0:93:2391":{"id":"b:2:2987-0:93:2391","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2960:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2391","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2989:838"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2713-0:93:2391":{"id":"b:2:2713-0:93:2391","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32386:2877","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2707:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2391","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2715:26301"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5710:26758":{"id":"5:5710:26758","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:13392:26761"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7747:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13292:7002":{"id":"2:13292:7002","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:44020:2839","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:63":{"id":"0:63","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,26],"end":[71,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2760:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:64:703"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:126:2464":{"id":"0:126:2464","crate_id":0,"name":"MinorVersionMustBeZeroAfter4","span":{"filename":"src/lib.rs","begin":[288,4],"end":[288,32]},"visibility":"default","docs":"Minor version component must be zero on LLVM versions later than 4.0","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:124:2385":{"id":"0:124:2385","crate_id":0,"name":"ComponentMustNotHaveSign","span":{"filename":"src/lib.rs","begin":[286,4],"end":[286,28]},"visibility":"default","docs":"A version component has a sign","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2983-0:118:2375":{"id":"b:2:2983-0:118:2375","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2960:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2957:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2986:2418"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2710-0:118:2375":{"id":"b:2:2710-0:118:2375","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32386:2877","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2704:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2712:2716"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:53:2361":{"id":"0:53:2361","crate_id":0,"name":"Beta","span":{"filename":"src/lib.rs","begin":[78,4],"end":[78,8]},"visibility":"default","docs":"Beta release channel","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:13301:32444":{"id":"2:13301:32444","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:44326:2832","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13400:8852":{"id":"2:13400:8852","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:5015:8852"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:44342:2846","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:103:479":{"id":"0:103:479","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[147,9],"end":[147,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"VersionMeta","id":"0:93:2391","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13285:27735":{"id":"2:13285:27735","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_checked`](str::split_at_checked).\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_checked":"2:13287:27739","str::split_at_mut":"2:13286:27736"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2983-0:93:2391":{"id":"b:2:2983-0:93:2391","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2960:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2957:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2391","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2986:2418"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13266:34007":{"id":"2:13266:34007","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:28:2420":{"id":"0:28:2420","crate_id":0,"name":"version_meta_for","span":{"filename":"src/lib.rs","begin":[209,0],"end":[262,1]},"visibility":"public","docs":"Parses a \"rustc -vV\" output string and returns\nthe SemVer version and additional metadata\nlike the git short hash and build date.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["verbose_version_string",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"0:45:225","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"VersionMeta","id":"0:93:2391","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:122:2382":{"id":"0:122:2382","crate_id":0,"name":"ComponentMustNotHaveLeadingZeros","span":{"filename":"src/lib.rs","begin":[284,4],"end":[284,36]},"visibility":"default","docs":"A version component must not have leading zeros","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2998-0:48:2355":{"id":"b:2:2998-0:48:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2957:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2967:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3001:137","2:3002:1819"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:59:479":{"id":"0:59:479","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[71,15],"end":[71,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Channel","id":"0:48:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:85:703":{"id":"0:85:703","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[90,27],"end":[90,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:155":{"id":"0:155","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[340,9],"end":[340,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10377:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:156:808"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:42":{"id":"0:42","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[384,0],"end":[396,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["provide","type_id","description","source","cause"],"trait":{"name":"Error","id":"2:3046:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:43:2473"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32444:2878-0:48:2355":{"id":"a:2:32444:2878-0:48:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32444:2878","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:141:2480":{"id":"0:141:2480","crate_id":0,"name":"Utf8Error","span":{"filename":"src/lib.rs","begin":[352,4],"end":[352,29]},"visibility":"default","docs":"The output of `rustc -vV` was not valid utf-8.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:143:1986"]},"discriminant":null}}},"0:96:2396":{"id":"0:96:2396","crate_id":0,"name":"commit_date","span":{"filename":"src/lib.rs","begin":[156,4],"end":[156,35]},"visibility":"public","docs":"Commit date of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:42153:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"5:7747:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:138:2415":{"id":"0:138:2415","crate_id":0,"name":"CommandError","span":{"filename":"src/lib.rs","begin":[345,4],"end":[350,5]},"visibility":"default","docs":"Error output from the command that was run.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"struct":{"fields":["0:139:2416","0:140:2419"],"fields_stripped":false}},"discriminant":null}}},"a:2:42247:8860-0:48:2355":{"id":"a:2:42247:8860-0:48:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42247:8860","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13295:32441":{"id":"2:13295:32441","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:13293:32446"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:44317:2833","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:98:2400":{"id":"0:98:2400","crate_id":0,"name":"channel","span":{"filename":"src/lib.rs","begin":[162,4],"end":[162,24]},"visibility":"public","docs":"Release channel of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Channel","id":"0:48:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:51:2359":{"id":"0:51:2359","crate_id":0,"name":"Nightly","span":{"filename":"src/lib.rs","begin":[76,4],"end":[76,11]},"visibility":"default","docs":"Nightly release channel","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2993-0:134:137":{"id":"b:2:2993-0:134:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2967:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2963:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2996:137","2:2997:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:64:703":{"id":"0:64:703","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[71,26],"end":[71,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Channel","id":"0:48:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:78:479":{"id":"0:78:479","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[90,9],"end":[90,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3206:246-0:134:137":{"id":"a:2:3206:246-0:134:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3206:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:0:2499":{"id":"0:0:2499","crate_id":0,"name":"rustc_version","span":{"filename":"src/lib.rs","begin":[9,0],"end":[417,58]},"visibility":"public","docs":"Simple library for getting the version information of a `rustc`\ncompiler.\n\nThis can be used by build scripts or other tools dealing with Rust sources\nto make decisions based on the version of the compiler.\n\nIt calls `$RUSTC --version -v` and parses the output, falling\nback to `rustc` if `$RUSTC` is not set.\n\n# Example\n\n```rust\n// This could be a cargo build script\n\nuse rustc_version::{version, version_meta, Channel, Version};\n\n// Assert we haven't travelled back in time\nassert!(version().unwrap().major >= 1);\n\n// Set cfg flags depending on release channel\nmatch version_meta().unwrap().channel {\n    Channel::Stable => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_STABLE\");\n    }\n    Channel::Beta => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_BETA\");\n    }\n    Channel::Nightly => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_NIGHTLY\");\n    }\n    Channel::Dev => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_DEV\");\n    }\n}\n\n// Check for a minimum version\nif version().unwrap() >= Version::parse(\"1.4.0\").unwrap() {\n    println!(\"cargo:rustc-cfg=compiler_has_important_bugfix\");\n}\n```","links":{},"attrs":["#![warn(missing_docs)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:15-20:299:2353","0:48:2355","0:74:2368","0:93:2391","0:25:1942","0:26:2423","0:28:2420","0:118:2375","0:134:137","0:45:225"],"is_stripped":false}}},"b:2:2993-0:118:2375":{"id":"b:2:2993-0:118:2375","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2967:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2963:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2996:137","2:2997:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13293:32446":{"id":"2:13293:32446","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:13295:32441"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:44308:2835","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:94:2352":{"id":"0:94:2352","crate_id":0,"name":"semver","span":{"filename":"src/lib.rs","begin":[150,4],"end":[150,23]},"visibility":"public","docs":"Version of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Version","id":"20:299:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:13365:34022":{"id":"2:13365:34022","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13397:34028":{"id":"2:13397:34028","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:5014:34028"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:44333:2845","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5699:34725":{"id":"5:5699:34725","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7747:242"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7747:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2998-0:118:2375":{"id":"b:2:2998-0:118:2375","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2957:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2967:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3001:137","2:3002:1819"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5707:34726":{"id":"5:5707:34726","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7747:242"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7747:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:40":{"id":"0:40","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[363,0],"end":[382,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10382:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:41:808"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:45:225":{"id":"0:45:225","crate_id":0,"name":"Result","span":{"filename":"src/lib.rs","begin":[417,0],"end":[417,58]},"visibility":"public","docs":"The result type for this crate.","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"std::result::Result","id":"2:42286:225","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"E"}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]}}}},"0:21:2376":{"id":"0:21:2376","crate_id":0,"name":"from_str","span":{"filename":"src/lib.rs","begin":[109,4],"end":[143,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"0:45:225","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:12912:2351","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:157":{"id":"0:157","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2960:144","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Utf8Error","id":"2:43980:2480","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:158:838"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:57":{"id":"0:57","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,9],"end":[71,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3201:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:88":{"id":"0:88","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,43],"end":[90,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","ge","lt","le"],"trait":{"name":"PartialOrd","id":"2:2802:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:89:1304"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:81":{"id":"0:81","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,23],"end":[90,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2765:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:17":{"id":"0:17","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[100,0],"end":[104,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10382:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:18:808"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:133:808":{"id":"0:133:808","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[279,9],"end":[279,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10345:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10326:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:160:838":{"id":"0:160:838","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["e",{"resolved_path":{"name":"semver::Error","id":"20:220:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13277:27709":{"id":"2:13277:27709","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:42155:190"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42153:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11041:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11041:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13315:3199":{"id":"2:13315:3199","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:42155:190","prim@char":"1:12355:475","self::pattern":"2:12952:2831"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42153:193","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:2824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12958:2824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12973:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13355:34017":{"id":"2:13355:34017","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12952:2831","`DoubleEndedIterator`":"2:8320:129","prim@char":"1:12355:475","str::match_indices":"2:13352:34016"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:44202:2851","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:2824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12958:2824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12973:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:90":{"id":"0:90","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,55],"end":[90,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10595:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:91:880"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:75:2370":{"id":"0:75:2370","crate_id":0,"name":"major","span":{"filename":"src/lib.rs","begin":[94,4],"end":[94,18]},"visibility":"public","docs":"Major version","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u64"}}},"0:67":{"id":"0:67","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,42],"end":[71,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","ge","lt","le"],"trait":{"name":"PartialOrd","id":"2:2802:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:68:1304"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:36":{"id":"0:36","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[301,0],"end":[324,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10382:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:37:808"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13381:34026":{"id":"2:13381:34026","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12355:475","self::pattern":"2:12952:2831"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:2824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:161":{"id":"0:161","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2960:144","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:162:838"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13271:26741":{"id":"2:13271:26741","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12499:2421"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32385:236-0:93:2391":{"id":"a:2:32385:236-0:93:2391","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32385:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2391","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:3824:1834":{"id":"2:3824:1834","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39868:6262","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:73:808":{"id":"0:73:808","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[71,60],"end":[71,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10345:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10326:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:86":{"id":"0:86","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,38],"end":[90,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2796:194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:87:486"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13286:27736":{"id":"2:13286:27736","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_mut_checked`](str::split_at_mut_checked).\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:13285:27735","str::split_at_mut_checked":"2:13288:27740"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13308:27256":{"id":"2:13308:27256","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12355:475","self::pattern":"2:12952:2831"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:2824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12958:2824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12973:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2983-0:74:2368":{"id":"b:2:2983-0:74:2368","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2960:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2957:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2986:2418"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13305:2381":{"id":"2:13305:2381","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, in which case this function will return true if\nthe `&str` is a prefix of this string slice.\n\nThe [pattern] can also be a [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\nThese will only be checked against the first character of this string slice.\nLook at the second example below regarding behavior for slices of [`char`]s.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```\n\n```\nlet bananas = \"bananas\";\n\n// Note that both of these assert successfully.\nassert!(bananas.starts_with(&['b', 'a', 'n', 'a']));\nassert!(bananas.starts_with(&['a', 'b', 'c', 'd']));\n```","links":{"prim@char":"1:12355:475","self::pattern":"2:12952:2831"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:2824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:110:703":{"id":"0:110:703","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[147,27],"end":[147,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"VersionMeta","id":"0:93:2391","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13390:27593":{"id":"2:13390:27593","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:40054:14283","Self::is_ascii":"2:13389:26756"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42153:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:40054:14283","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32385:236-0:48:2355":{"id":"a:2:32385:236-0:48:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32385:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3822-0:48:2355":{"id":"b:2:3822-0:48:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32386:2877","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3820:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3824:1834"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:135:2412":{"id":"0:135:2412","crate_id":0,"name":"CouldNotExecuteCommand","span":{"filename":"src/lib.rs","begin":[343,4],"end":[343,37]},"visibility":"default","docs":"An error occurred while trying to find the `rustc` to run.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:137:1986"]},"discriminant":null}}},"b:2:2983-0:48:2355":{"id":"b:2:2983-0:48:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2960:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2957:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2986:2418"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13319:2378":{"id":"2:13319:2378","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12952:2831","`DoubleEndedIterator`":"2:8320:129","prim@char":"1:12355:475","str::split_whitespace":"2:13293:32446","str::rsplit":"2:13325:27744"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:44034:2855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:2824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:65":{"id":"0:65","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,37],"end":[71,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2796:194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:66:486"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3241:3017-0:74:2368":{"id":"a:2:3241:3017-0:74:2368","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3241:3017","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:34":{"id":"0:34","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[295,0],"end":[299,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2960:144","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ParseIntError","id":"2:23088:2460","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:35:838"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13389:26756":{"id":"2:13389:26756","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42248:8984-0:48:2355":{"id":"a:2:42248:8984-0:48:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42248:8984","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:134:137":{"id":"0:134:137","crate_id":0,"name":"Error","span":{"filename":"src/lib.rs","begin":[341,0],"end":[361,1]},"visibility":"public","docs":"The error type for this crate.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:135:2412","0:138:2415","0:141:2480","0:144:2456","0:146:2483","0:149:2447","0:152:2486"],"impls":["a:2:32385:236-0:134:137","a:2:32444:2878-0:134:137","a:2:42247:8860-0:134:137","a:2:3241:3017-0:134:137","a:2:42248:8984-0:134:137","a:2:3206:246-0:134:137","b:2:2987-0:134:137","b:2:2983-0:134:137","b:2:2998-0:134:137","b:2:2993-0:134:137","b:2:2713-0:134:137","b:2:2710-0:134:137","b:2:3822-0:134:137","b:5:5944-0:134:137","0:155","0:161","0:40","0:159","0:157","0:42"]}}},"2:13264:3200":{"id":"2:13264:3200","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5944-0:134:137":{"id":"b:5:5944-0:134:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10382:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32386:2877","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5942:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5946:1794"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13362:34020":{"id":"2:13362:34020","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:84":{"id":"0:84","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,27],"end":[90,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2760:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:85:703"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:156:808":{"id":"0:156:808","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[340,9],"end":[340,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10345:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10326:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13378:34025":{"id":"2:13378:34025","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12355:475","self::pattern":"2:12952:2831"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:2824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12958:2824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12973:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:113":{"id":"0:113","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,43],"end":[147,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","ge","lt","le"],"trait":{"name":"PartialOrd","id":"2:2802:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2391","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:114:1304"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2710-0:74:2368":{"id":"b:2:2710-0:74:2368","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32386:2877","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2704:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2712:2716"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:23":{"id":"0:23","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[174,0],"end":[191,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2391","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:24:2407"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:3002:1819":{"id":"2:3002:1819","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:42286:225","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2967:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3822-0:74:2368":{"id":"b:2:3822-0:74:2368","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32386:2877","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3820:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3824:1834"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:790-0:93:2391":{"id":"b:5:790-0:93:2391","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2726:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:786:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2391","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:792:3258","5:793:2448","5:794:3259"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:146:2483":{"id":"0:146:2483","crate_id":0,"name":"SemVerError","span":{"filename":"src/lib.rs","begin":[356,4],"end":[356,30]},"visibility":"default","docs":"An error occurred in parsing the semver.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:148:1986"]},"discriminant":null}}},"b:2:2710-0:134:137":{"id":"b:2:2710-0:134:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32386:2877","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2704:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2712:2716"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:106":{"id":"0:106","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,23],"end":[147,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2765:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2391","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:20:136":{"id":"0:20:136","crate_id":0,"name":"Err","span":{"filename":"src/lib.rs","begin":[107,4],"end":[107,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:13268:34008":{"id":"2:13268:34008","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:13266:34007"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42247:8860-0:118:2375":{"id":"a:2:42247:8860-0:118:2375","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42247:8860","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:114:1304":{"id":"0:114:1304","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[147,43],"end":[147,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"VersionMeta","id":"0:93:2391","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:42153:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31145:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13392:26761":{"id":"2:13392:26761","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:68:1304":{"id":"0:68:1304","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[71,42],"end":[71,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Channel","id":"0:48:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:42153:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31145:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2713-0:118:2375":{"id":"b:2:2713-0:118:2375","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32386:2877","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2707:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2715:26301"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:139:2416":{"id":"0:139:2416","crate_id":0,"name":"stdout","span":{"filename":"src/lib.rs","begin":[347,8],"end":[347,22]},"visibility":"default","docs":"stdout output from the command","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7747:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:13360:34019":{"id":"2:13360:34019","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:83":{"id":"0:83","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,27],"end":[90,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32387:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:97:2398":{"id":"0:97:2398","crate_id":0,"name":"build_date","span":{"filename":"src/lib.rs","begin":[159,4],"end":[159,34]},"visibility":"public","docs":"Build date of the compiler; this was removed between Rust 1.0.0 and 1.1.0.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:42153:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"5:7747:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"5:792:3258":{"id":"5:792:3258","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:151:1986":{"id":"0:151:1986","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[358,25],"end":[358,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7747:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:2715:26301":{"id":"2:2715:26301","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:104":{"id":"0:104","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,16],"end":[147,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10377:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2391","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:105:808"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:15-20:299:2353":{"id":"0:15-20:299:2353","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[66,0],"end":[66,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"semver::Version","name":"Version","id":"20:299:2353","glob":false}}},"2:13331:34014":{"id":"2:13331:34014","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12952:2831","str::split":"2:13319:2378","prim@char":"1:12355:475","str::split_terminator":"2:13328:34013"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:44102:2858","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:2824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12958:2824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12973:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:112:486":{"id":"0:112:486","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[147,38],"end":[147,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"VersionMeta","id":"0:93:2391","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31145:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:38":{"id":"0:38","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[326,0],"end":[337,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["provide","type_id","description","source","cause"],"trait":{"name":"Error","id":"2:3046:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:39:2473"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:154:1986":{"id":"0:154:1986","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[360,21],"end":[360,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:13273:335":{"id":"2:13273:335","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:13274:27712","`u8`":"1:12374:1864"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:48:2355":{"id":"0:48:2355","crate_id":0,"name":"Channel","span":{"filename":"src/lib.rs","begin":[72,0],"end":[81,1]},"visibility":"public","docs":"Release channel of the compiler.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:49:2357","0:51:2359","0:53:2361","0:55:2363"],"impls":["a:2:32385:236-0:48:2355","a:2:32444:2878-0:48:2355","a:2:42247:8860-0:48:2355","a:2:3241:3017-0:48:2355","a:2:42248:8984-0:48:2355","a:2:3206:246-0:48:2355","b:2:2987-0:48:2355","b:2:2983-0:48:2355","b:2:2998-0:48:2355","b:2:2993-0:48:2355","b:2:2713-0:48:2355","b:2:2710-0:48:2355","b:2:3822-0:48:2355","b:5:790-0:48:2355","0:65","0:57","0:62","0:58","0:60","0:63","0:67","0:69","0:72"]}}},"b:2:2993-0:48:2355":{"id":"b:2:2993-0:48:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2967:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2963:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2996:137","2:2997:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:79":{"id":"0:79","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,16],"end":[90,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10377:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:80:808"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:76:2372":{"id":"0:76:2372","crate_id":0,"name":"minor","span":{"filename":"src/lib.rs","begin":[96,4],"end":[96,18]},"visibility":"public","docs":"Minor version","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u64"}}},"2:13352:34016":{"id":"2:13352:34016","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12952:2831","`DoubleEndedIterator`":"2:8320:129","prim@char":"1:12355:475","str::rmatch_indices":"2:13355:34017"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:44184:2850","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:2824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42247:8860-0:93:2391":{"id":"a:2:42247:8860-0:93:2391","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42247:8860","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2391","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13349:34015":{"id":"2:13349:34015","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12952:2831","`DoubleEndedIterator`":"2:8320:129","prim@char":"1:12355:475","str::matches":"2:13346:2731"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:44256:2853","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:2824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12958:2824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12973:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5944-0:118:2375":{"id":"b:5:5944-0:118:2375","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10382:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32386:2877","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5942:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5946:1794"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13395:27597":{"id":"2:13395:27597","crate_id":2,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1063:38535"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2710-0:93:2391":{"id":"b:2:2710-0:93:2391","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32386:2877","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2704:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2391","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2712:2716"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3206:246-0:48:2355":{"id":"a:2:3206:246-0:48:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3206:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:102":{"id":"0:102","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,9],"end":[147,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2726:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2391","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:103:479"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:60":{"id":"0:60","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,22],"end":[71,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2765:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13272:34009":{"id":"2:13272:34009","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3822-0:134:137":{"id":"b:2:3822-0:134:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32386:2877","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3820:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3824:1834"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:148:1986":{"id":"0:148:1986","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[356,16],"end":[356,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"semver::Error","id":"20:220:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:49:2357":{"id":"0:49:2357","crate_id":0,"name":"Dev","span":{"filename":"src/lib.rs","begin":[74,4],"end":[74,7]},"visibility":"default","docs":"Development release channel","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:109":{"id":"0:109","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,27],"end":[147,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2760:200","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2391","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:110:703"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3206:246-0:93:2391":{"id":"a:2:3206:246-0:93:2391","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3206:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2391","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:159":{"id":"0:159","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2960:144","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Error","id":"20:220:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:160:838"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5709:3415":{"id":"5:5709:3415","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7747:242"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7747:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:77":{"id":"0:77","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,9],"end":[90,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2726:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:78:479"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3241:3017-0:93:2391":{"id":"a:2:3241:3017-0:93:2391","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3241:3017","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2391","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2987-0:74:2368":{"id":"b:2:2987-0:74:2368","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2960:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2989:838"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3822-0:118:2375":{"id":"b:2:3822-0:118:2375","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32386:2877","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3820:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3824:1834"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13384:34027":{"id":"2:13384:34027","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12355:475","self::pattern":"2:12952:2831"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:2824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12958:2824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12973:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32444:2878-0:93:2391":{"id":"a:2:32444:2878-0:93:2391","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32444:2878","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2391","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:132":{"id":"0:132","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[279,9],"end":[279,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10377:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:133:808"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:25:1942":{"id":"0:25:1942","crate_id":0,"name":"version","span":{"filename":"src/lib.rs","begin":[194,0],"end":[196,1]},"visibility":"public","docs":"Returns the `rustc` SemVer version.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Result","id":"0:45:225","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Version","id":"20:299:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:119:2460":{"id":"0:119:2460","crate_id":0,"name":"ParseIntError","span":{"filename":"src/lib.rs","begin":[282,4],"end":[282,37]},"visibility":"default","docs":"An error occurred in parsing a version component as an integer","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:121:1986"]},"discriminant":null}}},"2:13263:1005":{"id":"2:13263:1005","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12355:475"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:91:880":{"id":"0:91:880","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[90,55],"end":[90,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10603:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2998-0:93:2391":{"id":"b:2:2998-0:93:2391","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2957:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2967:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2391","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3001:137","2:3002:1819"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2998-0:134:137":{"id":"b:2:2998-0:134:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2957:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2967:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3001:137","2:3002:1819"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13265:34006":{"id":"2:13265:34006","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13262":{"id":"2:13262","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:13263:1005","2:13264:3200","2:13265:34006","2:13266:34007","2:13268:34008","2:13271:26741","2:13272:34009","2:13273:335","2:13274:27712","2:13275:2452","2:13277:27709","2:13279:27710","2:13281:27711","2:13283:34010","2:13284:34011","2:13285:27735","2:13286:27736","2:13287:27739","2:13288:27740","2:13290:7121","2:13291:7131","2:13292:7002","2:13293:32446","2:13295:32441","2:13298:2432","2:13300:34012","2:13301:32444","2:13302:27751","2:13305:2381","2:13308:27256","2:13311:3238","2:13315:3199","2:13319:2378","2:13322:27742","2:13325:27744","2:13328:34013","2:13331:34014","2:13334:2436","2:13337:27747","2:13340:27749","2:13343:27750","2:13346:2731","2:13349:34015","2:13352:34016","2:13355:34017","2:13358:34018","2:13360:34019","2:13362:34020","2:13364:34021","2:13365:34022","2:13366:34023","2:13369:34024","2:13372:26562","2:13375:27752","2:13378:34025","2:13381:34026","2:13384:34027","2:13387:2386","2:13389:26756","2:13390:27593","2:13391:26760","2:13392:26761","2:13393:26762","2:13394:27596","2:13395:27597","2:13396:27598","2:13397:34028","2:13400:8852","2:13401:34029"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3822-0:93:2391":{"id":"b:2:3822-0:93:2391","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32386:2877","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3820:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2391","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3824:1834"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:137:1986":{"id":"0:137:1986","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[343,27],"end":[343,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"io::Error","id":"1:3067:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"a:2:32444:2878-0:134:137":{"id":"a:2:32444:2878-0:134:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32444:2878","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5711:26759":{"id":"5:5711:26759","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:13393:26762"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7747:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2713-0:134:137":{"id":"b:2:2713-0:134:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32386:2877","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2707:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2715:26301"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:70:880":{"id":"0:70:880","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[71,54],"end":[71,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10603:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:89:1304":{"id":"0:89:1304","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[90,43],"end":[90,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:42153:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31145:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:35:838":{"id":"0:35:838","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[296,4],"end":[298,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["e",{"resolved_path":{"name":"num::ParseIntError","id":"2:23088:2460","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2983-0:134:137":{"id":"b:2:2983-0:134:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2960:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2957:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2986:2418"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13288:27740":{"id":"2:13288:27740","crate_id":2,"name":"split_at_mut_checked","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at_checked`] method.\n\n[`split_at_checked`]: str::split_at_checked\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\nif let Some((first, last)) = s.split_at_mut_checked(3) {\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n\nassert_eq!(None, s.split_at_mut_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_mut_checked(16));  // Beyond the string length\n```","links":{"str::split_at_checked":"2:13287:27739"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42153:193","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13394:27596":{"id":"2:13394:27596","crate_id":2,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1063:38535"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13322:27742":{"id":"2:13322:27742","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12355:475","self::pattern":"2:12952:2831"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:12767:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:2824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:41:808":{"id":"0:41:808","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[364,4],"end":[381,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10345:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10326:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5944-0:74:2368":{"id":"b:5:5944-0:74:2368","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10382:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32386:2877","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5942:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5946:1794"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13274:27712":{"id":"2:13274:27712","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12374:1864"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:790-0:74:2368":{"id":"b:5:790-0:74:2368","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2726:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:786:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:792:3258","5:793:2448","5:794:3259"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3241:3017-0:118:2375":{"id":"a:2:3241:3017-0:118:2375","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3241:3017","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13291:7131":{"id":"2:13291:7131","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12355:475"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:44010:2840","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:121:1986":{"id":"0:121:1986","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[282,18],"end":[282,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"num::ParseIntError","id":"2:23088:2460","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:39:2473":{"id":"0:39:2473","crate_id":0,"name":"source","span":{"filename":"src/lib.rs","begin":[327,4],"end":[336,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42153:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"dyn_trait":{"traits":[{"trait":{"name":"error::Error","id":"2:3046:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13372:26562":{"id":"2:13372:26562","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns the substring after the prefix,\nwrapped in `Some`. Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12355:475","self::pattern":"2:12952:2831"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42153:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:2824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:149:2447":{"id":"0:149:2447","crate_id":0,"name":"UnknownPreReleaseTag","span":{"filename":"src/lib.rs","begin":[358,4],"end":[358,32]},"visibility":"default","docs":"The pre-release tag is unknown.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:151:1986"]},"discriminant":null}}},"a:2:42248:8984-0:134:137":{"id":"a:2:42248:8984-0:134:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42248:8984","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:13337:27747":{"id":"2:13337:27747","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12355:475","str::splitn":"2:13334:2436","self::pattern":"2:12952:2831"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:44156:2856","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:2824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12958:2824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12973:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:95:2394":{"id":"0:95:2394","crate_id":0,"name":"commit_hash","span":{"filename":"src/lib.rs","begin":[153,4],"end":[153,35]},"visibility":"public","docs":"Git short hash of the build of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:42153:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"5:7747:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"2:13391:26760":{"id":"2:13391:26760","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2712:2716":{"id":"2:2712:2716","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:793:2448":{"id":"5:793:2448","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32385:236-0:134:137":{"id":"a:2:32385:236-0:134:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32385:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:19":{"id":"0:19","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[106,0],"end":[144,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12912:2351","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:20:136","0:21:2376"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:37:808":{"id":"0:37:808","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[302,4],"end":[323,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10345:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10326:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32444:2878-0:118:2375":{"id":"a:2:32444:2878-0:118:2375","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32444:2878","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3206:246-0:74:2368":{"id":"a:2:3206:246-0:74:2368","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3206:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2987-0:134:137":{"id":"b:2:2987-0:134:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2960:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2989:838"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13283:34010":{"id":"2:13283:34010","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12361:1734","str::slice_mut_unchecked":"2:13284:34011","crate::ops::Index":"2:39699:8880"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:116:880":{"id":"0:116:880","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[147,55],"end":[147,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10603:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13300:34012":{"id":"2:13300:34012","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:44298:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13334:2436":{"id":"2:13334:2436","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12355:475","self::pattern":"2:12952:2831","str::rsplitn":"2:13337:27747"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:44138:2857","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:2824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13393:26762":{"id":"2:13393:26762","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42247:8860-0:134:137":{"id":"a:2:42247:8860-0:134:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42247:8860","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:13375:27752":{"id":"2:13375:27752","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12355:475","self::pattern":"2:12952:2831"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42153:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:2824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12958:2824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12973:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13284:34011":{"id":"2:13284:34011","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12361:1734","crate::ops::IndexMut":"2:3484:8881","str::slice_unchecked":"2:13283:34010"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:62":{"id":"0:62","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,26],"end":[71,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32387:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2710-0:48:2355":{"id":"b:2:2710-0:48:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32386:2877","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2704:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2712:2716"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:69":{"id":"0:69","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,54],"end":[71,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10595:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:70:880"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13287:27739":{"id":"2:13287:27739","crate_id":2,"name":"split_at_checked","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut_checked`]\nmethod.\n\n[`split_at_mut_checked`]: str::split_at_mut_checked\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at_checked(3).unwrap();\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n\nassert_eq!(None, s.split_at_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_checked(16));  // Beyond the string length\n```","links":{"str::split_at_mut_checked":"2:13288:27740"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42153:193","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2993-0:74:2368":{"id":"b:2:2993-0:74:2368","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2967:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2963:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2996:137","2:2997:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13346:2731":{"id":"2:13346:2731","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12952:2831","`DoubleEndedIterator`":"2:8320:129","prim@char":"1:12355:475","str::rmatches":"2:13349:34015"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:44238:2852","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:2824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13366:34023":{"id":"2:13366:34023","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12355:475","self::pattern":"2:12952:2831"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:2824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12958:2824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12978:2823","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:72":{"id":"0:72","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,60],"end":[71,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10377:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:73:808"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13364:34021":{"id":"2:13364:34021","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13290:7121":{"id":"2:13290:7121","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12355:475"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:44004:2841","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13325:27744":{"id":"2:13325:27744","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12952:2831","`DoubleEndedIterator`":"2:8320:129","prim@char":"1:12355:475","str::split":"2:13319:2378"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:44052:2854","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:2824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12958:2824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12973:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5708:34727":{"id":"5:5708:34727","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:303:2828","`String`":"5:7747:242"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:303:2828","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7747:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:790-0:48:2355":{"id":"b:5:790-0:48:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2726:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:786:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:792:3258","5:793:2448","5:794:3259"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:144:2456":{"id":"0:144:2456","crate_id":0,"name":"UnexpectedVersionFormat","span":{"filename":"src/lib.rs","begin":[354,4],"end":[354,27]},"visibility":"default","docs":"The output of `rustc -vV` was not in the expected format.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:13343:27750":{"id":"2:13343:27750","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42153:193","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:2824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12958:2824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12973:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:58":{"id":"0:58","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,15],"end":[71,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2726:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:59:479"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2987-0:48:2355":{"id":"b:2:2987-0:48:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2960:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2989:838"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2998-0:74:2368":{"id":"b:2:2998-0:74:2368","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2957:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2967:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3001:137","2:3002:1819"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13275:2452":{"id":"2:13275:2452","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:42155:190"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42153:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11041:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11041:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5693:14342":{"id":"5:5693:14342","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7747:242"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7747:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:2824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:93:2391":{"id":"0:93:2391","crate_id":0,"name":"VersionMeta","span":{"filename":"src/lib.rs","begin":[148,0],"end":[172,1]},"visibility":"public","docs":"Rustc version plus metadata like git short hash and build date.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:94:2352","0:95:2394","0:96:2396","0:97:2398","0:98:2400","0:99:884","0:100:2403","0:101:2405"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:23","a:2:32385:236-0:93:2391","a:2:32444:2878-0:93:2391","a:2:42247:8860-0:93:2391","a:2:3241:3017-0:93:2391","a:2:42248:8984-0:93:2391","a:2:3206:246-0:93:2391","b:2:2987-0:93:2391","b:2:2983-0:93:2391","b:2:2998-0:93:2391","b:2:2993-0:93:2391","b:2:2713-0:93:2391","b:2:2710-0:93:2391","b:2:3822-0:93:2391","b:5:790-0:93:2391","0:109","0:108","0:115","0:113","0:106","0:104","0:102","0:111"]}}},"2:13396:27598":{"id":"2:13396:27598","crate_id":2,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1063:38535"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:105:808":{"id":"0:105:808","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[147,16],"end":[147,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10345:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10326:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:115":{"id":"0:115","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,55],"end":[147,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10595:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2391","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:116:880"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:24:2407":{"id":"0:24:2407","crate_id":0,"name":"for_command","span":{"filename":"src/lib.rs","begin":[176,4],"end":[190,5]},"visibility":"public","docs":"Returns the version metadata for `cmd`, which should be a `rustc` command.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["cmd",{"resolved_path":{"name":"Command","id":"1:5654:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:45:225","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"VersionMeta","id":"0:93:2391","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42247:8860-0:74:2368":{"id":"a:2:42247:8860-0:74:2368","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42247:8860","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:26:2423":{"id":"0:26:2423","crate_id":0,"name":"version_meta","span":{"filename":"src/lib.rs","begin":[200,0],"end":[204,1]},"visibility":"public","docs":"Returns the `rustc` SemVer version and additional metadata\nlike the git short hash and build date.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Result","id":"0:45:225","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"VersionMeta","id":"0:93:2391","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13311:3238":{"id":"2:13311:3238","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:42155:190","prim@char":"1:12355:475","self::pattern":"2:12952:2831"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42153:193","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:2824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32385:236-0:74:2368":{"id":"a:2:32385:236-0:74:2368","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32385:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:100:2403":{"id":"0:100:2403","crate_id":0,"name":"short_version_string","span":{"filename":"src/lib.rs","begin":[168,4],"end":[168,36]},"visibility":"public","docs":"Short version string of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7747:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:13358:34018":{"id":"2:13358:34018","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:43:2473":{"id":"0:43:2473","crate_id":0,"name":"source","span":{"filename":"src/lib.rs","begin":[385,4],"end":[395,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42153:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"dyn_trait":{"traits":[{"trait":{"name":"error::Error","id":"2:3046:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13387:2386":{"id":"2:13387:2386","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12913:136","`FromStr`":"2:12912:2351"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42286:225","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12912:2351","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12912:2351","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3241:3017-0:134:137":{"id":"a:2:3241:3017-0:134:137","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3241:3017","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42248:8984-0:74:2368":{"id":"a:2:42248:8984-0:74:2368","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42248:8984","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2713-0:74:2368":{"id":"b:2:2713-0:74:2368","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32386:2877","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2707:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2715:26301"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:152:2486":{"id":"0:152:2486","crate_id":0,"name":"LlvmVersionError","span":{"filename":"src/lib.rs","begin":[360,4],"end":[360,43]},"visibility":"default","docs":"An error occurred in parsing a `LlvmVersion`.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:154:1986"]},"discriminant":null}}},"2:13302:27751":{"id":"2:13302:27751","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12355:475","self::pattern":"2:12952:2831"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:2824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3206:246-0:118:2375":{"id":"a:2:3206:246-0:118:2375","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3206:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3241:3017-0:48:2355":{"id":"a:2:3241:3017-0:48:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3241:3017","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:87:486":{"id":"0:87:486","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[90,38],"end":[90,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31145:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:74:2368":{"id":"0:74:2368","crate_id":0,"name":"LlvmVersion","span":{"filename":"src/lib.rs","begin":[91,0],"end":[98,1]},"visibility":"public","docs":"LLVM version\n\nLLVM's version numbering scheme is not semver compatible until version 4.0\n\nrustc [just prints the major and minor versions], so other parts of the version are not included.\n\n[just prints the major and minor versions]: https://github.com/rust-lang/rust/blob/b5c9e2448c9ace53ad5c11585803894651b18b0a/compiler/rustc_codegen_llvm/src/llvm_util.rs#L173-L178","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:75:2370","0:76:2372"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:32385:236-0:74:2368","a:2:32444:2878-0:74:2368","a:2:42247:8860-0:74:2368","a:2:3241:3017-0:74:2368","a:2:42248:8984-0:74:2368","a:2:3206:246-0:74:2368","b:2:2987-0:74:2368","b:2:2983-0:74:2368","b:2:2998-0:74:2368","b:2:2993-0:74:2368","b:2:2713-0:74:2368","b:2:2710-0:74:2368","b:2:3822-0:74:2368","b:5:790-0:74:2368","b:5:5944-0:74:2368","0:19","0:90","0:79","0:83","0:86","0:88","0:81","0:77","0:84","0:17"]}}},"0:130:2389":{"id":"0:130:2389","crate_id":0,"name":"TooManyComponents","span":{"filename":"src/lib.rs","begin":[292,4],"end":[292,21]},"visibility":"default","docs":"Too many components","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:143:1986":{"id":"0:143:1986","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[352,14],"end":[352,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"str::Utf8Error","id":"2:43980:2480","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:13279:27710":{"id":"2:13279:27710","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11041:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11041:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13281:27711":{"id":"2:13281:27711","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11041:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11041:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13369:34024":{"id":"2:13369:34024","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12355:475","self::pattern":"2:12952:2831"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:2824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5696:34724":{"id":"5:5696:34724","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7747:242"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7747:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:2824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13340:27749":{"id":"2:13340:27749","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42153:193","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:2824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32385:236-0:118:2375":{"id":"a:2:32385:236-0:118:2375","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32385:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42248:8984-0:93:2391":{"id":"a:2:42248:8984-0:93:2391","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42248:8984","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2391","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2993-0:93:2391":{"id":"b:2:2993-0:93:2391","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2967:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2963:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2391","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2996:137","2:2997:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:55:2363":{"id":"0:55:2363","crate_id":0,"name":"Stable","span":{"filename":"src/lib.rs","begin":[80,4],"end":[80,10]},"visibility":"default","docs":"Stable release channel","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:2996:137":{"id":"2:2996:137","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2967:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:66:486":{"id":"0:66:486","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[71,37],"end":[71,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Channel","id":"0:48:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31145:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:18:808":{"id":"0:18:808","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[101,4],"end":[103,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10345:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10326:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:111":{"id":"0:111","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,38],"end":[147,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2796:194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:2391","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:112:486"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42248:8984-0:118:2375":{"id":"a:2:42248:8984-0:118:2375","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42248:8984","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:2375","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13328:34013":{"id":"2:13328:34013","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12952:2831","str::split":"2:13319:2378","prim@char":"1:12355:475","`DoubleEndedIterator`":"2:8320:129","str::rsplit_terminator":"2:13331:34014"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:44084:2859","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12958:2824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13401:34029":{"id":"2:13401:34029","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:5012:34029"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:44351:2847","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2997:1821":{"id":"2:2997:1821","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:42286:225","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2967:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5691":{"id":"5:5691","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5692:34723","5:5693:14342","5:5696:34724","5:5699:34725","5:5707:34726","5:5708:34727","5:5709:3415","5:5710:26758","5:5711:26759"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13298:2432":{"id":"2:13298:2432","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:44288:2848","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:140:2419":{"id":"0:140:2419","crate_id":0,"name":"stderr","span":{"filename":"src/lib.rs","begin":[349,8],"end":[349,22]},"visibility":"default","docs":"stderr output from the command","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7747:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"a:2:32444:2878-0:74:2368":{"id":"a:2:32444:2878-0:74:2368","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32444:2878","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}}},"paths":{"2:42886:3172":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"16:4983:4686":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"17:14912:4260":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"18:623:35706":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:3199:3014":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"17:10720:35696":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"17:11102:7682":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"0:128:2387":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","MinorVersionRequiredBefore4"],"kind":"variant"},"1:11725:7187":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"2:43395:3165":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"17:11497:7696":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"11:299:6964":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"6:4937:5385":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"2:44020:2839":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:4819:5994":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"function"},"6:6526:5774":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"2:11357:7887":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"2:46928:6556":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"17:12530:7740":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"17:12089:3747":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"5:4486:264":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:6764:7015":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:12370:899":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"1:9220:9012":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"17:15608:4443":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"2:2930:8908":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1:1861:3304":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"17:12175:7725":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"16:5689:4702":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"2:33679:9042":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"6:6411:5720":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"17:4821:7668":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"17:16212:4597":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"17:15281:4337":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"6:5551:5632":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"1:4807:8924":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"9:500:5057":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"6:4881:5357":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"16:7542:6938":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"17:15214:4321":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"5:2272:6982":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"1:12359:334":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"2:42278:3158":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"2:23212:6178":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroUsizeInner"],"kind":"struct"},"17:403:7656":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"17:12318:3757":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"20:220:137":{"crate_id":20,"path":["semver","parse","Error"],"kind":"struct"},"6:1521:5163":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"17:11825:7716":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"1:4487:7940":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"16:7521:6937":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"16:6173:6820":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"2:1831:3141":{"crate_id":2,"path":["core","intrinsics","AggregateRawPtr"],"kind":"trait"},"2:5972:3374":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"1:12381:1429":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"1:11853:7937":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"18:765:25921":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"1:11813:7936":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:34025:14355":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"2:32476:114":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"5:4212:3154":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"17:11128:3657":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"6:6638:5838":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"16:6573:6873":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"5:7060:14236":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"11:772:6971":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"0:134:137":{"crate_id":0,"path":["rustc_version","Error"],"kind":"enum"},"1:9193:6667":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"2:40624:7062":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"6:1530:5168":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"17:12647:7742":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"2:12729:7120":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:5776:2772":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"1:8064:8858":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"5:6255:3374":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"18:608:7648":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"16:2450:4611":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"18:538:3538":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"16:8000:4659":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"1:12361:1734":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"17:14968:4266":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"16:6680:7776":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackageSections"],"kind":"struct"},"17:15734:4476":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"17:15931:3824":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"2:6964:7020":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"14:220:4980":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"11:835:7822":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"17:12584:7674":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"16:5144:4690":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"17:12572:3700":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"0:146:2483":{"crate_id":0,"path":["rustc_version","Error","SemVerError"],"kind":"variant"},"17:15616:4446":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"1:11930:6690":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"17:11153:7674":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"17:10915:35699":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"2:4852:3183":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"2:3396:14185":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"1:974:7825":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"1:11191:2776":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"5:2591:6137":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"6:5139:5457":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"6:4964:5397":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"17:12056:3744":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"17:15333:4352":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"11:2440:7835":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"17:13064:3804":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:43173:73":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"5:7642:2764":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"1:12338:26532":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"16:6064:4649":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"11:881:7828":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"2:3575:210":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"5:7747:242":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"6:6680:5856":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:44851:226":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"17:12278:7736":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"17:261:7655":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"16:6389:7753":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"1:8022:3715":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"16:6843:6881":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"17:11392:7693":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"6:1589:5207":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:40924:7079":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"2:10031:32841":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"18:670:7653":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"2:42879:3171":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"14:187:20744":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"1:8700:8980":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"14:0:2624":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"1:8519:3392":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"2:21676:32173":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"1:3340:3410":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"6:7391:5999":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"17:12408:3759":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"16:7337:4763":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"1:11003:2771":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"17:12851:6797":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"17:16093:4568":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"6:5387:5552":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"1:1107:7833":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"1:10595:2775":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"2:45867:6451":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"2:46161:6482":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"18:635:3553":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"1:4215:8927":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:4722:7878":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"2:3337:4788":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:4643:3181":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"16:8043:35685":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"11:785:6972":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"6:6623:5836":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"1:4821:5996":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"function"},"11:0:2622":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"2:45899:6455":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"15:327:20761":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"1:1844:700":{"crate_id":1,"path":["std","env"],"kind":"module"},"2:4442:7875":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"6:6631:5837":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"1:12379:974":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"20:129:2876":{"crate_id":20,"path":["semver","identifier","Identifier"],"kind":"struct"},"5:4332:3374":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"16:2660:4627":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"1:8336:7976":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"16:8014:4660":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"17:15655:4455":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"17:14341:4065":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"5:7697:14418":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"12:0:2623":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"16:8503:4890":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"17:10284:3672":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"17:11764:6780":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"17:13999:3998":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"17:13526:3898":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"2:43379:3166":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"16:8151:4662":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"16:4694:4678":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"1:10755:3715":{"crate_id":1,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"17:2203:7661":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"17:13972:3717":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"2:41007:7087":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"17:14752:4136":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"2:39040:14362":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"16:6408:6846":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"10:36:4995":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"16:7938:6940":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"1:10412:2784":{"crate_id":1,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"1:9269:7988":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"6:5450:5591":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"1:2485:8900":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"16:3014:20804":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"6:5641:5675":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"2:46575:6516":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"2:32445:3021":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"17:13877:3982":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"2:43906:7035":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"16:6205:21665":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"2:40717:2801":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"2:22360:9047":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"16:7350:4765":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"16:2506:4620":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"16:8267:4851":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"16:8565:6957":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"11:2301:6939":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"17:10828:35695":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"5:4302:3374":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"17:13497:3889":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"6:559:5132":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"1:871:3153":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"1:1075:6939":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"17:16176:4591":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"17:15624:4447":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"16:4902:4683":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"6:7431:6001":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:40767:2818":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"16:3441:4668":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"2:22968:32533":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"16:6713:7780":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"1:6509:219":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"2:3252:9039":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"1:3395:3413":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"2:22358:8908":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"2:42289:192":{"crate_id":2,"path":["rustc_version","Result","Ok"],"kind":"variant"},"2:12072:2836":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"2:2604:14372":{"crate_id":2,"path":["core","ptr","with_exposed_provenance"],"kind":"function"},"2:3693:14184":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"17:12201:7730":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"17:12399:6792":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"1:12373:892":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"16:2820:4634":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"2:21810:9048":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"11:2148:7830":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"2:41359:7095":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:12327:8859":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"17:15778:4491":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"11:1907:6974":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"17:12863:3792":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"2:22200:8908":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"6:5603:5652":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"1:592:7922":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"17:12969:3796":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"2:45952:6462":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"6:5151:5458":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"17:10887:35698":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"1:8169:3610":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"17:14599:4114":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"1:7325:31175":{"crate_id":1,"path":["std","sys","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"2:47002:6558":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"6:5658:5679":{"crate_id":6,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"16:8179:4842":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"6:6652:5849":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"6:1489:5150":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"6:5230:5485":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"5:0:308":{"crate_id":5,"path":["alloc"],"kind":"module"},"16:8028:4835":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"2:9844:91":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"5:1601:7834":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"13:229:4988":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"14:7:7816":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"2:11031:8908":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:6678:7096":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"6:6666:5851":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"11:1105:7831":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"2:40845:7068":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"6:5301:5522":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:22717:9126":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"6:479:5083":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:46065:6469":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:9280:7990":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"2:12467:14438":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:3067:137":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"6:6599:5824":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"11:1064:20730":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"6:6770:5888":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"2:41017:7088":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"17:13473:3885":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:45969:6463":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"2:42286:225":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"1:3486:3396":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"2:23120:8908":{"crate_id":2,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"2:46275:6488":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:11499:7889":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:44829:6442":{"crate_id":2,"path":["core","future","async_drop","Noop"],"kind":"struct"},"1:8641:7986":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"1:9308:7994":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"2:23234:6180":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI16Inner"],"kind":"struct"},"1:12141:28994":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"2:0:567":{"crate_id":2,"path":["core"],"kind":"module"},"2:3665:14249":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"5:3089:3258":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"1:10908:7171":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"2:47253:6579":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"1:980:7827":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"17:11256:6761":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"16:8669:4830":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"1:7924:31185":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"2:39771:214":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:5335:203":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"2:32355:4830":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"2:2957:162":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:46205:6484":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"17:14977:4270":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"2:43880:6435":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2:2967:256":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"2:10388:3171":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"2:11513:7890":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"6:1696:5277":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"6:4921:5380":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"1:3610:2782":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"17:15289:4338":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"2:6143:7012":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:2315:7932":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:42531:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:22558:8908":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"17:12353:6789":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"17:13235:3839":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"17:14560:4104":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"2:3035:123":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"17:14402:4076":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"2:41152:7091":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"2:4786:7006":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"17:14131:4014":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"2:3257:9041":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"17:11026:21748":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"2:43105:6418":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"2:3452:141":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"17:15273:4336":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"2:40585:14276":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"6:1632:5241":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"7:32:20635":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"17:9781:21729":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"1:12360:1700":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"9:445:20649":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"5:3460:7849":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"17:14147:4019":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"6:5570:5640":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:40874:7071":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:2467:8894":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"2:22684:9127":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"6:497:5091":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"2:7702:14279":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"1:8853:3153":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"16:6749:4714":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"17:13797:3968":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"17:15168:4311":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"1:10712:3412":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"1:12353:419":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"17:12621:3772":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"5:5305:6994":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"17:13785:3966":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"4:0:2618":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"1:9120:2776":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"2:22990:6161":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:47276:6580":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"2:11319:7886":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"2:44661:2861":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"17:11089:7681":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"17:16032:3842":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"11:2137:7829":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"16:6852:6882":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"17:14091:4010":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"5:7495:6996":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"6:7604:6090":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"17:16235:4602":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"1:373:7918":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"1:6867:7964":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLockGuard"],"kind":"struct"},"18:718:3554":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"11:2380:3153":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"17:11702:6773":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"6:517:5108":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"17:14436:4089":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"1:7984:6601":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"1:12362:1824":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"2:13881:115":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"6:6437:5735":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"17:12300:21859":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"11:2551:35668":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"6:1597:5212":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"16:7075:21670":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"2:46484:6513":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"2:8282:164":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"11:434:35655":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"6:6882:5916":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"11:1900:6973":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"1:5588:2767":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"16:2620:4625":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"1:938:7849":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"2:40906:7077":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"17:9807:21719":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"1:3342:3411":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"2:41142:3392":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:32387:243":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"2:38296:14358":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"17:11524:7698":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"15:306:20757":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"2:46596:6517":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"5:1545:3154":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"11:873:7827":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"17:11715:6774":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"2:40702:14418":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"0:49:2357":{"crate_id":0,"path":["rustc_version","Channel","Dev"],"kind":"variant"},"1:4561:7941":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"17:10137:21712":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"5:4501:35519":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"2:22227:6154":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"11:740:7821":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"11:685:3154":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:40562:2847":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:3903:7936":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"2:12958:2824":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"16:2990:4642":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:33813:14352":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"6:6758:5886":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"2:5316:3420":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"6:6419:5722":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:46080:6470":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:1897:3313":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"6:5477:5609":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"16:2840:4635":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"2:42237:7907":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"17:14449:4090":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"2:43849:7912":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"17:12388:6791":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"1:8004:6602":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"6:538:5120":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"2:46019:6466":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"1:2705:3402":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"2:33746:14353":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"2:3443:2879":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"20:280:7994":{"crate_id":20,"path":["semver","error","Position"],"kind":"enum"},"1:4341:8947":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"1:8233:7163":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"17:10068:21718":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"11:351:35664":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"3:233:225":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"2:42492:93":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"2:34198:14356":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"5:3313:35549":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"17:12792:3631":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"1:10218:7104":{"crate_id":1,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"2:22586:14372":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_exposed_provenance"],"kind":"function"},"2:44317:2833":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"5:4564:3374":{"crate_id":5,"path":["alloc","collections","vec_deque","shrink_to","Guard"],"kind":"struct"},"2:43840:7033":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"17:16223:4599":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"1:9545:3319":{"crate_id":1,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"6:5165:5459":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"17:10439:3677":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"2:13904:7039":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:2704:102":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:3414:124":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"17:10185:3669":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"1:568:8843":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"16:8105:4839":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"16:7765:4812":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"1:680:8854":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"6:5295:5519":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"1:11942:31803":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"2:3653:146":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"2:46290:6489":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"17:10419:3676":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"16:2724:4630":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"11:1140:7832":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"1:11018:26534":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"1:1613:3155":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"5:7724:2804":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"11:1580:7836":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"16:4120:4672":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"2:44643:2860":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"16:6042:4647":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"1:2780:3404":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"2:46226:6485":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:2469:8895":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"5:991:8865":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"5:5805:14235":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"17:15138:4300":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"16:8223:6946":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"1:10709:3410":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"17:13146:3815":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"16:2748:4631":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"1:7472:30761":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"17:15023:4278":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"2:42865:3170":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"17:14475:4092":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"1:10938:6603":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"2:3427:3160":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"17:12683:7745":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"2:2037:675":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"14:160:7816":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:47060:6560":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:1961:3374":{"crate_id":2,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"6:6740:5878":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"2:6256:7014":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2:9839:84":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"6:5676:5688":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"18:598:35707":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"6:1584:5205":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"17:13738:3954":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"17:13424:3875":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"6:5241:5491":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"16:2772:4632":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"2:3678:33157":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"17:14260:4055":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"16:7990:6945":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"2:10386:3170":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"16:2550:4622":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"1:10503:26519":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"1:11973:31183":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Bomb"],"kind":"struct"},"16:7358:4653":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"2:45837:6447":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"16:6462:21667":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:22957:3344":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"11:1601:7837":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"2:10820:33794":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"2:46613:6518":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"2:47102:6562":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:47174:6568":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"16:7192:21671":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"1:894:3155":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:21718:32170":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"16:7716:35687":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"17:2037:7660":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"14:165:20737":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"2:46374:6493":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"16:7058:6901":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"17:15266:4335":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"2:3927:7835":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"17:9755:21711":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"6:1657:5260":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"1:8667:6647":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"2:40892:7074":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:4325:8945":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"2:44558:7136":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"2:44595:7137":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:46729:6522":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"2:22496:9132":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"18:589:3541":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"5:7517:7868":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"16:6876:4721":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"2:13610:7898":{"crate_id":2,"path":["core","future","async_drop","AsyncDropInPlace"],"kind":"struct"},"2:41947:8917":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"18:643:3533":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"2:44934:179":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"17:15957:4519":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"5:7070:14237":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"6:7563:6075":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"16:8585:7812":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"1:9162:7987":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"1:9109:198":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"2:12499:2421":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"5:3100:33956":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"6:5520:5620":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"5:7161:263":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"6:4990:5410":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"16:7949:4657":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"17:13089:3805":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"17:12454:6795":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"5:1008:3153":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"11:2366:7840":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"1:6183:7153":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"2:4905:3184":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"2:3211:3015":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"1:2495:8905":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"17:12543:7741":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"1:8765:6430":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"5:4577:35519":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"5:40:8882":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"16:6731:7788":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:43919:7914":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"2:5085:14270":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"2:41166:7092":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:11719:7186":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"5:5942:250":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"2:10326:225":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"6:5635:5672":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"5:2301:6985":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"1:4672:8950":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"2:23201:6177":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU128Inner"],"kind":"struct"},"16:7424:21672":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"2:44256:2853":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"17:12707:7747":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"11:1884:3155":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"6:7414:6000":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"17:14575:3760":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"1:6374:31172":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"1:10976:26563":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"1:11241:6675":{"crate_id":1,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"2:12483:7893":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"1:9274:115":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"2:22850:7043":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"2:46463:6512":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"2:46123:6480":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:10948:139":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"5:5599:1734":{"crate_id":5,"path":["alloc","str"],"kind":"module"},"6:5341:5535":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"6:5196:5469":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"6:8199:6111":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"1:12376:1852":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"17:14189:4041":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"17:13844:3974":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"17:11595:3708":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"2:23730:235":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"16:5085:4688":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"5:732:7842":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"17:14298:4059":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"17:14503:4096":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"1:4201:8925":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"17:14372:4070":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"5:3698:181":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"2:4430:7874":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"2:41390:7098":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"17:10671:35694":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"1:11258:6681":{"crate_id":1,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"6:4805:5303":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:46243:6486":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"2:21804:9045":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"17:12433:3760":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"6:8343:6133":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"15:0:2625":{"crate_id":15,"path":["addr2line"],"kind":"module"},"5:7668:2799":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"17:13553:3907":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"17:597:3664":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"17:13437:3876":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"1:1964:2348":{"crate_id":1,"path":["std","error"],"kind":"module"},"5:1895:7849":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"2:10171:3191":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"2:8234:14334":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"17:12659:7743":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"1:5258:7943":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"6:6473:5748":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"16:6337:6837":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"17:14177:4038":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:44720:14491":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"5:1220:35071":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"2:47200:6570":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"17:14516:4097":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"2:44950:7150":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"11:830:7834":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"6:5288:5517":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"6:564:5134":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"17:11269:21765":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"17:10317:3673":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"7:0:1914":{"crate_id":7,"path":["unwind"],"kind":"module"},"17:15635:4452":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"16:896:7750":{"crate_id":16,"path":["gimli","read","endian_slice","DebugBytes"],"kind":"struct"},"2:40958:7082":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"6:473:5080":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"17:15383:4367":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"18:481:6743":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"1:5958:7944":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"1:8539:2848":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"5:1407:7829":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"1:4060:2350":{"crate_id":1,"path":["std","num"],"kind":"module"},"2:4843:14260":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:39831:2758":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"5:7712:2803":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"5:7653:2765":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"6:7548:6068":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:45852:6450":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"6:6708:5869":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"2:8784:33126":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"1:7397:28992":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"2:44004:2841":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"2:46679:6520":{"crate_id":2,"path":["core","core_arch","simd","m16x16"],"kind":"struct"},"2:8320:129":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:0:1726":{"crate_id":1,"path":["std"],"kind":"module"},"6:5224:5482":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"6:1507:5158":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"11:488:153":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"17:9671:21714":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"2:38351:14359":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"2:44667:6439":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"2:30734:6186":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:8616:7982":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"20:299:2353":{"crate_id":20,"path":["semver","Version"],"kind":"struct"},"1:986:7828":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"6:8014:6099":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"5:7537:35546":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"2:12690:7118":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"6:5375:5547":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:43181:3179":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"6:5255:5497":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"5:288:35492":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"1:12372:911":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"2:3046:137":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"6:7586:6087":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"1:902:6971":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"14:214:6960":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"17:15390:4368":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"16:7168:4747":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"5:7478:6145":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"17:11674:6771":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"1:8471:3419":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"1:12365:741":{"crate_id":1,"path":["std","f16"],"kind":"primitive"},"2:11430:7888":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"17:15569:4428":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"17:14066:4008":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"17:11166:3691":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"6:5541:5626":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"17:13046:3801":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"16:8096:7811":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"1:8622:6646":{"crate_id":1,"path":["std","os","unix","net","ucred","UCred"],"kind":"struct"},"2:42728:97":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"17:11799:7712":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"16:6658:7770":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"17:10954:21746":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"2:46357:6492":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"2:40739:2805":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"0:93:2391":{"crate_id":0,"path":["rustc_version","VersionMeta"],"kind":"struct"},"17:16151:4583":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"1:9710:7972":{"crate_id":1,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"17:15596:4440":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"1:9416:7967":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockWriteGuard"],"kind":"struct"},"2:47238:6578":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"16:7462:7793":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"17:11537:7699":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"17:11743:6776":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"2:44034:2855":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"6:4929:5383":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:7767:32633":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"6:5488:5612":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"17:9938:21733":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"17:12328:6781":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"11:854:7825":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"1:9205:9013":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"6:1625:5237":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"2:43416:6430":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"17:11661:6770":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"2:33612:9040":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"17:15814:4495":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"17:13723:3950":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"16:8320:21677":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"17:10399:2839":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"17:12371:3794":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"6:8296:6122":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"16:4184:4674":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"17:3473:7666":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"6:5622:5666":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"2:6953:7023":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"17:14025:4001":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"5:1791:35492":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"6:7454:6008":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:43426:7111":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"6:7577:6084":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"5:303:2828":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"2:44326:2832":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"16:7980:4658":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"2:44333:2845":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"16:3110:4665":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"2:40993:3551":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"17:16121:4575":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"17:3597:7667":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"16:7807:35691":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"16:7282:6920":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"2:46708:6521":{"crate_id":2,"path":["core","core_arch","simd","m32x8"],"kind":"struct"},"1:2232:128":{"crate_id":1,"path":["std","ffi","os_str","Display"],"kind":"struct"},"17:11510:7697":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"2:23267:6183":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI128Inner"],"kind":"struct"},"2:10382:128":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"16:6502:20775":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"2:46144:6481":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"6:6700:5865":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"16:7508:6934":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:11998:7891":{"crate_id":2,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"17:13814:3971":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"17:16050:3852":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"1:12368:739":{"crate_id":1,"path":["std","f128"],"kind":"primitive"},"5:7559:209":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"17:15426:4377":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"16:5757:4703":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"11:1049:7830":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"0:126:2464":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","MinorVersionMustBeZeroAfter4"],"kind":"variant"},"6:6777:5889":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"0:124:2385":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","ComponentMustNotHaveSign"],"kind":"variant"},"2:13026:14211":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"2:47223:6577":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"2:46883:6555":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:3438:3409":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"1:5098:8970":{"crate_id":1,"path":["std","os","net","linux_ext","socket","UnixSocketExt"],"kind":"trait"},"6:4997:5413":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"16:8711:4902":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"1:675:7925":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"6:4957:5394":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"5:3090:33949":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"2:2606:14373":{"crate_id":2,"path":["core","ptr","with_exposed_provenance_mut"],"kind":"function"},"16:0:2626":{"crate_id":16,"path":["gimli"],"kind":"module"},"2:46258:6487":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2:40578:2845":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:11708:7233":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"2:23099:3359":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"2:21802:8908":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"2:7818:14328":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"11:1893:7849":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"6:7341:5971":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:9320:7996":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"17:15822:4498":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"5:7551:3155":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"2:42248:8984":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"5:895:7843":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"17:15678:4468":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"6:6672:5854":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"5:1256:35061":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"0:45:225":{"crate_id":0,"path":["rustc_version","Result"],"kind":"type_alias"},"1:9256:6670":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"6:1690:5276":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"6:578:5142":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"2:42269:14431":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"6:5282:5514":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:44913:33184":{"crate_id":2,"path":["core","task","wake","ExtData"],"kind":"enum"},"1:672:7923":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"17:11075:3689":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"1:9176:6666":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"16:2435:20803":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"6:1500:5155":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"16:5113:4689":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"17:0:2627":{"crate_id":17,"path":["object"],"kind":"module"},"16:7919:7803":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"1:10325:3313":{"crate_id":1,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"6:7986:6096":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"16:6302:6834":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"1:1620:7849":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"16:8209:4650":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"2:33880:14354":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"2:22:823":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"17:15992:4549":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"16:5224:4693":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"6:6790:5896":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"20:90:8050":{"crate_id":20,"path":["semver","error","QuotedChar"],"kind":"struct"},"5:6129:6994":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"1:6406:7951":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"8:0:2619":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"1:10486:113":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"17:11567:7701":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"2:26130:266":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"2:10390:3172":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"6:5395:5557":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"18:521:25922":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"17:16079:4564":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"16:6837:7791":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"5:3334:6975":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"11:671:3153":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"1:8551:7984":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:4595:7005":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"2:41381:3418":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:6358:7039":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"5:6711:35492":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"17:13015:3760":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"2:44837:163":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"6:586:5146":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"17:13412:3874":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"16:6421:6805":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"2:40551:7060":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"17:10905:7676":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"2:22982:6160":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:8859:6665":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"1:4303:30760":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"17:13986:3997":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"6:6381:5695":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"11:430:35661":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"9:176:20716":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:44609:14218":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"2:8740:3156":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"2:8050:7157":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"2:39703:7055":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"5:7736:7869":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"6:1551:5183":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"1:9442:6675":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"16:6890:4645":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"1:11223:6439":{"crate_id":1,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"16:5417:4699":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"16:2570:4623":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"9:236:6430":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"6:8302:6123":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"5:7527:6997":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"17:14414:4078":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"2:30766:6187":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"16:8233:21676":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"2:23006:32194":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"18:113:25912":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:11212:3154":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"17:16069:4563":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"1:11680:6689":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"1:1089:7829":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"6:6521:5773":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"1:5965:7948":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"2:40513:32215":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"5:6665:7835":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"2:32351:7903":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"2:47185:6569":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"2:2802:201":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"17:11214:7685":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"1:8532:2855":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"6:5265:5503":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"1:11276:161":{"crate_id":1,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"2:44010:2840":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"17:12342:6785":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"2:42189:3154":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"16:2880:4637":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"17:11313:6764":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"1:9170:3155":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"1:9103:2775":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"16:3048:20805":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"17:12362:6790":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"2:47119:6563":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"0:119:2460":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","ParseIntError"],"kind":"variant"},"0:25:1942":{"crate_id":0,"path":["rustc_version","version"],"kind":"function"},"1:9411:7966":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockReadGuard"],"kind":"struct"},"6:8353:6135":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"1:4883:8972":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"17:15092:4294":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"17:10710:7673":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"2:42872:3169":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"2:44685:130":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"11:698:3155":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"6:1643:5249":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"17:11547:3609":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"18:80:25910":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"6:7463:6012":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"5:6097:71":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"2:43932:7036":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"17:15760:4485":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:40570:2846":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:11949:7189":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"2:36420:4793":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"17:10350:3674":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"16:8165:4652":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"2:40836:7066":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:33340:14351":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:4496:14252":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"17:11467:3707":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"2:32474:3020":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"17:11142:3700":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"16:7471:4773":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"1:8179:7160":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"2:34544:4792":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:12380:1924":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"17:14235:4051":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"6:5349:5536":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"2:3659:14250":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:21720:32168":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"16:7731:6414":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"6:8290:6121":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"2:42570:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"2:43115:3179":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"17:14529:4098":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"1:8241:7974":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"17:13774:3963":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"2:44961:6446":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"6:5441:5585":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"17:10018:21715":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"2:21732:32176":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"17:14284:4058":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"6:4869:5354":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:6959:7022":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"2:13593:7895":{"crate_id":2,"path":["core","future","async_drop","AsyncDropOwning"],"kind":"struct"},"17:12768:21716":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"17:13922:3988":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"6:5107:5454":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"1:11694:7184":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"11:2466:7849":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"1:8545:7982":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"17:10218:3670":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"2:23026:32214":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"20:319:2875":{"crate_id":20,"path":["semver","VersionReq"],"kind":"struct"},"2:6067:3374":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"17:14847:4219":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"2:44437:7123":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"5:219:7841":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"17:13959:3992":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"16:2530:4621":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"6:4792:5294":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:47128:6564":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"17:13946:3989":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"17:14723:4116":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"2:2216:188":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:11668:7181":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"1:9361:6674":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"2:40686:106":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"16:6588:4711":{"crate_id":16,"path":["gimli","read","cfi","UnwindExpression"],"kind":"struct"},"6:4829:5321":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"17:12508:3769":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"2:12967:2826":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"2:32916:4786":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"17:14489:4093":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"17:11605:2353":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"16:4844:4681":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"5:7487:3155":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"11:1920:6976":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"2:23179:6175":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU32Inner"],"kind":"struct"},"6:545:5124":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"17:13899:3983":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"17:11042:7678":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"2:31172:3034":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"16:2704:4629":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"16:6640:7760":{"crate_id":16,"path":["gimli","read","dwarf","DwarfSections"],"kind":"struct"},"2:47139:6565":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"17:13509:3890":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"2:41915:6400":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"16:4956:4685":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"11:2566:2764":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"2:30772:6189":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"17:12671:7744":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"1:953:7821":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"1:2635:3401":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"16:6998:6891":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"11:328:6967":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"1:1609:3153":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:47081:6561":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"2:42133:6411":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"17:13211:3838":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"6:5311:5526":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"9:390:20650":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"5:7845:7297":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"0:130:2389":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","TooManyComponents"],"kind":"variant"},"20:351:2873":{"crate_id":20,"path":["semver","Op"],"kind":"enum"},"1:8590:7164":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"18:507:3533":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"1:9384:186":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"2:4564:7876":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"16:6256:6827":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"11:1880:3153":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"16:3695:4670":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"2:44841:218":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"2:40814:7906":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:4406:7939":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"1:7152:9043":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"2:4874:3023":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"17:15342:4353":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"6:5186:5462":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"17:15456:4383":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"6:465:5075":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"2:44620:7138":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"6:5405:5564":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"13:0:2617":{"crate_id":13,"path":["std_detect"],"kind":"module"},"18:726:3557":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"1:2483:8899":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"17:9737:21713":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"1:5638:2770":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"5:7234:35540":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"17:12695:7746":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"17:12724:21737":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"2:46806:6554":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"2:22918:7044":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"2:46634:6519":{"crate_id":2,"path":["core","core_arch","simd","m8x32"],"kind":"struct"},"2:4796:3182":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"17:15376:4366":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"18:563:3540":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"5:5497:35492":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"2:43951:7037":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"17:11915:21835":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"1:8870:7169":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"16:6970:4646":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"1:7717:31123":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"17:10170:3668":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"17:12076:7724":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"16:7959:6943":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"0:122:2382":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","ComponentMustNotHaveLeadingZeros"],"kind":"variant"},"17:13538:3901":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:13698:33383":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"17:13272:3852":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"5:4137:7835":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"6:7308:5948":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"17:15836:4501":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"17:13363:3865":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"2:3201:117":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"15:394:20767":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"2:43980:2480":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"17:15116:4296":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"0:141:2480":{"crate_id":0,"path":["rustc_version","Error","Utf8Error"],"kind":"variant"},"1:4927:8938":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"0:138:2415":{"crate_id":0,"path":["rustc_version","Error","CommandError"],"kind":"variant"},"1:4925:8937":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"17:14356:4069":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"6:4984:5407":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"9:480:20648":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"1:1098:7830":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"5:3724:3154":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"6:5670:5686":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"16:2920:4639":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"2:44709:7147":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"2:13633:7077":{"crate_id":2,"path":["core","future","async_drop","Fuse"],"kind":"struct"},"16:6625:6876":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"1:12322:31113":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"17:16269:3874":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"6:4914:5376":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"6:570:5137":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"17:12127:3749":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"5:2154:3405":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"17:11574:6977":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"20:381:2874":{"crate_id":20,"path":["semver","Prerelease"],"kind":"struct"},"2:40658:7063":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"1:2541:2349":{"crate_id":1,"path":["std","io"],"kind":"module"},"16:7372:4654":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"17:10818:7674":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"17:12949:3757":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"17:15249:4327":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"2:43859:7034":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"2:3241:3017":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"17:9886:21731":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"5:3935:7849":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"1:8257:3405":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"2:46501:6514":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"16:2900:4638":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"6:8308:6124":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"2:21703:32171":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:5622:2769":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"1:1974:3361":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"17:13606:3921":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"2:43144:4866":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"2:39753:211":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"17:15720:4474":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"1:3592:2792":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"6:7518:6051":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"17:10982:21747":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"0:135:2412":{"crate_id":0,"path":["rustc_version","Error","CouldNotExecuteCommand"],"kind":"variant"},"6:7368:5981":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"7:79:20642":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"6:5325:5531":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"6:5428:5575":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"6:4970:5399":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"17:16165:4586":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"17:12264:7735":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:39655:14186":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"13:110:35670":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"5:1129:35492":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"17:12887:6798":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"6:5462:5600":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"2:44184:2850":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"2:2765:134":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"5:5541:2829":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"16:8121:209":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"6:4896:5364":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:40854:7069":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"5:1633:209":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"6:5471:5606":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"2:43780:7911":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:8070:3323":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"2:43387:7110":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"11:2420:3155":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"6:532:5117":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"6:5319:5530":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"5:2262:8838":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"1:11080:31187":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"17:14868:4229":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"1:9389:7953":{"crate_id":1,"path":["std","sync","mutex","MappedMutexGuard"],"kind":"struct"},"2:32376:7054":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"5:2374:6990":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"6:8008:6097":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"6:6564:5802":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"17:14325:4063":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:12713:7119":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:39716:212":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"16:7969:6944":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"2:2074:1367":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"5:7770:7870":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"1:9460:7170":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"2:22934:6156":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:6461:7153":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"6:5381:5549":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:42081:7107":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"6:523:5111":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"17:10092:21736":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"2:10595:152":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"5:7684:2802":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"6:7469:6014":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"18:613:35705":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"2:46434:6511":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:758:153":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"17:11841:7718":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"17:12289:3752":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"11:2539:4990":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"16:8483:4889":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"2:3730:14187":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"2:3287:14183":{"crate_id":2,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"17:12213:7731":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"16:5709:21663":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"6:8261:6114":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"17:11242:7687":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"6:4947:5391":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"1:8085:3324":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"2:11280:2834":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"6:6902:5930":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"2:40787:2780":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"2:15:2373":{"crate_id":2,"path":["core","write"],"kind":"macro"},"16:5348:4697":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"1:5779:2774":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"2:32444:2878":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"2:40968:7083":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"2:2951:77":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"16:6822:21668":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCacheStrategy"],"kind":"enum"},"17:12494:3765":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"2:43627:7113":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"2:46051:6468":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:23190:6176":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU64Inner"],"kind":"struct"},"2:8291:2881":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:4103:8920":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"17:15313:4345":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"16:6781:4717":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"11:1674:35652":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"2:42059:32535":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"17:10044:21735":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"2:43869:7913":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"17:14012:4000":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"5:4372:3153":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"5:3308:6974":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2:3087:3366":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"2:42115:6410":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"17:11367:3689":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"2:44630:7142":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"16:4241:4675":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"20:395:2871":{"crate_id":20,"path":["semver","BuildMetadata"],"kind":"struct"},"2:42767:7885":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"17:10524:7670":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:40054:14283":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"2:42172:172":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"1:944:7834":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:2142:14383":{"crate_id":2,"path":["core","ptr","metadata","Thin"],"kind":"trait_alias"},"1:1642:6976":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"2:11471:2857":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:11306:6682":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"11:1914:6975":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"17:14051:4005":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"16:6738:35690":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"9:328:5034":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"2:42414:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"14:31:7816":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"2:30798:32199":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"1:11790:26465":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"18:96:25911":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"16:7907:4833":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"2:2140:14382":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"2:22584:32886":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"16:2684:4628":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:42375:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:5837:219":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"1:8208:139":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"1:9397:3374":{"crate_id":1,"path":["std","sync","poison","Guard"],"kind":"struct"},"1:6718:7156":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"16:6696:7779":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"2:45916:6456":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"2:25:700":{"crate_id":2,"path":["core","env"],"kind":"macro"},"16:6159:6817":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"17:12597:3771":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"2:43619:6434":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"1:10344:8000":{"crate_id":1,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"6:6480:5752":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"2:45984:6464":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2:47159:6567":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"5:7507:7835":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"1:2010:791":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"1:3649:2794":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"17:12443:3763":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"1:379:7920":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"6:5412:1252":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"2:43198:137":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"6:6544:5786":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"1:4923:8935":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"17:10155:3667":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"17:14271:4056":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"2:44834:150":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"16:7305:4759":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"17:14463:4091":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"16:3987:3574":{"crate_id":16,"path":["gimli","arch","PowerPc64"],"kind":"struct"},"19:0:1300":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"6:6449:5739":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"16:2796:4633":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"17:13766:3961":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"1:6853:7960":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLock"],"kind":"struct"},"17:13399:3872":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"5:891:101":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"16:5255:4694":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"1:11098:31168":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"1:2076:196":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"16:5742:3668":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"1:9732:127":{"crate_id":1,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"0:74:2368":{"crate_id":0,"path":["rustc_version","LlvmVersion"],"kind":"struct"},"17:15769:4489":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"2:10396:3174":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"16:903:7654":{"crate_id":16,"path":["gimli","read","endian_slice","DebugByte"],"kind":"struct"},"16:4404:4677":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"2:2796:194":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"2:32362:7904":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"17:10251:3671":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"16:2950:4640":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"1:12306:7234":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"16:7044:4651":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"2:41352:7094":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"17:9984:21734":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"6:6716:5873":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"2:40665:7064":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"struct"},"17:11324:7688":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"2:2044:6147":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"1:11092:31177":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"1:8050:8857":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"17:13292:3853":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"1:9401:233":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"17:10622:35700":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"17:15301:4344":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"2:32369:3182":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"2:11485:2856":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"6:6659:5850":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"16:5172:4691":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"2:4:1265":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"16:7883:4832":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"1:8556:8916":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"2:40977:7084":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:9133:2777":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"17:11227:7686":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"17:11755:6779":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"17:15418:4375":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"11:2545:4991":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"5:4531:3374":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"2:39731:209":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"17:16259:3869":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"16:2966:4641":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"6:5179:5460":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"5:2821:6142":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"2:21749:8908":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"2:41408:7099":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:3841:8918":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"2:46176:6483":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:4817:5992":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"function"},"17:12238:7733":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"6:553:5129":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"11:809:7849":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"1:1637:6975":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"16:3834:4671":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"2:3248:3019":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"5:3711:3153":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"17:15473:4390":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"5:6532:9140":{"crate_id":5,"path":["alloc","task","LocalWake"],"kind":"trait"},"11:1005:6939":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"2:40915:7078":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:5992:7949":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"2:22639:14372":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","with_exposed_provenance"],"kind":"function"},"18:754:6760":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"17:15102:4295":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"1:6037:7950":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"5:6792:3155":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"5:1561:3155":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"2:11188:3153":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:8645:5981":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"16:6123:4648":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"2:42206:6414":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:39881:6264":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:10327:2794":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"18:689:6751":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"1:11674:2786":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"2:46336:6491":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:42153:193":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"2:44416:14217":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"15:288:20756":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"17:12150:3750":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"6:6507:5772":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"16:8137:4661":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:23256:6182":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI64Inner"],"kind":"struct"},"11:798:7835":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"6:5205:5474":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"6:8249:6112":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:3279:14181":{"crate_id":2,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"17:9916:21732":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"1:8480:2781":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"17:11688:6772":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"2:10026:33122":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:8608:7985":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"16:5318:4696":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:40945:7081":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:2719:31165":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"5:7567:6998":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"2:44351:2847":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"6:6765:5887":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"1:5654:113":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"5:7587:3155":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"6:5127:5456":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"16:8612:4664":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"1:1859:3303":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"17:14038:4003":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"2:2954:76":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"2:31145:195":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"1:4886:8950":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"17:256:7654":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"2:2931:14282":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:4211:8926":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"6:8267:6115":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"2:22239:32178":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"2:44900:6443":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"17:13581:3917":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"2:42181:3153":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"2:43831:7032":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"17:11583:7706":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"2:42689:90":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:8222:127":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"2:46307:6490":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"2:47148:6566":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"18:706:2826":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:3449:140":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"1:8788:6660":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:2707:103":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"6:5533:5621":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:42609:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"16:5282:4695":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"2:23088:2460":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"0:48:2355":{"crate_id":0,"path":["rustc_version","Channel"],"kind":"enum"},"1:10929:7180":{"crate_id":1,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"1:11874:7938":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"17:11812:7714":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"6:4816:5311":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"1:8509:3391":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"1:500:31173":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"1:527:8838":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"16:6269:6828":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"17:1098:7658":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"2:10852:32157":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"17:15748:4483":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"5:1236:33945":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"2:22903:6155":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:23068:7049":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"2:22712:9128":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"2:2963:257":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"2:45931:6457":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"17:10877:7675":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"17:15646:4453":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"16:7495:6930":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"6:5117:5455":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"1:10995:3324":{"crate_id":1,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"1:8462:3417":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"16:4873:4682":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"16:7578:6671":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"18:0:2628":{"crate_id":18,"path":["memchr"],"kind":"module"},"16:4766:4679":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"6:4842:5331":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"17:15176:4314":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"6:6731:5875":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"1:10889:8008":{"crate_id":1,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"9:355:20664":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"2:42334:3154":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"11:2121:6939":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:22572:9136":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"1:12371:905":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"2:7990:3417":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:11956:7189":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"11:396:35662":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"6:5025:5429":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"1:3677:2791":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"2:3206:246":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"6:8319:6128":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"9:53:20667":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"6:4902:5367":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"5:7036:14235":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"6:485:5086":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"2:43961:7916":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:11063:7680":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"16:2590:4624":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"17:14788:4167":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"16:5449:4700":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"17:4986:7669":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"18:548:152":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:13924:7041":{"crate_id":2,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"17:15039:4281":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"1:3303:31655":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"2:44924:7917":{"crate_id":2,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"5:1376:6939":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"17:15190:4317":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2:46546:6515":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"17:14111:4013":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"5:7209:35523":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"5:3368:6976":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"1:12374:1864":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"17:12808:3790":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"6:4976:5402":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"1:10346:7999":{"crate_id":1,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"6:1514:5160":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"17:12107:3700":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"6:6611:5829":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"17:13325:3859":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"17:15126:4297":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"2:47031:6559":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"5:6150:14686":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"16:6808:4643":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"10:44:4996":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"17:1207:7659":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:7703:14280":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"2:40673:6394":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"16:3889:3566":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"1:1631:6974":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"2:42648:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"17:14386:4072":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"16:6144:21664":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"5:1421:7833":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"0:144:2456":{"crate_id":0,"path":["rustc_version","Error","UnexpectedVersionFormat"],"kind":"variant"},"2:9518:2824":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"17:11634:6768":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"16:6608:205":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"16:908:7655":{"crate_id":16,"path":["gimli","read","endian_slice","DebugLen"],"kind":"struct"},"17:13375:3868":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"16:5649:4701":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"2:23245:6181":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI32Inner"],"kind":"struct"},"2:40691:2800":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"17:11877:3710":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"17:16138:4577":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"1:9715:26524":{"crate_id":1,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"9:0:2620":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"2:10837:31165":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"6:1569:5193":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"16:4267:4676":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:23168:6174":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU16Inner"],"kind":"struct"},"2:10638:3163":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"11:708:7820":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"17:13173:3823":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"17:2175:21793":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"1:9287:26541":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"17:10759:3700":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"5:1592:6972":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2:32309:2779":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:10603:156":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"17:15324:4349":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"16:8626:6959":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"2:21701:32165":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"0:152:2486":{"crate_id":0,"path":["rustc_version","Error","LlvmVersionError"],"kind":"variant"},"1:928:7835":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"16:546:6803":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"18:531:6745":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"17:15701:4469":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"17:12251:7734":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"1:7983:8908":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:43993:2844":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"6:7448:6006":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"1:8717:6657":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"2:32385:236":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"17:11730:6775":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"18:651:3533":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"2:44342:2846":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"16:7030:4724":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"5:1611:7820":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"1:12382:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"1:12375:1846":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"2:821:189":{"crate_id":2,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"1:10638:31179":{"crate_id":1,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"1:7999:7970":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"6:1539:5174":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"17:11051:7679":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"6:0:1010":{"crate_id":6,"path":["libc"],"kind":"module"},"1:3393:3412":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"6:6876:5915":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"17:15410:4374":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"2:42351:195":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"17:14986:4271":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"16:7159:6905":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"17:13455:3884":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"1:5168:8976":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"16:7212:6906":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"2:23157:6173":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU8Inner"],"kind":"struct"},"6:5629:5669":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"0:118:2375":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError"],"kind":"enum"},"1:9406:234":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"6:1684:5273":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"1:5844:7153":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"5:3870:7850":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"17:12422:6793":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"6:5420:5570":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"1:3658:30888":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"17:11621:6766":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"2:44156:2856":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"5:1392:7830":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"17:11016:7677":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"11:2349:7830":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"2:10384:3169":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"6:5088:5453":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"1:3906:7937":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"16:6440:21666":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"0:28:2420":{"crate_id":0,"path":["rustc_version","version_meta_for"],"kind":"function"},"17:11354:7692":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"2:44298:2849":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:7354:8056":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"2:2726:112":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"16:8528:6951":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"6:1494:5152":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"5:3342:6973":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"1:4333:8946":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"17:13568:3913":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"17:10534:35697":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"1:3297:27211":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:8271:145":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:3820:70":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"0:51:2359":{"crate_id":0,"path":["rustc_version","Channel","Nightly"],"kind":"variant"},"0:0:2499":{"crate_id":0,"path":["rustc_version"],"kind":"module"},"16:6084:6810":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"6:7361:5977":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:21928:9046":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:4167:8924":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"18:515:3536":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"17:10573:35702":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"17:15944:3838":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"5:2179:7851":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"6:1703:5280":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:2337:6152":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"2:45998:6465":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2:44202:2851":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"11:2228:6977":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"5:3092:6141":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"17:14079:4009":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"6:5366:5541":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"17:11443:3705":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"2:22534:9133":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"2:39868:6262":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"1:8331:7975":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"2:40864:133":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"2:22797:7042":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:12356:1886":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"16:8636:21678":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"16:4929:4684":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"1:8174:7972":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"6:1675:5267":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"17:15582:4434":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"1:8602:8949":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"2:4454:109":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:12767:2834":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"16:5198:4692":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"1:4354:8948":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"17:15463:4385":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"5:1622:7821":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"17:10457:138":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"11:1564:20731":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"1:6199:219":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"16:2486:4619":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"16:5727:3667":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:44466:7132":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"16:6904:6886":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"2:43941:7915":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"16:6188:6822":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"1:9341:26542":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"1:5447:202":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"1:12378:1840":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"17:13344:3864":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"17:14994:4272":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"1:6282:2355":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"2:45884:6454":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:40502:7058":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"17:12516:7738":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"2:21667:3034":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"2:3455:142":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"16:2640:4626":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"1:11204:2777":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"2:12653:7115":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"2:4717:7877":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"17:513:7657":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"5:2354:35599":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"17:15445:4382":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"6:5682:5691":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"17:11341:7691":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"1:9424:161":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"17:14311:4060":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"2:5257:437":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"2:8373:2880":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"16:5379:4698":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"2:40528:6393":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2:2760:200":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:4109:8919":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"1:5089:8969":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"1:2313:138":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"2:43219:3180":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"17:13753:3959":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"2:8238:14333":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"2:8428:177":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:40794:7035":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"17:11853:7719":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"1:11657:6430":{"crate_id":1,"path":["std","sys","thread_local","fast_local","eager","State"],"kind":"enum"},"20:0:2352":{"crate_id":20,"path":["semver"],"kind":"module"},"2:4354:3374":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"2:23041:32197":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"17:11865:7720":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"2:41375:7097":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"17:2234:7664":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"5:6513:9139":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"2:14016:8866":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"2:4060:3155":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"5:3347:35548":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:30508:3343":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"1:9328:6671":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"2:13188:119":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"17:12464:21860":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"10:0:2621":{"crate_id":10,"path":["adler"],"kind":"module"},"5:6881:35492":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"17:13116:3811":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"16:2860:4636":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"17:13387:3869":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"14:40:3839":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"17:10997:3686":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"1:3300:31659":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"1:5515:128":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"1:2322:3383":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"16:7386:4768":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:44531:7135":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"16:8546:6954":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:42292:136":{"crate_id":2,"path":["rustc_version","Result","Err"],"kind":"variant"},"6:5593:5647":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"16:7016:6899":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"2:38461:14361":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:10955:6678":{"crate_id":1,"path":["std","sys","pal","unix","fs","Mode"],"kind":"struct"},"17:12189:7729":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"1:12366:744":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"17:13594:3918":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"1:12369:917":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:44288:2848":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"16:7223:6907":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"1:2741:3393":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"2:23223:6179":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI8Inner"],"kind":"struct"},"2:43132:6428":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"1:3559:3374":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"2:46389:6494":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"16:2415:20776":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"5:3096:33944":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"1:2318:7174":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"2:40472:7057":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"6:8273:6116":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"1:9154:3153":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"11:2400:3154":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"16:2467:4613":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"1:11215:26566":{"crate_id":1,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"1:12377:1858":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"16:7401:35683":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"1:4981:7942":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"2:2590:676":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:1922:3320":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"11:2559:4993":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"2:10392:205":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"17:14933:4265":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"1:8526:2839":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"6:1727:5288":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"6:5036:5434":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"1:7869:3664":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"1:4161:8923":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"6:8031:6110":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"17:15058:4282":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"6:7332:5965":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:39861:7905":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"17:12824:21738":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"16:3587:4669":{"crate_id":16,"path":["gimli","arch","MIPS"],"kind":"struct"},"1:8341:3406":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"5:5545:2830":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"2:3638:14363":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"2:9407:7883":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"6:6823:5904":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"11:1888:7835":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"6:5334:5534":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"1:5708:2771":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"6:8284:6120":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"18:680:6748":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"17:10661:7672":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"5:3855:3405":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"5:935:8864":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"2:33128:4783":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"17:13855:3975":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"2:12973:2825":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"2:43404:156":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"2:22670:8908":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"18:698:6752":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"17:12557:3689":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"16:7554:21673":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"17:11419:3700":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"0:26:2423":{"crate_id":0,"path":["rustc_version","version_meta"],"kind":"function"},"1:12355:475":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"16:4152:4673":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"1:3065:225":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"1:9703:138":{"crate_id":1,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"2:42093:7164":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"5:1530:3153":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:44238:2852":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"1:10913:7173":{"crate_id":1,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"16:6028:4644":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"17:9858:21730":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"6:6748:5879":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"1:7879:7968":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"6:6723:5874":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"2:44859:206":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"6:5007:5420":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:22625:9137":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"1:2003:3362":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"5:7595:3155":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"2:43160:32205":{"crate_id":2,"path":["core","fmt","rt","ArgumentType"],"kind":"enum"},"1:3667:2793":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"17:15078:4290":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"5:2168:7850":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"1:4223:8929":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"2:44052:2854":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:3436:3408":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"17:16249:4603":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"2:39791:213":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:5112:8971":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"6:5494:5614":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"1:3032:7934":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"17:15222:4323":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"1:432:184":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:43434:7112":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:21687:32173":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"16:155:6800":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"17:12929:3794":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"18:735:25920":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"14:202:14219":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"16:6914:6887":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"5:795:118":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"6:6493:5761":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"6:5069:5452":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"6:5249:5495":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"17:3264:7665":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"6:6462:5740":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:3529:3418":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"17:14855:4222":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:30787:3179":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"11:102:6962":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"0:53:2361":{"crate_id":0,"path":["rustc_version","Channel","Beta"],"kind":"variant"},"1:4139:8921":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"2:39811:215":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"5:5146:3374":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"2:42247:8860":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"2:42326:3153":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"6:7350:5972":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"5:4912:808":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"2:39619:3159":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"17:15400:4371":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"2:23278:6184":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroIsizeInner"],"kind":"struct"},"18:491:6744":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"11:1023:7829":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"1:623:8851":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"11:1085:35654":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"5:6012:7835":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"2:4713:220":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"6:5271:5506":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:41366:7096":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"2:44452:7129":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:8249:3403":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"1:4008:7938":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"2:3267:4787":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:5289:7943":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"16:8298:6947":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"5:4167:35492":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"17:11898:3712":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"2:42342:3155":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"1:1920:3319":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:13750:7899":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"17:15197:4318":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"16:6942:6889":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"17:13832:3972":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"2:40883:7073":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:44892:7294":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"17:15010:4273":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"1:8803:8994":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"1:8186:6603":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"1:5004:8934":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"17:11773:3776":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"6:5019:5426":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"6:7487:6025":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"2:11041:238":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:44973:7151":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"17:11293:21766":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"1:11035:2778":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"2:47315:6596":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"16:6866:21669":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"2:40729:2839":{"crate_id":2,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"17:10769:35701":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"2:41975:6409":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"5:7760:7003":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"1:915:6972":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"17:15434:4378":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"17:12711:137":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:21822:6153":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:1625:6973":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"1:1616:7835":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"5:1642:7848":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"16:6984:4663":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"16:7416:7792":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"16:6953:6890":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"1:10715:3408":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"17:15356:4360":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"1:6796:7957":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"1:884:3154":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"2:8737:149":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"2:46094:6471":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:656:3363":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"2:40936:7080":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"2:23075:3345":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"17:12993:21739":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"17:11557:7700":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"17:14876:4230":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"1:2073:197":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"11:2495:20726":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"17:13308:3857":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"2:10394:3173":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:957:7822":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"9:422:20651":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:2149:6148":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"16:6794:6878":{"crate_id":16,"path":["gimli","read","relocate","RelocateReader"],"kind":"struct"},"2:46036:6467":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"16:6111:6815":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"5:3272:100":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"6:6534:5779":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:41400:6395":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"6:1667:5266":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"1:12354:1183":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2:12978:2823":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:8746:14332":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"6:8330:6129":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"2:11237:2855":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"17:12043:7722":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"6:4890:5362":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"16:8598:7815":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"6:6443:5738":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"1:4772:8968":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"2:40466:2846":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:8489:3390":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"2:13961:151":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"1:12367:760":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"6:5507:5619":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"1:9146:2778":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"16:6098:7751":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"2:44138:2857":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"3:0:509":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"16:8723:137":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"1:11350:8013":{"crate_id":1,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"16:6239:4706":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"2:818:3346":{"crate_id":2,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"2:10377:119":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"16:6368:6843":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"5:1583:6971":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"6:4875:5355":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"16:4810:4680":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"1:6924:232":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"2:3432:14175":{"crate_id":2,"path":["core","ops","deref","DerefPure"],"kind":"trait"},"2:21918:8908":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"2:3484:8881":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:12358:1323":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"1:5851:7154":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"1:11413:5054":{"crate_id":1,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"1:10967:2781":{"crate_id":1,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"2:22452:9131":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"6:5057:5443":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"6:5482:5611":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:34371:14357":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:40757:2819":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"2:44308:2835":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:6682:7956":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"2:10754:14449":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"2:5278:32223":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"17:12900:3793":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"16:7838:21674":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"11:1725:155":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"5:786:249":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"1:9235:9014":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"20:333:2872":{"crate_id":20,"path":["semver","Comparator"],"kind":"struct"},"16:5060:4687":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"1:6572:185":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"2:44102:2858":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"6:7539:6065":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"17:15206:4319":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"17:11788:7711":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"11:2323:7829":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"6:8255:6113":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"17:12225:7732":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"16:3141:3561":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"16:8066:21675":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"2:38406:14360":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"17:14212:4050":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"17:11115:7683":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"5:3301:3153":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"11:2533:4989":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"6:7316:5953":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"17:15368:4363":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"6:5357:5537":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"5:5002:216":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"0:149:2447":{"crate_id":0,"path":["rustc_version","Error","UnknownPreReleaseTag"],"kind":"variant"},"6:5586:5645":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"2:3648:253":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"17:14246:4053":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"2:12912:2351":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"17:14587:4107":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"5:1493:99":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"11:123:6963":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"1:8228:7162":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"1:4153:8922":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"2:42197:3155":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:13725:204":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"17:12030:7721":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"18:573:3533":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:4477:14180":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:10984:26558":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"17:15799:4494":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"17:16187:4592":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"16:3126:20806":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"6:5044:5439":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"1:1481:155":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"2:10345:143":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"16:3308:4610":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"2:10643:3164":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"6:5217:5481":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"16:7259:6919":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"2:32386:2877":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"6:5051:5441":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"1:11503:31169":{"crate_id":1,"path":["std","sys","sync","once","futex","CompletionGuard"],"kind":"struct"},"6:5648:5678":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"17:11189:3693":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:41931:6402":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"2:40823:3391":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"17:15521:4427":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"2:7597:3211":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"6:1563:5191":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"1:8597:7165":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"2:40541:7059":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"11:842:8863":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"6:1711:5284":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:21751:9049":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"17:12478:3764":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"5:7829:7849":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"11:364:35666":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"6:491:5088":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"11:1158:7833":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"17:16105:4570":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"1:5602:2768":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"16:8058:7810":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"2:44084:2859":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:12952:2831":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"17:15151:4306":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"17:13187:3824":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"2:3282:14182":{"crate_id":2,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"1:8843:7166":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"2:39699:8880":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:44483:7133":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"17:13485:3888":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"1:6799:9009":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"2:22205:9051":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"6:6691:5859":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"2:5358:985":{"crate_id":2,"path":["core","iter"],"kind":"module"},"17:13674:3925":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"5:3804:35492":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:10918:7160":{"crate_id":1,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"17:11405:7694":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"17:14545:4100":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"18:581:3034":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"1:4694:8951":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"17:16198:4593":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"17:10612:7671":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"2:12031:7892":{"crate_id":2,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"2:42453:86":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:9315:7995":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"6:6917:5941":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"1:963:8863":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"17:13024:21740":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"2:11392:2854":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"17:437:3617":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"17:12485:21861":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"17:13252:3842":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"1:8196:7161":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"18:659:7649":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"16:7789:35688":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"17:11493:7695":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"17:11647:6769":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"1:949:7820":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"2:2960:144":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:21930:6153":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"0:55:2363":{"crate_id":0,"path":["rustc_version","Channel","Stable"],"kind":"variant"},"2:41893:169":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"2:46973:6557":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"6:5562:5638":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"6:6813:5902":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"}},"external_crates":{"20":{"name":"semver","html_root_url":"https://docs.rs/semver/1.0.23/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":29}