{"root":"0:0:1959","crate_version":"0.4.0","includes_private":false,"index":{"a:2:42413:8505-0:118:1834":{"id":"a:2:42413:8505-0:118:1834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42413:8505","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:96:1855":{"id":"0:96:1855","crate_id":0,"name":"commit_date","span":{"filename":"src/lib.rs","begin":[156,4],"end":[156,35]},"visibility":"public","docs":"Commit date of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:42288:191","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"5:7571:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:91:779":{"id":"0:91:779","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[90,55],"end":[90,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10219:154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12870:33447":{"id":"2:12870:33447","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12868:33446"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42413:8505-0:48:1814":{"id":"a:2:42413:8505-0:48:1814","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42413:8505","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1814","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:108":{"id":"0:108","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,27],"end":[147,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32779:241","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:133:715":{"id":"0:133:715","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[279,9],"end":[279,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9951:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2746-0:48:1814":{"id":"b:2:2746-0:48:1814","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2723:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2720:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1814","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2749:1877"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:151:1753":{"id":"0:151:1753","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[358,25],"end":[358,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7571:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:53:1820":{"id":"0:53:1820","crate_id":0,"name":"Beta","span":{"filename":"src/lib.rs","begin":[78,4],"end":[78,8]},"visibility":"default","docs":"Beta release channel","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12883:27434":{"id":"2:12883:27434","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10651:236","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10651:236","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:70:779":{"id":"0:70:779","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[71,54],"end":[71,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10219:154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2761-0:118:1834":{"id":"b:2:2761-0:118:1834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2720:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2730:253","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2764:135","2:2765:1618"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:135:1871":{"id":"0:135:1871","crate_id":0,"name":"CouldNotExecuteCommand","span":{"filename":"src/lib.rs","begin":[343,4],"end":[343,37]},"visibility":"default","docs":"An error occurred while trying to find the `rustc` to run.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:137:1753"]},"discriminant":null}}},"2:12890:27463":{"id":"2:12890:27463","crate_id":2,"name":"split_at_mut_checked","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at_checked`] method.\n\n[`split_at_checked`]: str::split_at_checked\n\n# Examples\n\n```\n#![feature(split_at_checked)]\n\nlet mut s = \"Per Martin-Löf\".to_string();\nif let Some((first, last)) = s.split_at_mut_checked(3) {\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n\nassert_eq!(None, s.split_at_mut_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_mut_checked(16));  // Beyond the string length\n```","links":{"str::split_at_checked":"2:12889:27462"},"attrs":["#[must_use]","#[unstable(feature = \"split_at_checked\", reason = \"new API\", issue =\n\"119128\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42288:191","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:49:1816":{"id":"0:49:1816","crate_id":0,"name":"Dev","span":{"filename":"src/lib.rs","begin":[74,4],"end":[74,7]},"visibility":"default","docs":"Development release channel","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:103:451":{"id":"0:103:451","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[147,9],"end":[147,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"VersionMeta","id":"0:93:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:63":{"id":"0:63","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,26],"end":[71,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2506:198","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1814","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:64:658"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2750-0:93:1850":{"id":"b:2:2750-0:93:1850","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2723:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2752:742"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12889:27462":{"id":"2:12889:27462","crate_id":2,"name":"split_at_checked","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut_checked`]\nmethod.\n\n[`split_at_mut_checked`]: str::split_at_mut_checked\n\n# Examples\n\n```\n#![feature(split_at_checked)]\n\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at_checked(3).unwrap();\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n\nassert_eq!(None, s.split_at_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_checked(16));  // Beyond the string length\n```","links":{"str::split_at_mut_checked":"2:12890:27463"},"attrs":["#[must_use]","#[unstable(feature = \"split_at_checked\", reason = \"new API\", issue =\n\"119128\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42288:191","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2446-0:93:1850":{"id":"b:2:2446-0:93:1850","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32778:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2440:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2448:25304"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:95:1853":{"id":"0:95:1853","crate_id":0,"name":"commit_hash","span":{"filename":"src/lib.rs","begin":[153,4],"end":[153,35]},"visibility":"public","docs":"Git short hash of the build of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:42288:191","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"5:7571:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"2:12892:6737":{"id":"2:12892:6737","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12068:447"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:44145:2296","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12950:33455":{"id":"2:12950:33455","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12558:2286","`DoubleEndedIterator`":"2:7942:128","prim@char":"1:12068:447","str::rmatch_indices":"2:12953:33456"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:44325:2305","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:2279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3560-0:118:1834":{"id":"b:2:3560-0:118:1834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32778:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3558:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3562:1633"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12947:33454":{"id":"2:12947:33454","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12558:2286","`DoubleEndedIterator`":"2:7942:128","prim@char":"1:12068:447","str::matches":"2:12944:2185"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:44397:2308","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:2279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12563:2279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12578:2280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:149:1906":{"id":"0:149:1906","crate_id":0,"name":"UnknownPreReleaseTag","span":{"filename":"src/lib.rs","begin":[358,4],"end":[358,32]},"visibility":"default","docs":"The pre-release tag is unknown.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:151:1753"]},"discriminant":null}}},"0:85:658":{"id":"0:85:658","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[90,27],"end":[90,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:42":{"id":"0:42","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[384,0],"end":[396,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["provide","source","cause","description","type_id"],"trait":{"name":"Error","id":"2:2808:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:43:1933"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:155":{"id":"0:155","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[340,9],"end":[340,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:156:715"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:55:1822":{"id":"0:55:1822","crate_id":0,"name":"Stable","span":{"filename":"src/lib.rs","begin":[80,4],"end":[80,10]},"visibility":"default","docs":"Stable release channel","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:112:458":{"id":"0:112:458","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[147,38],"end":[147,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"VersionMeta","id":"0:93:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31526:193","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3560-0:93:1850":{"id":"b:2:3560-0:93:1850","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32778:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3558:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3562:1633"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:101:1864":{"id":"0:101:1864","crate_id":0,"name":"llvm_version","span":{"filename":"src/lib.rs","begin":[171,4],"end":[171,41]},"visibility":"public","docs":"Version of LLVM used by the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:42288:191","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"a:2:32777:234-0:93:1850":{"id":"a:2:32777:234-0:93:1850","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32777:234","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12881:27433":{"id":"2:12881:27433","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10651:236","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10651:236","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:64:658":{"id":"0:64:658","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[71,26],"end":[71,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Channel","id":"0:48:1814","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:98:1859":{"id":"0:98:1859","crate_id":0,"name":"channel","span":{"filename":"src/lib.rs","begin":[162,4],"end":[162,24]},"visibility":"public","docs":"Release channel of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Channel","id":"0:48:1814","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:24:1866":{"id":"0:24:1866","crate_id":0,"name":"for_command","span":{"filename":"src/lib.rs","begin":[176,4],"end":[190,5]},"visibility":"public","docs":"Returns the version metadata for `cmd`, which should be a `rustc` command.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["cmd",{"resolved_path":{"name":"Command","id":"1:5527:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:45:223","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"VersionMeta","id":"0:93:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12932:1895":{"id":"2:12932:1895","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12068:447","self::pattern":"2:12558:2286","str::rsplitn":"2:12935:27470"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:44279:2312","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:2279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2756-0:93:1850":{"id":"b:2:2756-0:93:1850","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2730:253","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2726:254","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2759:135","2:2760:1620"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:75:1829":{"id":"0:75:1829","crate_id":0,"name":"major","span":{"filename":"src/lib.rs","begin":[94,4],"end":[94,18]},"visibility":"public","docs":"Major version","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u64"}}},"0:138:1874":{"id":"0:138:1874","crate_id":0,"name":"CommandError","span":{"filename":"src/lib.rs","begin":[345,4],"end":[350,5]},"visibility":"default","docs":"Error output from the command that was run.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"struct":{"fields":["0:139:1875","0:140:1878"],"fields_stripped":false}},"discriminant":null}}},"0:26:1882":{"id":"0:26:1882","crate_id":0,"name":"version_meta","span":{"filename":"src/lib.rs","begin":[200,0],"end":[204,1]},"visibility":"public","docs":"Returns the `rustc` SemVer version and additional metadata\nlike the git short hash and build date.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Result","id":"0:45:223","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"VersionMeta","id":"0:93:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2764:135":{"id":"2:2764:135","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32707:2232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:3560-0:74:1827":{"id":"b:2:3560-0:74:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32778:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3558:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3562:1633"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:40":{"id":"0:40","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[363,0],"end":[382,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:41:715"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:5828-0:118:1834":{"id":"b:5:5828-0:118:1834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32778:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5826:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5830:1595"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:157":{"id":"0:157","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2723:142","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Utf8Error","id":"2:44121:1940","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:158:742"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12967:33463":{"id":"2:12967:33463","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12068:447","self::pattern":"2:12558:2286"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:2279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:156:715":{"id":"0:156:715","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[340,9],"end":[340,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9951:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2761-0:48:1814":{"id":"b:2:2761-0:48:1814","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2720:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2730:253","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1814","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2764:135","2:2765:1618"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:57":{"id":"0:57","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,9],"end":[71,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2963:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1814","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:88":{"id":"0:88","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,43],"end":[90,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"name":"PartialOrd","id":"2:2548:199","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:89:1136"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2443-0:48:1814":{"id":"b:2:2443-0:48:1814","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32778:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2437:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1814","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2445:2170"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2756-0:74:1827":{"id":"b:2:2756-0:74:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2730:253","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2726:254","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2759:135","2:2760:1620"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:17":{"id":"0:17","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[100,0],"end":[104,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:18:715"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:81":{"id":"0:81","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,23],"end":[90,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2511:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2446-0:118:1834":{"id":"b:2:2446-0:118:1834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32778:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2440:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2448:25304"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2968:243-0:48:1814":{"id":"a:2:2968:243-0:48:1814","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2968:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1814","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12876:27435":{"id":"2:12876:27435","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12085:1642"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5828-0:74:1827":{"id":"b:5:5828-0:74:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32778:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5826:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5830:1595"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12960:33459":{"id":"2:12960:33459","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:90":{"id":"0:90","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,55],"end":[90,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10211:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:91:779"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:41:715":{"id":"0:41:715","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[364,4],"end":[381,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9951:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5556:13855":{"id":"5:5556:13855","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7571:240"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7571:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:2279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2746-0:118:1834":{"id":"b:2:2746-0:118:1834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2723:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2720:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2749:1877"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:67":{"id":"0:67","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,42],"end":[71,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"name":"PartialOrd","id":"2:2548:199","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1814","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:68:1136"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:36":{"id":"0:36","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[301,0],"end":[324,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:37:715"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2756-0:48:1814":{"id":"b:2:2756-0:48:1814","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2730:253","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2726:254","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1814","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2759:135","2:2760:1620"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2750-0:74:1827":{"id":"b:2:2750-0:74:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2723:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2752:742"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:161":{"id":"0:161","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2723:142","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:162:742"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12938:27472":{"id":"2:12938:27472","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42288:191","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:2279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12990:26544":{"id":"2:12990:26544","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12987:26539":{"id":"2:12987:26539","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:687-0:93:1850":{"id":"b:5:687-0:93:1850","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2459:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:2708","5:690:1907","5:691:2709"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:86":{"id":"0:86","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,38],"end":[90,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2542:192","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:87:458"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:37:715":{"id":"0:37:715","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[302,4],"end":[323,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9951:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12893:6747":{"id":"2:12893:6747","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12068:447"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:44151:2295","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42412:8380-0:93:1850":{"id":"a:2:42412:8380-0:93:1850","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42412:8380","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:119:1920":{"id":"0:119:1920","crate_id":0,"name":"ParseIntError","span":{"filename":"src/lib.rs","begin":[282,4],"end":[282,37]},"visibility":"default","docs":"An error occurred in parsing a version component as an integer","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:121:1753"]},"discriminant":null}}},"0:39:1933":{"id":"0:39:1933","crate_id":0,"name":"source","span":{"filename":"src/lib.rs","begin":[327,4],"end":[336,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42288:191","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"dyn_trait":{"traits":[{"trait":{"name":"error::Error","id":"2:2808:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12898:33451":{"id":"2:12898:33451","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:44439:2304","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12868:33446":{"id":"2:12868:33446","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3562:1633":{"id":"2:3562:1633","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:40075:5949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12929:33453":{"id":"2:12929:33453","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12558:2286","str::split":"2:12917:1837","prim@char":"1:12068:447","str::split_terminator":"2:12926:33452"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:44243:2313","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:2279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12563:2279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12578:2280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12997:8372":{"id":"2:12997:8372","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4741:8372"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:44483:2301","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:143:1753":{"id":"0:143:1753","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[352,14],"end":[352,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"str::Utf8Error","id":"2:44121:1940","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:65":{"id":"0:65","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,37],"end":[71,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2542:192","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1814","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:66:458"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:80:715":{"id":"0:80:715","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[90,16],"end":[90,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9951:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:34":{"id":"0:34","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[295,0],"end":[299,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2723:142","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ParseIntError","id":"2:22853:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:35:742"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42413:8505-0:74:1827":{"id":"a:2:42413:8505-0:74:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42413:8505","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2968:243-0:134:135":{"id":"a:2:2968:243-0:134:135","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2968:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12900:27474":{"id":"2:12900:27474","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12068:447","self::pattern":"2:12558:2286"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:2279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32834:2333-0:118:1834":{"id":"a:2:32834:2333-0:118:1834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32834:2333","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5571:34159":{"id":"5:5571:34159","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:281:2283","`String`":"5:7571:240"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:281:2283","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7571:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:128:1846":{"id":"0:128:1846","crate_id":0,"name":"MinorVersionRequiredBefore4","span":{"filename":"src/lib.rs","begin":[290,4],"end":[290,31]},"visibility":"default","docs":"Minor version component is required on LLVM versions earlier than 4.0","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12953:33456":{"id":"2:12953:33456","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12558:2286","`DoubleEndedIterator`":"2:7942:128","prim@char":"1:12068:447","str::match_indices":"2:12950:33455"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:44343:2306","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:2279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12563:2279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12578:2280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12963:33461":{"id":"2:12963:33461","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:84":{"id":"0:84","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,27],"end":[90,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2506:198","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:85:658"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:113":{"id":"0:113","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,43],"end":[147,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","le","lt","ge"],"trait":{"name":"PartialOrd","id":"2:2548:199","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:114:1136"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2445:2170":{"id":"2:2445:2170","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:93:1850":{"id":"0:93:1850","crate_id":0,"name":"VersionMeta","span":{"filename":"src/lib.rs","begin":[148,0],"end":[172,1]},"visibility":"public","docs":"Rustc version plus metadata like git short hash and build date.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:94:1811","0:95:1853","0:96:1855","0:97:1857","0:98:1859","0:99:783","0:100:1862","0:101:1864"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:23","a:2:32777:234-0:93:1850","a:2:2968:243-0:93:1850","a:2:32834:2333-0:93:1850","a:2:42413:8505-0:93:1850","a:2:42412:8380-0:93:1850","b:2:2746-0:93:1850","b:2:2756-0:93:1850","b:2:2750-0:93:1850","b:2:2761-0:93:1850","b:2:2443-0:93:1850","b:2:3560-0:93:1850","b:2:2446-0:93:1850","b:5:687-0:93:1850","0:113","0:108","0:106","0:102","0:111","0:115","0:109","0:104"]}}},"2:12923:27467":{"id":"2:12923:27467","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12558:2286","`DoubleEndedIterator`":"2:7942:128","prim@char":"1:12068:447","str::split":"2:12917:1837"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:44193:2309","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:2279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12563:2279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12578:2280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:23":{"id":"0:23","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[174,0],"end":[191,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:24:1866"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:154:1753":{"id":"0:154:1753","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[360,21],"end":[360,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:48:1814":{"id":"0:48:1814","crate_id":0,"name":"Channel","span":{"filename":"src/lib.rs","begin":[72,0],"end":[81,1]},"visibility":"public","docs":"Release channel of the compiler.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:49:1816","0:51:1818","0:53:1820","0:55:1822"],"impls":["a:2:32777:234-0:48:1814","a:2:2968:243-0:48:1814","a:2:32834:2333-0:48:1814","a:2:42413:8505-0:48:1814","a:2:42412:8380-0:48:1814","b:2:2746-0:48:1814","b:2:2756-0:48:1814","b:2:2750-0:48:1814","b:2:2761-0:48:1814","b:2:2443-0:48:1814","b:2:3560-0:48:1814","b:2:2446-0:48:1814","b:5:687-0:48:1814","0:60","0:57","0:65","0:62","0:72","0:69","0:63","0:58","0:67"]}}},"2:12906:27005":{"id":"2:12906:27005","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12068:447","self::pattern":"2:12558:2286"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:2279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12563:2279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12578:2280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12887:27458":{"id":"2:12887:27458","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_checked`](str::split_at_checked).\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_checked":"2:12889:27462","str::split_at_mut":"2:12888:27459"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2759:135":{"id":"2:2759:135","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2730:253","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"b:2:2443-0:93:1850":{"id":"b:2:2443-0:93:1850","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32778:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2437:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2445:2170"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:114:1136":{"id":"0:114:1136","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[147,43],"end":[147,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"VersionMeta","id":"0:93:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:42288:191","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31526:193","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12873:25519":{"id":"2:12873:25519","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12106:1880"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:106":{"id":"0:106","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,23],"end":[147,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2511:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12874:33448":{"id":"2:12874:33448","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:99:783":{"id":"0:99:783","crate_id":0,"name":"host","span":{"filename":"src/lib.rs","begin":[165,4],"end":[165,20]},"visibility":"public","docs":"Host target triple of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7571:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:116:779":{"id":"0:116:779","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[147,55],"end":[147,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10219:154","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2756-0:118:1834":{"id":"b:2:2756-0:118:1834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2730:253","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2726:254","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2759:135","2:2760:1620"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:152:1946":{"id":"0:152:1946","crate_id":0,"name":"LlvmVersionError","span":{"filename":"src/lib.rs","begin":[360,4],"end":[360,43]},"visibility":"default","docs":"An error occurred in parsing a `LlvmVersion`.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:154:1753"]},"discriminant":null}}},"a:2:42412:8380-0:134:135":{"id":"a:2:42412:8380-0:134:135","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42412:8380","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:12962:33460":{"id":"2:12962:33460","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:83":{"id":"0:83","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,27],"end":[90,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32779:241","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:140:1878":{"id":"0:140:1878","crate_id":0,"name":"stderr","span":{"filename":"src/lib.rs","begin":[349,8],"end":[349,22]},"visibility":"default","docs":"stderr output from the command","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7571:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:104":{"id":"0:104","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,16],"end":[147,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:105:715"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2750-0:48:1814":{"id":"b:2:2750-0:48:1814","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2723:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1814","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2752:742"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:137:1753":{"id":"0:137:1753","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[343,27],"end":[343,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"io::Error","id":"1:3017:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:158:742":{"id":"0:158:742","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["e",{"resolved_path":{"name":"str::Utf8Error","id":"2:44121:1940","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Error","id":"0:134:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:28:1879":{"id":"0:28:1879","crate_id":0,"name":"version_meta_for","span":{"filename":"src/lib.rs","begin":[209,0],"end":[262,1]},"visibility":"public","docs":"Parses a \"rustc -vV\" output string and returns\nthe SemVer version and additional metadata\nlike the git short hash and build date.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["verbose_version_string",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"0:45:223","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"VersionMeta","id":"0:93:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:38":{"id":"0:38","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[326,0],"end":[337,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["provide","source","cause","description","type_id"],"trait":{"name":"Error","id":"2:2808:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:39:1933"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5555:34155":{"id":"5:5555:34155","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:281:2283","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:281:2283","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:79":{"id":"0:79","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,16],"end":[90,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:80:715"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12899:31302":{"id":"2:12899:31302","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:44467:2287","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12988:27353":{"id":"2:12988:27353","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:40261:27349","Self::is_ascii":"2:12987:26539"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42288:191","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:40261:27349","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32777:234-0:74:1827":{"id":"a:2:32777:234-0:74:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32777:234","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:68:1136":{"id":"0:68:1136","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[71,42],"end":[71,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Channel","id":"0:48:1814","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:42288:191","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31526:193","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2756-0:134:135":{"id":"b:2:2756-0:134:135","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2730:253","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2726:254","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2759:135","2:2760:1620"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2968:243-0:93:1850":{"id":"a:2:2968:243-0:93:1850","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2968:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:124:1844":{"id":"0:124:1844","crate_id":0,"name":"ComponentMustNotHaveSign","span":{"filename":"src/lib.rs","begin":[286,4],"end":[286,28]},"visibility":"default","docs":"A version component has a sign","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:141:1940":{"id":"0:141:1940","crate_id":0,"name":"Utf8Error","span":{"filename":"src/lib.rs","begin":[352,4],"end":[352,29]},"visibility":"default","docs":"The output of `rustc -vV` was not valid utf-8.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:143:1753"]},"discriminant":null}}},"b:2:2746-0:93:1850":{"id":"b:2:2746-0:93:1850","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2723:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2720:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2749:1877"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2448:25304":{"id":"2:2448:25304","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2761-0:134:135":{"id":"b:2:2761-0:134:135","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2720:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2730:253","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2764:135","2:2765:1618"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12913:2649":{"id":"2:12913:2649","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:42290:188","prim@char":"1:12068:447","self::pattern":"2:12558:2286"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42288:191","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:2279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12563:2279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12578:2280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:102":{"id":"0:102","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,9],"end":[147,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2459:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:103:451"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:60":{"id":"0:60","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,22],"end":[71,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2511:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1814","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:18:715":{"id":"0:18:715","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[101,4],"end":[103,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9951:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:687-0:48:1814":{"id":"b:5:687-0:48:1814","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2459:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1814","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:2708","5:690:1907","5:691:2709"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2446-0:74:1827":{"id":"b:2:2446-0:74:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32778:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2440:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2448:25304"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2746-0:74:1827":{"id":"b:2:2746-0:74:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2723:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2720:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2749:1877"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12895:31347":{"id":"2:12895:31347","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12896:31344"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:44449:2290","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12998:33468":{"id":"2:12998:33468","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4738:33468"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:44492:2302","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:109":{"id":"0:109","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,27],"end":[147,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2506:198","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:110:658"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:162:742":{"id":"0:162:742","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["e",{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Error","id":"0:134:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2746-0:134:135":{"id":"b:2:2746-0:134:135","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2723:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2720:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2749:1877"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:159":{"id":"0:159","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2723:142","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Error","id":"20:220:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:160:742"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12864":{"id":"2:12864","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12865:872","2:12866:2650","2:12867:33445","2:12868:33446","2:12870:33447","2:12873:25519","2:12874:33448","2:12875:329","2:12876:27435","2:12877:1911","2:12879:27432","2:12881:27433","2:12883:27434","2:12885:33449","2:12886:33450","2:12887:27458","2:12888:27459","2:12889:27462","2:12890:27463","2:12892:6737","2:12893:6747","2:12894:6630","2:12895:31347","2:12896:31344","2:12897:1891","2:12898:33451","2:12899:31302","2:12900:27474","2:12903:1840","2:12906:27005","2:12909:2688","2:12913:2649","2:12917:1837","2:12920:27465","2:12923:27467","2:12926:33452","2:12929:33453","2:12932:1895","2:12935:27470","2:12938:27472","2:12941:27473","2:12944:2185","2:12947:33454","2:12950:33455","2:12953:33456","2:12956:33457","2:12958:33458","2:12960:33459","2:12962:33460","2:12963:33461","2:12964:33462","2:12967:33463","2:12970:25552","2:12973:27475","2:12976:33464","2:12979:33465","2:12982:33466","2:12985:1845","2:12987:26539","2:12988:27353","2:12989:26543","2:12990:26544","2:12991:26545","2:12992:27356","2:12993:27357","2:12994:27358","2:12995:33467","2:12997:8372","2:12998:33468"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:77":{"id":"0:77","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,9],"end":[90,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2459:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:78:451"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:100:1862":{"id":"0:100:1862","crate_id":0,"name":"short_version_string","span":{"filename":"src/lib.rs","begin":[168,4],"end":[168,36]},"visibility":"public","docs":"Short version string of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7571:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:12920:27465":{"id":"2:12920:27465","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12068:447","self::pattern":"2:12558:2286"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:12374:2289","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:2279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42413:8505-0:93:1850":{"id":"a:2:42413:8505-0:93:1850","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42413:8505","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:122:1841":{"id":"0:122:1841","crate_id":0,"name":"ComponentMustNotHaveLeadingZeros","span":{"filename":"src/lib.rs","begin":[284,4],"end":[284,36]},"visibility":"default","docs":"A version component must not have leading zeros","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:132":{"id":"0:132","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[279,9],"end":[279,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:133:715"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3560-0:134:135":{"id":"b:2:3560-0:134:135","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32778:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3558:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3562:1633"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:51:1818":{"id":"0:51:1818","crate_id":0,"name":"Nightly","span":{"filename":"src/lib.rs","begin":[76,4],"end":[76,11]},"visibility":"default","docs":"Nightly release channel","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12888:27459":{"id":"2:12888:27459","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_mut_checked`](str::split_at_mut_checked).\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12887:27458","str::split_at_mut_checked":"2:12890:27463"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12970:25552":{"id":"2:12970:25552","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12068:447","self::pattern":"2:12558:2286"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42288:191","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:2279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12877:1911":{"id":"2:12877:1911","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:42290:188"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42288:191","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10651:236","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10651:236","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32777:234-0:118:1834":{"id":"a:2:32777:234-0:118:1834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32777:234","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12992:27356":{"id":"2:12992:27356","crate_id":2,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:912:35221"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:25:1710":{"id":"0:25:1710","crate_id":0,"name":"version","span":{"filename":"src/lib.rs","begin":[194,0],"end":[196,1]},"visibility":"public","docs":"Returns the `rustc` SemVer version.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Result","id":"0:45:223","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Version","id":"20:300:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12956:33457":{"id":"2:12956:33457","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:146:1943":{"id":"0:146:1943","crate_id":0,"name":"SemVerError","span":{"filename":"src/lib.rs","begin":[356,4],"end":[356,30]},"visibility":"default","docs":"An error occurred in parsing the semver.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:148:1753"]},"discriminant":null}}},"b:2:3560-0:48:1814":{"id":"b:2:3560-0:48:1814","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32778:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3558:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1814","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3562:1633"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:45:223":{"id":"0:45:223","crate_id":0,"name":"Result","span":{"filename":"src/lib.rs","begin":[417,0],"end":[417,58]},"visibility":"public","docs":"The result type for this crate.","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"std::result::Result","id":"2:42431:223","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"E"}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:134:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]}}}},"a:2:32777:234-0:134:135":{"id":"a:2:32777:234-0:134:135","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32777:234","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:43:1933":{"id":"0:43:1933","crate_id":0,"name":"source","span":{"filename":"src/lib.rs","begin":[385,4],"end":[395,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42288:191","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"dyn_trait":{"traits":[{"trait":{"name":"error::Error","id":"2:2808:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:87:458":{"id":"0:87:458","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[90,38],"end":[90,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31526:193","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:74:1827":{"id":"0:74:1827","crate_id":0,"name":"LlvmVersion","span":{"filename":"src/lib.rs","begin":[91,0],"end":[98,1]},"visibility":"public","docs":"LLVM version\n\nLLVM's version numbering scheme is not semver compatible until version 4.0\n\nrustc [just prints the major and minor versions], so other parts of the version are not included.\n\n[just prints the major and minor versions]: https://github.com/rust-lang/rust/blob/b5c9e2448c9ace53ad5c11585803894651b18b0a/compiler/rustc_codegen_llvm/src/llvm_util.rs#L173-L178","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:75:1829","0:76:1831"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:32777:234-0:74:1827","a:2:2968:243-0:74:1827","a:2:32834:2333-0:74:1827","a:2:42413:8505-0:74:1827","a:2:42412:8380-0:74:1827","b:2:2746-0:74:1827","b:2:2756-0:74:1827","b:2:2750-0:74:1827","b:2:2761-0:74:1827","b:2:2443-0:74:1827","b:2:3560-0:74:1827","b:2:2446-0:74:1827","b:5:687-0:74:1827","b:5:5828-0:74:1827","0:83","0:77","0:88","0:79","0:90","0:84","0:17","0:19","0:86","0:81"]}}},"a:2:2968:243-0:118:1834":{"id":"a:2:2968:243-0:118:1834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2968:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:97:1857":{"id":"0:97:1857","crate_id":0,"name":"build_date","span":{"filename":"src/lib.rs","begin":[159,4],"end":[159,34]},"visibility":"public","docs":"Build date of the compiler; this was removed between Rust 1.0.0 and 1.1.0.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:42288:191","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"5:7571:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:160:742":{"id":"0:160:742","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["e",{"resolved_path":{"name":"semver::Error","id":"20:220:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Error","id":"0:134:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:110:658":{"id":"0:110:658","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[147,27],"end":[147,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"VersionMeta","id":"0:93:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:134:135":{"id":"0:134:135","crate_id":0,"name":"Error","span":{"filename":"src/lib.rs","begin":[341,0],"end":[361,1]},"visibility":"public","docs":"The error type for this crate.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:135:1871","0:138:1874","0:141:1940","0:144:1916","0:146:1943","0:149:1906","0:152:1946"],"impls":["a:2:32777:234-0:134:135","a:2:2968:243-0:134:135","a:2:32834:2333-0:134:135","a:2:42413:8505-0:134:135","a:2:42412:8380-0:134:135","b:2:2746-0:134:135","b:2:2756-0:134:135","b:2:2750-0:134:135","b:2:2761-0:134:135","b:2:2443-0:134:135","b:2:3560-0:134:135","b:2:2446-0:134:135","b:5:5828-0:134:135","0:40","0:155","0:157","0:159","0:161","0:42"]}}},"b:2:2761-0:93:1850":{"id":"b:2:2761-0:93:1850","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2720:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2730:253","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2764:135","2:2765:1618"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12935:27470":{"id":"2:12935:27470","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12068:447","str::splitn":"2:12932:1895","self::pattern":"2:12558:2286"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:44297:2311","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:2279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12563:2279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12578:2280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:66:458":{"id":"0:66:458","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[71,37],"end":[71,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Channel","id":"0:48:1814","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31526:193","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12958:33458":{"id":"2:12958:33458","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:687-0:74:1827":{"id":"b:5:687-0:74:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2459:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:2708","5:690:1907","5:691:2709"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2750-0:118:1834":{"id":"b:2:2750-0:118:1834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2723:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2752:742"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:89:1136":{"id":"0:89:1136","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[90,43],"end":[90,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:42288:191","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31526:193","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:139:1875":{"id":"0:139:1875","crate_id":0,"name":"stdout","span":{"filename":"src/lib.rs","begin":[347,8],"end":[347,22]},"visibility":"default","docs":"stdout output from the command","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7571:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:2750-0:134:135":{"id":"b:2:2750-0:134:135","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2723:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2752:742"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2446-0:48:1814":{"id":"b:2:2446-0:48:1814","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32778:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2440:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1814","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2448:25304"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12976:33464":{"id":"2:12976:33464","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12068:447","self::pattern":"2:12558:2286"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:2279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12563:2279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12578:2280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5559:34156":{"id":"5:5559:34156","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7571:240"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7571:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:2279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32834:2333-0:93:1850":{"id":"a:2:32834:2333-0:93:1850","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32834:2333","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:130:1848":{"id":"0:130:1848","crate_id":0,"name":"TooManyComponents","span":{"filename":"src/lib.rs","begin":[292,4],"end":[292,21]},"visibility":"default","docs":"Too many components","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:19":{"id":"0:19","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[106,0],"end":[144,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12518:1810","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:20:134","0:21:1835"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:94:1811":{"id":"0:94:1811","crate_id":0,"name":"semver","span":{"filename":"src/lib.rs","begin":[150,4],"end":[150,23]},"visibility":"public","docs":"Version of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Version","id":"20:300:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:2752:742":{"id":"2:2752:742","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5828-0:134:135":{"id":"b:5:5828-0:134:135","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10000:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32778:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5826:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5830:1595"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12875:329":{"id":"2:12875:329","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12876:27435","`u8`":"1:12085:1642"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12885:33449":{"id":"2:12885:33449","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12074:1538","str::slice_mut_unchecked":"2:12886:33450","crate::ops::Index":"2:39907:8398"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32834:2333-0:74:1827":{"id":"a:2:32834:2333-0:74:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32834:2333","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2968:243-0:74:1827":{"id":"a:2:2968:243-0:74:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2968:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:691:2709":{"id":"5:691:2709","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12941:27473":{"id":"2:12941:27473","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42288:191","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:2279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12563:2279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12578:2280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42412:8380-0:48:1814":{"id":"a:2:42412:8380-0:48:1814","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42412:8380","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1814","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5572:2861":{"id":"5:5572:2861","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7571:240"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7571:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:62":{"id":"0:62","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,26],"end":[71,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32779:241","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1814","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:689:2708":{"id":"5:689:2708","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:69":{"id":"0:69","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,54],"end":[71,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10211:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1814","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:70:779"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:126:1924":{"id":"0:126:1924","crate_id":0,"name":"MinorVersionMustBeZeroAfter4","span":{"filename":"src/lib.rs","begin":[288,4],"end":[288,32]},"visibility":"default","docs":"Minor version component must be zero on LLVM versions later than 4.0","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12982:33466":{"id":"2:12982:33466","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12068:447","self::pattern":"2:12558:2286"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:2279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12563:2279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12578:2280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32834:2333-0:134:135":{"id":"a:2:32834:2333-0:134:135","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32834:2333","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:72":{"id":"0:72","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,60],"end":[71,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9995:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1814","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:73:715"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:59:451":{"id":"0:59:451","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[71,15],"end":[71,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Channel","id":"0:48:1814","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:118:1834":{"id":"0:118:1834","crate_id":0,"name":"LlvmVersionParseError","span":{"filename":"src/lib.rs","begin":[280,0],"end":[293,1]},"visibility":"public","docs":"LLVM Version Parse Error","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:119:1920","0:122:1841","0:124:1844","0:126:1924","0:128:1846","0:130:1848"],"impls":["a:2:32777:234-0:118:1834","a:2:2968:243-0:118:1834","a:2:32834:2333-0:118:1834","a:2:42413:8505-0:118:1834","a:2:42412:8380-0:118:1834","b:2:2746-0:118:1834","b:2:2756-0:118:1834","b:2:2750-0:118:1834","b:2:2761-0:118:1834","b:2:2443-0:118:1834","b:2:3560-0:118:1834","b:2:2446-0:118:1834","b:5:5828-0:118:1834","0:38","0:132","0:161","0:36","0:34"]}}},"2:12879:27432":{"id":"2:12879:27432","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:42290:188"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42288:191","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10651:236","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10651:236","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42412:8380-0:74:1827":{"id":"a:2:42412:8380-0:74:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42412:8380","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:148:1753":{"id":"0:148:1753","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[356,16],"end":[356,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"semver::Error","id":"20:220:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:2443-0:118:1834":{"id":"b:2:2443-0:118:1834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32778:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2437:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2445:2170"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12993:27357":{"id":"2:12993:27357","crate_id":2,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:912:35221"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32834:2333-0:48:1814":{"id":"a:2:32834:2333-0:48:1814","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32834:2333","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1814","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32777:234-0:48:1814":{"id":"a:2:32777:234-0:48:1814","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32777:234","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1814","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:73:715":{"id":"0:73:715","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[71,60],"end":[71,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9951:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:58":{"id":"0:58","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,15],"end":[71,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2459:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1814","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:59:451"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:78:451":{"id":"0:78:451","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[90,9],"end":[90,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2446-0:134:135":{"id":"b:2:2446-0:134:135","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32778:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2440:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2448:25304"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12865:872":{"id":"2:12865:872","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12068:447"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12944:2185":{"id":"2:12944:2185","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12558:2286","`DoubleEndedIterator`":"2:7942:128","prim@char":"1:12068:447","str::rmatches":"2:12947:33454"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:44379:2307","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:2279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12926:33452":{"id":"2:12926:33452","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12558:2286","str::split":"2:12917:1837","prim@char":"1:12068:447","`DoubleEndedIterator`":"2:7942:128","str::rsplit_terminator":"2:12929:33453"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:44225:2314","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:2279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5562:34157":{"id":"5:5562:34157","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7571:240"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7571:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:21:1835":{"id":"0:21:1835","crate_id":0,"name":"from_str","span":{"filename":"src/lib.rs","begin":[109,4],"end":[143,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"0:45:223","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:12518:1810","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2749:1877":{"id":"2:2749:1877","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2723:142"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12995:33467":{"id":"2:12995:33467","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4740:33467"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:44474:2300","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12917:1837":{"id":"2:12917:1837","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12558:2286","`DoubleEndedIterator`":"2:7942:128","prim@char":"1:12068:447","str::split_whitespace":"2:12895:31347","str::rsplit":"2:12923:27467"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:44175:2310","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:2279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:20:134":{"id":"0:20:134","crate_id":0,"name":"Err","span":{"filename":"src/lib.rs","begin":[107,4],"end":[107,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:115":{"id":"0:115","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,55],"end":[147,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10211:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:116:779"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:35:742":{"id":"0:35:742","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[296,4],"end":[298,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["e",{"resolved_path":{"name":"num::ParseIntError","id":"2:22853:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12964:33462":{"id":"2:12964:33462","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12068:447","self::pattern":"2:12558:2286"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:2279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12563:2279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12583:2278","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12991:26545":{"id":"2:12991:26545","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12979:33465":{"id":"2:12979:33465","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12068:447","self::pattern":"2:12558:2286"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:2279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12989:26543":{"id":"2:12989:26543","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5570:34158":{"id":"5:5570:34158","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7571:240"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7571:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12994:27358":{"id":"2:12994:27358","crate_id":2,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:912:35221"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2443-0:134:135":{"id":"b:2:2443-0:134:135","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32778:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2437:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2445:2170"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:105:715":{"id":"0:105:715","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[147,16],"end":[147,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9970:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9951:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:144:1916":{"id":"0:144:1916","crate_id":0,"name":"UnexpectedVersionFormat","span":{"filename":"src/lib.rs","begin":[354,4],"end":[354,27]},"visibility":"default","docs":"The output of `rustc -vV` was not in the expected format.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:42412:8380-0:118:1834":{"id":"a:2:42412:8380-0:118:1834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42412:8380","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:118:1834","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5573:26541":{"id":"5:5573:26541","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12990:26544"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7571:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:121:1753":{"id":"0:121:1753","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[282,18],"end":[282,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"num::ParseIntError","id":"2:22853:1920","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"5:690:1907":{"id":"5:690:1907","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12973:27475":{"id":"2:12973:27475","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12068:447","self::pattern":"2:12558:2286"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42288:191","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:2279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12563:2279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12578:2280","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:76:1831":{"id":"0:76:1831","crate_id":0,"name":"minor","span":{"filename":"src/lib.rs","begin":[96,4],"end":[96,18]},"visibility":"public","docs":"Minor version","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u64"}}},"a:2:42413:8505-0:134:135":{"id":"a:2:42413:8505-0:134:135","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42413:8505","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:134:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:12886:33450":{"id":"2:12886:33450","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12074:1538","crate::ops::IndexMut":"2:3222:8399","str::slice_unchecked":"2:12885:33449"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12866:2650":{"id":"2:12866:2650","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12903:1840":{"id":"2:12903:1840","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:12068:447","self::pattern":"2:12558:2286"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:2279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:0:1959":{"id":"0:0:1959","crate_id":0,"name":"rustc_version","span":{"filename":"src/lib.rs","begin":[9,0],"end":[417,58]},"visibility":"public","docs":"Simple library for getting the version information of a `rustc`\ncompiler.\n\nThis can be used by build scripts or other tools dealing with Rust sources\nto make decisions based on the version of the compiler.\n\nIt calls `$RUSTC --version -v` and parses the output, falling\nback to `rustc` if `$RUSTC` is not set.\n\n# Example\n\n```rust\n// This could be a cargo build script\n\nuse rustc_version::{version, version_meta, Channel, Version};\n\n// Assert we haven't travelled back in time\nassert!(version().unwrap().major >= 1);\n\n// Set cfg flags depending on release channel\nmatch version_meta().unwrap().channel {\n    Channel::Stable => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_STABLE\");\n    }\n    Channel::Beta => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_BETA\");\n    }\n    Channel::Nightly => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_NIGHTLY\");\n    }\n    Channel::Dev => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_DEV\");\n    }\n}\n\n// Check for a minimum version\nif version().unwrap() >= Version::parse(\"1.4.0\").unwrap() {\n    println!(\"cargo:rustc-cfg=compiler_has_important_bugfix\");\n}\n```","links":{},"attrs":["#![warn(missing_docs)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:15-20:300:1812","0:48:1814","0:74:1827","0:93:1850","0:25:1710","0:26:1882","0:28:1879","0:118:1834","0:134:135","0:45:223"],"is_stripped":false}}},"b:2:2761-0:74:1827":{"id":"b:2:2761-0:74:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2720:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2730:253","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2764:135","2:2765:1618"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5830:1595":{"id":"5:5830:1595","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7571:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12894:6630":{"id":"2:12894:6630","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:44161:2294","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12896:31344":{"id":"2:12896:31344","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12895:31347"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:44458:2288","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12985:1845":{"id":"2:12985:1845","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12519:134","`FromStr`":"2:12518:1810"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42431:223","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12518:1810","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12518:1810","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2760:1620":{"id":"2:2760:1620","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:42431:223","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2730:253","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5554":{"id":"5:5554","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5555:34155","5:5556:13855","5:5559:34156","5:5562:34157","5:5570:34158","5:5571:34159","5:5572:2861","5:5573:26541","5:5574:26542"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:15-20:300:1812":{"id":"0:15-20:300:1812","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[66,0],"end":[66,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"semver::Version","name":"Version","id":"20:300:1812","glob":false}}},"b:2:2443-0:74:1827":{"id":"b:2:2443-0:74:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32778:2332","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2437:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:74:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2445:2170"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:111":{"id":"0:111","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,38],"end":[147,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2542:192","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:93:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:112:458"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12897:1891":{"id":"2:12897:1891","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:44429:2303","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2765:1618":{"id":"2:2765:1618","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:42431:223","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2730:253","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5574:26542":{"id":"5:5574:26542","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12991:26545"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7571:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12867:33445":{"id":"2:12867:33445","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12909:2688":{"id":"2:12909:2688","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:42290:188","prim@char":"1:12068:447","self::pattern":"2:12558:2286"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42288:191","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12563:2279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"17:13797:3692":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"2:4219:13701":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"6:1546:4932":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"1:6243:3131":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"5:4107:2605":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"5:7038:3083":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"1:8611:2604":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"9:501:4816":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"2:32834:2333":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"2:48451:6237":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"6:6691:5668":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:9066:7538":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"2:728:187":{"crate_id":2,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"1:10258:25912":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"0:135:1871":{"crate_id":0,"path":["rustc_version","Error","CouldNotExecuteCommand"],"kind":"variant"},"17:9984:20739":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"5:7477:2218":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"6:7610:5813":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"2:11121:7461":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"2:43567:6727":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"17:11102:7273":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"17:14414:3801":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"7:78:19648":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"17:11354:7283":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"1:7946:6781":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"2:22001:5853":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:42250:6096":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"2:22433:8424":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"2:46541:6153":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:3399:2844":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"17:10018:20720":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"1:11348:6799":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"17:15333:4075":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"2:39863:13704":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"16:6445:6537":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"17:16198:4316":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"11:351:34383":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"1:2657:2848":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"16:7565:4561":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"2:12558:2286":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"2:10012:2623":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"17:12485:20866":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"17:15456:4106":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"1:10087:7545":{"crate_id":1,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"2:46363:6141":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:44325:2305":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:8993:8537":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"5:7508:2256":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"17:16165:4309":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"16:6692:4478":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"1:7924:7515":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"2:42754:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:4123:8443":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:45159:178":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"17:14788:3890":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"6:1703:5035":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"16:7194:34405":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"1:10066:2764":{"crate_id":1,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"17:14599:3837":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"17:11634:6412":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"9:329:4793":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"17:12107:3426":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"1:9193:6789":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"6:5009:5361":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:42354:2605":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:43352:2630":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"6:6682:5662":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"17:14994:3995":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"18:726:3285":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"2:1925:5848":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"2:10651:236":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"17:14977:3993":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"2:22477:8651":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"17:12362:6434":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"2:10002:2619":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"1:3015:223":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"16:6610:6543":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"10:44:4754":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"9:446:19655":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"2:2714:78":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"17:14933:3988":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"6:1591:4963":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"16:6849:7383":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"2:40068:7470":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"2:10965:7458":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:8010:2851":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"2:10448:3105":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"2:44891:6764":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"2:2723:142":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"17:10954:20751":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"1:9210:7542":{"crate_id":1,"path":["std","sys","pal","common","thread_local","fast_local","Key"],"kind":"struct"},"17:12695:7339":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"17:14271:3779":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"2:40862:2257":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"6:1718:5042":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"1:12051:25537":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"17:14575:3485":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"6:6136:5593":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"2:41059:6695":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"6:580:4895":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"17:11493:7286":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"17:11877:3436":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"1:1975:702":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"5:903:2604":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"1:6378:217":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"18:548:150":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"17:11313:6408":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"5:2063:7433":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"2:5966:6635":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"16:2509:4349":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"11:2326:7418":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"16:6908:6572":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"16:4844:4416":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"1:8382:6293":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"6:1734:5046":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"17:11825:7309":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"2:41494:6711":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"16:7971:7402":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"17:13581:3641":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"2:4987:31961":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:3317:2859":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"16:7523:4384":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:21695:5852":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"16:7706:20680":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"2:43512:2616":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"6:7365:5796":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"17:12076:7317":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"1:4061:8438":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"9:391:19656":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"17:12597:3495":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"6:1604:4970":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"17:14311:3783":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"17:16105:4293":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"15:306:19762":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"15:394:19772":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"11:1582:7424":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"17:14386:3795":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"17:261:7245":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"1:10455:2858":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"2:22348:13885":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"11:837:7411":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"17:14325:3786":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"11:2403:2605":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"16:6546:6541":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"1:6227:3115":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"2:40075:5949":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"17:11089:7272":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"16:5568:6455":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"17:13485:3612":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"5:2074:7434":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"2:21324:31627":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"2:43767:6728":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"6:4755:5227":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"2:42496:193":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"16:2529:4350":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"16:2573:4352":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:11093:2311":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"17:15151:4029":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"2:5025:2866":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"5:5896:3049":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"16:6929:6573":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"16:6268:4368":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"5:4881:214":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"17:16259:3593":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"2:41516:2864":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"17:11812:7307":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"1:4232:8460":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"0:25:1710":{"crate_id":0,"path":["rustc_version","version"],"kind":"function"},"17:11026:20753":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"13:0:2073":{"crate_id":13,"path":["std_detect"],"kind":"module"},"17:13844:3698":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"1:12079:691":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"1:9099:25538":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"5:886:3040":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"17:15273:4059":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"0:74:1827":{"crate_id":0,"path":["rustc_version","LlvmVersion"],"kind":"struct"},"17:12707:7340":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"6:4884:5289":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"6:4998:5356":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"1:10350:2228":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"2:4238:13766":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"17:15301:4067":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"17:13723:3674":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"16:6579:20674":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"6:6889:5761":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"6:1913:15610":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"2:4378:2631":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"2:9150:2279":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"2:3172:2610":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"17:11524:7289":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"5:1496:7423":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"6:1664:5018":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"17:15206:4043":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"1:12075:1623":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"1:2440:8416":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"2:33254:4505":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"1:4879:3124":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"17:15039:4004":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"17:13568:3637":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"6:4628:5210":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"2:48425:6235":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:31526:193":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"1:7835:2775":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"15:327:19766":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"2:47089:6182":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"16:6737:4484":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"2:40088:5951":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:2677:8424":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"16:5601:20668":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"17:13473:3609":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"6:7633:5819":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:4095:2822":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"18:507:3261":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"3:0:474":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:43250:6104":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"11:2140:7418":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"1:12086:1639":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"18:0:2084":{"crate_id":18,"path":["memchr"],"kind":"module"},"6:4556:5171":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"17:11647:6413":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"16:6045:203":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"2:44923:6122":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"2:31553:2482":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"6:7343:5795":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"5:7383:207":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"17:15126:4020":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"17:15822:4221":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"17:15092:4017":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"1:4987:8490":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"2:43971:6647":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"17:14855:3945":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:46418:6144":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"2:10463:3110":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"16:6215:7381":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"17:13146:3539":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"0:144:1916":{"crate_id":0,"path":["rustc_version","Error","UnexpectedVersionFormat"],"kind":"variant"},"2:40902:2272":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"17:15222:4047":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"2:7449:13837":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"5:6893:3077":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"5:1790:3067":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"17:14475:3815":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"6:5928:5487":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"2:48245:6227":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"5:5669:3065":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"17:9737:20718":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"6:4676:5213":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"17:16050:3576":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"2:40874:2259":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"16:7998:4387":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"6:5992:5521":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"1:7919:3338":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"2:44555:13734":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:1862:2764":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"5:4381:260":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"20:0:1811":{"crate_id":20,"path":["semver"],"kind":"module"},"1:9032:114":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"17:12388:6435":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"17:15434:4101":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"17:13526:3622":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"16:2729:4359":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"16:8012:6593":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"17:11293:20771":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"2:3187:138":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"16:6811:20675":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"17:11865:7313":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"2:39978:212":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:8307:7527":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"1:4720:5693":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"16:5919:20671":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"5:40:3028":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"18:765:24927":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"16:8109:135":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"1:1939:2809":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"5:7319:6624":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"2:40999:6686":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"0:49:1816":{"crate_id":0,"path":["rustc_version","Channel","Dev"],"kind":"variant"},"18:613:34424":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"1:8867:196":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"6:7679:5828":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"2:46066:6129":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"2:3141:13703":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"5:4396:3056":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"6:5859:5455":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"1:849:2605":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"16:2709:4358":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"6:6819:5710":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"2:2963:116":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"17:15760:4208":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:13214:202":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"17:14587:3830":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"16:3406:4392":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"2:32779:241":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"2:48504:6240":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"6:4724:5217":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:21312:31627":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"6:6079:5571":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:44895:6765":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:10677:6790":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"17:15390:4091":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"2:44903:6767":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:42431:223":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"1:7747:7513":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"17:13753:3683":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"2:8051:176":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"18:515:3264":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"16:5038:4422":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"5:6012:3062":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"17:9858:20735":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"1:11657:6807":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"2:2678:13794":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"5:7361:32753":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"6:569:4890":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"2:48329:6229":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"17:14356:3792":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"5:830:3038":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"2:40785:6675":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"17:12478:3489":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"2:45084:147":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"2:22482:8649":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"5:4459:3056":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"17:15410:4097":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"17:11898:3438":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"1:7465:30149":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"16:5238:4423":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"16:4813:4415":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"1:5512:2223":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"16:6244:20672":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"5:6549:3032":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"5:7669:3071":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"14:0:2080":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"1:11331:3152":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"1:10740:2234":{"crate_id":1,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"15:288:19761":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"1:10167:2238":{"crate_id":1,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"18:538:3266":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"11:1887:2606":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"2:43559:6726":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"17:13375:3592":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"2:42288:191":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"6:1576:4951":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"17:12572:3426":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"2:30963:5874":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"17:12711:135":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"17:12422:6437":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"11:2498:19732":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"2:32778:2332":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"5:2987:2708":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"16:6965:6318":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"2:10211:150":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"1:859:2606":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"0:48:1814":{"crate_id":0,"path":["rustc_version","Channel"],"kind":"enum"},"11:2548:4749":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"17:11841:7311":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"17:11324:7279":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"17:4986:7259":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"6:6114:5585":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"16:6431:4374":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"17:15655:4178":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"5:3833:3067":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"17:15138:4023":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"17:14489:3816":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"1:9464:7515":{"crate_id":1,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"16:5713:6467":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"16:5630:6460":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"17:14235:3774":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"1:1607:6608":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"17:12993:20744":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"1:5527:112":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"16:7294:4552":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"1:7752:6249":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"17:13187:3548":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"1:10700:6798":{"crate_id":1,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"17:1207:7249":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"5:1316:7422":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"2:40018:213":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:8374:7525":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"1:8425:6294":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"17:13116:3535":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"6:7598:5811":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:40773:13789":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"17:10251:3398":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"17:12671:7337":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"0:124:1844":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","ComponentMustNotHaveSign"],"kind":"variant"},"1:10687:6780":{"crate_id":1,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"1:1581:3049":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"17:11214:7276":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"2:4335:6632":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"2:4184:7446":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"17:12225:7325":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"17:13024:20745":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"16:5555:7343":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"2:42066:6088":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"16:2883:19808":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"6:654:14618":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"1:6151:1814":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"6:4666:5212":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"6:4388:5079":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"17:13766:3685":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"1:7800:8377":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"16:4674:4410":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"2:22615:6656":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"17:16235:4325":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"2:44483:2301":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"2:10010:203":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"5:1528:207":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"1:9142:184":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"2:41535:6082":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"2:40261:27349":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"6:548:4879":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"6:5004:5359":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"9:356:19670":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"1:5476:2221":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"5:7391:6626":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"1:3968:1809":{"crate_id":1,"path":["std","num"],"kind":"module"},"0:134:135":{"crate_id":0,"path":["rustc_version","Error"],"kind":"enum"},"6:6781:5698":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:10845:2310":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"17:12342:6429":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"2:22840:2794":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"2:1916:5845":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"17:2175:20798":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"16:7335:4380":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:42437:134":{"crate_id":2,"path":["rustc_version","Result","Err"],"kind":"variant"},"6:6837:5721":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"16:2641:4355":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"17:16151:4306":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"2:36628:4512":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"17:12328:6425":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"6:4847:5275":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"17:12300:20864":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"18:754:6404":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"2:12320:6735":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"17:15521:4150":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"16:5485:4367":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"1:3273:2856":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"1:11301:4813":{"crate_id":1,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"1:836:2604":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"2:3159:124":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"17:12150:3475":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"16:6292:6523":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"1:10458:2854":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"2:44134:2299":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"2:8363:2607":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"2:44449:2290":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"17:14131:3738":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"2:46311:6139":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2:13239:7466":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"2:11038:7459":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:12066:397":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"16:7914:6586":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"17:10759:3426":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"2:40971:6681":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:46341:6140":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"2:44397:2308":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:5713:3132":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"6:1528:4921":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"2:39248:13875":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:867:6603":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"17:12318:3482":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"5:3753:2851":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"2:30931:5873":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"2:31052:31315":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"6:1537:4926":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"1:4017:8435":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"17:15608:4166":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"2:44899:6766":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:5776:2822":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"2:44379:2307":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"1:8978:8535":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"1:1574:2604":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"17:11915:20840":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:33626:13864":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:1602:6607":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"1:4109:8441":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:22388:8660":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"11:1728:153":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"17:11567:7293":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"2:46511:6152":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"16:7482:7401":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"5:2990:5839":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"2:4304:7447":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:7729:6248":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"2:12374:2289":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"5:3609:2604":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"1:3561:2248":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"17:13674:3649":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"2:4807:13783":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"2:43314:2629":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"2:726:2795":{"crate_id":2,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"2:40847:31303":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"6:0:877":{"crate_id":6,"path":["libc"],"kind":"module"},"1:922:7411":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"2:48121:6225":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"2:21586:5852":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"16:3177:4333":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"14:40:3563":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"1:12068:447":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"17:15646:4176":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"16:7507:207":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"1:10085:7546":{"crate_id":1,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"17:11256:6405":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"17:15342:4076":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"17:13046:3525":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"2:2961:2462":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"2:46733:6159":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"5:3596:180":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"17:13972:3442":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"2:1804:5844":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"5:7341:3044":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"17:15957:4242":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"2:22123:8424":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"20:334:2327":{"crate_id":20,"path":["semver","Comparator"],"kind":"struct"},"7:0:1687":{"crate_id":7,"path":["unwind"],"kind":"module"},"2:43999:6650":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:1809:655":{"crate_id":1,"path":["std","env"],"kind":"module"},"1:10658:7554":{"crate_id":1,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"16:7889:4609":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"20:90:8064":{"crate_id":20,"path":["semver","error","QuotedChar"],"kind":"struct"},"6:1521:4918":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"1:3814:7497":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"17:10877:7265":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"18:581:2482":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"13:226:4746":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:25:655":{"crate_id":2,"path":["core","env"],"kind":"macro"},"2:42412:8380":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:5462:2220":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"1:3240:26195":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"11:687:2605":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"16:5316:3394":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"17:16069:4286":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"2:10641:8424":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"2:11606:7462":{"crate_id":2,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"2:4966:415":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"1:6438:183":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"16:4462:4404":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"1:918:7410":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"16:7306:7393":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"17:12508:3493":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"2:43010:2620":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"17:15368:4086":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"2:43277:31312":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"0:138:1874":{"crate_id":0,"path":["rustc_version","Error","CommandError"],"kind":"variant"},"17:14177:3762":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:39923:210":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"2:42050:6086":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"17:12647:7335":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"1:5132:7502":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:11467:3433":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"6:4783:5240":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"17:12030:7314":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"1:8878:2229":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"17:11595:3434":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"16:6941:20676":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"2:43289:4585":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"2:3193:140":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2:42479:2605":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"16:3830:4397":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:30995:31337":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"16:7152:4531":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"2:3667:3049":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"2:11639:7463":{"crate_id":2,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"6:4824:5261":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"1:7068:8070":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"6:4610:5199":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"1:9119:6321":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"2:4196:108":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"5:2994:34232":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:32768:6667":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"2:44072:6652":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"5:2157:3048":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"17:11702:6417":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"5:1287:7419":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:621:2811":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"17:13774:3687":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"2:45105:204":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"1:8088:2852":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"2:44101:7481":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:9027:7532":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"17:13325:3583":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"5:0:303":{"crate_id":5,"path":["alloc"],"kind":"module"},"2:21971:8424":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"6:5117:5414":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"17:14147:3743":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"6:5104:5408":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"6:1514:4916":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"16:6141:34406":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"0:128:1846":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","MinorVersionRequiredBefore4"],"kind":"variant"},"6:4603:5197":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"16:5499:4370":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2:22:729":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"16:2749:4360":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"11:2536:4747":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"1:640:7487":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:46687:6157":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:8288:2310":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"6:4543:5165":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:7913:2336":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"11:844:8383":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"16:4572:4408":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"1:12069:1658":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"16:7491:4558":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"2:44145:2296":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"16:2489:4348":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"1:6547:3136":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"1:12073:1505":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"6:1570:4949":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:44911:6769":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"17:15102:4018":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"0:152:1946":{"crate_id":0,"path":["rustc_version","Error","LlvmVersionError"],"kind":"variant"},"16:2439:4346":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"1:357:7482":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"6:7616:5814":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"6:6741:5696":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"1:8282:2294":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"17:14868:3952":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"6:5941:5496":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:2511:132":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"18:589:3269":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"1:1596:6606":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"17:14463:3814":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"1:4047:8437":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"16:6599:6542":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"2:40922:2233":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"17:14260:3778":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"6:62:14205":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"2:34579:13870":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"0:28:1879":{"crate_id":0,"path":["rustc_version","version_meta_for"],"kind":"function"},"1:9073:7539":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"1:2588:2847":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"2:45097:224":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"11:396:3023":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"2:8369:13841":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"2:11680:2291":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"5:7560:3063":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"1:5827:7503":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"17:13497:3613":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"16:7400:4383":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"5:1487:6604":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2:6395:6636":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"17:13877:3706":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"16:6188:4438":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"6:4616:5201":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"11:102:6596":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"17:11730:6419":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"11:1107:7420":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"6:1632:4995":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:10898:2231":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"17:9671:20719":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"2:21512:8424":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"16:6062:6516":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"17:15078:4013":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"2:22755:5860":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:48183:6226":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"6:5146:5423":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"17:12056:3469":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"2:6595:3098":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"2:32754:7469":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"2:7397:31375":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"14:220:4699":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"2:22806:31338":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"17:12043:7315":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"17:10622:34416":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"6:4455:5122":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"17:11419:3426":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:46830:6162":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"2:41027:6690":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"2:44121:1940":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"6:7651:5822":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"2:2730:253":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"17:15266:4058":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"2:32835:2469":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"2:42834:91":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:8233:2234":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"11:430:34387":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"6:6868:5747":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:44161:2294":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"6:6804:5705":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"17:13292:3577":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"5:2196:6615":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"17:11743:6420":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"6:574:4892":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"1:5163:7502":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:10155:3394":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"2:4519:3091":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"17:12543:7334":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"2:40831:107":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"2:22562:6655":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"2:44458:2288":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"16:8022:20681":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"17:10284:3399":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"16:2593:4353":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:42598:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"6:5921:5483":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"17:15400:4094":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"17:12659:7336":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"17:13899:3707":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"11:787:6604":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"2:42337:171":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"16:6394:6535":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"17:256:7244":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"6:4977:5341":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"2:40766:2300":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"16:7270:4551":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"1:8245:2837":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"5:1151:34237":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"11:2231:6609":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"16:2319:4334":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"17:9781:20734":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"2:21339:31632":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:21341:31636":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"2:5066:853":{"crate_id":2,"path":["core","iter"],"kind":"module"},"2:3010:2467":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"2:41510:6713":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"17:15944:3562":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"16:2979:4388":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"5:692:117":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"6:1674:5024":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"6:1507:4913":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:7227:2661":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"17:15116:4019":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"1:2032:195":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"17:14402:3799":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"16:536:6444":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"17:13785:3690":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"2:3378:13879":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"11:1051:7419":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"16:2689:4357":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"17:10661:7262":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"6:6012:5537":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"17:13399:3596":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"16:6077:7352":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"16:6759:4377":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:41093:6698":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:5649:2225":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"6:4496:5143":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:11764:6424":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"12:0:2079":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"1:9045:25551":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"16:4968:4420":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"1:4131:8445":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"16:8055:4549":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"17:12201:7323":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"16:5726:6468":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"17:11405:7285":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"17:13015:3485":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"1:10393:3147":{"crate_id":1,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"1:8403:5678":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"17:10350:3401":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"6:5023:5367":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"11:2304:6574":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"2:40739:6673":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:21573:8571":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"16:7324:6575":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"14:7:7406":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"1:11141:159":{"crate_id":1,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"1:11080:26390":{"crate_id":1,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"2:33919:8565":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"6:1691:5031":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"11:774:6603":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"2:38504:13871":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:4784:8465":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"6:4922:5308":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"5:2049:2851":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"16:2819:4363":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"11:1676:3025":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"1:12090:847":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"6:6913:5771":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"17:11189:3419":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"1:2422:5847":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"2:46908:6164":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"16:4399:4402":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"6:6658:5645":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"17:14246:3776":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"17:10828:34418":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"1:8301:7525":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"16:7225:20677":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"1:8920:7531":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"3:234:223":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"5:2998:34233":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"17:10612:7261":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"17:15992:4272":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"1:588:8371":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"17:13922:3712":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"16:2995:19810":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"16:8097:4621":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"18:608:7238":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"17:12454:6439":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"17:10457:136":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"1:3017:135":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"2:30984:2629":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"2:9467:85":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:12071:1152":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"17:14079:3733":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"1:6507:6712":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"14:31:7406":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"16:5959:19780":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"1:10957:3150":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"2:12563:2279":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"16:5541:6451":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"0:149:1906":{"crate_id":0,"path":["rustc_version","Error","UnknownPreReleaseTag"],"kind":"variant"},"16:6773:4487":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"6:4375:5069":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"1:10711:6250":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"18:623:34425":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:22683:6657":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"2:44915:6770":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"11:364:3021":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"18:635:3281":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"1:3237:26181":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"1:645:8374":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"17:11497:7287":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"16:4491:4405":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"17:13387:3593":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"17:15635:4175":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"1:4240:8461":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"1:4781:8492":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"1:533:3118":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"11:2383:2604":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"6:6711:5674":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:21356:31634":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:12072:328":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"16:6724:4482":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"17:14752:3859":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"1:12082:794":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"6:4480:5138":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"17:12516:7331":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"2:46110:6131":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"6:1639:4999":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"1:12035:30145":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"17:12433:3485":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"5:5360:3032":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"10:0:2077":{"crate_id":10,"path":["adler"],"kind":"module"},"1:3570:25730":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"5:3245:32959":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"1:9469:3146":{"crate_id":1,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"16:7951:6592":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"5:3199:2604":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"1:3354:2854":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"17:13437:3600":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"2:48367:6230":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:43331:135":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"16:6882:6566":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"1:10866:2224":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"17:437:3345":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"11:875:7416":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"2:40892:2273":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"2:32747:4549":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"11:883:7417":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"2:46178:6134":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"6:4789:5243":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:9952:2248":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"1:8002:2849":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"17:11063:7270":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"5:6503:3049":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"1:6624:8531":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"17:12557:3415":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"2:47135:6183":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"16:5865:6486":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"16:2835:4364":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"16:7345:6578":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"6:4473:5134":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"5:7653:3067":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"2:44697:6752":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"2:34233:13868":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"2:46931:6165":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"2:42487:2606":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:1710:2822":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"17:12683:7338":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"20:382:2329":{"crate_id":20,"path":["semver","Prerelease"],"kind":"struct"},"17:14066:3732":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"2:13406:149":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"11:710:7409":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2:3019:8564":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"17:10573:34415":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"1:12088:1641":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"17:11574:6609":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"2:44734:6753":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"6:6700:5669":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"16:6221:6518":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"5:7331:3049":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"6:6718:5678":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"1:4718:5691":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"17:13855:3699":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"1:557:7484":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"2:38614:13873":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"2:42559:97":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:2266:136":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"1:7684:3144":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"6:6228:5613":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"17:13455:3608":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"2:44887:6763":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"1:945:7416":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"5:7419:2606":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"16:2375:4343":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"1:3589:2245":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"17:2234:7254":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"18:531:6389":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"2:41041:6693":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"2:40690:6671":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"16:149:3015":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"16:5846:7345":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"2:10254:2613":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"17:11661:6414":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"2:1834:1189":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"17:11051:7269":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"0:122:1841":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","ComponentMustNotHaveLeadingZeros"],"kind":"variant"},"5:6631:2606":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"1:12019:6851":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"17:13173:3547":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"2:3222:8399":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"15:0:2081":{"crate_id":15,"path":["addr2line"],"kind":"module"},"17:12353:6433":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"17:14560:3827":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"1:6978:3139":{"crate_id":1,"path":["std","sys","pal","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"2:2459:111":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:2112:5851":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"6:6934:5783":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"2:43017:2619":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"18:670:7243":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"1:8891:2230":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"16:7176:34407":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"17:11142:3426":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"16:2459:4347":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"1:1968:2810":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"2:4630:2634":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"5:266:3032":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"1:10946:3149":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"2:3558:71":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"17:15023:4001":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"11:0:2078":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"5:634:7429":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"2:47401:6188":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:7772:3148":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"1:2671:3105":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"16:0:2082":{"crate_id":16,"path":["gimli"],"kind":"module"},"6:7692:5832":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"5:281:2283":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"6:588:4900":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"1:5906:3126":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"2:46156:6133":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:914:7409":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"2:22402:13885":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"6:501:4847":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"1:4261:8463":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"18:598:34423":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"16:6669:6556":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"5:1302:7418":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"6:4745:5220":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"1:4550:8465":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"17:15168:4034":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"17:16138:4300":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"2:40980:6683":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"2:7995:2335":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:42676:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"6:1682:5025":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"17:15445:4105":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"1:7994:7517":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:7942:128":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:4716:5689":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"2:47247:6185":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:8295:2303":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"16:7653:4570":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"17:14341:3788":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"17:11367:3415":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"5:3768:7433":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:9995:118":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"1:3356:2855":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"11:1917:6607":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"1:1054:7418":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"1:4464:7501":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"2:21693:8569":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"2:41287:6707":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"2:32743:7468":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"6:6248:5627":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"17:14968:3989":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"17:4821:7258":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"1:893:3049":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"5:5408:2285":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"2:2797:123":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"17:16176:4314":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"2:10259:2614":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:880:6604":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"2:42637:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"2:2548:199":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"17:13308:3581":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"5:7521:31303":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:44474:2300":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"17:10887:34412":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"14:187:19749":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"1:12087:1640":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"1:3472:2822":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"11:2423:2606":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"2:2726:254":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"17:11227:7277":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"17:13553:3631":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"1:7936:6250":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"5:4065:3032":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"2:7867:13842":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:2496:1808":{"crate_id":1,"path":["std","io"],"kind":"module"},"0:0:1959":{"crate_id":0,"path":["rustc_version"],"kind":"module"},"2:40836:2258":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"11:2562:4751":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"17:15778:4214":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:45146:6125":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2:41050:6694":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"2:5681:2822":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"2:48043:6224":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"1:928:8383":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"2:9039:7454":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:11106:6322":{"crate_id":1,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"1:6330:3132":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"6:4738:5218":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"1:6511:7509":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"6:1710:5038":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"17:11773:3500":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"5:3232:6607":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"5:6994:259":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"1:363:7483":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"1:8348:6783":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"17:15701:4192":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"2:43989:7477":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"1:8601:6785":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"2:2968:243":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"1:9086:6318":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"16:5897:20670":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"2:41080:6697":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"2:10004:2620":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"17:12768:20721":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"1:909:7423":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"0:53:1820":{"crate_id":0,"path":["rustc_version","Channel","Beta"],"kind":"variant"},"17:12289:3477":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"1:4248:8462":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"17:10185:3396":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"16:4937:4419":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"1:7958:137":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"17:15678:4191":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"6:4488:5141":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"11:1007:6574":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"16:6348:4369":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"6:6263:5638":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"6:4710:5216":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"17:15010:3996":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"16:2284:19781":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"17:3264:7255":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"1:5496:2222":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"16:7551:4375":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"1:10749:26393":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"2:42413:8505":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"16:6099:7367":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"11:1160:7422":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"2:40716:6080":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"5:2718:5840":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"6:5123:5417":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"1:11575:7498":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"11:832:7423":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"2:2343:632":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:12091:1697":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"17:9755:20716":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"18:698:6396":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"1:3234:30742":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"17:15249:4051":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"2:4450:7448":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"6:123:14260":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"2:10820:2605":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:6677:8533":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"2:4172:7445":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"17:14529:3821":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"1:3442:2864":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"17:12887:6442":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"17:12175:7318":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"17:9938:20738":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"6:4914:5303":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"6:7371:5798":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"6:4364:5061":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"1:10758:26395":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"4:0:2074":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"17:14372:3793":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"11:700:2606":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"2:48466:6238":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"6:4578:5184":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"1:8083:7519":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:34406:13869":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"2:3014:8562":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"2:40673:2301":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"16:4355:4401":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"2:33860:8563":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"17:15814:4218":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"2:43031:2622":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"17:13738:3678":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"5:2167:6613":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"2:47325:6186":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"17:12969:3520":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"2:43549:6113":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"17:15473:4113":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"11:811:3067":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"17:11557:7292":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"6:4830:5264":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:41128:3279":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"6:6813:5709":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"1:9175:6322":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"1:4011:8436":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"1:0:1530":{"crate_id":1,"path":["std"],"kind":"module"},"1:11514:7496":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"5:790:3035":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:46779:6161":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:42268:6097":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"2:42028:168":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"2:22733:31333":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:6691:3137":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"16:2665:4356":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"2:3003:2465":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"2:3393:144":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"18:689:6395":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"17:11853:7312":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:32777:234":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"1:8617:6312":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"17:12949:3482":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"2:22125:8570":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"5:3206:6606":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"16:6230:6519":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2:3051:13878":{"crate_id":2,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"1:8366:7528":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"5:6903:3078":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"1:8265:2838":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"2:34037:13865":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"6:7645:5821":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:13165:162":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"2:6590:6641":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"9:0:2076":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"16:3773:4396":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"2:48489:6239":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:12085:1642":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"16:7429:34403":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"6:4549:5168":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"5:1271:6574":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"17:11674:6415":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"2:44297:2311":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"17:14449:3813":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"2:9970:141":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"1:1446:153":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"2:44605:6748":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:9654:31483":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:9147:231":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"6:4516:5152":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:22864:2807":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"2:5852:6633":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"17:13946:3713":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"16:5616:6457":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"2:33440:4502":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"0:141:1940":{"crate_id":0,"path":["rustc_version","Error","Utf8Error"],"kind":"variant"},"6:7639:5820":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"5:1456:2606":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"2:2506:198":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"11:800:3049":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"2:7900:143":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:4572:8466":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"17:12792:3359":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"6:5044:5379":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"5:7594:7444":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"1:6275:7508":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"17:11042:7268":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"0:51:1818":{"crate_id":0,"path":["rustc_version","Channel","Nightly"],"kind":"variant"},"5:1131:32833":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"16:6376:6527":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"17:12251:7327":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"1:10721:137":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"1:4075:8440":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"6:5052:5381":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"11:856:7414":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"2:46381:6142":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"6:4989:5350":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"17:13252:3566":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"16:5825:6483":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"6:1501:4910":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"9:423:19657":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:10431:3104":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"1:11491:3154":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:2720:160":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"17:15197:4042":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"5:5980:72":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"2:41009:6687":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:48542:6242":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"2:3082:4507":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:8360:2277":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"2:22448:8650":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"17:16269:3598":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"17:14723:3839":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"16:5662:20669":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"11:2469:3067":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"6:5130:5420":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:42228:6783":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"6:489:4842":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:30969:5876":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"16:3856:4398":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"5:5020:2822":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"1:8312:8432":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"6:4351:5052":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:43520:6725":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"2:44622:6749":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:11650:6807":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"2:42471:2604":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"2:1902:13895":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"17:10720:34413":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"6:5982:5514":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"1:7111:3140":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"6:5897:5474":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"18:735:24926":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"17:14847:3942":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"17:14012:3724":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"16:7444:7400":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"17:14436:3812":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"2:43752:6117":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"1:8904:2231":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"17:15324:4072":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"6:7556:5810":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"17:14111:3737":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"2:44343:2306":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:10006:2621":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"2:43024:2621":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"16:6408:4443":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"0:126:1924":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","MinorVersionMustBeZeroAfter4"],"kind":"variant"},"17:14545:3823":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"2:9659:32708":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"6:5885:5470":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"11:1923:6608":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"2:3405:13763":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"11:1025:7418":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"2:40758:2301":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"16:4907:4418":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:7679:3127":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"2:43537:154":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"11:1087:34386":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"2:10365:3102":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"17:11153:7264":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"17:15734:4199":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"6:4584:5187":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"17:13363:3589":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"2:3801:2606":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"6:1697:5034":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:42434:190":{"crate_id":2,"path":["rustc_version","Result","Ok"],"kind":"variant"},"2:42194:31341":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"2:41501:6712":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"1:5321:200":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"18:643:3261":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"6:6898:5764":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"6:483:4839":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"1:903:3067":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"2:44782:2315":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"2:7904:163":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"17:12929:3518":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"1:9078:7540":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"5:1686:3032":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"1:12067:1034":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"1:4996:8491":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"16:6745:4376":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"20:300:1812":{"crate_id":20,"path":["semver","Version"],"kind":"struct"},"17:11537:7290":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"17:14298:3782":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"6:5867:5457":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"17:10982:20752":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"1:939:7414":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"1:12092:1248":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"13:110:34392":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"1:5209:201":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"6:4776:5239":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"17:10905:7266":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"17:513:7247":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"2:45175:6775":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"6:4947:5320":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"6:4860:5280":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"1:11241:7559":{"crate_id":1,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"2:46563:6154":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"17:10068:20723":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"6:4686:5214":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"9:52:19673":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"2:44091:6653":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"11:2352:7419":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"17:12900:3517":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"1:11643:26458":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"20:129:2331":{"crate_id":20,"path":["semver","identifier","Identifier"],"kind":"struct"},"16:5521:4372":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"1:7728:8424":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"6:4461:5125":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"1:8951:6314":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"16:5580:4371":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"1:4825:8454":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"16:6422:3018":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"17:12089:3472":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"2:9472:92":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"5:1537:7432":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"2:32707:2232":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:21684:8424":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"16:6201:4366":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"11:328:6600":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"1:1887:2771":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"11:1910:6606":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"2:41103:6699":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"2:12260:6731":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"6:5068:5386":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"17:13999:3722":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"17:11715:6418":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"2:39998:211":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"17:16187:4315":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"1:9157:159":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"16:5006:4421":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"1:8213:2863":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:40958:2838":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"11:1566:19737":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"18:80:24915":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"1:8458:8501":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"2:13356:114":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"1:8399:7529":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"1:951:7417":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"2:44193:2309":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"2:47435:6189":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"17:10710:7263":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"2:11000:2309":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"16:6858:4492":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"2:22771:31331":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"5:5826:247":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"2:12578:2280":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"5:5404:2284":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:3399:13764":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:22668:5854":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:3433:13702":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:9038:7534":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"6:475:4834":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"5:7351:6625":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"2:2717:77":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"17:1098:7248":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"6:6059:5563":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"1:6621:7510":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"1:8628:6788":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"7:31:19641":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"0:119:1920":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","ParseIntError"],"kind":"variant"},"5:2487:5836":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"2:44151:2295":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"16:5794:6477":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"16:6646:6555":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"17:11128:3384":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"2:2849:2814":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"1:4069:8439":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"1:3579:2247":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"2:44243:2313":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"6:563:4887":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"6:6120:5588":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:40929:6651":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:1040:6574":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"5:7063:3086":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"0:93:1850":{"crate_id":0,"path":["rustc_version","VersionMeta"],"kind":"struct"},"5:5462:1538":{"crate_id":5,"path":["alloc","str"],"kind":"module"},"17:12724:20742":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"2:48440:6236":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:44009:7478":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"6:6107:5584":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"1:3749:8434":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"17:10915:34414":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"6:5891:5473":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"17:14189:3764":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"17:15769:4212":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"17:11016:7267":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"1:7974:126":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"1:7614:3391":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"1:1590:6605":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"6:7604:5812":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"2:2353:13885":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"2:47585:6190":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"17:15624:4170":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"17:13814:3695":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"11:2443:3049":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"2:13367:3115":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"1:12084:791":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"6:4932:5314":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"6:555:4882":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"2:3315:208":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"2:39907:8398":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:13461:8384":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"20:220:135":{"crate_id":20,"path":["semver","parse","Error"],"kind":"struct"},"6:4523:5155":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"17:13832:3696":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"1:12083:795":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"1:7985:6782":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"14:165:19742":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"2:48519:6241":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"2:42362:2606":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"6:6666:5650":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"2:47933:6223":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"2:44748:13735":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"6:4449:5120":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"5:1024:3032":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"2:2355:13886":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"18:659:7239":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"2:41152:6704":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"17:13959:3716":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"1:2276:2830":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"2:45198:6776":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"1:1824:2754":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"1:4312:7499":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"9:481:19654":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"16:7386:4382":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"1:1885:2770":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:42423:2608":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"18:96:24916":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"2:42793:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"2:42402:7472":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"17:15313:4068":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"17:10218:3397":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"11:1903:6605":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"10:36:4753":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"17:10997:3412":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"1:2982:3123":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"2:44759:6754":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"17:15596:4163":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"0:45:223":{"crate_id":0,"path":["rustc_version","Result"],"kind":"type_alias"},"2:21567:8568":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"17:16093:4291":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"17:12808:3514":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"5:4792:715":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"11:1896:3067":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"2:40729:6672":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:723:151":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"16:2789:4362":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"2:9799:2641":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"16:3741:4395":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"16:6788:34404":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"1:9296:2770":{"crate_id":1,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"16:4787:4414":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"17:12530:7333":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"2:3046:13877":{"crate_id":2,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"6:6943:5786":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:21370:31630":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"2:47165:6184":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"17:15190:4040":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"1:2035:194":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"9:177:19722":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"18:573:3261":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"11:1883:2604":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"2:21358:31624":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"5:7584:6631":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"2:46400:6143":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"17:11166:3417":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"2:39938:207":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"16:7376:6580":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"2:40701:31340":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"2:10927:7457":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:12040:8379":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"0:118:1834":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError"],"kind":"enum"},"11:2569:2217":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"16:5878:6446":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"14:202:13736":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"17:2037:7250":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"1:7814:8378":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"17:14516:3820":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"6:6764:5697":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"16:6895:6569":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"17:12584:7264":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"2:4446:218":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"6:7657:5823":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"16:4761:4413":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"2:12572:2281":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"16:3600:3294":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"17:2203:7251":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"2:44279:2312":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"2:21514:8572":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"6:4401:5089":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"1:3315:2858":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"5:7411:2606":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"17:15616:4169":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"2:34096:13867":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"6:7668:5827":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"17:12408:3484":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"1:9961:6719":{"crate_id":1,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"18:491:6388":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"17:13272:3576":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"2:46465:6145":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"6:4440:5115":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"16:2859:4365":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"16:3709:4394":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"2:38559:13872":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"5:7302:5842":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"6:6100:5583":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"5:3702:3032":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"5:7536:2254":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"1:8861:2228":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"2:42520:90":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"5:1517:7410":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"2:44439:2304":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"2:21976:8574":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"6:6169:5601":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"1:504:3048":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"2:4:1115":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"17:10170:3395":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"2:44175:2310":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"2:1797:631":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"17:14038:3727":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"2:44467:2287":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"17:14912:3983":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"2:3418:31477":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"5:3211:32960":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"1:6725:230":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"17:11755:6423":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"16:3260:4391":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"17:12264:7328":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:21565:8424":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"2:42082:8433":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"1:7820:2774":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"6:1596:4965":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"11:742:7410":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"17:9886:20736":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"2:9951:223":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"2:48414:6234":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"17:16032:3566":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"17:15799:4217":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"1:637:7485":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"1:9232:25523":{"crate_id":1,"path":["std","sys","pal","common","thread_local","fast_local","DtorState"],"kind":"enum"},"2:2542:192":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"2:4583:2633":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"2:22346:31069":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"17:16212:4320":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"1:10730:126":{"crate_id":1,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"2:48581:6243":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"2:39827:2609":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:8275:2839":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"17:11510:7288":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"1:7929:6780":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"1:1585:3067":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"1:10241:112":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"17:10818:7264":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"20:352:2328":{"crate_id":20,"path":["semver","Op"],"kind":"enum"},"2:3183:2334":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:32866:113":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"0:55:1822":{"crate_id":0,"path":["rustc_version","Channel","Stable"],"kind":"variant"},"17:15418:4098":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:6584:6642":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"6:4434:5113":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:41543:6714":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"20:281:7538":{"crate_id":20,"path":["semver","error","Position"],"kind":"enum"},"11:123:3019":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"2:46877:6163":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"17:11688:6416":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"1:10963:3151":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"2:44046:6651":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"2:46280:6138":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2:3190:139":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"17:15569:4151":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"6:1650:5007":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"1:3275:2857":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"0:26:1882":{"crate_id":0,"path":["rustc_version","version_meta"],"kind":"function"},"17:11443:3431":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"17:15720:4197":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"6:6159:5599":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"14:214:6594":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"1:12081:793":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"17:15426:4100":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"2:43980:6648":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:5045:8497":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"2:12629:13728":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"16:2304:19807":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"2:22699:5855":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:4823:8453":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"2:47791:6222":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"5:3622:2605":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"17:13424:3599":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"17:15214:4045":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"2:48291:6228":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:12518:1810":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"5:212:3030":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"17:12213:7324":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"17:16223:4322":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"2:43920:7476":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"17:15931:3548":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"1:1072:7422":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"1:8360:8464":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"5:7492:2253":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"17:14025:3725":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"1:4650:8483":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"5:1506:7409":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"1:2424:8411":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"5:683:246":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"17:10439:3404":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"5:3358:3067":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"11:1891:3049":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"6:6927:5780":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"2:41525:3100":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"17:16121:4298":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"2:32761:2632":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"5:6713:3032":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"14:160:7406":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"1:2693:2840":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"1:5861:7507":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"17:11392:7284":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"1:10858:2775":{"crate_id":1,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"2:47371:6187":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"16:5645:6462":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"5:1478:6603":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"17:12863:3516":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"2:22747:5859":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"16:6134:7378":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"17:12621:3496":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"17:11269:20770":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"2:41018:6689":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"17:14876:3953":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"2:44020:6118":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2:44919:6771":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"5:7466:2217":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"5:5170:3062":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"16:4433:4403":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"16:6254:4440":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"16:5298:20667":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"1:3504:2246":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"2:46611:6155":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:11069:2230":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"16:2617:4354":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"16:2917:19809":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"1:4210:30084":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"2:45138:6913":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:5834:7506":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"17:15748:4206":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"2:45186:6128":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"2:40989:6684":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"6:5015:5362":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"6:4535:5160":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"11:299:6597":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"16:4871:4417":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"17:11242:7278":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"6:5974:5509":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"1:10498:3148":{"crate_id":1,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"17:10399:2294":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"17:10419:3403":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"1:415:182":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"17:15383:4090":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:42873:98":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"17:14503:3819":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"2:47011:6166":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:12093:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"1:2450:8421":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"17:13344:3588":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"2:46210:6135":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2:46709:6158":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"2:32864:2468":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"17:10044:20740":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"11:1142:7421":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"17:11115:7274":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"16:4733:4412":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"2:42110:6095":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"2:44670:6751":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"16:7609:6581":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"2:725:8424":{"crate_id":2,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"16:5278:4424":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"6:5955:5507":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"16:7103:34408":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"17:10524:7260":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"1:12080:796":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"16:2553:4351":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"1:11409:6850":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"17:15058:4005":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"16:7932:6589":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"1:6068:217":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"1:11088:6122":{"crate_id":1,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"16:5346:4425":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"1:482:3117":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"5:3240:6605":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"6:6222:5612":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"1:4902:8450":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"2:46086:6130":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:8934:6313":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"17:15463:4108":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"2:44576:6739":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"2:42346:2604":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"6:4893:5292":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:2271:3087":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"16:6331:6526":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"16:3010:3289":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"1:8355:6784":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"1:8222:2865":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"11:490:151":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"1:5720:6777":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"6:6086:5572":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"1:9457:136":{"crate_id":1,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"1:11854:3158":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"17:13606:3645":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"2:13187:31457":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"17:15836:4224":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"2:43260:2629":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"2:10796:2604":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"2:41277:2839":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"17:3597:7257":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"2:48385:6231":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"2:31157:31352":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"1:2438:8415":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"2:10008:2622":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"6:533:4870":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"2:46132:6132":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"6:5111:5411":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"16:2419:4345":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"6:6071:5570":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"6:4968:5335":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"16:7595:4373":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"1:11631:6336":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"2:10000:127":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"2:44941:129":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"5:6370:8662":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"2:39960:209":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"5:7311:2606":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"1:5706:217":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"11:2554:34382":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"1:10682:6792":{"crate_id":1,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"1:11171:6331":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"17:12127:3474":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"1:6892:8566":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"1:1578:2606":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"17:12238:7326":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"18:113:24917":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"17:15582:4157":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"6:4764:5232":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"1:11381:6335":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"17:15356:4083":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"5:1440:2605":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"17:11341:7282":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"17:15281:4060":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"6:5969:5508":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"2:45087:216":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"1:8561:8515":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"11:1066:19736":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"5:4227:2822":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"17:13509:3614":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"2:40799:13790":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"17:403:7246":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"2:4603:2471":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"2:22295:8656":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"2:33978:13866":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:7665:3142":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"6:4902:5298":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"1:8546:6307":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"1:2268:7494":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:42216:6722":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"5:4197:2822":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"2:48405:6233":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:6052:3132":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"17:11621:6410":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"2:2973:2463":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"2:22334:8659":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"2:11079:2312":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"6:4814:5255":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"6:542:4876":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"1:8475:6304":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"17:12443:3488":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"2:22211:8654":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"18:481:6387":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"2:44965:6772":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"5:1425:2604":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"16:2336:4336":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"2:30701:2792":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"17:12399:6436":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"17:12371:3518":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"5:3170:101":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"6:7702:5834":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"6:4870:5284":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"1:10881:25540":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"17:12494:3490":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"16:7414:4554":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"2:43771:6729":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"6:6961:5789":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"18:718:3282":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"1:1929:1807":{"crate_id":1,"path":["std","error"],"kind":"module"},"17:12851:6441":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"17:12464:20865":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"2:0:529":{"crate_id":2,"path":["core"],"kind":"module"},"1:12078:689":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:44769:6758":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"6:5140:5421":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"2:41112:6700":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:2733:2850":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"16:6152:4435":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"6:596:4904":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"5:2269:6620":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"5:4035:3049":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"17:10534:34410":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"17:14284:3781":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"2:22319:8424":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"18:706:2281":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"17:11547:3337":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"17:14212:3773":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"16:6555:4466":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:41301:6708":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"17:11788:7303":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"2:22722:2793":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"16:6030:6513":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"17:11605:1812":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"16:5759:6474":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"6:4808:5253":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"6:7622:5815":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:15:1832":{"crate_id":2,"path":["core","write"],"kind":"macro"},"2:2808:135":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"1:4119:8442":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"2:48394:6232":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"6:6128:5590":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"1:11426:6805":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"1:3916:7498":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"2:46240:6136":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"17:11799:7304":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"2:22853:1920":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"6:5910:5475":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"16:6362:4386":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"5:3266:6608":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:3041:13876":{"crate_id":2,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"2:42371:6100":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:11107:7460":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:4392:7500":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"17:16079:4287":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"2:23977:233":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:11056:2229":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"5:2249:32764":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"5:6137:2822":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"16:4518:4406":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"1:5389:127":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"16:2769:4361":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"16:6803:7382":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"17:10769:34417":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"11:2369:7428":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"2:43305:74":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"16:6320:6525":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"6:4854:5277":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"11:434:34388":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"1:7221:30081":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"5:1115:34239":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"17:14091:3734":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"5:7548:2255":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"17:0:2083":{"crate_id":17,"path":["object"],"kind":"module"},"19:0:1132":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"1:5652:2227":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"2:10014:2624":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"18:680:6392":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"2:12106:1880":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"2:4455:7449":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"16:6116:7370":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"2:42715:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"2:44492:2302":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:11554:7497":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"1:4821:8451":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"2:38669:13874":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:46262:6137":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:12089:1638":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"2:26377:262":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"6:4841:5272":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"1:11395:6802":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"2:8407:31481":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"6:4566:5178":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"17:13064:3528":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:1992:186":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"16:5331:3395":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"2:10888:2289":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"18:521:24928":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"1:1826:2755":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"2:40792:6676":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"18:651:3261":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"2:41487:6710":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"2:7333:13845":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"2:22013:31622":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"2:3470:13705":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"2:7619:2863":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"17:10137:20717":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"16:7366:4381":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"6:4529:5157":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"16:4702:4411":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"2:22833:6662":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"8:0:2075":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"2:7863:13843":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:12583:2278":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:8912:2604":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"2:44591:6745":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"2:10219:154":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"6:4955:5325":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"6:4878:5288":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"2:21302:2482":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"16:4283:4400":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"2:41142:6703":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:8963:8536":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"17:15376:4089":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"2:46755:6160":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:8078:7518":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"6:4698:5215":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:44081:7480":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"6:4908:5300":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"6:5075:5389":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"6:1558:4941":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"6:6798:5703":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"6:4506:5149":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"2:22256:8655":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"2:44976:13983":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"17:12824:20743":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"5:1388:100":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"6:5085:5394":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"2:44429:2303":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"2:44059:7479":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"11:673:2604":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"17:13235:3563":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"1:3811:7496":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"11:1603:7425":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"17:12189:7322":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"16:2399:4344":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"16:4545:4407":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"2:12297:6734":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"2:3029:4506":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:12074:1538":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"5:6870:3065":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"1:9014:6317":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"20:396:2326":{"crate_id":20,"path":["semver","BuildMetadata"],"kind":"struct"},"9:237:6113":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"16:7452:20678":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"2:2440:104":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"17:13211:3562":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"16:7118:6100":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"2:40038:2211":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"6:4595:5192":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"2:40679:6670":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"0:146:1943":{"crate_id":0,"path":["rustc_version","Error","SemVerError"],"kind":"variant"},"6:7388:5809":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"16:2355:4342":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"2:41071:6696":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"16:7355:6579":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"17:597:3391":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"17:16249:4326":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"17:11075:3415":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"2:4529:2632":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"2:42414:13937":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"5:4426:2822":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"6:507:4850":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"2:44225:2314":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:22791:31317":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"11:2124:6574":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"20:320:2330":{"crate_id":20,"path":["semver","VersionReq"],"kind":"struct"},"2:42912:7456":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"2:34752:4511":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"6:527:4867":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"17:10092:20741":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"17:11583:7298":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"17:10671:34411":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"11:2542:4748":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"6:4939:1102":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"2:43528:2615":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"11:2151:7419":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"0:130:1848":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","TooManyComponents"],"kind":"variant"},"5:2988:34321":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"5:7375:2606":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"1:4706:8440":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"2:40949:7471":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"16:3545:4393":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"1:11420:6804":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"1:10452:2856":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"17:13538:3625":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:7332:13844":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"17:9916:20737":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:40818:6081":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:8928:2606":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"17:14051:3729":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"18:563:3268":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"6:6047:5558":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:12789:118":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:7625:7562":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"2:44907:6768":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:3522:2235":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"6:4428:5112":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"16:3993:4399":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"6:495:4845":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"1:11123:6330":{"crate_id":1,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"2:12336:6736":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"6:119:14259":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"16:7537:4385":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"16:4649:4409":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"2:44800:2316":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"2:12090:7464":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"6:5829:5430":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"17:13594:3642":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"5:6033:14179":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"1:1063:7419":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"17:13986:3721":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"5:4267:2604":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2:4574:3092":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:12074:13944":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"16:7984:7405":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"16:5696:4428":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"6:4647:5211":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"6:5033:5373":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"17:15289:4061":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"16:7869:4608":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"6:4800:5249":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"5:7571:240":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2:46657:6156":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"2:3388:250":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"17:13089:3529":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"6:1496:4908":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"6:5152:5426":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"1:8523:6113":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"1:9152:232":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"16:6462:20673":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"2:40750:2302":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"17:9807:20724":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"1:7980:2878":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"16:7619:20679":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"17:3473:7256":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"16:6282:6522":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"17:10317:3400":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"17:12278:7329":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"17:15176:4037":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"16:7684:6582":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"1:5581:2224":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"17:14986:3994":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"2:39911:6668":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"2:2437:103":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"1:11354:2240":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"5:786:102":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"17:13412:3598":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"}},"external_crates":{"20":{"name":"semver","html_root_url":"https://docs.rs/semver/1.0.21/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":28}