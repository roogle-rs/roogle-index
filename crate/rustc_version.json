{"root":"0:0:1866","crate_version":"0.4.0","includes_private":false,"index":{"0:136:686":{"id":"0:136:686","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[279,9],"end":[279,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9393:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9382:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:149:1850":{"id":"0:149:1850","crate_id":0,"name":"SemVerError","span":{"filename":"src/lib.rs","begin":[356,4],"end":[356,30]},"visibility":"default","docs":"An error occurred in parsing the semver.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:151:1659"]},"discriminant":null}}},"0:35:712":{"id":"0:35:712","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[296,4],"end":[298,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["e",{"resolved_path":{"name":"num::ParseIntError","id":"2:22261:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2765:223-0:95:1756":{"id":"a:2:2765:223-0:95:1756","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2765:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:108":{"id":"0:108","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,23],"end":[147,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2776:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12315:29937":{"id":"2:12315:29937","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12316:29933"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:43999:2193","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:21:1741":{"id":"0:21:1741","crate_id":0,"name":"from_str","span":{"filename":"src/lib.rs","begin":[109,4],"end":[143,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"0:45:212","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:11949:1716","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12361:31638":{"id":"2:12361:31638","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41763:183","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:2182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11994:2182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12009:2183","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:119:747":{"id":"0:119:747","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[147,55],"end":[147,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9642:145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3401-0:75:1733":{"id":"b:2:3401-0:75:1733","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:2233","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3399:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1733","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3403:1538"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12290:31628":{"id":"2:12290:31628","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:15-20:299:1718":{"id":"0:15-20:299:1718","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[66,0],"end":[66,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"semver::Version","name":"Version","id":"20:299:1718","glob":false}}},"2:12300:1818":{"id":"2:12300:1818","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41765:181"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41763:183","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10083:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10083:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:121:1740":{"id":"0:121:1740","crate_id":0,"name":"LlvmVersionParseError","span":{"filename":"src/lib.rs","begin":[280,0],"end":[293,1]},"visibility":"public","docs":"LLVM Version Parse Error","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:122:1827","0:125:1747","0:127:1750","0:129:1831","0:131:1752","0:133:1754"],"impls":["a:2:2765:223-0:121:1740","a:2:8523:8115-0:121:1740","a:2:2822:2234-0:121:1740","a:2:2782:231-0:121:1740","a:2:8522:7992-0:121:1740","b:2:2560-0:121:1740","b:2:2263-0:121:1740","b:2:2571-0:121:1740","b:2:2566-0:121:1740","b:2:2266-0:121:1740","b:2:2556-0:121:1740","b:2:3401-0:121:1740","b:5:5771-0:121:1740","0:36","0:164","0:34","0:135","0:38"]}}},"2:12349:31636":{"id":"2:12349:31636","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:11989:2189","str::split":"2:12337:1743","prim@char":"1:12033:428","str::split_terminator":"2:12346:31635"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43793:2214","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:2182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11994:2182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12009:2183","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:157:1659":{"id":"0:157:1659","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[360,21],"end":[360,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:12409:24909":{"id":"2:12409:24909","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2822:2234-0:95:1756":{"id":"a:2:2822:2234-0:95:1756","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2822:2234","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:63":{"id":"0:63","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,26],"end":[71,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2775:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1720","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5526:32313":{"id":"5:5526:32313","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:276:2186","`String`":"5:7449:227"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:2186","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7182:5615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:158":{"id":"0:158","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[340,9],"end":[340,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9418:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:159:686"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:118":{"id":"0:118","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,55],"end":[147,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9634:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:119:747"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12393:27079":{"id":"2:12393:27079","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12033:428","self::pattern":"2:11989:2189"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41763:183","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:2182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11994:2182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12009:2183","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:114":{"id":"0:114","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,38],"end":[147,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2363:184","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:115:439"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:105:432":{"id":"0:105:432","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[147,9],"end":[147,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"VersionMeta","id":"0:95:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12380:31644":{"id":"2:12380:31644","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2266-0:121:1740":{"id":"b:2:2266-0:121:1740","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:2233","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2260:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2268:24255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2266-0:95:1756":{"id":"b:2:2266-0:95:1756","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:2233","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2260:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2268:24255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8522:7992-0:48:1720":{"id":"a:2:8522:7992-0:48:1720","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8522:7992","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1720","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2266-0:75:1733":{"id":"b:2:2266-0:75:1733","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:2233","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2260:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1733","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2268:24255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12302:27037":{"id":"2:12302:27037","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41765:181"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41763:183","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10083:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10083:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2765:223-0:121:1740":{"id":"a:2:2765:223-0:121:1740","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2765:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:5771-0:137:128":{"id":"b:5:5771-0:137:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9423:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:2233","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5769:235","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5773:1502"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:42":{"id":"0:42","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[384,0],"end":[396,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["source","type_id","provide","description","cause"],"trait":{"name":"Error","id":"2:2618:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:43:1840"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12314:6406":{"id":"2:12314:6406","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43711:2195","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12316:29933":{"id":"2:12316:29933","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12315:29937"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:44008:2191","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12337:1743":{"id":"2:12337:1743","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:11989:2189","`DoubleEndedIterator`":"2:7438:121","prim@char":"1:12033:428","str::split_whitespace":"2:12315:29937","str::rsplit":"2:12343:27072"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43725:2211","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:2182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5509":{"id":"5:5509","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5510:32309","5:5511:13451","5:5514:32310","5:5517:32311","5:5525:32312","5:5526:32313","5:5527:2745","5:5528:24907","5:5529:24908"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12370:31640":{"id":"2:12370:31640","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:11989:2189","`DoubleEndedIterator`":"2:7438:121","prim@char":"1:12033:428","str::rmatch_indices":"2:12373:31641"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:43875:2206","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:2182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2822:2234-0:121:1740":{"id":"a:2:2822:2234-0:121:1740","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2822:2234","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2765:223-0:137:128":{"id":"a:2:2765:223-0:137:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2765:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2566-0:137:128":{"id":"b:2:2566-0:137:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2536:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:128","2:2570:1525"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:61":{"id":"0:61","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,22],"end":[71,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2332:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1720","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:92":{"id":"0:92","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,55],"end":[90,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9634:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1733","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:93:747"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:45:212":{"id":"0:45:212","crate_id":0,"name":"Result","span":{"filename":"src/lib.rs","begin":[417,0],"end":[417,58]},"visibility":"public","docs":"The result type for this crate.","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"std::result::Result","id":"2:41908:212","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"E"}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]}}}},"2:3403:1538":{"id":"2:3403:1538","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39610:5725","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2556-0:75:1733":{"id":"b:2:2556-0:75:1733","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2533:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1733","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2559:1784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5773:1502":{"id":"5:5773:1502","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12358:31637":{"id":"2:12358:31637","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41763:183","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:2182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2263-0:48:1720":{"id":"b:2:2263-0:48:1720","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:2233","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2257:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1720","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2265:2079"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:100:1765":{"id":"0:100:1765","crate_id":0,"name":"channel","span":{"filename":"src/lib.rs","begin":[162,4],"end":[162,24]},"visibility":"public","docs":"Release channel of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Channel","id":"0:48:1720","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:78":{"id":"0:78","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,9],"end":[90,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2279:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1733","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:79:432"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2263-0:95:1756":{"id":"b:2:2263-0:95:1756","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:2233","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2257:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2265:2079"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:40":{"id":"0:40","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[363,0],"end":[382,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9423:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:41:686"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2562:712":{"id":"2:2562:712","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:96:1717":{"id":"0:96:1717","crate_id":0,"name":"semver","span":{"filename":"src/lib.rs","begin":[150,4],"end":[150,23]},"visibility":"public","docs":"Version of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Version","id":"20:299:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:57":{"id":"0:57","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,9],"end":[71,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2777:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1720","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:49:1722":{"id":"0:49:1722","crate_id":0,"name":"Dev","span":{"filename":"src/lib.rs","begin":[74,4],"end":[74,7]},"visibility":"default","docs":"Development release channel","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:17":{"id":"0:17","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[100,0],"end":[104,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9423:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1733","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:18:686"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:87:628":{"id":"0:87:628","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[90,27],"end":[90,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1733","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:88":{"id":"0:88","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,38],"end":[90,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2363:184","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1733","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:89:439"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:152:1813":{"id":"0:152:1813","crate_id":0,"name":"UnknownPreReleaseTag","span":{"filename":"src/lib.rs","begin":[358,4],"end":[358,32]},"visibility":"default","docs":"The pre-release tag is unknown.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:154:1659"]},"discriminant":null}}},"2:12299:319":{"id":"2:12299:319","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12050:1547"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12329:2588":{"id":"2:12329:2588","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41765:181","prim@char":"1:12033:428","self::pattern":"2:11989:2189"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41763:183","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:2182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:90":{"id":"0:90","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,43],"end":[90,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","gt","lt","ge"],"trait":{"name":"PartialOrd","id":"2:2369:191","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1733","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1733","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:91:1058"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8523:8115-0:75:1733":{"id":"a:2:8523:8115-0:75:1733","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8523:8115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1733","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:101:751":{"id":"0:101:751","crate_id":0,"name":"host","span":{"filename":"src/lib.rs","begin":[165,4],"end":[165,20]},"visibility":"public","docs":"Host target triple of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:12320:27077":{"id":"2:12320:27077","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12033:428","self::pattern":"2:11989:2189"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:2182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:81:686":{"id":"0:81:686","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[90,16],"end":[90,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9393:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9382:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:89:439":{"id":"0:89:439","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[90,38],"end":[90,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1733","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31084:185","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3401-0:121:1740":{"id":"b:2:3401-0:121:1740","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:2233","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3399:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3403:1538"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:36":{"id":"0:36","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[301,0],"end":[324,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9423:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:37:686"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8522:7992-0:121:1740":{"id":"a:2:8522:7992-0:121:1740","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8522:7992","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12312:6512":{"id":"2:12312:6512","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12033:428"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43695:2197","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5528:24907":{"id":"5:5528:24907","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12410:24910"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12382:31645":{"id":"2:12382:31645","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:71:747":{"id":"0:71:747","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[71,54],"end":[71,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9642:145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:86":{"id":"0:86","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,27],"end":[90,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2327:190","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1733","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1733","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:87:628"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:146:1659":{"id":"0:146:1659","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[352,14],"end":[352,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"str::Utf8Error","id":"2:43669:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:2556-0:121:1740":{"id":"b:2:2556-0:121:1740","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2533:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2559:1784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:97:1759":{"id":"0:97:1759","crate_id":0,"name":"commit_hash","span":{"filename":"src/lib.rs","begin":[153,4],"end":[153,35]},"visibility":"public","docs":"Git short hash of the build of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41763:183","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"2:12414:7984":{"id":"2:12414:7984","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4542:7984"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:44033:2202","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2782:231-0:75:1733":{"id":"a:2:2782:231-0:75:1733","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2782:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1733","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:77:1737":{"id":"0:77:1737","crate_id":0,"name":"minor","span":{"filename":"src/lib.rs","begin":[96,4],"end":[96,18]},"visibility":"public","docs":"Minor version","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u64"}}},"0:34":{"id":"0:34","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[295,0],"end":[299,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2533:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ParseIntError","id":"2:22261:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:35:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12304:27038":{"id":"2:12304:27038","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10083:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10083:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:680-0:48:1720":{"id":"b:5:680-0:48:1720","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2279:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:234","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1720","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:2607","5:683:1814","5:684:2608"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:163:712":{"id":"0:163:712","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["e",{"resolved_path":{"name":"semver::Error","id":"20:220:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:142:1782":{"id":"0:142:1782","crate_id":0,"name":"stdout","span":{"filename":"src/lib.rs","begin":[347,8],"end":[347,22]},"visibility":"default","docs":"stdout output from the command","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:53:1726":{"id":"0:53:1726","crate_id":0,"name":"Beta","span":{"filename":"src/lib.rs","begin":[78,4],"end":[78,8]},"visibility":"default","docs":"Beta release channel","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:2559:1784":{"id":"2:2559:1784","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2533:133"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8523:8115-0:95:1756":{"id":"a:2:8523:8115-0:95:1756","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8523:8115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:23":{"id":"0:23","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[174,0],"end":[191,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:24:1772"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12415:31653":{"id":"2:12415:31653","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4539:31653"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:44042:2203","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5517:32311":{"id":"5:5517:32311","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7449:227"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2765:223-0:75:1733":{"id":"a:2:2765:223-0:75:1733","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2765:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1733","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2822:2234-0:48:1720":{"id":"a:2:2822:2234-0:48:1720","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2822:2234","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1720","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2569:128":{"id":"2:2569:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"a:2:2765:223-0:48:1720":{"id":"a:2:2765:223-0:48:1720","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2765:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1720","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12296:27019":{"id":"2:12296:27019","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11549:1787"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2570:1525":{"id":"2:2570:1525","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41908:212","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8522:7992-0:75:1733":{"id":"a:2:8522:7992-0:75:1733","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8522:7992","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1733","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:106":{"id":"0:106","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,16],"end":[147,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9418:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:107:686"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:73":{"id":"0:73","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,60],"end":[71,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9418:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1720","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:74:686"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12289:2550":{"id":"2:12289:2550","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2263-0:121:1740":{"id":"b:2:2263-0:121:1740","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:2233","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2257:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2265:2079"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2560-0:48:1720":{"id":"b:2:2560-0:48:1720","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2533:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1720","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2562:712"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12318:31634":{"id":"2:12318:31634","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:43989:2205","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12364:2094":{"id":"2:12364:2094","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:11989:2189","`DoubleEndedIterator`":"2:7438:121","prim@char":"1:12033:428","str::rmatches":"2:12367:31639"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:43929:2208","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:2182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2566-0:75:1733":{"id":"b:2:2566-0:75:1733","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2536:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1733","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:128","2:2570:1525"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:680-0:95:1756":{"id":"b:5:680-0:95:1756","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2279:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:234","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:2607","5:683:1814","5:684:2608"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12297:31631":{"id":"2:12297:31631","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:59:432":{"id":"0:59:432","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[71,15],"end":[71,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Channel","id":"0:48:1720","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:83":{"id":"0:83","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,23],"end":[90,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2332:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1733","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5527:2745":{"id":"5:5527:2745","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7449:227"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:104":{"id":"0:104","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,9],"end":[147,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2279:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:105:432"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:140:1659":{"id":"0:140:1659","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[343,27],"end":[343,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"io::Error","id":"1:2920:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:12411:24911":{"id":"2:12411:24911","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:116":{"id":"0:116","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,43],"end":[147,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","gt","lt","ge"],"trait":{"name":"PartialOrd","id":"2:2369:191","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"VersionMeta","id":"0:95:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:117:1058"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2782:231-0:48:1720":{"id":"a:2:2782:231-0:48:1720","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2782:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1720","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12352:1802":{"id":"2:12352:1802","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12033:428","self::pattern":"2:11989:2189","str::rsplitn":"2:12355:27075"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43829:2213","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:2182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12399:31650":{"id":"2:12399:31650","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12033:428","self::pattern":"2:11989:2189"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:2182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:38":{"id":"0:38","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[326,0],"end":[337,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["source","type_id","provide","description","cause"],"trait":{"name":"Error","id":"2:2618:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:39:1840"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2556-0:95:1756":{"id":"b:2:2556-0:95:1756","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2533:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2559:1784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2571-0:75:1733":{"id":"b:2:2571-0:75:1733","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1733","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2574:128","2:2575:1524"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2782:231-0:121:1740":{"id":"a:2:2782:231-0:121:1740","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2782:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:39:1840":{"id":"0:39:1840","crate_id":0,"name":"source","span":{"filename":"src/lib.rs","begin":[327,4],"end":[336,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41763:183","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"dyn_trait":{"traits":[{"trait":{"name":"error::Error","id":"2:2618:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5529:24908":{"id":"5:5529:24908","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12411:24911"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:0:1866":{"id":"0:0:1866","crate_id":0,"name":"rustc_version","span":{"filename":"src/lib.rs","begin":[9,0],"end":[417,58]},"visibility":"public","docs":"Simple library for getting the version information of a `rustc`\ncompiler.\n\nThis can be used by build scripts or other tools dealing with Rust sources\nto make decisions based on the version of the compiler.\n\nIt calls `$RUSTC --version -v` and parses the output, falling\nback to `rustc` if `$RUSTC` is not set.\n\n# Example\n\n```rust\n// This could be a cargo build script\n\nuse rustc_version::{version, version_meta, Channel, Version};\n\n// Assert we haven't travelled back in time\nassert!(version().unwrap().major >= 1);\n\n// Set cfg flags depending on release channel\nmatch version_meta().unwrap().channel {\n    Channel::Stable => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_STABLE\");\n    }\n    Channel::Beta => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_BETA\");\n    }\n    Channel::Nightly => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_NIGHTLY\");\n    }\n    Channel::Dev => {\n        println!(\"cargo:rustc-cfg=RUSTC_IS_DEV\");\n    }\n}\n\n// Check for a minimum version\nif version().unwrap() >= Version::parse(\"1.4.0\").unwrap() {\n    println!(\"cargo:rustc-cfg=compiler_has_important_bugfix\");\n}\n```","links":{},"attrs":["#![warn(missing_docs)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:15-20:299:1718","0:48:1720","0:75:1733","0:95:1756","0:25:1617","0:26:1789","0:28:1786","0:121:1740","0:137:128","0:45:212"],"is_stripped":false}}},"0:137:128":{"id":"0:137:128","crate_id":0,"name":"Error","span":{"filename":"src/lib.rs","begin":[341,0],"end":[361,1]},"visibility":"public","docs":"The error type for this crate.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:138:1778","0:141:1781","0:144:1847","0:147:1823","0:149:1850","0:152:1813","0:155:1853"],"impls":["a:2:2765:223-0:137:128","a:2:8523:8115-0:137:128","a:2:2822:2234-0:137:128","a:2:2782:231-0:137:128","a:2:8522:7992-0:137:128","b:2:2560-0:137:128","b:2:2263-0:137:128","b:2:2571-0:137:128","b:2:2566-0:137:128","b:2:2266-0:137:128","b:2:2556-0:137:128","b:2:3401-0:137:128","b:5:5771-0:137:128","0:42","0:158","0:40","0:160","0:162","0:164"]}}},"0:122:1827":{"id":"0:122:1827","crate_id":0,"name":"ParseIntError","span":{"filename":"src/lib.rs","begin":[282,4],"end":[282,37]},"visibility":"default","docs":"An error occurred in parsing a version component as an integer","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:124:1659"]},"discriminant":null}}},"2:12346:31635":{"id":"2:12346:31635","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:11989:2189","str::split":"2:12337:1743","prim@char":"1:12033:428","`DoubleEndedIterator`":"2:7438:121","str::rsplit_terminator":"2:12349:31636"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43775:2215","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:2182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8522:7992-0:137:128":{"id":"a:2:8522:7992-0:137:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8522:7992","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:12376:31642":{"id":"2:12376:31642","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2560-0:137:128":{"id":"b:2:2560-0:137:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2533:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2562:712"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12340:27070":{"id":"2:12340:27070","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12033:428","self::pattern":"2:11989:2189"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:11805:2192","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:2182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:141:1781":{"id":"0:141:1781","crate_id":0,"name":"CommandError","span":{"filename":"src/lib.rs","begin":[345,4],"end":[350,5]},"visibility":"default","docs":"Error output from the command that was run.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"struct":{"fields":["0:142:1782","0:143:1785"],"fields_stripped":false}},"discriminant":null}}},"0:60":{"id":"0:60","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,22],"end":[71,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2776:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1720","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:41:686":{"id":"0:41:686","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[364,4],"end":[381,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9393:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9382:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:127:1750":{"id":"0:127:1750","crate_id":0,"name":"ComponentMustNotHaveSign","span":{"filename":"src/lib.rs","begin":[286,4],"end":[286,28]},"visibility":"default","docs":"A version component has a sign","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"5:5511:13451":{"id":"5:5511:13451","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7449:227"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:2182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:143:1785":{"id":"0:143:1785","crate_id":0,"name":"stderr","span":{"filename":"src/lib.rs","begin":[349,8],"end":[349,22]},"visibility":"default","docs":"stderr output from the command","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:109":{"id":"0:109","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,23],"end":[147,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2332:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:135":{"id":"0:135","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[279,9],"end":[279,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9418:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:136:686"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:144:1847":{"id":"0:144:1847","crate_id":0,"name":"Utf8Error","span":{"filename":"src/lib.rs","begin":[352,4],"end":[352,29]},"visibility":"default","docs":"The output of `rustc -vV` was not valid utf-8.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:146:1659"]},"discriminant":null}}},"0:70":{"id":"0:70","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,54],"end":[71,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9634:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1720","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:71:747"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:93:747":{"id":"0:93:747","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[90,55],"end":[90,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9642:145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12408:28191":{"id":"2:12408:28191","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39797:27018","Self::is_ascii":"2:12407:24905"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41763:183","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39797:27018","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12287":{"id":"2:12287","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12288:833","2:12289:2550","2:12290:31628","2:12291:31629","2:12293:31630","2:12296:27019","2:12297:31631","2:12298:320","2:12299:319","2:12300:1818","2:12302:27037","2:12304:27038","2:12306:27039","2:12308:31632","2:12309:31633","2:12310:27061","2:12311:27062","2:12312:6512","2:12313:6522","2:12314:6406","2:12315:29937","2:12316:29933","2:12317:1798","2:12318:31634","2:12319:29930","2:12320:27077","2:12323:1746","2:12326:27078","2:12329:2588","2:12333:2549","2:12337:1743","2:12340:27070","2:12343:27072","2:12346:31635","2:12349:31636","2:12352:1802","2:12355:27075","2:12358:31637","2:12361:31638","2:12364:2094","2:12367:31639","2:12370:31640","2:12373:31641","2:12376:31642","2:12378:31643","2:12380:31644","2:12382:31645","2:12383:31646","2:12384:31647","2:12387:31648","2:12390:24552","2:12393:27079","2:12396:31649","2:12399:31650","2:12402:31651","2:12405:1751","2:12407:24905","2:12408:28191","2:12409:24909","2:12410:24910","2:12411:24911","2:12412:31652","2:12414:7984","2:12415:31653"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:112":{"id":"0:112","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,27],"end":[147,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2327:190","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"VersionMeta","id":"0:95:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:113:628"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12383:31646":{"id":"2:12383:31646","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2560-0:75:1733":{"id":"b:2:2560-0:75:1733","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2533:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1733","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2562:712"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2782:231-0:95:1756":{"id":"a:2:2782:231-0:95:1756","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2782:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8523:8115-0:48:1720":{"id":"a:2:8523:8115-0:48:1720","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8523:8115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1720","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2263-0:75:1733":{"id":"b:2:2263-0:75:1733","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:2233","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2257:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1733","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2265:2079"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8523:8115-0:137:128":{"id":"a:2:8523:8115-0:137:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8523:8115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:2265:2079":{"id":"2:2265:2079","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2571-0:137:128":{"id":"b:2:2571-0:137:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2574:128","2:2575:1524"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:115:439":{"id":"0:115:439","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[147,38],"end":[147,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"VersionMeta","id":"0:95:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31084:185","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:124:1659":{"id":"0:124:1659","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[282,18],"end":[282,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"num::ParseIntError","id":"2:22261:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"a:2:2822:2234-0:75:1733":{"id":"a:2:2822:2234-0:75:1733","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2822:2234","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1733","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2268:24255":{"id":"2:2268:24255","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2266-0:48:1720":{"id":"b:2:2266-0:48:1720","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:2233","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2260:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1720","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2268:24255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:69:1058":{"id":"0:69:1058","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[71,42],"end":[71,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Channel","id":"0:48:1720","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:41763:183","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31084:185","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:138:1778":{"id":"0:138:1778","crate_id":0,"name":"CouldNotExecuteCommand","span":{"filename":"src/lib.rs","begin":[343,4],"end":[343,37]},"visibility":"default","docs":"An error occurred while trying to find the `rustc` to run.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:140:1659"]},"discriminant":null}}},"2:12293:31630":{"id":"2:12293:31630","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12291:31629"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:67:439":{"id":"0:67:439","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[71,37],"end":[71,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Channel","id":"0:48:1720","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31084:185","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:85":{"id":"0:85","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,27],"end":[90,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2775:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1733","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:147:1823":{"id":"0:147:1823","crate_id":0,"name":"UnexpectedVersionFormat","span":{"filename":"src/lib.rs","begin":[354,4],"end":[354,27]},"visibility":"default","docs":"The output of `rustc -vV` was not in the expected format.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12308:31632":{"id":"2:12308:31632","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12039:1444","str::slice_mut_unchecked":"2:12309:31633","crate::ops::Index":"2:3062:8008"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:103:1770":{"id":"0:103:1770","crate_id":0,"name":"llvm_version","span":{"filename":"src/lib.rs","begin":[171,4],"end":[171,41]},"visibility":"public","docs":"Version of LLVM used by the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41763:183","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1733","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:133:1754":{"id":"0:133:1754","crate_id":0,"name":"TooManyComponents","span":{"filename":"src/lib.rs","begin":[292,4],"end":[292,21]},"visibility":"default","docs":"Too many components","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:91:1058":{"id":"0:91:1058","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[90,43],"end":[90,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1733","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:41763:183","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31084:185","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:64":{"id":"0:64","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,26],"end":[71,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2327:190","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Channel","id":"0:48:1720","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1720","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:65:628"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12310:27061":{"id":"2:12310:27061","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:12311:27062"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:683:1814":{"id":"5:683:1814","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:684:2608":{"id":"5:684:2608","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2822:2234-0:137:128":{"id":"a:2:2822:2234-0:137:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2822:2234","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:159:686":{"id":"0:159:686","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[340,9],"end":[340,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9393:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9382:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8522:7992-0:95:1756":{"id":"a:2:8522:7992-0:95:1756","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8522:7992","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5510:32309":{"id":"5:5510:32309","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:2186","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7182:5615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:276:2186","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}},{"type":{"resolved_path":{"name":"Global","id":"5:7182:5615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2560-0:121:1740":{"id":"b:2:2560-0:121:1740","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2533:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2562:712"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2560-0:95:1756":{"id":"b:2:2560-0:95:1756","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2533:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2562:712"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:51:1724":{"id":"0:51:1724","crate_id":0,"name":"Nightly","span":{"filename":"src/lib.rs","begin":[76,4],"end":[76,11]},"visibility":"default","docs":"Nightly release channel","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:2782:231-0:137:128":{"id":"a:2:2782:231-0:137:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2782:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:75:1733":{"id":"0:75:1733","crate_id":0,"name":"LlvmVersion","span":{"filename":"src/lib.rs","begin":[91,0],"end":[98,1]},"visibility":"public","docs":"LLVM version\n\nLLVM's version numbering scheme is not semver compatible until version 4.0\n\nrustc [just prints the major and minor versions], so other parts of the version are not included.\n\n[just prints the major and minor versions]: https://github.com/rust-lang/rust/blob/b5c9e2448c9ace53ad5c11585803894651b18b0a/compiler/rustc_codegen_llvm/src/llvm_util.rs#L173-L178","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:76:1735","0:77:1737"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2765:223-0:75:1733","a:2:8523:8115-0:75:1733","a:2:2822:2234-0:75:1733","a:2:2782:231-0:75:1733","a:2:8522:7992-0:75:1733","b:2:2560-0:75:1733","b:2:2263-0:75:1733","b:2:2571-0:75:1733","b:2:2566-0:75:1733","b:2:2266-0:75:1733","b:2:2556-0:75:1733","b:2:3401-0:75:1733","b:5:680-0:75:1733","b:5:5771-0:75:1733","0:85","0:17","0:83","0:82","0:92","0:80","0:19","0:86","0:88","0:78","0:90"]}}},"0:19":{"id":"0:19","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[106,0],"end":[144,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:11949:1716","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1733","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:20:127","0:21:1741"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:160":{"id":"0:160","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2533:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Utf8Error","id":"2:43669:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:161:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12387:31648":{"id":"2:12387:31648","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12033:428","self::pattern":"2:11989:2189"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:2182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12317:1798":{"id":"2:12317:1798","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:43979:2204","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2571-0:95:1756":{"id":"b:2:2571-0:95:1756","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2574:128","2:2575:1524"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12343:27072":{"id":"2:12343:27072","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:11989:2189","`DoubleEndedIterator`":"2:7438:121","prim@char":"1:12033:428","str::split":"2:12337:1743"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43743:2210","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:2182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11994:2182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12009:2183","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2571-0:121:1740":{"id":"b:2:2571-0:121:1740","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2574:128","2:2575:1524"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:26:1789":{"id":"0:26:1789","crate_id":0,"name":"version_meta","span":{"filename":"src/lib.rs","begin":[200,0],"end":[204,1]},"visibility":"public","docs":"Returns the `rustc` SemVer version and additional metadata\nlike the git short hash and build date.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Result","id":"0:45:212","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"VersionMeta","id":"0:95:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2266-0:137:128":{"id":"b:2:2266-0:137:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:2233","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2260:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2268:24255"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12326:27078":{"id":"2:12326:27078","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12033:428","self::pattern":"2:11989:2189"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:2182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11994:2182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12009:2183","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2575:1524":{"id":"2:2575:1524","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:41908:212","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:107:686":{"id":"0:107:686","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[147,16],"end":[147,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9393:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9382:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12402:31651":{"id":"2:12402:31651","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12033:428","self::pattern":"2:11989:2189"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:2182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11994:2182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12009:2183","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:74:686":{"id":"0:74:686","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[71,60],"end":[71,65]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9393:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9382:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:20:127":{"id":"0:20:127","crate_id":0,"name":"Err","span":{"filename":"src/lib.rs","begin":[107,4],"end":[107,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:154:1659":{"id":"0:154:1659","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[358,25],"end":[358,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:12309:31633":{"id":"2:12309:31633","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12039:1444","crate::ops::IndexMut":"2:3066:8009","str::slice_unchecked":"2:12308:31632"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12410:24910":{"id":"2:12410:24910","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5771-0:121:1740":{"id":"b:5:5771-0:121:1740","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9423:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:2233","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5769:235","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5773:1502"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:162":{"id":"0:162","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2533:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Error","id":"20:220:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:163:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12291:31629":{"id":"2:12291:31629","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:79:432":{"id":"0:79:432","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[90,9],"end":[90,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1733","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12313:6522":{"id":"2:12313:6522","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12033:428"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43701:2196","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12311:27062":{"id":"2:12311:27062","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12310:27061"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2263-0:137:128":{"id":"b:2:2263-0:137:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:2233","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2257:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2265:2079"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:102:1768":{"id":"0:102:1768","crate_id":0,"name":"short_version_string","span":{"filename":"src/lib.rs","begin":[168,4],"end":[168,36]},"visibility":"public","docs":"Short version string of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"5:5525:32312":{"id":"5:5525:32312","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7449:227"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:151:1659":{"id":"0:151:1659","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[356,16],"end":[356,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"semver::Error","id":"20:220:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:3401-0:48:1720":{"id":"b:2:3401-0:48:1720","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:2233","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3399:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1720","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3403:1538"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12288:833":{"id":"2:12288:833","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12033:428"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12407:24905":{"id":"2:12407:24905","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5514:32310":{"id":"5:5514:32310","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7449:227"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:2182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:43:1840":{"id":"0:43:1840","crate_id":0,"name":"source","span":{"filename":"src/lib.rs","begin":[385,4],"end":[395,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41763:183","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"dyn_trait":{"traits":[{"trait":{"name":"error::Error","id":"2:2618:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12412:31652":{"id":"2:12412:31652","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4541:31652"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:44024:2201","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:58":{"id":"0:58","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,15],"end":[71,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2279:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1720","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:59:432"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:82":{"id":"0:82","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,23],"end":[90,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2776:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1733","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2566-0:121:1740":{"id":"b:2:2566-0:121:1740","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2536:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:128","2:2570:1525"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12323:1746":{"id":"2:12323:1746","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:12033:428","self::pattern":"2:11989:2189"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:2182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12333:2549":{"id":"2:12333:2549","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41765:181","prim@char":"1:12033:428","self::pattern":"2:11989:2189"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41763:183","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:2182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11994:2182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12009:2183","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12367:31639":{"id":"2:12367:31639","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:11989:2189","`DoubleEndedIterator`":"2:7438:121","prim@char":"1:12033:428","str::matches":"2:12364:2094"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:43947:2209","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:2182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11994:2182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12009:2183","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:125:1747":{"id":"0:125:1747","crate_id":0,"name":"ComponentMustNotHaveLeadingZeros","span":{"filename":"src/lib.rs","begin":[284,4],"end":[284,36]},"visibility":"default","docs":"A version component must not have leading zeros","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12319:29930":{"id":"2:12319:29930","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:44017:2190","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2566-0:95:1756":{"id":"b:2:2566-0:95:1756","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2536:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:128","2:2570:1525"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12306:27039":{"id":"2:12306:27039","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10083:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10083:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:25:1617":{"id":"0:25:1617","crate_id":0,"name":"version","span":{"filename":"src/lib.rs","begin":[194,0],"end":[196,1]},"visibility":"public","docs":"Returns the `rustc` SemVer version.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Result","id":"0:45:212","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Version","id":"20:299:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8523:8115-0:121:1740":{"id":"a:2:8523:8115-0:121:1740","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8523:8115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:164":{"id":"0:164","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2533:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:165:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:68":{"id":"0:68","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,42],"end":[71,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["le","gt","lt","ge"],"trait":{"name":"PartialOrd","id":"2:2369:191","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Channel","id":"0:48:1720","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1720","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:69:1058"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:18:686":{"id":"0:18:686","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[101,4],"end":[103,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9393:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9382:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:99:1763":{"id":"0:99:1763","crate_id":0,"name":"build_date","span":{"filename":"src/lib.rs","begin":[159,4],"end":[159,34]},"visibility":"public","docs":"Build date of the compiler; this was removed between Rust 1.0.0 and 1.1.0.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41763:183","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:28:1786":{"id":"0:28:1786","crate_id":0,"name":"version_meta_for","span":{"filename":"src/lib.rs","begin":[209,0],"end":[262,1]},"visibility":"public","docs":"Parses a \"rustc -vV\" output string and returns\nthe SemVer version and additional metadata\nlike the git short hash and build date.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["verbose_version_string",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"0:45:212","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"VersionMeta","id":"0:95:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:113:628":{"id":"0:113:628","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[147,27],"end":[147,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"VersionMeta","id":"0:95:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:161:712":{"id":"0:161:712","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["e",{"resolved_path":{"name":"str::Utf8Error","id":"2:43669:1847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12405:1751":{"id":"2:12405:1751","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:11950:127","`FromStr`":"2:11949:1716"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41908:212","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:11949:1716","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:11949:1716","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:117:1058":{"id":"0:117:1058","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[147,43],"end":[147,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"VersionMeta","id":"0:95:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:41763:183","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31084:185","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3401-0:95:1756":{"id":"b:2:3401-0:95:1756","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:2233","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3399:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3403:1538"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2556-0:48:1720":{"id":"b:2:2556-0:48:1720","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2533:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1720","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2559:1784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:680-0:75:1733":{"id":"b:5:680-0:75:1733","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2279:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:234","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1733","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:2607","5:683:1814","5:684:2608"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2574:128":{"id":"2:2574:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32268:2138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:165:712":{"id":"0:165:712","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[410,0],"end":[414,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["e",{"resolved_path":{"name":"LlvmVersionParseError","id":"0:121:1740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12378:31643":{"id":"2:12378:31643","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:129:1831":{"id":"0:129:1831","crate_id":0,"name":"MinorVersionMustBeZeroAfter4","span":{"filename":"src/lib.rs","begin":[288,4],"end":[288,32]},"visibility":"default","docs":"Minor version component must be zero on LLVM versions later than 4.0","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12298:320":{"id":"2:12298:320","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12299:319","`u8`":"1:12050:1547"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:80":{"id":"0:80","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,16],"end":[90,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9418:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1733","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:81:686"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:37:686":{"id":"0:37:686","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[302,4],"end":[323,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9393:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9382:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3401-0:137:128":{"id":"b:2:3401-0:137:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:2233","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3399:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3403:1538"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12355:27075":{"id":"2:12355:27075","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12033:428","str::splitn":"2:12352:1802","self::pattern":"2:11989:2189"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43847:2212","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:2182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11994:2182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12009:2183","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12390:24552":{"id":"2:12390:24552","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12033:428","self::pattern":"2:11989:2189"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41763:183","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:2182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2566-0:48:1720":{"id":"b:2:2566-0:48:1720","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2536:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1720","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:128","2:2570:1525"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:95:1756":{"id":"0:95:1756","crate_id":0,"name":"VersionMeta","span":{"filename":"src/lib.rs","begin":[148,0],"end":[172,1]},"visibility":"public","docs":"Rustc version plus metadata like git short hash and build date.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:96:1717","0:97:1759","0:98:1761","0:99:1763","0:100:1765","0:101:751","0:102:1768","0:103:1770"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:23","a:2:2765:223-0:95:1756","a:2:8523:8115-0:95:1756","a:2:2822:2234-0:95:1756","a:2:2782:231-0:95:1756","a:2:8522:7992-0:95:1756","b:2:2560-0:95:1756","b:2:2263-0:95:1756","b:2:2571-0:95:1756","b:2:2566-0:95:1756","b:2:2266-0:95:1756","b:2:2556-0:95:1756","b:2:3401-0:95:1756","b:5:680-0:95:1756","0:114","0:118","0:111","0:106","0:109","0:108","0:104","0:112","0:116"]}}},"2:12384:31647":{"id":"2:12384:31647","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12033:428","self::pattern":"2:11989:2189"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:2182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11994:2182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12014:2181","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:98:1761":{"id":"0:98:1761","crate_id":0,"name":"commit_date","span":{"filename":"src/lib.rs","begin":[156,4],"end":[156,35]},"visibility":"public","docs":"Commit date of the compiler","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41763:183","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"5:682:2607":{"id":"5:682:2607","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:76:1735":{"id":"0:76:1735","crate_id":0,"name":"major","span":{"filename":"src/lib.rs","begin":[94,4],"end":[94,18]},"visibility":"public","docs":"Major version","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u64"}}},"0:65:628":{"id":"0:65:628","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[71,26],"end":[71,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Channel","id":"0:48:1720","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:66":{"id":"0:66","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,37],"end":[71,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2363:184","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1720","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:67:439"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2556-0:137:128":{"id":"b:2:2556-0:137:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2533:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:137:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2559:1784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:48:1720":{"id":"0:48:1720","crate_id":0,"name":"Channel","span":{"filename":"src/lib.rs","begin":[72,0],"end":[81,1]},"visibility":"public","docs":"Release channel of the compiler.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:49:1722","0:51:1724","0:53:1726","0:55:1728"],"impls":["a:2:2765:223-0:48:1720","a:2:8523:8115-0:48:1720","a:2:2822:2234-0:48:1720","a:2:2782:231-0:48:1720","a:2:8522:7992-0:48:1720","b:2:2560-0:48:1720","b:2:2263-0:48:1720","b:2:2571-0:48:1720","b:2:2566-0:48:1720","b:2:2266-0:48:1720","b:2:2556-0:48:1720","b:2:3401-0:48:1720","b:5:680-0:48:1720","0:60","0:64","0:70","0:58","0:61","0:63","0:68","0:57","0:73","0:66"]}}},"0:24:1772":{"id":"0:24:1772","crate_id":0,"name":"for_command","span":{"filename":"src/lib.rs","begin":[176,4],"end":[190,5]},"visibility":"public","docs":"Returns the version metadata for `cmd`, which should be a `rustc` command.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["cmd",{"resolved_path":{"name":"Command","id":"1:5446:1712","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:45:212","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"VersionMeta","id":"0:95:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:155:1853":{"id":"0:155:1853","crate_id":0,"name":"LlvmVersionError","span":{"filename":"src/lib.rs","begin":[360,4],"end":[360,43]},"visibility":"default","docs":"An error occurred in parsing a `LlvmVersion`.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:157:1659"]},"discriminant":null}}},"0:131:1752":{"id":"0:131:1752","crate_id":0,"name":"MinorVersionRequiredBefore4","span":{"filename":"src/lib.rs","begin":[290,4],"end":[290,31]},"visibility":"default","docs":"Minor version component is required on LLVM versions earlier than 4.0","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:55:1728":{"id":"0:55:1728","crate_id":0,"name":"Stable","span":{"filename":"src/lib.rs","begin":[80,4],"end":[80,10]},"visibility":"default","docs":"Stable release channel","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:111":{"id":"0:111","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[147,27],"end":[147,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2775:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"VersionMeta","id":"0:95:1756","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12373:31641":{"id":"2:12373:31641","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:11989:2189","`DoubleEndedIterator`":"2:7438:121","prim@char":"1:12033:428","str::match_indices":"2:12370:31640"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:43893:2207","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:2182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11994:2182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12009:2183","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12396:31649":{"id":"2:12396:31649","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12033:428","self::pattern":"2:11989:2189"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:2182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11994:2182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12009:2183","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5771-0:75:1733":{"id":"b:5:5771-0:75:1733","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9423:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:2233","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5769:235","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LlvmVersion","id":"0:75:1733","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5773:1502"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2571-0:48:1720":{"id":"b:2:2571-0:48:1720","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Channel","id":"0:48:1720","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2574:128","2:2575:1524"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}}},"paths":{"17:12711:3596":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"17:12196:3485":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"17:13949:3923":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"1:9137:6100":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"17:13693:3867":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"17:10084:7047":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"6:6589:5435":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:44042:2203":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:8235:7284":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"1:5500:2130":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"6:4887:5098":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"2:3250:13373":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"2:32308:4326":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"17:12465:3557":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"18:690:6173":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"17:12267:3509":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"2:22149:5634":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"2:42040:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:47940:6003":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"5:6637:2915":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2:10083:225":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:10514:2213":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:39797:27018":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"1:10578:3029":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"16:5743:6240":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"5:3581:2507":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2:40601:6469":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"2:46306:5931":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"2:12827:140":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"6:7546:5593":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"2:46660:5941":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:8178:2721":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"6:5836:5259":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"17:9780:7037":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"16:7513:6356":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"1:7748:2673":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"1:2595:2724":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"6:4315:4847":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"17:13826:3892":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"16:2359:4119":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"2:45735:5905":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"16:6401:4145":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"16:5435:4202":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"2:47440:5997":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"17:9912:7039":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"5:7337:2123":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"1:11982:6621":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"17:9207:3275":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"2:46404:5935":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"17:12074:3464":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"16:8115:6367":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:32315:7226":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"16:7677:200":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"2:43847:2212":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"17:8765:20252":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"2:40378:29996":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:2877:13460":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"16:6513:6305":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"2:20973:8184":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"2:42001:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"2:10280:2211":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"18:96:24216":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"2:41069:2979":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"17:11062:7094":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"6:6618:5447":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"1:3741:7256":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"2:12585:151":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"17:11137:7100":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"16:5634:6229":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"1:12057:1160":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"6:5015:5167":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"17:13010:3655":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"2:44452:6540":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"17:13101:3671":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"17:256:7017":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"2:21:699":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"5:6798:2961":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"1:1426:144":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"6:4748:5031":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"9:52:19195":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"16:7694:4161":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"11:2194:4528":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"17:10575:6195":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"17:434:3223":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"16:7462:4329":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"17:13611:3855":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"17:13040:3660":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"17:10494:6188":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"2:46260:5930":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"17:12658:3588":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"14:221:4476":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"16:3915:4175":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:8631:2182":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"6:1663:4796":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"1:619:2698":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"2:20777:2383":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"5:4348:248":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:21274:8180":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"16:5727:6238":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"14:40:3435":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"2:45805:5908":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"5:1257:6352":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"17:8926:20257":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"16:6968:20197":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"18:564:3149":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"1:6898:3020":{"crate_id":1,"path":["std","sys","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"2:42529:2523":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"17:1184:7022":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"1:7852:3216":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"1:356:7239":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"16:3315:4168":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"1:1041:6352":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"17:11719:20265":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"17:13024:3658":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:2772:2233":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"2:22211:29984":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:2898:13464":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:3221:2740":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"17:1075:7021":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"6:5829:5255":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"1:2391:8032":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"5:6769:2948":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"6:5987:5343":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"17:10227:7054":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"17:11316:3364":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"6:1595:4743":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"17:14355:4050":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"17:13981:3932":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"17:12098:3468":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"6:4380:4893":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"18:624:33161":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:1554:2710":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"6:494:4622":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"6:526:4644":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"5:4393:2710":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"11:447:142":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"2:40653:6474":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"16:7884:20202":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"17:13723:3873":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"17:13966:3930":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"1:8166:2140":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"16:6545:4220":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"2:40408:2162":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"6:4781:5050":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"17:12846:3615":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"6:6775:5520":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"17:13188:3688":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"1:11037:3030":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"16:8134:6370":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"1:2918:212":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"20:90:7822":{"crate_id":20,"path":["semver","error","QuotedChar"],"kind":"struct"},"16:4774:4188":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"2:9435:2525":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"6:500:4624":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"5:5366:2188":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"11:2060:7182":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"16:7436:4328":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"17:14024:3944":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"2:7409:2240":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:11607:29199":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"6:1696:4812":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"5:5420:1444":{"crate_id":5,"path":["alloc","str"],"kind":"module"},"6:4729:5021":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:44324:6533":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"17:14042:3948":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"6:4810:5062":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"16:7613:7163":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"6:5008:5164":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"2:39445:202":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"6:1603:4748":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"16:5574:4144":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"17:12531:3568":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"1:4625:8050":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"6:4992:5159":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"6:4413:4912":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:1839:2670":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"16:5088:4198":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"16:5963:7108":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"2:2166:602":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:43275:6503":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"2:20818:30032":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"6:5979:5342":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"17:10547:6193":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"1:8146:2747":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:22885:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:8013:2736":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"2:8523:8115":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"2:40500:2722":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"18:574:3142":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:46049:5918":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:3007:2236":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"5:7365:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"16:5588:4147":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"11:97:6374":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"2:9429:2523":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"6:1520:4696":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"2:32322:2532":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"17:13792:3889":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"17:2150:20318":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"5:2223:32647":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"2:21397:8035":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"2:43979:2204":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"6:1631:4773":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:7661:7272":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"17:13632:3860":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"2:41814:2506":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"2:2834:8172":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"16:4497:4180":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"6:4716:5017":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"17:11151:7101":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:42079:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"17:12062:3461":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"1:3345:2728":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"2:4788:31409":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"17:14308:4038":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"17:10771:3314":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"5:1492:7172":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"17:9086:3271":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"17:9959:7043":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"2:7859:13437":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"2:41087:6489":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"18:636:3162":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"6:123:13863":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"1:1582:6385":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"6:4704:5010":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"20:385:2230":{"crate_id":20,"path":["semver","Prerelease"],"kind":"struct"},"9:237:5888":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"2:41900:195":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"17:8594:20239":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"2:21142:8187":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr"],"kind":"trait"},"2:22195:29994":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"2:2279:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"1:7687:3029":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"11:1663:144":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"5:3217:32674":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"17:10637:6202":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"6:6625:5451":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"11:798:7174":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"1:7641:8035":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"1:8317:6070":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"2:11989:2189":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"16:5866:6252":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"17:14173:3985":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:40551:6461":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"17:11098:7097":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"1:5633:3007":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"2:44468:6544":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"17:14126:3972":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"6:1557:4719":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"17:11742:3397":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"2:44480:5897":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"6:4842:5076":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"1:7528:3267":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"2:48034:6006":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"5:7412:2157":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"5:7545:2954":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"5:3568:163":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"2:2524:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"2:46358:5933":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:10430:2134":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"11:667:7172":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"17:12765:3604":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"1:7869:6027":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"2:2540:240":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"2:41045:6486":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"6:4496:4949":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"6:4524:4965":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"1:2365:8022":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"1:3895:1715":{"crate_id":1,"path":["std","num"],"kind":"module"},"2:2533:133":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:39624:5727":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:21841:8035":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"2:44160:6523":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:41763:183":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"11:1818:2507":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"2:10400:7215":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"6:4535:4970":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"1:2885:3003":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"1:7736:2763":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"9:0:1985":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"6:5882:5281":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"2:32329:6441":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"16:6456:6303":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"2:26142:250":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"2:2782:231":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"17:10036:3293":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"17:9521:7032":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"17:14076:3961":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"18:736:24226":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:9423:120":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"2:46526:5938":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:48153:6015":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"2:2332:125":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"2:7547:159":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:2903:13465":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:2488:13403":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"17:11872:3419":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"2:22522:179":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"1:10745:7314":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"2:40592:6468":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"2:30288:2691":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"6:5849:5268":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"17:12123:3471":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"1:7892:130":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"6:7552:5594":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:3300:2738":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"1:6252:3006":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"2:3160:8010":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"6:4963:5145":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:40491:7228":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"16:7862:6360":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"16:2881:4141":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"6:6711:5478":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"11:793:7186":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"1:11454:3035":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"17:14163:3980":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"5:7382:2159":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"15:306:19284":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"2:31084:185":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"5:4759:686":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"17:9372:3280":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"15:394:19294":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"16:7041:6344":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"16:6352:6296":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"5:1464:6381":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"16:5049:4197":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"1:940:7177":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"16:4462:4179":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"17:11074:7095":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"17:13778:3885":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"2:7855:2510":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"16:6189:6294":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"16:2618:4130":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:1757:5618":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"1:8339:5451":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"6:7523:5587":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"6:4489:4946":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:8982:7291":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"5:895:2507":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"14:187:19271":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"6:6720:5482":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"6:554:4659":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"20:400:2227":{"crate_id":20,"path":["semver","BuildMetadata"],"kind":"struct"},"5:3735:7193":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"17:11327:6217":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"16:2284:19303":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"1:3676:8044":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"17:14100:3966":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"20:320:2231":{"crate_id":20,"path":["semver","VersionReq"],"kind":"struct"},"6:4794:5055":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"16:6279:4212":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"17:11507:20263":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"18:660:7012":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"18:727:3166":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"1:8913:8146":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"16:8072:4386":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"1:5381:2126":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"1:11216:6112":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"5:1374:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"6:7505:5584":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"16:7597:33142":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"11:2033:6352":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"16:4806:4189":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"2:43683:2200":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:8968:6094":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:2822:2234":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"6:4685:4998":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"16:2321:4111":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"17:11261:6213":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"16:5760:20191":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"11:1822:2509":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"1:8502:8125":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"2:48074:6010":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"17:13739:3876":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"17:12225:3494":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"1:8335:7288":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"16:7006:7146":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"1:2379:8026":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"5:7529:2950":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"17:12237:3497":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:22753:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"2:10255:2508":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"17:11306:3361":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"5:3669:2915":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:6149:2995":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"11:836:7179":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"2:47020:5962":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"7:79:19170":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"17:11407:20261":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"0:0:1866":{"crate_id":0,"path":["rustc_version"],"kind":"module"},"1:10473:3028":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"1:3182:24770":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:2992:2512":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"16:5017:4196":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"1:11614:6581":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"1:3510:24983":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"1:1980:187":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"0:127:1750":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","ComponentMustNotHaveSign"],"kind":"variant"},"17:10916:7087":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"16:6376:20194":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"2:2924:13467":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"5:3238:6386":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:7359:13439":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"17:13876:3909":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"2:3223:13471":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"5:7253:200":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"11:1121:7185":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"17:14013:3940":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"2:2908:4288":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"6:5955:5330":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"14:31:7169":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"16:6041:20193":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"5:5128:2945":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"16:7582:4331":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"2:9634:141":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"5:207:2913":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"2:5593:6411":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"17:12911:3645":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"1:4497:8076":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"16:5612:4149":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"1:6598:8143":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"1:10787:6572":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"2:7115:2747":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:586:7983":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"16:2504:4125":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"2:7400:152":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"17:11295:6215":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"17:11845:3411":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"2:48016:6005":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:3112:2750":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"2:3929:2710":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"16:6204:7115":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"16:7651:7164":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"6:6067:5372":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"2:46160:5927":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"11:749:2932":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"1:919:7173":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"6:6565:5418":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"5:7282:2509":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"16:6156:6291":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"17:12172:3481":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"1:643:7986":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"2:40451:2175":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"2:44024:2201":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"2:44532:13585":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"0:26:1789":{"crate_id":0,"path":["rustc_version","version_meta"],"kind":"function"},"17:11661:3392":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"17:14001:3939":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"2:4040:13308":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:12043:658":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"1:555:7241":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"1:8283:6557":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"16:6499:4163":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"2:11074:7220":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"17:11389:7103":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"16:7015:4269":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"1:5051:7261":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"11:311:6378":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"2:6775:2561":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"17:504:7020":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"1:4569:8093":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"16:6879:4259":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"2:12882:7995":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"16:4527:4181":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"9:177:19244":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"1:2496:2731":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"2:41908:212":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"2:41079:5858":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"2:46382:5934":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"17:11086:7096":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"2:11115:13335":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"1:8823:2135":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"1:3223:2741":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"5:3330:2950":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"17:9896:20273":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"16:2788:4137":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"17:10366:7057":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"2:2536:241":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"17:9003:20260":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"2:9433:196":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"2:3278:13309":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:9057:24524":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"2:12215:112":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:8867:7290":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"1:5308:120":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"2:40634:6472":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"6:4420:4916":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"1:12004:7991":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"17:9242:3276":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"2:12003:2184":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"2:43989:2205":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"16:2744:4135":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"20:220:128":{"crate_id":20,"path":["semver","parse","Error"],"kind":"struct"},"2:4333:2532":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"2:44499:122":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"17:13676:3865":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"2:9437:2526":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"16:4921:4193":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"2:4140:6408":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:6433:7268":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"5:5975:13782":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"2:11754:6510":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"16:536:6222":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"2:40394:2160":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"2:1647:5617":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"17:13286:3702":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"5:7211:2932":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"2:40200:2202":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"2:21627:8193":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"17:8659:20237":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"6:4616:4991":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"5:2131:2931":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"1:7666:6026":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"16:4344:4177":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"17:9945:3291":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"16:149:2898":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"1:5974:3006":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"11:0:1987":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"11:285:6375":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"2:44715:161":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"17:8713:20251":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"1:3986:8048":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"2:43999:2193":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"5:5954:2945":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"15:288:19283":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"5:5612:2948":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"11:1845:6384":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"16:6318:4215":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"0:121:1740":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError"],"kind":"enum"},"2:22174:29979":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"2:44033:2202":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"5:6439:2932":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"5:1138:31608":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"2:39383:13312":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"1:10254:2143":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"16:4986:4195":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"11:844:7180":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"1:6813:8176":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"2:43613:7237":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"2:42157:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"6:6796:5534":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"16:7708:4162":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"17:14522:4093":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"2:44659:197":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"9:357:19192":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"17:3232:7028":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:48089:6011":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:4109:7206":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:0:1436":{"crate_id":1,"path":["std"],"kind":"module"},"17:13244:3695":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"1:8222:2211":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"1:4637:5464":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"1:9981:6494":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"1:7933:2735":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"1:3188:26852":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"6:4446:4927":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"1:868:6381":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"18:652:3142":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"17:14296:4035":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"2:41831:2508":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:22157:5635":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:22247:2693":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"16:4557:4182":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"6:6598:5441":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"17:12698:3594":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"1:10829:2140":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"1:6429:6486":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"11:399:33124":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"16:2670:4132":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"17:9488:33152":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"17:10788:20360":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"16:6742:6320":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"17:12184:3484":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"1:12056:1603":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"5:1776:2950":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"6:6705:5476":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:2893:13463":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"14:0:1989":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"16:6261:7141":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"5:6485:2915":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"1:8412:6081":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"5:1442:2509":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"5:6930:2962":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"1:414:165":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"1:362:7240":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"1:11518:7256":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"6:541:4653":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:44702:5900":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2:41976:185":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:10535:2742":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"1:10838:24528":{"crate_id":1,"path":["std","sys","unix","kernel_copy","FdHandle"],"kind":"enum"},"17:10507:6190":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"1:7862:6555":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"17:10340:3309":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"6:4664:4995":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"17:12724:3597":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"17:11547:3388":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"14:215:6372":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"16:2428:4122":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"2:2849:4279":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"1:10819:119":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"2:3238:135":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"18:515:3145":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"6:1506:4691":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"1:8118:2139":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"2:2176:13479":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"1:4475:8075":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"2:4254:7207":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"1:12055:809":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"2:3066:8009":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:3972:8047":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"9:450:19177":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"18:548:141":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:22819:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"12:0:1988":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"16:5661:6233":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"16:8294:128":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"6:4938:5134":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"17:3565:7030":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"6:4463:4933":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"6:7250:5568":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"6:6671:5470":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:12572:136":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"6:5793:5242":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"6:4917:5119":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"1:4964:8107":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"14:165:19264":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"1:10799:6027":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"1:5415:2128":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"2:20820:30028":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"0:144:1847":{"crate_id":0,"path":["rustc_version","Error","Utf8Error"],"kind":"variant"},"5:7221:2927":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"2:40366:2161":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:4237:7258":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"2:21280:8182":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:46479:5937":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"17:12810:3609":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"2:22720:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"17:14134:3973":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"5:2049:7193":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"16:7318:4308":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"6:7517:5586":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"18:590:3150":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"2:44303:13344":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"6:5890:5286":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:7852:2180":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"17:9607:7034":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"2:46336:5932":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"6:6744:5494":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"16:7621:20200":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"6:4818:5066":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"6:4456:4930":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"17:261:7018":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"5:3142:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"17:11586:3389":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"2:22273:2694":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"2:10528:2212":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:40833:6481":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"17:14033:3947":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"5:822:2921":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"2:44177:6524":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:39344:2511":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"16:8167:7168":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"2:40531:6458":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"0:75:1733":{"crate_id":0,"path":["rustc_version","LlvmVersion"],"kind":"struct"},"17:9531:33156":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"2:43633:7238":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:13802:3890":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"6:587:4677":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"6:1709:4816":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"18:80:24215":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:2618:128":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"8:0:1984":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"17:14499:4089":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"1:12039:1444":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"16:7342:33148":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"11:119:2902":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"5:4194:2710":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"16:6944:33143":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"1:11235:6099":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"1:6300:208":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"18:755:6182":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"2:40644:6473":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"2:48138:6014":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"17:11235:6212":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"2:40257:6446":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"17:12373:3521":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"11:1517:7187":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"6:4328:4857":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:43604:6426":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:12034:1563":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"17:10214:7053":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"1:11159:2136":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"2:22687:180":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"17:13228:3693":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"6:7599:5605":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"2:2869:8175":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:9103:167":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"5:3800:2950":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"6:4291:4830":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:9852:20272":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"2:21212:8035":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"16:6485:4146":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"5:7199:6401":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"15:327:19288":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"2:41967:2509":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"5:7425:2158":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"17:10698:7081":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"16:6893:4261":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"1:8544:6559":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"2:21731:29817":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"2:3062:8008":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"11:2174:4525":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:46212:5929":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"2:22134:29985":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"11:817:7177":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"16:3797:4172":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"17:9102:3272":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:14:1738":{"crate_id":2,"path":["core","write"],"kind":"macro"},"1:6073:1720":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"1:4742:8063":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"16:6753:6321":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"1:6646:219":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"16:3655:3175":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"1:10951:4590":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"16:4949:4194":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"17:14282:4029":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"2:22621:178":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"18:609:7011":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"17:10534:6192":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"6:4695:5005":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"20:335:2228":{"crate_id":20,"path":["semver","Comparator"],"kind":"struct"},"0:131:1752":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","MinorVersionRequiredBefore4"],"kind":"variant"},"17:10456:7070":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"0:55:1728":{"crate_id":0,"path":["rustc_version","Channel","Stable"],"kind":"variant"},"16:7544:6358":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"1:11539:7257":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"2:41658:5871":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"5:1503:7173":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"2:21373:8035":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"6:1681:4803":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:9478:129":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"2:41038:6485":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"2:4017:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"11:1538:7188":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"17:12888:3636":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"6:5877:5280":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"6:6607:5442":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"17:12154:3480":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"1:10774:6555":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"5:3178:6384":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"5:878:2923":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"16:8154:7165":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"6:1690:4809":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"16:7523:6357":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"11:630:2507":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"15:0:1990":{"crate_id":15,"path":["addr2line"],"kind":"module"},"17:10962:3348":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"17:12208:3486":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"1:881:6382":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"1:1761:625":{"crate_id":1,"path":["std","env"],"kind":"module"},"2:2886:4284":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"17:10738:7085":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"17:9137:3273":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"16:8239:4326":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"16:7054:6347":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"5:1118:31574":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"16:2810:4138":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"16:7792:20201":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"1:8229:2204":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"2:9418:112":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"17:14514:4090":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"2:44744:5903":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"6:4389:4898":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"5:4032:2915":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"1:3302:2739":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"17:9328:2195":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"1:4317:7259":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"6:7558:5595":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"1:8301:7287":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"5:3212:6383":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"17:11393:128":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:2881:13462":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"18:538:3147":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"1:12046:761":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"2:1831:5624":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"11:403:33125":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"16:7474:7156":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"2:3642:2509":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"16:7736:4338":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"2:2659:2701":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"2:11805:2192":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:4323:2970":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"5:4363:2939":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"0:49:1722":{"crate_id":0,"path":["rustc_version","Channel","Dev"],"kind":"variant"},"0:152:1813":{"crate_id":0,"path":["rustc_version","Error","UnknownPreReleaseTag"],"kind":"variant"},"11:1858:6386":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"6:568:4667":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"6:4650:4994":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"11:1501:19259":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"20:279:7297":{"crate_id":20,"path":["semver","error","Position"],"kind":"enum"},"13:110:33131":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"6:4606:4990":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"2:22082:6431":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"2:45990:5915":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"17:12024:3455":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"2:10231:2507":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"5:5839:2932":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"16:5982:6264":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"16:5121:4199":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"6:4395:4900":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"17:11281:3360":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"17:12086:3465":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"5:7231:32648":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"1:5395:2127":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"2:43743:2210":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"2:44641:207":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"6:1527:4699":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"17:12934:3646":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"14:202:13345":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"16:6531:6313":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"1:11383:6578":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"2:45781:5907":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"6:4543:4975":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"17:11710:3361":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"17:12983:3653":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"2:9119:30638":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"2:3233:237":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"6:4401:4903":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"18:531:6167":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"2:5387:2710":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"2:40227:30008":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"17:13838:3895":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"17:13758:3877":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"1:12052:1545":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"11:2130:19253":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"2:47050:5963":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"5:1288:7181":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"2:2369:191":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"17:11951:3438":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"2:43075:6502":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:21009:8186":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr"],"kind":"trait"},"16:2526:4126":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"5:6079:2710":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"1:7909:119":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"1:5565:2133":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"5:5318:2915":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"2:21023:13479":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"5:4002:2932":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"17:11381:3369":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"1:3462:2141":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:43701:2196":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"2:9642:145":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"16:5696:20190":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"2:46012:5916":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"0:137:128":{"crate_id":0,"path":["rustc_version","Error"],"kind":"enum"},"2:30480:5649":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"5:1302:7185":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"17:10616:6198":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"2:40361:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"17:2012:7023":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"2:11994:2182":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"6:5051:5189":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"2:46814:5959":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"16:2305:19329":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"1:2211:129":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"1:904:2950":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"1:10085:2663":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"17:13914:3917":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"2:8951:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:42315:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"17:11617:3390":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"2:4767:397":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"6:573:4669":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"17:11226:6211":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"16:7722:4152":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"2:7438:121":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"2:2487:8035":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"2:41737:5872":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"9:330:4570":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"6:6820:5544":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"1:8003:7277":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"5:2035:2735":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"1:4165:8071":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"6:5058:5192":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"16:5798:4205":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"16:2472:4124":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"2:43669:1847":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:1576:6384":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"16:5816:6245":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"16:7568:4160":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"7:32:19163":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"16:3461:4169":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"17:12280:3513":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"16:2969:19331":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"1:10972:24534":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"6:6573:5423":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"16:6915:4154":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"17:11910:3434":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"2:20837:30033":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"17:9762:33157":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"16:7102:20198":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"17:10139:20290":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"1:4740:8061":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"16:7534:4158":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"6:5025:5172":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"2:44456:6541":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:3843:7257":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"17:14420:4069":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"9:507:4593":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"1:5240:192":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:2830:2373":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"17:13851:3901":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"6:5818:5247":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:12051:1544":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"16:5363:4201":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"1:7730:7990":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"17:14056:3955":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"16:5648:7106":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"6:532:4647":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"2:44109:13343":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"16:6361:6297":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"1:4186:8073":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"17:11639:3358":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"6:5767:5227":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"16:7782:6359":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"1:8199:2722":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"1:8811:188":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"1:4798:3004":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"1:6612:3018":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"11:365:2906":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"17:9564:7033":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"17:8686:20250":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"16:7067:6350":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"2:20790:29812":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"2:6912:30191":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"17:14083:3962":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"1:8571:6562":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:43521:7234":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:43829:2213":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"17:9998:3260":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"2:9896:2990":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"1:6469:3017":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"2:44476:6546":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"16:6083:19302":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"1:5619:208":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"1:5446:1712":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"1:10104:7305":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"17:10278:7056":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"17:10661:7075":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"16:4862:4191":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"1:635:7242":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"1:1892:2696":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"2:10362:7214":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"6:5737:5202":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"17:10685:7079":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"16:6929:4264":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:40471:6425":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"2:2527:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"2:20971:8035":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"17:14090:3963":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"2:12634:194":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"17:12876:3634":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"1:10947:2674":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"16:8097:6364":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:2914:4289":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"2:6864:13441":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"16:6017:20192":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"2:44444:6538":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"16:7660:4335":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"2:12607:30595":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:2220:2718":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"5:2461:5609":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"2:2178:13480":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"2:43793:2214":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"17:10646:3374":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"17:12452:3555":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"16:4641:4185":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"2:1743:13490":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"6:4764:5039":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2:43623:6427":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"6:595:4682":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"17:13922:3919":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"2:47894:6002":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"5:35:2911":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"6:4428:4919":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"18:507:3142":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"11:1838:6383":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"17:13071:3665":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"2:41914:127":{"crate_id":2,"path":["rustc_version","Result","Err"],"kind":"variant"},"6:1733:4824":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:21228:8178":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"17:12111:3470":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"20:354:2229":{"crate_id":20,"path":["semver","Op"],"kind":"enum"},"17:10714:7083":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"20:129:2232":{"crate_id":20,"path":["semver","identifier","Identifier"],"kind":"struct"},"1:10325:1712":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"1:1776:2653":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"17:9277:3277":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"11:1048:33130":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"17:10561:6194":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"5:676:234":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"5:4164:2710":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"2:0:508":{"crate_id":2,"path":["core"],"kind":"module"},"16:3764:4171":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"2:44131:6514":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"5:7396:29996":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"5:4074:2508":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"17:9617:33151":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"2:44146:6520":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"2:43045:145":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"2:39549:205":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"18:521:24228":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"16:6226:7130":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"2:40541:6460":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"2:46030:5917":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:9393:132":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"1:8295:8074":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"1:9205:6104":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"17:13546:3814":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"6:7540:5592":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"6:5994:5344":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"17:12043:3460":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"2:21065:8191":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"6:7278:5571":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:2777:109":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"1:8993:7293":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"2:10556:7218":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"6:4740:5027":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"17:400:7019":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"2:46580:5940":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:10532:2740":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"1:7741:6552":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"17:14316:4041":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"2:12779:107":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"11:1027:19258":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"16:6583:6315":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:41678:30003":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"17:9650:3302":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"5:0:291":{"crate_id":5,"path":["alloc"],"kind":"module"},"6:4469:4935":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"16:2548:4127":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"1:7377:29385":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"6:4436:4921":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"2:41054:6487":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"6:5805:5246":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"17:582:3267":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"6:4800:5058":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:2775:229":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"6:1500:4688":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"17:12543:3570":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"17:14324:4042":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"1:850:2508":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"2:48063:6009":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:2363:5620":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"17:9972:7044":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"1:6545:8141":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"1:4056:8055":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"6:5863:5279":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"16:6415:6300":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"2:2257:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"17:13710:3868":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"2:20835:30030":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"6:4568:4988":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"1:1814:2663":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"17:12997:3654":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"17:12737:3599":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"17:10750:3312":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"11:736:6382":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"17:12685:3593":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"17:10440:7064":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"16:3830:4173":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"5:2970:32824":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"2:42755:5879":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"6:6130:5385":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"11:1826:2932":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"1:8805:2134":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"17:12513:3567":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"2:12790:2995":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"17:9574:33150":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"2:7896:30196":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"5:3171:2507":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"17:10165:20291":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"1:2406:1714":{"crate_id":1,"path":["std","io"],"kind":"module"},"2:42393:7213":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"5:1672:2915":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"11:644:2508":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"16:6346:7144":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"1:10106:7304":{"crate_id":1,"path":["std","sys","unix","os","EnvStrDebug"],"kind":"struct"},"16:2596:4129":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:42515:2522":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"2:11041:7219":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:8361:6071":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"17:13906:3915":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"2:46896:5960":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"17:10012:3302":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"17:14068:3958":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"1:12037:317":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"16:7828:4347":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"16:7768:4150":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"2:10323:2192":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:5756:7265":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"1:9285:2669":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"17:10980:3302":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"1:3526:2150":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"0:141:1781":{"crate_id":0,"path":["rustc_version","Error","CommandError"],"kind":"variant"},"5:685:111":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"17:13554:3817":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"1:12049:759":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"17:13567:3824":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"2:40295:2201":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"16:6467:6304":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"1:9000:24527":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"17:12645:3585":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"17:13274:3361":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"1:3185:26853":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"1:8216:2195":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"2:3399:69":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"2:45759:5906":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"2:46190:5928":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"17:12422:3546":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"2:40347:5857":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"2:43591:7236":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:7579:3023":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"5:7261:6402":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"1:4703:8075":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"11:2049:7181":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2:3013:2238":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"16:7391:20199":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"6:6648:5469":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"1:7025:3021":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"16:6268:33147":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"6:4872:5092":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"17:11761:3400":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"1:860:2509":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"17:9070:3270":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"20:0:1717":{"crate_id":20,"path":["semver"],"kind":"module"},"2:3508:2932":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"11:1611:2908":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"1:8851:2137":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"17:11490:3386":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"0:138:1778":{"crate_id":0,"path":["rustc_version","Error","CouldNotExecuteCommand"],"kind":"variant"},"6:5799:5245":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"1:12054:1543":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"5:6788:2960":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"2:21843:8181":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"11:968:6352":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"1:8246:8042":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"10:44:4531":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"2:44694:6706":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:7879:6556":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"6:6028:5361":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"17:13451:3731":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"1:12045:764":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:47978:6004":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"6:4723:5018":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:9383:2153":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"6:6022:5358":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"17:8978:20259":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"16:8195:6371":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"5:2960:32821":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"6:5044:5186":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"17:11173:20384":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"2:4407:2375":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:4157:8070":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"17:12621:3584":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"2:3010:2237":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:11048:3031":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"11:2180:4526":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"2:2920:13466":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"17:11191:3358":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"6:6850:5559":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"17:9921:7040":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"2:41839:2509":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:45889:5911":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:1558:2509":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"2:42783:110":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"2:43531:6424":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:12031:379":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"17:12970:3651":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"13:226:4523":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:2928:13468":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"11:986:7181":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"14:160:7169":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"16:6818:6334":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"1:4639:5466":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"2:40287:2202":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:45859:5910":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2:9881:2985":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"6:4374:4891":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"17:13135:3684":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"6:4506:4956":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"5:3720:2735":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"5:5923:70":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"6:1638:4777":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:10073:8035":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:8008:7278":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"1:929:7994":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"5:5769:235":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"6:547:4656":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"2:40683:6477":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"16:2339:4113":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"2:40302:13398":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"2:43552:5893":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2:6183:2977":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"2:48054:6008":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"17:10292:3302":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"17:9390:129":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"17:10097:7048":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"5:778:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"2:12659:7223":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"5:7182:5615":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"2:7175:3009":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"1:5990:208":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"2:40243:5856":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"16:6600:20195":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"1:6983:7828":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"6:5074:5195":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"1:7715:7989":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"1:11389:6579":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"6:4824:5067":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:11731:6509":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"2:44017:2190":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"16:5322:4200":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"11:695:7173":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"6:4879:1023":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"2:22786:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"1:11595:6114":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"1:10809:130":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"6:4770:5042":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"6:1495:4686":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"6:4626:4992":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"5:7245:2509":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"2:41595:5862":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"2:47084:5964":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:8929:8145":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"6:4862:5086":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"2:40621:6471":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:2920:128":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"1:1570:6383":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"2:4182:2531":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"1:3416:2710":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"2:43036:2517":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:724:142":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"17:11367:3366":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"17:11573:6220":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"6:5967:5335":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"6:4944:5137":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"6:6834:5553":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"6:7575:5600":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"1:4034:8051":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:32416:2374":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:5431:2129":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"6:4984:5157":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"17:10186:6186":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"6:6036:5363":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"9:393:19178":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"2:22066:5629":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"16:8050:4385":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"17:13202:3691":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"17:10397:7060":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"5:5362:2187":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"1:11341:6113":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"2:41572:155":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"6:1649:4785":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"17:9660:33153":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"2:21294:5626":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"6:7463:5583":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"1:11314:2145":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"2:2873:13461":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"2:3003:2235":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:39571:2117":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"2:2865:8173":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"5:7191:2509":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:43541:7235":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"16:2644:4131":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"2:42274:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"2:39485:201":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"17:12750:3601":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"6:4368:4890":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"17:10478:1718":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"5:2170:6392":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"2:22852:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"6:4787:5053":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"2:43875:2206":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"6:4754:5033":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"1:894:2932":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"17:13113:3673":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"1:2213:7251":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"5:6306:8269":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"2:47832:6001":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:8560:6089":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"16:6792:6333":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"18:599:33158":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"5:1514:200":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"17:10903:7086":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"3:234:212":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"2:4:1036":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"2:2363:184":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"5:1011:2915":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"17:10628:6201":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"2:9425:2521":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"2:42838:128":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"5:1273:7182":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"2:6172:6417":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"17:14110:3969":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"5:7438:2946":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"16:5419:3271":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"2:5475:2710":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"5:1473:6382":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2:44757:6551":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"2:21378:8179":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"2:21404:8188":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:12036:1074":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"5:6886:247":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"17:11788:3401":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"17:8825:20254":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:44314:6529":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"2:46784:5958":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"6:0:838":{"crate_id":6,"path":["libc"],"kind":"module"},"5:4985:2710":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"1:915:7172":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"17:11215:6207":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"2:47692:5999":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"1:923:7174":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"2:11694:6506":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:2573:2985":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:47234:5965":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"2:1677:1112":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"2:48115:6013":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"2:43260:5892":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"17:12598:3579":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"17:13162:3686":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"16:3232:4110":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"6:1673:4802":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"2:41823:2507":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"5:3183:32675":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"2:39430:6442":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"1:9113:221":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"16:6721:20196":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"2:2932:13469":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:12048:763":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"2:39603:7227":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:11179:5897":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"2:9798:2981":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"1:9030:7298":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"18:491:6166":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"20:299:1718":{"crate_id":20,"path":["semver","Version"],"kind":"struct"},"2:30550:29981":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"2:12014:2181":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:21021:30510":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"11:2201:2123":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"2:44464:6543":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"2:43695:2197":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"5:7290:2509":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"16:6243:7133":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"18:614:33159":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"2:41848:5876":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:8522:7992":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:12032:958":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2:11549:1787":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"2:21622:8185":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"2:44357:2217":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"17:10588:6196":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"6:482:4616":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"1:12047:762":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"2:5535:6409":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"17:12437:3550":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"17:9701:7035":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"16:2832:4139":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"1:10538:2738":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"16:8281:4398":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"1:9195:28974":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"2:11535:7221":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"2:31112:2383":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"1:9108:220":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"2:10435:2210":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:1587:6386":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"17:12554:3571":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"17:12473:3559":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"1:4173:8072":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"6:4833:5070":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"17:12778:3605":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"17:10265:7055":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"6:474:4611":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"2:47582:5998":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:8485:6084":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:4250:209":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"6:7529:5588":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"14:7:7169":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"2:2861:4283":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:8900:6091":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"6:506:4627":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"2:47770:6000":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"17:10316:3307":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"2:3315:13310":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"13:0:1982":{"crate_id":13,"path":["std_detect"],"kind":"module"},"2:22240:6436":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:11198:6100":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"2:2530:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"6:4475:4938":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"0:147:1823":{"crate_id":0,"path":["rustc_version","Error","UnexpectedVersionFormat"],"kind":"variant"},"1:4389:7260":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"17:0:1992":{"crate_id":17,"path":["object"],"kind":"module"},"2:20805:29812":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"2:2855:13459":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"6:4483:4943":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"11:1831:2950":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"1:3519:2152":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"17:14478:4086":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"1:7642:6025":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"1:4700:8102":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"1:8945:8147":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"16:2696:4133":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"16:8181:4164":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"11:723:6381":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"16:2406:4121":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"17:14434:4071":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"2:40513:6455":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:22261:1827":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"2:2773:2366":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"6:1545:4710":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"17:13890:3912":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"17:10383:7059":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"2:42860:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"6:7272:5569":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"2:39527:203":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"2:22588:177":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"2:2776:228":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"1:4744:8064":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"2:44520:6547":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"2:41891:13538":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:638:7244":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"17:9445:7031":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"16:4835:4190":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"1:11477:7255":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"17:14448:4078":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"18:0:1993":{"crate_id":18,"path":["memchr"],"kind":"module"},"1:1055:7181":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"2:22654:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:3994:8049":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"1:9485:7274":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"19:0:1054":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"16:6960:7145":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:39610:5725":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"1:1064:7182":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"1:9118:6099":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"17:10420:3215":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"2:41629:8043":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"2:43929:2208":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"6:6841:5556":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"2:44289:6528":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"17:12671:3318":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"11:1068:7183":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"2:8946:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"17:11991:3449":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"11:332:2904":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"16:5830:6246":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"2:44460:6542":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"18:671:7016":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"5:7463:6407":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"1:12050:1547":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"17:8794:20253":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"16:7554:4159":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"17:11000:3350":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"17:11162:3353":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"1:502:2931":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"16:6844:4255":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"5:276:2186":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"17:10520:6191":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"2:46114:5920":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"2:44651:213":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"17:9051:20238":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"6:4678:4996":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"17:10197:7050":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"1:8309:7284":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"9:486:19176":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"17:14221:4022":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"17:9711:33154":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"0:155:1853":{"crate_id":0,"path":["rustc_version","Error","LlvmVersionError"],"kind":"variant"},"1:11356:6576":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"16:4613:4184":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"5:4426:2939":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"6:6171:5411":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"1:7857:7274":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"1:5749:7262":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"17:11048:7090":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"1:5082:7261":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"5:1411:2507":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"6:4854:5081":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"2:42118:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"6:6136:5386":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"17:14145:3977":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"1:1928:671":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"16:4719:4186":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"17:11971:3448":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"17:11535:6219":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"17:11124:7099":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"17:12293:3514":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"17:14156:3978":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"16:7360:33145":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"1:946:7179":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"17:13487:3762":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"6:6688:5471":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"6:653:14220":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"6:62:13808":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"16:7090:6351":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"6:7511:5585":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"6:1702:4813":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"2:42354:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:2819:2369":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"17:14378:4063":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"0:45:212":{"crate_id":0,"path":["rustc_version","Result"],"kind":"type_alias"},"11:1103:7184":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"2:7363:13438":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"2:43028:6500":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"5:2962:5612":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"1:11621:6581":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"18:766:24227":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"17:12959:3650":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"17:10126:6183":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"6:4973:5151":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:9431:2524":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"2:3044:13311":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"2:46428:5936":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:6197:7267":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"17:10410:7061":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"16:6425:6301":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"17:2178:7024":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"1:5828:3008":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"18:681:6170":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"17:13148:3685":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"16:4889:4192":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"1:8987:107":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"17:9867:3288":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"6:1911:15211":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"2:42522:2521":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"6:6015:5357":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:48230:6018":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"2:11770:6511":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"2:44448:6539":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"5:1102:31610":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"2:44252:6527":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"6:6008:5355":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"1:3936:8046":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:1640:601":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"17:14536:4096":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"2:4005:7205":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"2:12060:13337":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"2:45929:5913":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:12040:1528":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"1:2559:2732":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"6:4638:4993":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:2607:116":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"2:2765:223":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"2:45960:5914":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"17:13575:3825":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"5:3204:6385":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"16:5712:6235":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"17:12576:3578":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"6:6044:5366":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"18:644:3142":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"2:43503:6421":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"16:2766:4136":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"16:5673:4148":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"0:53:1726":{"crate_id":0,"path":["rustc_version","Channel","Beta"],"kind":"variant"},"2:4814:815":{"crate_id":2,"path":["core","iter"],"kind":"module"},"2:44008:2191":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:4906:8100":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"1:4044:8052":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"17:10603:6197":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"6:4895:5103":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"1:3738:7255":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"2:43279:6504":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"16:3049:19332":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"2:41060:2748":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:12009:2183":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"18:582:2383":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"2:1766:5621":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"17:12007:3453":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"17:9886:7038":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"1:8881:6090":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"2:21195:8183":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"2:41714:6557":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"17:8848:20255":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"1:10769:6566":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"1:8241:7286":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:9114:30195":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:40669:3160":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:9035:7299":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"1:7764:2674":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"16:6386:4217":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"1:1778:2654":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"2:2327:190":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"0:122:1827":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","ParseIntError"],"kind":"variant"},"1:10960:2130":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"2:22013:6430":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"2:40522:6457":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"17:11201:6203":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"16:3032:4165":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"17:13685:3866":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"1:9490:3027":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"5:4846:206":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"2:42536:2524":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:5783:7266":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"2:9682:2516":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"16:7492:6353":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"18:707:2184":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:40847:6482":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:11145:2135":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:3263:29910":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:12038:1414":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:4434:2534":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:8554:2507":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"17:11244:3390":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"1:11817:3039":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"2:42811:71":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"1:11171:24547":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"1:9156:6563":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"2:2827:106":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"2:41749:5873":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"17:11351:3365":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"1:12053:1546":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"6:4518:4962":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"1:5626:3006":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"17:9985:7045":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"11:657:2509":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"17:9350:3279":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2:44225:6526":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"2:2937:13470":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"0:133:1754":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","TooManyComponents"],"kind":"variant"},"1:1561:2932":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"2:2844:4282":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"6:6156:5400":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"17:13055:3664":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"6:7564:5596":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"6:7586:5601":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"1:10990:2137":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"6:7609:5607":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"18:699:6174":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"0:51:1724":{"crate_id":0,"path":["rustc_version","Channel","Nightly"],"kind":"variant"},"16:5939:6261":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"6:4949:5139":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"1:8394:8111":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"5:261:2915":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"5:7474:7203":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"1:10164:7306":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"1:5562:2131":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"1:7768:7225":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"2:39505:204":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"17:8895:20256":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"17:13667:3861":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"5:2141:6390":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"2:30520:5652":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"6:4556:4979":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"2:46738:5957":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:8462:5888":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"16:6901:4153":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"2:43512:6422":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"2:40612:6470":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"2:11519:13545":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"2:39461:200":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"2:40823:2723":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:10473:7216":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:21960:6429":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"7:0:1593":{"crate_id":7,"path":["unwind"],"kind":"module"},"2:3993:7204":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"0:125:1747":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","ComponentMustNotHaveLeadingZeros"],"kind":"variant"},"2:2825:2371":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"0:25:1617":{"crate_id":0,"path":["rustc_version","version"],"kind":"function"},"2:4387:2533":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"17:14401:4064":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"16:5384:20189":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:32304:7225":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"2:9677:2515":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:6165:3013":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"16:7269:33146":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"1:8875:2509":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"2:8524:7211":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"17:13816:3891":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:43578:6425":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"17:10023:7035":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"5:7349:2124":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"5:1426:2508":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"17:13085:3667":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"10:0:1986":{"crate_id":10,"path":["adler"],"kind":"module"},"1:1983:186":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"17:13973:3931":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"17:10059:3295":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:40279:2203":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"2:48043:6007":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:1073:7185":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"2:45911:5912":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"17:11358:20386":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"6:1717:4820":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"1:1565:2950":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"2:5994:6412":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:10847:24540":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"5:782:2918":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"17:13422:3711":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"6:1536:4704":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:43947:2209":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"16:3888:4174":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:40560:6463":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"0:149:1850":{"crate_id":0,"path":["rustc_version","Error","SemVerError"],"kind":"variant"},"16:4585:4183":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"1:910:7186":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:48191:6017":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"2:43057:5888":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"17:12496:3564":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"5:4234:2507":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"17:11815:3407":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"16:6687:6319":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"1:10342:24845":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"2:40215:6445":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"2:11949:1716":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"17:9455:33149":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"1:3261:2742":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"17:11023:3351":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"2:44472:6545":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"5:2243:6397":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"2:9382:212":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"17:10929:3345":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"2:44732:6550":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:9173:7301":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"2:41881:7229":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"11:1852:6385":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"2:50036:8195":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"17:13215:3692":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"5:1523:7192":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"1:531:2998":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"17:11687:20264":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"2:7491:2239":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:46067:5919":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"6:4929:5128":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"1:837:2507":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"1:8290:6558":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"16:7503:4157":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:22098:5630":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"5:629:7189":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"6:119:13862":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"2:48100:6012":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"6:5900:5293":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"17:10112:7049":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"1:11371:6620":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"17:11886:3420":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"2:30514:5650":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"17:12945:3648":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"1:2381:8027":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"2:4259:7208":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"5:7449:227":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"6:7295:5582":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"17:10370:7058":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"16:4745:4187":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"2:40569:6464":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:4635:5462":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"16:6560:2901":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"6:562:4664":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"2:42196:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"2:43725:2211":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"5:6955:2965":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"6:4587:4989":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:21272:8035":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"5:2959:2607":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"11:805:7994":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"2:21719:5628":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"11:760:2950":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"6:1575:4729":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"6:579:4672":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"16:2933:19330":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"1:4821:8060":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"6:488:4619":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"1:7539:7320":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"2:44337:2216":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"2:21406:5626":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"6:6868:5562":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:41031:6484":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"16:2864:4140":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"1:2216:2966":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"1:7917:7276":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"17:3441:7029":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"17:11473:3237":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"17:10468:3310":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"1:3501:2153":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"6:1513:4694":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"17:10430:7063":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"2:4378:2971":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"16:5905:6255":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"16:6569:4151":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"16:8205:20203":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"2:9427:2522":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"6:6726:5483":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"17:10726:7084":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:6178:6416":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"16:4053:4176":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"2:42820:68":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"16:0:1991":{"crate_id":16,"path":["gimli"],"kind":"module"},"2:22555:176":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"16:7284:5876":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"1:2635:2734":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"1:7133:26578":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"1:1554:2507":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:43893:2207":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"16:3600:4170":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"2:40321:6450":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"1:1837:2669":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:41951:2507":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"2:22122:2692":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"16:4417:4178":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"1:3388:2748":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:30714:29982":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"2:3244:13374":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:43452:7233":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"2:30536:68":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"2:42765:68":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"1:7925:2733":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"2:45715:5904":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"17:9790:33155":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"10:36:4530":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"17:14469:4084":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"11:2186:33123":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"1:8859:2507":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"1:3942:8045":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"5:3594:2508":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"2:41911:182":{"crate_id":2,"path":["rustc_version","Result","Ok"],"kind":"variant"},"2:2260:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"6:5080:5198":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"1:12044:660":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"2:21156:13479":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"2:45827:5909":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"11:1012:7182":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"1:12058:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"1:4915:8101":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"17:11272:6214":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"17:12305:3517":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"2:10542:7217":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"18:113:24217":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"1:9078:6098":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"17:11337:20385":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"17:11111:7098":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"4:0:1983":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"17:12790:3606":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"1:7598:3025":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"18:481:6165":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"16:3065:3170":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"18:719:3163":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"2:6960:13433":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"1:12033:428":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"17:12252:3503":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"2:46557:5939":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"5:2690:5613":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"17:14335:4047":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"2:23332:222":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"17:11934:3435":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"1:10764:6564":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"16:2907:4142":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:43067:6501":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"17:12484:3562":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"17:9823:20271":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"17:13868:3906":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"16:6696:4243":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"6:4304:4839":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"17:14269:4023":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"17:11448:20262":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"6:1590:4741":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"1:8837:2136":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"2:24:625":{"crate_id":2,"path":["core","env"],"kind":"macro"},"2:40328:13399":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"2:40206:6444":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:11999:29371":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"17:10949:7089":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"11:2168:4524":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"2:2787:2367":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"1:11291:3033":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"2:2839:8174":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"17:13897:3914":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"6:4341:4867":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"17:8953:20258":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"5:2966:32822":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:41612:5864":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"1:11054:3032":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"6:1569:4727":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"16:7128:6095":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"6:4550:4977":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"17:12136:3472":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"1:5128:193":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"1:952:7180":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"1:6360:166":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"2:9864:2984":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"16:6171:196":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"17:12830:3610":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"16:6332:4143":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"17:13259:3699":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"1:4000:8050":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"17:9752:7036":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"17:13174:3687":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"1:3263:2743":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"1:11308:6573":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"2:41701:6497":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"16:2380:4120":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"17:14346:4048":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"6:6805:5537":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"6:6077:5374":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"1:4135:26581":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"6:5920:5309":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"1:8209:2723":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"16:2574:4128":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"17:14460:4080":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:46974:5961":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"5:6558:2509":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"2:21109:8192":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"2:42235:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"6:5775:5229":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"17:10447:7067":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"2:40441:2176":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"17:9933:7041":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"2:41959:2508":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"6:4908:5113":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"2:7396:134":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"3:0:453":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"17:14118:3970":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"1:9023:7297":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"9:426:19179":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:4608:13392":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"1:6542:7269":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"1:8155:2749":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"0:28:1786":{"crate_id":0,"path":["rustc_version","version_meta_for"],"kind":"function"},"1:3444:2151":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"1:1921:2697":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"5:1482:7186":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"2:30608:29990":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"17:2209:7027":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"2:42795:4362":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"2:43775:2215":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"17:10240:3291":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"1:9043:6095":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"0:129:1831":{"crate_id":0,"path":["rustc_version","LlvmVersionParseError","MinorVersionMustBeZeroAfter4"],"kind":"variant"},"17:10672:7076":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"16:5995:6224":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"0:95:1756":{"crate_id":0,"path":["rustc_version","VersionMeta"],"kind":"struct"},"17:13989:3933":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"17:13298:3709":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"0:48:1720":{"crate_id":0,"path":["rustc_version","Channel"],"kind":"enum"},"16:2722:4134":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"2:48168:6016":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"2:32268:2138":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:43020:2518":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"2:43711:2195":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"16:2450:4123":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"2:40583:6467":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"2:40267:6447":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:40314:6449":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"1:481:2997":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"1:1881:1713":{"crate_id":1,"path":["std","error"],"kind":"module"},"2:1928:5625":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"2:40693:6478":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"16:5403:3270":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"1:4048:8053":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"6:5068:5193":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"6:4848:5078":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"1:12015:24539":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"17:9172:3274":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"6:4955:5140":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:2979:117":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"}},"external_crates":{"20":{"name":"semver","html_root_url":"https://docs.rs/semver/1.0.18/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":27}