{"root":"0:0:2055","crate_version":"1.1.3","includes_private":false,"index":{"b:5:681-0:358:1824":{"id":"b:5:681-0:358:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:677:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:358:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:683:2909","5:684:2910","5:685:2911"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11348:1822":{"id":"2:11348:1822","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:10609:2011"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2726:2478-0:76:1668":{"id":"a:2:2726:2478-0:76:1668","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:2478","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStreamLock","id":"0:76:1668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:371:1860":{"id":"0:371:1860","crate_id":0,"name":"Yellow","span":{"filename":"src/lib.rs","begin":[1813,4],"end":[1813,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"b:2:2238-0:396:1968":{"id":"b:2:2238-0:396:1968","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:396:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:2255"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11422:60619":{"id":"2:11422:60619","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"`DoubleEndedIterator`":"2:7079:119","self::pattern":"2:11041:2369","prim@char":"1:12300:407","str::rmatch_indices":"2:11425:60620"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:50173:2385","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:2363","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:170:1728":{"id":"0:170:1728","crate_id":0,"name":"separator","span":{"filename":"src/lib.rs","begin":[947,4],"end":[949,5]},"visibility":"public","docs":"If set, the separator given is printed between buffers. By default, no\nseparator is printed.\n\nThe default value is `None`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["sep",{"kind":"resolved_path","inner":{"name":"Option","id":"2:48055:177","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:6419:239","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2523-0:173:1746":{"id":"b:2:2523-0:173:1746","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Buffer","id":"0:173:1746","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2526:126","2:2527:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:375:1864":{"id":"0:375:1864","crate_id":0,"name":"Ansi256","span":{"filename":"src/lib.rs","begin":[1815,4],"end":[1815,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:377:1552"]},"discriminant":null}},"0:314:1616":{"id":"0:314:1616","crate_id":0,"name":"AlwaysAnsi","span":{"filename":"src/lib.rs","begin":[213,4],"end":[213,14]},"visibility":"default","docs":"AlwaysAnsi is like Always, except it never tries to use anything other\nthan emitting ANSI color codes.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:210:1803":{"id":"0:210:1803","crate_id":0,"name":"get_mut","span":{"filename":"src/lib.rs","begin":[1218,4],"end":[1220,5]},"visibility":"public","docs":"Return a mutable reference to the inner writer.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"W"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5119:61267":{"id":"5:5119:61267","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:6992:220"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6992:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2517-0:339:1592":{"id":"b:2:2517-0:339:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2519:672"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11345:60609":{"id":"2:11345:60609","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:11343:60608"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:136:1590":{"id":"0:136:1590","crate_id":0,"name":"set_color","span":{"filename":"src/lib.rs","begin":[692,4],"end":[697,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["spec",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2903:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:27:1584":{"id":"0:27:1584","crate_id":0,"name":"supports_color","span":{"filename":"src/lib.rs","begin":[191,4],"end":[193,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:311:1610":{"id":"b:2:2238-0:311:1610","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:311:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:2255"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:328":{"id":"0:328","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[206,33],"end":[206,42]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2672:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:311:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11448:60628":{"id":"2:11448:60628","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12300:407","self::pattern":"2:11041:2369"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:2363","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11046:2363","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11061:2364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2513-0:161:1726":{"id":"b:2:2513-0:161:1726","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferWriter","id":"0:161:1726","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2516:2846"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7735:2522-0:76:1668":{"id":"a:2:7735:2522-0:76:1668","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:2522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStreamLock","id":"0:76:1668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:7736:2521-0:201:1675":{"id":"a:2:7736:2521-0:201:1675","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"W"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7736:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoColor","id":"0:201:1675","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:393":{"id":"0:393","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1805,33],"end":[1805,42]},"visibility":"crate","docs":null,"links":{},"attrs":["#[allow(missing_docs)]","#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2672:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:358:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:22:1590":{"id":"0:22:1590","crate_id":0,"name":"set_color","span":{"filename":"src/lib.rs","begin":[179,4],"end":[181,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["spec",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2903:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11404:56697":{"id":"2:11404:56697","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"str::rsplitn":"2:11407:56699","self::pattern":"2:11041:2369","prim@char":"1:12300:407"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:50127:2391","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:2363","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2517-0:76:1668":{"id":"b:2:2517-0:76:1668","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStreamLock","id":"0:76:1668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2519:672"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:261:1808":{"id":"0:261:1808","crate_id":0,"name":"bold","span":{"filename":"src/lib.rs","begin":[1637,4],"end":[1639,5]},"visibility":"public","docs":"Get whether this is bold or not.\n\nNote that the bold setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:403":{"id":"0:403","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1925,23],"end":[1925,25]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2673:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:396:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:272:1941":{"id":"0:272:1941","crate_id":0,"name":"set_intense","span":{"filename":"src/lib.rs","begin":[1741,4],"end":[1744,5]},"visibility":"public","docs":"Set whether the text is intense or not.\n\nOn Unix-like systems, this will output the ANSI escape sequence\nthat will print a high-intensity version of the color\nspecified.\n\nOn Windows systems, this will output the ANSI escape sequence\nthat will print a brighter version of the color specified.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:391":{"id":"0:391","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1805,29],"end":[1805,31]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2290:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:358:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11434:60624":{"id":"2:11434:60624","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:228:1792":{"id":"0:228:1792","crate_id":0,"name":"into_inner","span":{"filename":"src/lib.rs","begin":[1268,4],"end":[1270,5]},"visibility":"public","docs":"Consume this `Ansi` value and return the inner writer.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"W"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2523-0:161:1726":{"id":"b:2:2523-0:161:1726","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferWriter","id":"0:161:1726","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2526:126","2:2527:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:264:1915":{"id":"0:264:1915","crate_id":0,"name":"set_dimmed","span":{"filename":"src/lib.rs","begin":[1659,4],"end":[1662,5]},"visibility":"public","docs":"Set whether the text is dimmed or not.\n\nNote that the dimmed setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:215":{"id":"0:215","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1235,0],"end":[1255,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3461:1577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_synchronous"],"trait":{"name":"WriteColor","id":"0:13:1582","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoColor","id":"0:201:1675","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["0:217:1584","0:218:1590","0:219:1595","0:220:1605"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:197:1584":{"id":"0:197:1584","crate_id":0,"name":"supports_color","span":{"filename":"src/lib.rs","begin":[1162,4],"end":[1169,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11364:1978":{"id":"2:11364:1978","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12300:407"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49993:2376","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:213:1655":{"id":"0:213:1655","crate_id":0,"name":"write","span":{"filename":"src/lib.rs","begin":[1225,4],"end":[1227,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2903:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:21:1584":{"id":"0:21:1584","crate_id":0,"name":"supports_color","span":{"filename":"src/lib.rs","begin":[176,4],"end":[178,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:283":{"id":"0:283","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1945,0],"end":[1954,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["source","provide","description","type_id","cause"],"trait":{"name":"Error","id":"2:2578:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:396:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:284:1991"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2531:126":{"id":"2:2531:126","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:39299:3389","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:11375:1970":{"id":"2:11375:1970","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"self::pattern":"2:11041:2369","prim@char":"1:12300:407"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:2363","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2726:2478-0:221:1676":{"id":"a:2:2726:2478-0:221:1676","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2726:2478","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:2478","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Ansi","id":"0:221:1676","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:281":{"id":"0:281","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1938,0],"end":[1943,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:396:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:282:1990"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11366:4149":{"id":"2:11366:4149","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:50009:2317","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11349:60610":{"id":"2:11349:60610","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:211":{"id":"0:211","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1223,0],"end":[1233,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3461:1577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["write_fmt","is_write_vectored","by_ref","write_vectored","write_all","write_all_vectored"],"trait":{"name":"Write","id":"1:3461:1577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoColor","id":"0:201:1675","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["0:213:1655","0:214:1657"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:257:1823":{"id":"0:257:1823","crate_id":0,"name":"fg","span":{"filename":"src/lib.rs","begin":[1613,4],"end":[1615,5]},"visibility":"public","docs":"Get the foreground color.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48055:177","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Color","id":"0:358:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11339":{"id":"2:11339","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:10604:1351","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:11340:788","2:11341:1752","2:11342:60607","2:11343:60608","2:11345:60609","2:11348:1822","2:11349:60610","2:11350:308","2:11351:56663","2:11352:56660","2:11354:1803","2:11356:56661","2:11358:56662","2:11360:60611","2:11361:60612","2:11362:56684","2:11363:56685","2:11364:1978","2:11365:3764","2:11366:4149","2:11367:58578","2:11368:58572","2:11369:4464","2:11370:60613","2:11371:58582","2:11372:1987","2:11375:1970","2:11378:56321","2:11381:2890","2:11385:2852","2:11389:1974","2:11392:56693","2:11395:56695","2:11398:60614","2:11401:60615","2:11404:56697","2:11407:56699","2:11410:60616","2:11413:60617","2:11416:2270","2:11419:60618","2:11422:60619","2:11425:60620","2:11428:60621","2:11430:60622","2:11432:60623","2:11434:60624","2:11435:60625","2:11436:60626","2:11439:60627","2:11442:54143","2:11445:56701","2:11448:60628","2:11451:60629","2:11454:60630","2:11457:2018","2:11459:4144","2:11460:53723","2:11461:53724","2:11462:53725","2:11463:60631","2:11465:3235","2:11466:60632"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:7735:2522-0:201:1675":{"id":"a:2:7735:2522-0:201:1675","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"W"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:7735:2522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:2522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoColor","id":"0:201:1675","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:681-0:311:1610":{"id":"b:5:681-0:311:1610","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:677:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:311:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:683:2909","5:684:2910","5:685:2911"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:18":{"id":"0:18","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[175,0],"end":[188,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"WriteColor","id":"0:13:1582","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_synchronous"],"trait":{"name":"WriteColor","id":"0:13:1582","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"T"}}},"items":["0:21:1584","0:22:1590","0:23:1595","0:24:1605"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:116":{"id":"0:116","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[617,0],"end":[637,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["is_synchronous"],"trait":{"name":"WriteColor","id":"0:13:1582","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStream","id":"0:74:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:117:1584","0:118:1590","0:119:1595","0:120:1605"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:133:1657":{"id":"0:133:1657","crate_id":0,"name":"flush","span":{"filename":"src/lib.rs","begin":[680,4],"end":[682,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2903:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:321:411":{"id":"0:321:411","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[206,9],"end":[206,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:311:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2241-0:161:1726":{"id":"b:2:2241-0:161:1726","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferWriter","id":"0:161:1726","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2243:53690"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7735:2522-0:173:1746":{"id":"a:2:7735:2522-0:173:1746","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:2522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Buffer","id":"0:173:1746","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2241-0:221:1676":{"id":"b:2:2241-0:221:1676","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Ansi","id":"0:221:1676","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:2243:53690"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2676:224-0:201:1675":{"id":"a:2:2676:224-0:201:1675","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2676:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoColor","id":"0:201:1675","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:316:1620":{"id":"0:316:1620","crate_id":0,"name":"Auto","span":{"filename":"src/lib.rs","begin":[217,4],"end":[217,8]},"visibility":"default","docs":"Try to use colors, but don't force the issue. If the console isn't\navailable on Windows, or if TERM=dumb, or if `NO_COLOR` is defined, for\nexample, then don't use colors.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"a:2:2676:224-0:74:1660":{"id":"a:2:2676:224-0:74:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStream","id":"0:74:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3321-0:311:1610":{"id":"b:2:3321-0:311:1610","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:311:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3323:1439"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2241-0:79:1671":{"id":"b:2:2241-0:79:1671","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferedStandardStream","id":"0:79:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2243:53690"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11370:60613":{"id":"2:11370:60613","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:50287:2384","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2513-0:358:1824":{"id":"b:2:2513-0:358:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:358:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2516:2846"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:269:1595":{"id":"0:269:1595","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[1701,4],"end":[1703,5]},"visibility":"public","docs":"Get whether reset is enabled or not.\n\nreset is enabled by default. When disabled and using ANSI escape\nsequences, a \"reset\" code will be emitted every time a `ColorSpec`'s\nsettings are applied.\n\nNote that the reset setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2662:216-0:339:1592":{"id":"a:2:2662:216-0:339:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:390":{"id":"0:390","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1805,29],"end":[1805,31]},"visibility":"crate","docs":null,"links":{},"attrs":["#[allow(missing_docs)]","#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2673:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:358:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2726:2478-0:201:1675":{"id":"a:2:2726:2478-0:201:1675","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2726:2478","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:2478","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoColor","id":"0:201:1675","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2662:216-0:76:1668":{"id":"a:2:2662:216-0:76:1668","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStreamLock","id":"0:76:1668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:121":{"id":"0:121","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[639,0],"end":[649,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["write_fmt","is_write_vectored","by_ref","write_vectored","write_all","write_all_vectored"],"trait":{"name":"Write","id":"1:3461:1577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStreamLock","id":"0:76:1668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:123:1655","0:124:1657"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:238:1590":{"id":"0:238:1590","crate_id":0,"name":"set_color","span":{"filename":"src/lib.rs","begin":[1302,4],"end":[1325,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["spec",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2903:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5105:2321":{"id":"5:5105:2321","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:6992:220"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6992:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:2363","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2527:1426":{"id":"2:2527:1426","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48199:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:404":{"id":"0:404","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1925,23],"end":[1925,25]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2290:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:396:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:255":{"id":"0:255","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1606,0],"end":[1781,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:256:914","0:257:1823","0:258:1901","0:259:1904","0:260:1906","0:261:1808","0:262:1910","0:263:1810","0:264:1915","0:265:1812","0:266:1919","0:267:1814","0:268:1923","0:269:1595","0:270:1933","0:271:1819","0:272:1941","0:273:1943","0:274:1788"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2241-0:74:1660":{"id":"b:2:2241-0:74:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStream","id":"0:74:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2243:53690"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2513-0:173:1746":{"id":"b:2:2513-0:173:1746","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Buffer","id":"0:173:1746","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2516:2846"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11428:60621":{"id":"2:11428:60621","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:183":{"id":"0:183","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1032,0],"end":[1136,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Buffer","id":"0:173:1746","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:185:1777","0:186:1776","0:187:1752","0:188:788","0:189:1788","0:190:1792","0:191:1794","0:192:1796"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5374:1405":{"id":"5:5374:1405","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6992:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2513-0:74:1660":{"id":"b:2:2513-0:74:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStream","id":"0:74:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2516:2846"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11367:58578":{"id":"2:11367:58578","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:11368:58572"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:50297:2373","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:382:1554":{"id":"0:382:1554","crate_id":0,"name":"2","span":{"filename":"src/lib.rs","begin":[1816,16],"end":[1816,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"0:290:125":{"id":"0:290:125","crate_id":0,"name":"Err","span":{"filename":"src/lib.rs","begin":[1985,4],"end":[1985,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:396:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:11378:56321":{"id":"2:11378:56321","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12300:407","self::pattern":"2:11041:2369"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:2363","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11046:2363","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11061:2364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2528-0:339:1592":{"id":"b:2:2528-0:339:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2531:126","2:2532:1425"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2238-0:79:1671":{"id":"b:2:2238-0:79:1671","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferedStandardStream","id":"0:79:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:2255"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2523-0:311:1610":{"id":"b:2:2523-0:311:1610","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:311:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2526:126","2:2527:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:24:1605":{"id":"0:24:1605","crate_id":0,"name":"is_synchronous","span":{"filename":"src/lib.rs","begin":[185,4],"end":[187,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2523-0:339:1592":{"id":"b:2:2523-0:339:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2526:126","2:2527:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2243:53690":{"id":"2:2243:53690","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2241-0:201:1675":{"id":"b:2:2241-0:201:1675","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoColor","id":"0:201:1675","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:2243:53690"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2513-0:201:1675":{"id":"b:2:2513-0:201:1675","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoColor","id":"0:201:1675","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:2516:2846"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2517-0:358:1824":{"id":"b:2:2517-0:358:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:358:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2519:672"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2726:2478-0:396:1968":{"id":"a:2:2726:2478-0:396:1968","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:2478","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:396:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2517-0:311:1610":{"id":"b:2:2517-0:311:1610","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:311:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2519:672"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:123:1655":{"id":"0:123:1655","crate_id":0,"name":"write","span":{"filename":"src/lib.rs","begin":[641,4],"end":[643,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["b",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2903:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7736:2521-0:76:1668":{"id":"a:2:7736:2521-0:76:1668","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStreamLock","id":"0:76:1668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11350:308":{"id":"2:11350:308","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:11351:56663","`u8`":"1:12317:1447"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11343:60608":{"id":"2:11343:60608","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2676:224-0:76:1668":{"id":"a:2:2676:224-0:76:1668","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStreamLock","id":"0:76:1668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:395:599":{"id":"0:395:599","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[1805,33],"end":[1805,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Color","id":"0:358:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:74:1660":{"id":"b:2:2238-0:74:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStream","id":"0:74:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:2255"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11407:56699":{"id":"2:11407:56699","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"str::splitn":"2:11404:56697","self::pattern":"2:11041:2369","prim@char":"1:12300:407"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:50145:2390","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:2363","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11046:2363","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11061:2364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:195:1657":{"id":"0:195:1657","crate_id":0,"name":"flush","span":{"filename":"src/lib.rs","begin":[1150,4],"end":[1157,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2903:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:104:1650":{"id":"0:104:1650","crate_id":0,"name":"lock","span":{"filename":"src/lib.rs","begin":[483,4],"end":[485,5]},"visibility":"public","docs":"Lock the underlying writer.\n\nThe lock guard returned also satisfies `io::Write` and\n`WriteColor`.\n\nThis method is **not reentrant**. It may panic if `lock` is called\nwhile a `StandardStreamLock` is still alive.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"StandardStreamLock","id":"0:76:1668","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:386:411":{"id":"0:386:411","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[1805,9],"end":[1805,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Color","id":"0:358:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:137:1595":{"id":"0:137:1595","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[700,4],"end":[702,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2903:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:352":{"id":"0:352","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1579,23],"end":[1579,25]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2673:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2241-0:311:1610":{"id":"b:2:2241-0:311:1610","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:311:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2243:53690"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2513-0:76:1668":{"id":"b:2:2513-0:76:1668","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStreamLock","id":"0:76:1668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2516:2846"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:289":{"id":"0:289","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1984,0],"end":[2000,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:11002:1578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:358:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:290:125","0:291:1998"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2519:672":{"id":"2:2519:672","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3321-0:396:1968":{"id":"b:2:3321-0:396:1968","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:396:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3323:1439"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:287:654":{"id":"0:287:654","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1957,4],"end":[1981,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:681-0:396:1968":{"id":"b:5:681-0:396:1968","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:677:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:396:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:683:2909","5:684:2910","5:685:2911"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:114:1655":{"id":"0:114:1655","crate_id":0,"name":"write","span":{"filename":"src/lib.rs","begin":[607,4],"end":[609,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["b",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2903:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2676:224-0:339:1592":{"id":"a:2:2676:224-0:339:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:13:1582":{"id":"0:13:1582","crate_id":0,"name":"WriteColor","span":{"filename":"src/lib.rs","begin":[140,0],"end":[173,1]},"visibility":"public","docs":"This trait describes the behavior of writers that support colored output.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:14:1584","0:15:1590","0:16:1595","0:17:1605"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3461:1577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:18","0:25","0:116","0:125","0:134","0:196","0:215","0:235","0:249"]}},"0:239:1595":{"id":"0:239:1595","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[1328,4],"end":[1330,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2903:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:201:1675":{"id":"b:2:2238-0:201:1675","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoColor","id":"0:201:1675","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:2240:2255"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:230:1803":{"id":"0:230:1803","crate_id":0,"name":"get_mut","span":{"filename":"src/lib.rs","begin":[1278,4],"end":[1280,5]},"visibility":"public","docs":"Return a mutable reference to the inner writer.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"W"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11358:56662":{"id":"2:11358:56662","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9138:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9138:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:11410:60616":{"id":"2:11410:60616","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48055:177","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:2363","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5123:53722":{"id":"5:5123:53722","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:11462:53725"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6992:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:258:1901":{"id":"0:258:1901","crate_id":0,"name":"set_fg","span":{"filename":"src/lib.rs","begin":[1618,4],"end":[1621,5]},"visibility":"public","docs":"Set the foreground color.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["color",{"kind":"resolved_path","inner":{"name":"Option","id":"2:48055:177","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Color","id":"0:358:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:262:1910":{"id":"0:262:1910","crate_id":0,"name":"set_bold","span":{"filename":"src/lib.rs","begin":[1644,4],"end":[1647,5]},"visibility":"public","docs":"Set whether the text is bolded or not.\n\nNote that the bold setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2532:1425":{"id":"2:2532:1425","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48199:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:358:1824":{"id":"b:2:2238-0:358:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:358:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:2255"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:330:599":{"id":"0:330:599","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[206,33],"end":[206,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:311:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11462:53725":{"id":"2:11462:53725","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:353":{"id":"0:353","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1579,23],"end":[1579,25]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2290:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:265:1812":{"id":"0:265:1812","crate_id":0,"name":"italic","span":{"filename":"src/lib.rs","begin":[1667,4],"end":[1669,5]},"visibility":"public","docs":"Get whether this is italic or not.\n\nNote that the italic setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:273:1943":{"id":"0:273:1943","crate_id":0,"name":"is_none","span":{"filename":"src/lib.rs","begin":[1747,4],"end":[1755,5]},"visibility":"public","docs":"Returns true if this color specification has no colors or styles.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11381:2890":{"id":"2:11381:2890","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"self::pattern":"2:11041:2369","`None`":"2:48057:175","prim@char":"1:12300:407"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48055:177","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:2363","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:401":{"id":"0:401","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1925,16],"end":[1925,21]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8596:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:396:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:402:654"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:5372-0:396:1968":{"id":"b:5:5372-0:396:1968","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8601:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5370:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:396:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5374:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:259:1904":{"id":"0:259:1904","crate_id":0,"name":"bg","span":{"filename":"src/lib.rs","begin":[1624,4],"end":[1626,5]},"visibility":"public","docs":"Get the background color.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48055:177","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Color","id":"0:358:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:74:1660":{"id":"0:74:1660","crate_id":0,"name":"StandardStream","span":{"filename":"src/lib.rs","begin":[399,0],"end":[401,1]},"visibility":"public","docs":"Satisfies `io::Write` and `WriteColor`, and supports optional coloring\nto either of the standard output streams, stdout and stderr.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:101","a:2:7736:2521-0:74:1660","a:2:2676:224-0:74:1660","a:2:2726:2478-0:74:1660","a:2:7735:2522-0:74:1660","a:2:2662:216-0:74:1660","b:2:2238-0:74:1660","b:2:2517-0:74:1660","b:2:2523-0:74:1660","b:2:2513-0:74:1660","b:2:3321-0:74:1660","b:2:2241-0:74:1660","b:2:2528-0:74:1660","0:113","0:116"]}},"0:131":{"id":"0:131","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[673,0],"end":[683,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["write_fmt","is_write_vectored","by_ref","write_vectored","write_all","write_all_vectored"],"trait":{"name":"Write","id":"1:3461:1577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferedStandardStream","id":"0:79:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:132:1655","0:133:1657"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:110:1648":{"id":"0:110:1648","crate_id":0,"name":"stderr","span":{"filename":"src/lib.rs","begin":[546,4],"end":[550,5]},"visibility":"public","docs":"Create a new `BufferedStandardStream` with the given color preferences\nthat writes to standard error via a buffered writer.\n\nOn Windows, if coloring is desired and a Windows console could not be\nfound, then ANSI escape sequences are used instead.\n\nThe specific color/style settings can be configured when writing via\nthe `WriteColor` trait.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["choice",{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:311:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"BufferedStandardStream","id":"0:79:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:357:599":{"id":"0:357:599","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[1579,27],"end":[1579,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:365:1855":{"id":"0:365:1855","crate_id":0,"name":"Red","span":{"filename":"src/lib.rs","begin":[1810,4],"end":[1810,7]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"a:2:2662:216-0:161:1726":{"id":"a:2:2662:216-0:161:1726","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferWriter","id":"0:161:1726","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:387":{"id":"0:387","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1805,16],"end":[1805,20]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2674:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:358:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:188:788":{"id":"0:188:788","crate_id":0,"name":"len","span":{"filename":"src/lib.rs","begin":[1085,4],"end":[1092,5]},"visibility":"public","docs":"Returns the length of this buffer in bytes.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:79:1671":{"id":"0:79:1671","crate_id":0,"name":"BufferedStandardStream","span":{"filename":"src/lib.rs","begin":[415,0],"end":[417,1]},"visibility":"public","docs":"Like `StandardStream`, but does buffered writing.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:108","a:2:7736:2521-0:79:1671","a:2:2676:224-0:79:1671","a:2:2726:2478-0:79:1671","a:2:7735:2522-0:79:1671","a:2:2662:216-0:79:1671","b:2:2238-0:79:1671","b:2:2517-0:79:1671","b:2:2523-0:79:1671","b:2:2513-0:79:1671","b:2:3321-0:79:1671","b:2:2241-0:79:1671","b:2:2528-0:79:1671","0:131","0:134"]}},"2:11389:1974":{"id":"2:11389:1974","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"`DoubleEndedIterator`":"2:7079:119","self::pattern":"2:11041:2369","str::split_whitespace":"2:11367:58578","prim@char":"1:12300:407","str::rsplit":"2:11395:56695"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:50023:2319","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:2363","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2513-0:396:1968":{"id":"b:2:2513-0:396:1968","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:396:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2516:2846"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3321-0:74:1660":{"id":"b:2:3321-0:74:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStream","id":"0:74:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3323:1439"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7735:2522-0:221:1676":{"id":"a:2:7735:2522-0:221:1676","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"W"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:7735:2522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:2522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Ansi","id":"0:221:1676","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:76:1668":{"id":"0:76:1668","crate_id":0,"name":"StandardStreamLock","span":{"filename":"src/lib.rs","begin":[410,0],"end":[412,1]},"visibility":"public","docs":"`StandardStreamLock` is a locked reference to a `StandardStream`.\n\nThis implements the `io::Write` and `WriteColor` traits, and is constructed\nvia the `Write::lock` method.\n\nThe lifetime `'a` refers to the lifetime of the corresponding\n`StandardStream`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:7736:2521-0:76:1668","a:2:2676:224-0:76:1668","a:2:2726:2478-0:76:1668","a:2:7735:2522-0:76:1668","a:2:2662:216-0:76:1668","b:2:2238-0:76:1668","b:2:2517-0:76:1668","b:2:2523-0:76:1668","b:2:2513-0:76:1668","b:2:3321-0:76:1668","b:2:2241-0:76:1668","b:2:2528-0:76:1668","0:121","0:125"]}},"0:28:1590":{"id":"0:28:1590","crate_id":0,"name":"set_color","span":{"filename":"src/lib.rs","begin":[194,4],"end":[196,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["spec",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2903:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11369:4464":{"id":"2:11369:4464","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:50277:2320","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7736:2521-0:358:1824":{"id":"a:2:7736:2521-0:358:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:358:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11340:788":{"id":"2:11340:788","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12300:407"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2528-0:358:1824":{"id":"b:2:2528-0:358:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:358:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2531:126","2:2532:1425"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2726:2478-0:161:1726":{"id":"a:2:2726:2478-0:161:1726","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:2478","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferWriter","id":"0:161:1726","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:260:1906":{"id":"0:260:1906","crate_id":0,"name":"set_bg","span":{"filename":"src/lib.rs","begin":[1629,4],"end":[1632,5]},"visibility":"public","docs":"Set the background color.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["color",{"kind":"resolved_path","inner":{"name":"Option","id":"2:48055:177","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Color","id":"0:358:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:252:1595":{"id":"0:252:1595","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[1462,4],"end":[1464,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2903:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:250:1584":{"id":"0:250:1584","crate_id":0,"name":"supports_color","span":{"filename":"src/lib.rs","begin":[1454,4],"end":[1456,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11430:60622":{"id":"2:11430:60622","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:76:1668":{"id":"b:2:2238-0:76:1668","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStreamLock","id":"0:76:1668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2240:2255"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:270:1933":{"id":"0:270:1933","crate_id":0,"name":"set_reset","span":{"filename":"src/lib.rs","begin":[1716,4],"end":[1719,5]},"visibility":"public","docs":"Set whether to reset the terminal whenever color settings are applied.\n\nreset is enabled by default. When disabled and using ANSI escape\nsequences, a \"reset\" code will be emitted every time a `ColorSpec`'s\nsettings are applied.\n\nTypically this is useful if callers have a requirement to more\nscrupulously manage the exact sequence of escape codes that are emitted\nwhen using ANSI for colors.\n\nNote that the reset setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:408:599":{"id":"0:408:599","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[1925,27],"end":[1925,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:396:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2662:216-0:358:1824":{"id":"a:2:2662:216-0:358:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:358:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2726:2478-0:358:1824":{"id":"a:2:2726:2478-0:358:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:2478","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:358:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:284:1991":{"id":"0:284:1991","crate_id":0,"name":"description","span":{"filename":"src/lib.rs","begin":[1946,4],"end":[1953,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2726:2478-0:311:1610":{"id":"a:2:2726:2478-0:311:1610","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:2478","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:311:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:193":{"id":"0:193","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1138,0],"end":[1158,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["write_fmt","is_write_vectored","by_ref","write_vectored","write_all","write_all_vectored"],"trait":{"name":"Write","id":"1:3461:1577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Buffer","id":"0:173:1746","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:194:1655","0:195:1657"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2528-0:221:1676":{"id":"b:2:2528-0:221:1676","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Ansi","id":"0:221:1676","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:2531:126","2:2532:1425"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7736:2521-0:161:1726":{"id":"a:2:7736:2521-0:161:1726","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferWriter","id":"0:161:1726","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:186:1776":{"id":"0:186:1776","crate_id":0,"name":"ansi","span":{"filename":"src/lib.rs","begin":[1069,4],"end":[1071,5]},"visibility":"public","docs":"Create a buffer that uses ANSI escape sequences.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Buffer","id":"0:173:1746","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:325":{"id":"0:325","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[206,29],"end":[206,31]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2673:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:311:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:30:1605":{"id":"0:30:1605","crate_id":0,"name":"is_synchronous","span":{"filename":"src/lib.rs","begin":[200,4],"end":[202,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7736:2521-0:74:1660":{"id":"a:2:7736:2521-0:74:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStream","id":"0:74:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:190:1792":{"id":"0:190:1792","crate_id":0,"name":"into_inner","span":{"filename":"src/lib.rs","begin":[1108,4],"end":[1115,5]},"visibility":"public","docs":"Consume this buffer and return the underlying raw data.\n\nOn Windows, this unrecoverably drops all color information associated\nwith the buffer.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:6419:239","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:130:1605":{"id":"0:130:1605","crate_id":0,"name":"is_synchronous","span":{"filename":"src/lib.rs","begin":[668,4],"end":[670,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:329":{"id":"0:329","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[206,33],"end":[206,42]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2285:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:311:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:311:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:330:599"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11435:60625":{"id":"2:11435:60625","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11401:60615":{"id":"2:11401:60615","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"str::split":"2:11389:1974","str::split_terminator":"2:11398:60614","self::pattern":"2:11041:2369","prim@char":"1:12300:407"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:50091:2392","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:2363","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11046:2363","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11061:2364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7735:2522-0:79:1671":{"id":"a:2:7735:2522-0:79:1671","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:2522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferedStandardStream","id":"0:79:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:378:1865":{"id":"0:378:1865","crate_id":0,"name":"Rgb","span":{"filename":"src/lib.rs","begin":[1816,4],"end":[1816,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:380:1552","0:381:1553","0:382:1554"]},"discriminant":null}},"0:249":{"id":"0:249","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1453,0],"end":[1465,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["is_synchronous"],"trait":{"name":"WriteColor","id":"0:13:1582","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"io::Sink","id":"1:8370:1867","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:250:1584","0:251:1590","0:252:1595"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:231":{"id":"0:231","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1283,0],"end":[1293,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3461:1577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["write_fmt","is_write_vectored","by_ref","write_vectored","write_all","write_all_vectored"],"trait":{"name":"Write","id":"1:3461:1577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Ansi","id":"0:221:1676","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["0:233:1655","0:234:1657"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3321-0:221:1676":{"id":"b:2:3321-0:221:1676","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Ansi","id":"0:221:1676","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:3323:1439"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:108":{"id":"0:108","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[523,0],"end":[551,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"BufferedStandardStream","id":"0:79:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:109:1647","0:110:1648"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3321-0:173:1746":{"id":"b:2:3321-0:173:1746","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Buffer","id":"0:173:1746","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3323:1439"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:356":{"id":"0:356","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1579,27],"end":[1579,36]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2285:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:357:599"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:251:1590":{"id":"0:251:1590","crate_id":0,"name":"set_color","span":{"filename":"src/lib.rs","begin":[1458,4],"end":[1460,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["_",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2903:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2526:126":{"id":"2:2526:126","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"0:400:411":{"id":"0:400:411","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[1925,9],"end":[1925,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:396:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:339:1592":{"id":"b:2:2238-0:339:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:2255"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2528-0:311:1610":{"id":"b:2:2528-0:311:1610","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:311:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2531:126","2:2532:1425"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2241-0:76:1668":{"id":"b:2:2241-0:76:1668","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStreamLock","id":"0:76:1668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2243:53690"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11457:2018":{"id":"2:11457:2018","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:11003:125","`FromStr`":"2:11002:1578"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48199:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"2:11002:1578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:11002:1578","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11398:60614":{"id":"2:11398:60614","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"str::split":"2:11389:1974","`DoubleEndedIterator`":"2:7079:119","prim@char":"1:12300:407","self::pattern":"2:11041:2369","str::rsplit_terminator":"2:11401:60615"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:50073:2393","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:2363","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:271:1819":{"id":"0:271:1819","crate_id":0,"name":"intense","span":{"filename":"src/lib.rs","begin":[1729,4],"end":[1731,5]},"visibility":"public","docs":"Get whether this is intense or not.\n\nOn Unix-like systems, this will output the ANSI escape sequence\nthat will print a high-intensity version of the color\nspecified.\n\nOn Windows systems, this will output the ANSI escape sequence\nthat will print a brighter version of the color specified.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2528-0:173:1746":{"id":"b:2:2528-0:173:1746","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Buffer","id":"0:173:1746","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2531:126","2:2532:1425"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2517-0:173:1746":{"id":"b:2:2517-0:173:1746","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Buffer","id":"0:173:1746","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2519:672"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2517-0:396:1968":{"id":"b:2:2517-0:396:1968","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:396:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2519:672"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:349:411":{"id":"0:349:411","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[1579,9],"end":[1579,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:199:1595":{"id":"0:199:1595","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[1182,4],"end":[1189,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2903:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:128:1590":{"id":"0:128:1590","crate_id":0,"name":"set_color","span":{"filename":"src/lib.rs","begin":[658,4],"end":[660,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["spec",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2903:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:219:1595":{"id":"0:219:1595","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[1247,4],"end":[1249,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2903:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2523-0:76:1668":{"id":"b:2:2523-0:76:1668","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStreamLock","id":"0:76:1668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2526:126","2:2527:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:173:1746":{"id":"0:173:1746","crate_id":0,"name":"Buffer","span":{"filename":"src/lib.rs","begin":[1016,0],"end":[1016,31]},"visibility":"public","docs":"Write colored text to memory.\n\n`Buffer` is a platform independent abstraction for printing colored text to\nan in memory buffer. When the buffer is printed using a `BufferWriter`, the\ncolor information will be applied to the output device (a tty on Unix and a\nconsole on Windows).\n\nA `Buffer` is typically created by calling the `BufferWriter.buffer`\nmethod, which will take color preferences and the environment into\naccount. However, buffers can also be manually created using `no_color`,\n`ansi` or `console` (on Windows).","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:183","a:2:7736:2521-0:173:1746","a:2:2676:224-0:173:1746","a:2:2726:2478-0:173:1746","a:2:7735:2522-0:173:1746","a:2:2662:216-0:173:1746","b:2:2238-0:173:1746","b:2:2517-0:173:1746","b:2:2523-0:173:1746","b:2:2513-0:173:1746","b:2:3321-0:173:1746","b:2:2241-0:173:1746","b:2:2528-0:173:1746","0:193","0:196"]}},"0:380:1552":{"id":"0:380:1552","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[1816,8],"end":[1816,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"2:11361:60612":{"id":"2:11361:60612","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"str::slice_unchecked":"2:11360:60611","crate::ops::IndexMut":"2:2991:3180","`str`":"1:12306:1351"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3321-0:79:1671":{"id":"b:2:3321-0:79:1671","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferedStandardStream","id":"0:79:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3323:1439"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2516:2846":{"id":"2:2516:2846","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2490:131"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11454:60630":{"id":"2:11454:60630","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:11041:2369","prim@char":"1:12300:407"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:2363","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11046:2363","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11061:2364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2240:2255":{"id":"2:2240:2255","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2676:224-0:79:1671":{"id":"a:2:2676:224-0:79:1671","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferedStandardStream","id":"0:79:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2513-0:339:1592":{"id":"b:2:2513-0:339:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2516:2846"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:218:1590":{"id":"0:218:1590","crate_id":0,"name":"set_color","span":{"filename":"src/lib.rs","begin":[1242,4],"end":[1244,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["_",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2903:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2662:216-0:221:1676":{"id":"a:2:2662:216-0:221:1676","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Ansi","id":"0:221:1676","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2726:2478-0:339:1592":{"id":"a:2:2726:2478-0:339:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:2478","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:399":{"id":"0:399","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1925,9],"end":[1925,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:396:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:400:411"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11354:1803":{"id":"2:11354:1803","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:48057:175"},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48055:177","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9138:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9138:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11372:1987":{"id":"2:11372:1987","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12300:407","self::pattern":"2:11041:2369"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:2363","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:237:1584":{"id":"0:237:1584","crate_id":0,"name":"supports_color","span":{"filename":"src/lib.rs","begin":[1297,4],"end":[1299,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11425:60620":{"id":"2:11425:60620","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"prim@char":"1:12300:407","`DoubleEndedIterator`":"2:7079:119","self::pattern":"2:11041:2369","str::match_indices":"2:11422:60619"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:50191:2386","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:2363","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11046:2363","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11061:2364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:233:1655":{"id":"0:233:1655","crate_id":0,"name":"write","span":{"filename":"src/lib.rs","begin":[1285,4],"end":[1287,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2903:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:138:1605":{"id":"0:138:1605","crate_id":0,"name":"is_synchronous","span":{"filename":"src/lib.rs","begin":[705,4],"end":[707,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:318:1622":{"id":"0:318:1622","crate_id":0,"name":"Never","span":{"filename":"src/lib.rs","begin":[219,4],"end":[219,9]},"visibility":"default","docs":"Never emit colors.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"a:2:7735:2522-0:161:1726":{"id":"a:2:7735:2522-0:161:1726","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:2522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferWriter","id":"0:161:1726","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11385:2852":{"id":"2:11385:2852","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:48057:175","prim@char":"1:12300:407","self::pattern":"2:11041:2369"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48055:177","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:2363","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11046:2363","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11061:2364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:367:1856":{"id":"0:367:1856","crate_id":0,"name":"Cyan","span":{"filename":"src/lib.rs","begin":[1811,4],"end":[1811,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:266:1919":{"id":"0:266:1919","crate_id":0,"name":"set_italic","span":{"filename":"src/lib.rs","begin":[1674,4],"end":[1677,5]},"visibility":"public","docs":"Set whether the text is italicized or not.\n\nNote that the italic setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:129:1595":{"id":"0:129:1595","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[663,4],"end":[665,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2903:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:363:1854":{"id":"0:363:1854","crate_id":0,"name":"Green","span":{"filename":"src/lib.rs","begin":[1809,4],"end":[1809,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"2:11392:56693":{"id":"2:11392:56693","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"self::pattern":"2:11041:2369","prim@char":"1:12300:407"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:10865:2372","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:2363","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2513-0:221:1676":{"id":"b:2:2513-0:221:1676","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Ansi","id":"0:221:1676","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:2516:2846"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2513-0:311:1610":{"id":"b:2:2513-0:311:1610","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:311:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2516:2846"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:282:1990":{"id":"0:282:1990","crate_id":0,"name":"invalid","span":{"filename":"src/lib.rs","begin":[1940,4],"end":[1942,5]},"visibility":"public","docs":"Return the string that couldn't be parsed as a valid color.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2517-0:201:1675":{"id":"b:2:2517-0:201:1675","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoColor","id":"0:201:1675","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:2519:672"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2528-0:79:1671":{"id":"b:2:2528-0:79:1671","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferedStandardStream","id":"0:79:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2531:126","2:2532:1425"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2662:216-0:396:1968":{"id":"a:2:2662:216-0:396:1968","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:396:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:120:1605":{"id":"0:120:1605","crate_id":0,"name":"is_synchronous","span":{"filename":"src/lib.rs","begin":[634,4],"end":[636,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:385":{"id":"0:385","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1805,9],"end":[1805,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:358:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:386:411"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:15:1590":{"id":"0:15:1590","crate_id":0,"name":"set_color","span":{"filename":"src/lib.rs","begin":[151,4],"end":[151,64]},"visibility":"default","docs":"Set the color settings of the writer.\n\nSubsequent writes to this writer will use these settings until either\n`reset` is called or new color settings are set.\n\nIf there was a problem setting the color settings, then an error is\nreturned.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["spec",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2903:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:2241-0:396:1968":{"id":"b:2:2241-0:396:1968","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:396:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2243:53690"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:685:2911":{"id":"5:685:2911","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:214:1657":{"id":"0:214:1657","crate_id":0,"name":"flush","span":{"filename":"src/lib.rs","begin":[1230,4],"end":[1232,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2903:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3321-0:358:1824":{"id":"b:2:3321-0:358:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:358:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3323:1439"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:103:1648":{"id":"0:103:1648","crate_id":0,"name":"stderr","span":{"filename":"src/lib.rs","begin":[471,4],"end":[474,5]},"visibility":"public","docs":"Create a new `StandardStream` with the given color preferences that\nwrites to standard error.\n\nOn Windows, if coloring is desired and a Windows console could not be\nfound, then ANSI escape sequences are used instead.\n\nThe specific color/style settings can be configured when writing via\nthe `WriteColor` trait.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["choice",{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:311:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"StandardStream","id":"0:74:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2676:224-0:221:1676":{"id":"a:2:2676:224-0:221:1676","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2676:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Ansi","id":"0:221:1676","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:169:1648":{"id":"0:169:1648","crate_id":0,"name":"stderr","span":{"filename":"src/lib.rs","begin":[939,4],"end":[941,5]},"visibility":"public","docs":"Create a new `BufferWriter` that writes to stderr with the given\ncolor preferences.\n\nOn Windows, if coloring is desired and a Windows console could not be\nfound, then ANSI escape sequences are used instead.\n\nThe specific color/style settings can be configured when writing to\nthe buffers themselves.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["choice",{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:311:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"BufferWriter","id":"0:161:1726","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3321-0:339:1592":{"id":"b:2:3321-0:339:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3323:1439"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2528-0:74:1660":{"id":"b:2:2528-0:74:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStream","id":"0:74:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2531:126","2:2532:1425"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:388":{"id":"0:388","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1805,22],"end":[1805,27]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8596:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:358:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:389:654"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:221:1676":{"id":"0:221:1676","crate_id":0,"name":"Ansi","span":{"filename":"src/lib.rs","begin":[1258,0],"end":[1258,22]},"visibility":"public","docs":"Satisfies `WriteColor` using standard ANSI escape sequences.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:225","a:2:7736:2521-0:221:1676","a:2:2676:224-0:221:1676","a:2:2726:2478-0:221:1676","a:2:7735:2522-0:221:1676","a:2:2662:216-0:221:1676","b:2:2238-0:221:1676","b:2:2517-0:221:1676","b:2:2523-0:221:1676","b:2:2513-0:221:1676","b:2:3321-0:221:1676","b:2:2241-0:221:1676","b:2:2528-0:221:1676","0:231","0:235"]}},"b:2:2241-0:339:1592":{"id":"b:2:2241-0:339:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2243:53690"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:113":{"id":"0:113","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[605,0],"end":[615,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["write_fmt","is_write_vectored","by_ref","write_vectored","write_all","write_all_vectored"],"trait":{"name":"Write","id":"1:3461:1577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStream","id":"0:74:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:114:1655","0:115:1657"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:322":{"id":"0:322","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[206,16],"end":[206,20]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2674:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:311:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2662:216-0:173:1746":{"id":"a:2:2662:216-0:173:1746","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Buffer","id":"0:173:1746","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11371:58582":{"id":"2:11371:58582","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:50315:2370","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:101":{"id":"0:101","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[449,0],"end":[486,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"StandardStream","id":"0:74:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:102:1647","0:103:1648","0:104:1650"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:207:914":{"id":"0:207:914","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[1203,4],"end":[1205,5]},"visibility":"public","docs":"Create a new writer that satisfies `WriteColor` but drops all color\ninformation.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["wtr",{"kind":"generic","inner":"W"}]],"output":{"kind":"resolved_path","inner":{"name":"NoColor","id":"0:201:1675","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:286":{"id":"0:286","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1956,0],"end":[1982,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8601:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:396:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:287:654"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5120:61268":{"id":"5:5120:61268","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`String`":"5:6992:220","`Box<str>`":"5:286:1608"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:286:1608","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6737:3184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6992:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:225":{"id":"0:225","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1260,0],"end":[1281,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Write","id":"1:3461:1577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Ansi","id":"0:221:1676","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["0:227:914","0:228:1792","0:229:1703","0:230:1803"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:201:1675":{"id":"0:201:1675","crate_id":0,"name":"NoColor","span":{"filename":"src/lib.rs","begin":[1198,0],"end":[1198,25]},"visibility":"public","docs":"Satisfies `WriteColor` but ignores all color options.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:205","a:2:7736:2521-0:201:1675","a:2:2676:224-0:201:1675","a:2:2726:2478-0:201:1675","a:2:7735:2522-0:201:1675","a:2:2662:216-0:201:1675","b:2:2238-0:201:1675","b:2:2517-0:201:1675","b:2:2523-0:201:1675","b:2:2513-0:201:1675","b:2:3321-0:201:1675","b:2:2241-0:201:1675","b:2:2528-0:201:1675","0:211","0:215"]}},"5:5108:61266":{"id":"5:5108:61266","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:6992:220"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6992:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:2363","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:125":{"id":"0:125","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[651,0],"end":[671,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["is_synchronous"],"trait":{"name":"WriteColor","id":"0:13:1582","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStreamLock","id":"0:76:1668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:127:1584","0:128:1590","0:129:1595","0:130:1605"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:119:1595":{"id":"0:119:1595","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[629,4],"end":[631,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2903:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:373:1862":{"id":"0:373:1862","crate_id":0,"name":"White","span":{"filename":"src/lib.rs","begin":[1814,4],"end":[1814,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"5:5103":{"id":"5:5103","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5014:1351","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:5104:61265","5:5105:2321","5:5108:61266","5:5111:1999","5:5119:61267","5:5120:61268","5:5121:2338","5:5122:53721","5:5123:53722"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3321-0:76:1668":{"id":"b:2:3321-0:76:1668","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStreamLock","id":"0:76:1668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3323:1439"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2523-0:79:1671":{"id":"b:2:2523-0:79:1671","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferedStandardStream","id":"0:79:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2526:126","2:2527:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:208:1792":{"id":"0:208:1792","crate_id":0,"name":"into_inner","span":{"filename":"src/lib.rs","begin":[1208,4],"end":[1210,5]},"visibility":"public","docs":"Consume this `NoColor` value and return the inner writer.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"W"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:389:654":{"id":"0:389:654","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1805,22],"end":[1805,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8556:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8545:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2587:3221":{"id":"2:2587:3221","crate_id":2,"name":"provide","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["demand",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Demand","id":"2:3382:3227","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7736:2521-0:173:1746":{"id":"a:2:7736:2521-0:173:1746","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Buffer","id":"0:173:1746","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:189:1788":{"id":"0:189:1788","crate_id":0,"name":"clear","span":{"filename":"src/lib.rs","begin":[1095,4],"end":[1102,5]},"visibility":"public","docs":"Clears this buffer.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11362:56684":{"id":"2:11362:56684","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:11363:56685"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:17:1605":{"id":"0:17:1605","crate_id":0,"name":"is_synchronous","span":{"filename":"src/lib.rs","begin":[170,4],"end":[172,5]},"visibility":"default","docs":"Returns true if and only if the underlying writer must synchronously\ninteract with an end user's device in order to control colors. By\ndefault, this always returns `false`.\n\nIn practice, this should return `true` if the underlying writer is\nmanipulating colors using the Windows console APIs.\n\nThis is useful for writing generic code (such as a buffered writer)\nthat can perform certain optimizations when the underlying writer\ndoesn't rely on synchronous APIs. For example, ANSI escape sequences\ncan be passed through to the end user's device as is.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11341:1752":{"id":"2:11341:1752","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2523-0:221:1676":{"id":"b:2:2523-0:221:1676","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Ansi","id":"0:221:1676","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:2526:126","2:2527:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:291:1998":{"id":"0:291:1998","crate_id":0,"name":"from_str","span":{"filename":"src/lib.rs","begin":[1987,4],"end":[1999,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48199:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Color","id":"0:358:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:396:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:185:1777":{"id":"0:185:1777","crate_id":0,"name":"no_color","span":{"filename":"src/lib.rs","begin":[1064,4],"end":[1066,5]},"visibility":"public","docs":"Create a buffer that drops all color information.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Buffer","id":"0:173:1746","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2528-0:201:1675":{"id":"b:2:2528-0:201:1675","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoColor","id":"0:201:1675","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:2531:126","2:2532:1425"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3321-0:201:1675":{"id":"b:2:3321-0:201:1675","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoColor","id":"0:201:1675","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:3323:1439"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11356:56661":{"id":"2:11356:56661","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9138:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9138:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:339:1592":{"id":"0:339:1592","crate_id":0,"name":"ColorSpec","span":{"filename":"src/lib.rs","begin":[1580,0],"end":[1589,1]},"visibility":"public","docs":"A color specification.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:255","a:2:7736:2521-0:339:1592","a:2:2676:224-0:339:1592","a:2:2726:2478-0:339:1592","a:2:7735:2522-0:339:1592","a:2:2662:216-0:339:1592","b:2:2238-0:339:1592","b:2:2517-0:339:1592","b:2:2523-0:339:1592","b:2:2513-0:339:1592","b:2:3321-0:339:1592","b:2:2241-0:339:1592","b:2:2528-0:339:1592","b:5:681-0:339:1592","0:348","0:350","0:352","0:353","0:355","0:356","0:253"]}},"0:16:1595":{"id":"0:16:1595","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[157,4],"end":[157,42]},"visibility":"default","docs":"Reset the current color settings to their original settings.\n\nIf there was a problem resetting the color settings, then an error is\nreturned.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2903:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:217:1584":{"id":"0:217:1584","crate_id":0,"name":"supports_color","span":{"filename":"src/lib.rs","begin":[1237,4],"end":[1239,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:359:1851":{"id":"0:359:1851","crate_id":0,"name":"Black","span":{"filename":"src/lib.rs","begin":[1807,4],"end":[1807,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"2:11419:60618":{"id":"2:11419:60618","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:11041:2369","str::matches":"2:11416:2270","prim@char":"1:12300:407","`DoubleEndedIterator`":"2:7079:119"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:50245:2388","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:2363","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11046:2363","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11061:2364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:166":{"id":"0:166","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[867,0],"end":[1003,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"BufferWriter","id":"0:161:1726","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:168:1647","0:169:1648","0:170:1728","0:171:1745","0:172:1751"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:326":{"id":"0:326","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[206,29],"end":[206,31]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2290:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:311:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11463:60631":{"id":"2:11463:60631","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4467:60631"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:50322:2380","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:135:1584":{"id":"0:135:1584","crate_id":0,"name":"supports_color","span":{"filename":"src/lib.rs","begin":[687,4],"end":[689,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2662:216-0:311:1610":{"id":"a:2:2662:216-0:311:1610","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:311:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:369:1858":{"id":"0:369:1858","crate_id":0,"name":"Magenta","span":{"filename":"src/lib.rs","begin":[1812,4],"end":[1812,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:355":{"id":"0:355","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1579,27],"end":[1579,36]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2672:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:7735:2522-0:74:1660":{"id":"a:2:7735:2522-0:74:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:2522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStream","id":"0:74:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:7736:2521-0:311:1610":{"id":"a:2:7736:2521-0:311:1610","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:311:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:205":{"id":"0:205","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1200,0],"end":[1221,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Write","id":"1:3461:1577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"NoColor","id":"0:201:1675","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["0:207:914","0:208:1792","0:209:1703","0:210:1803"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11461:53724":{"id":"2:11461:53724","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11442:54143":{"id":"2:11442:54143","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:11041:2369","prim@char":"1:12300:407"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48055:177","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:2363","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11466:60632":{"id":"2:11466:60632","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4465:60632"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:50340:2382","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2662:216-0:79:1671":{"id":"a:2:2662:216-0:79:1671","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferedStandardStream","id":"0:79:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:240:1605":{"id":"0:240:1605","crate_id":0,"name":"is_synchronous","span":{"filename":"src/lib.rs","begin":[1333,4],"end":[1335,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7735:2522-0:358:1824":{"id":"a:2:7735:2522-0:358:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:2522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:358:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:115:1657":{"id":"0:115:1657","crate_id":0,"name":"flush","span":{"filename":"src/lib.rs","begin":[612,4],"end":[614,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2903:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11351:56663":{"id":"2:11351:56663","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12317:1447"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:29:1595":{"id":"0:29:1595","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[197,4],"end":[199,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2903:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2528-0:76:1668":{"id":"b:2:2528-0:76:1668","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStreamLock","id":"0:76:1668","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2531:126","2:2532:1425"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5122:53721":{"id":"5:5122:53721","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:11461:53724"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6992:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:254:59":{"id":"0:254:59","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[1592,4],"end":[1603,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2676:224-0:311:1610":{"id":"a:2:2676:224-0:311:1610","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:311:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2676:224-0:396:1968":{"id":"a:2:2676:224-0:396:1968","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:396:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:407":{"id":"0:407","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1925,27],"end":[1925,36]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2285:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:396:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:396:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:408:599"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:23:1595":{"id":"0:23:1595","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[182,4],"end":[184,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2903:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:320":{"id":"0:320","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[206,9],"end":[206,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:311:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:321:411"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:7736:2521-0:396:1968":{"id":"a:2:7736:2521-0:396:1968","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:396:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:118:1590":{"id":"0:118:1590","crate_id":0,"name":"set_color","span":{"filename":"src/lib.rs","begin":[624,4],"end":[626,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["spec",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2903:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11451:60629":{"id":"2:11451:60629","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12300:407","self::pattern":"2:11041:2369"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:2363","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:173:1746":{"id":"b:2:2238-0:173:1746","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Buffer","id":"0:173:1746","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:2255"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11360:60611":{"id":"2:11360:60611","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12306:1351","str::slice_mut_unchecked":"2:11361:60612","crate::ops::Index":"2:2987:3179"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:256:914":{"id":"0:256:914","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[1608,4],"end":[1610,5]},"visibility":"public","docs":"Create a new color specification that has no colors or styles.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:124:1657":{"id":"0:124:1657","crate_id":0,"name":"flush","span":{"filename":"src/lib.rs","begin":[646,4],"end":[648,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2903:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:268:1923":{"id":"0:268:1923","crate_id":0,"name":"set_underline","span":{"filename":"src/lib.rs","begin":[1689,4],"end":[1692,5]},"visibility":"public","docs":"Set whether the text is underlined or not.\n\nNote that the underline setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:267:1814":{"id":"0:267:1814","crate_id":0,"name":"underline","span":{"filename":"src/lib.rs","begin":[1682,4],"end":[1684,5]},"visibility":"public","docs":"Get whether this is underline or not.\n\nNote that the underline setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:351:654":{"id":"0:351:654","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1579,16],"end":[1579,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8556:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8545:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:117:1584":{"id":"0:117:1584","crate_id":0,"name":"supports_color","span":{"filename":"src/lib.rs","begin":[619,4],"end":[621,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:198:1590":{"id":"0:198:1590","crate_id":0,"name":"set_color","span":{"filename":"src/lib.rs","begin":[1172,4],"end":[1179,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["spec",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2903:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2517-0:74:1660":{"id":"b:2:2517-0:74:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStream","id":"0:74:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2519:672"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:274:1788":{"id":"0:274:1788","crate_id":0,"name":"clear","span":{"filename":"src/lib.rs","begin":[1758,4],"end":[1766,5]},"visibility":"public","docs":"Clears this color specification so that it has no color/style settings.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11459:4144":{"id":"2:11459:4144","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2676:224-0:173:1746":{"id":"a:2:2676:224-0:173:1746","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Buffer","id":"0:173:1746","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2676:224-0:358:1824":{"id":"a:2:2676:224-0:358:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:358:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2517-0:161:1726":{"id":"b:2:2517-0:161:1726","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferWriter","id":"0:161:1726","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2519:672"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:132:1655":{"id":"0:132:1655","crate_id":0,"name":"write","span":{"filename":"src/lib.rs","begin":[675,4],"end":[677,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["b",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2903:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:350":{"id":"0:350","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1579,16],"end":[1579,21]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8596:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:351:654"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:187:1752":{"id":"0:187:1752","crate_id":0,"name":"is_empty","span":{"filename":"src/lib.rs","begin":[1080,4],"end":[1082,5]},"visibility":"public","docs":"Returns true if and only if this buffer is empty.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2517-0:79:1671":{"id":"b:2:2517-0:79:1671","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferedStandardStream","id":"0:79:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2519:672"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:220:1605":{"id":"0:220:1605","crate_id":0,"name":"is_synchronous","span":{"filename":"src/lib.rs","begin":[1252,4],"end":[1254,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:361:1852":{"id":"0:361:1852","crate_id":0,"name":"Blue","span":{"filename":"src/lib.rs","begin":[1808,4],"end":[1808,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:311:1610":{"id":"0:311:1610","crate_id":0,"name":"ColorChoice","span":{"filename":"src/lib.rs","begin":[207,0],"end":[220,1]},"visibility":"public","docs":"ColorChoice represents the color preferences of an end user.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:312:1613","0:314:1616","0:316:1620","0:318:1622"],"impls":["a:2:7736:2521-0:311:1610","a:2:2676:224-0:311:1610","a:2:2726:2478-0:311:1610","a:2:7735:2522-0:311:1610","a:2:2662:216-0:311:1610","b:2:2238-0:311:1610","b:2:2517-0:311:1610","b:2:2523-0:311:1610","b:2:2513-0:311:1610","b:2:3321-0:311:1610","b:2:2241-0:311:1610","b:2:2528-0:311:1610","b:5:681-0:311:1610","0:320","0:322","0:323","0:325","0:326","0:328","0:329"]}},"b:2:3321-0:161:1726":{"id":"b:2:3321-0:161:1726","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferWriter","id":"0:161:1726","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3323:1439"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:127:1584":{"id":"0:127:1584","crate_id":0,"name":"supports_color","span":{"filename":"src/lib.rs","begin":[653,4],"end":[655,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11465:3235":{"id":"2:11465:3235","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4468:3235"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:50331:2381","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7736:2521-0:221:1676":{"id":"a:2:7736:2521-0:221:1676","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"W"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7736:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Ansi","id":"0:221:1676","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:172:1751":{"id":"0:172:1751","crate_id":0,"name":"print","span":{"filename":"src/lib.rs","begin":[974,4],"end":[1002,5]},"visibility":"public","docs":"Prints the contents of the given buffer.\n\nIt is safe to call this from multiple threads simultaneously. In\nparticular, all buffers are written atomically. No interleaving will\noccur.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Buffer","id":"0:173:1746","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2903:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:235":{"id":"0:235","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1295,0],"end":[1336,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3461:1577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_synchronous"],"trait":{"name":"WriteColor","id":"0:13:1582","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Ansi","id":"0:221:1676","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["0:237:1584","0:238:1590","0:239:1595","0:240:1605"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11365:3764":{"id":"2:11365:3764","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12300:407"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49999:2375","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2241-0:173:1746":{"id":"b:2:2241-0:173:1746","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Buffer","id":"0:173:1746","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2243:53690"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2528-0:396:1968":{"id":"b:2:2528-0:396:1968","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:396:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2531:126","2:2532:1425"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2662:216-0:74:1660":{"id":"a:2:2662:216-0:74:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStream","id":"0:74:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:402:654":{"id":"0:402:654","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1925,16],"end":[1925,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8556:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8545:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2523-0:396:1968":{"id":"b:2:2523-0:396:1968","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:396:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2526:126","2:2527:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:358:1824":{"id":"0:358:1824","crate_id":0,"name":"Color","span":{"filename":"src/lib.rs","begin":[1806,0],"end":[1819,1]},"visibility":"public","docs":"The set of available colors for the terminal foreground/background.\n\nThe `Ansi256` and `Rgb` colors will only output the correct codes when\npaired with the `Ansi` `WriteColor` implementation.\n\nThe `Ansi256` and `Rgb` color types are not supported when writing colors\non Windows using the console. If they are used on Windows, then they are\nsilently ignored and no colors will be emitted.\n\nThis set may expand over time.\n\nThis type has a `FromStr` impl that can parse colors from their human\nreadable form. The format is as follows:\n\n1. Any of the explicitly listed colors in English. They are matched\n   case insensitively.\n2. A single 8-bit integer, in either decimal or hexadecimal format.\n3. A triple of 8-bit integers separated by a comma, where each integer is\n   in decimal or hexadecimal format.\n\nHexadecimal numbers are written with a `0x` prefix.","links":{},"attrs":["#[allow(missing_docs)]"],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":true,"variants":["0:359:1851","0:361:1852","0:363:1854","0:365:1855","0:367:1856","0:369:1858","0:371:1860","0:373:1862","0:375:1864","0:378:1865"],"impls":["a:2:7736:2521-0:358:1824","a:2:2676:224-0:358:1824","a:2:2726:2478-0:358:1824","a:2:7735:2522-0:358:1824","a:2:2662:216-0:358:1824","b:2:2238-0:358:1824","b:2:2517-0:358:1824","b:2:2523-0:358:1824","b:2:2513-0:358:1824","b:2:3321-0:358:1824","b:2:2241-0:358:1824","b:2:2528-0:358:1824","b:5:681-0:358:1824","0:385","0:387","0:388","0:390","0:391","0:393","0:394","0:289"]}},"0:394":{"id":"0:394","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1805,33],"end":[1805,42]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2285:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Color","id":"0:358:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:358:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:395:599"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11363:56685":{"id":"2:11363:56685","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:11362:56684"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7736:2521-0:79:1671":{"id":"a:2:7736:2521-0:79:1671","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferedStandardStream","id":"0:79:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2523-0:74:1660":{"id":"b:2:2523-0:74:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStream","id":"0:74:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2526:126","2:2527:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:25":{"id":"0:25","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[190,0],"end":[203,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"WriteColor","id":"0:13:1582","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_synchronous"],"trait":{"name":"WriteColor","id":"0:13:1582","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Box","id":"5:286:1608","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:27:1584","0:28:1590","0:29:1595","0:30:1605"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:194:1655":{"id":"0:194:1655","crate_id":0,"name":"write","span":{"filename":"src/lib.rs","begin":[1140,4],"end":[1147,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2903:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7735:2522-0:311:1610":{"id":"a:2:7735:2522-0:311:1610","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:2522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:311:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:381:1553":{"id":"0:381:1553","crate_id":0,"name":"1","span":{"filename":"src/lib.rs","begin":[1816,12],"end":[1816,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"b:2:2517-0:221:1676":{"id":"b:2:2517-0:221:1676","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Ansi","id":"0:221:1676","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:2519:672"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:312:1613":{"id":"0:312:1613","crate_id":0,"name":"Always","span":{"filename":"src/lib.rs","begin":[210,4],"end":[210,10]},"visibility":"default","docs":"Try very hard to emit colors. This includes emitting ANSI colors\non Windows if the console API is unavailable.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:263:1810":{"id":"0:263:1810","crate_id":0,"name":"dimmed","span":{"filename":"src/lib.rs","begin":[1652,4],"end":[1654,5]},"visibility":"public","docs":"Get whether this is dimmed or not.\n\nNote that the dimmed setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:253":{"id":"0:253","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1591,0],"end":[1604,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2564:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:254:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:683:2909":{"id":"5:683:2909","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"5:5104:61265":{"id":"5:5104:61265","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:286:1608","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6737:3184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:286:1608","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6737:3184","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:191:1794":{"id":"0:191:1794","crate_id":0,"name":"as_slice","span":{"filename":"src/lib.rs","begin":[1118,4],"end":[1125,5]},"visibility":"public","docs":"Return the underlying data of the buffer.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7736:2521-0:339:1592":{"id":"a:2:7736:2521-0:339:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:200:1605":{"id":"0:200:1605","crate_id":0,"name":"is_synchronous","span":{"filename":"src/lib.rs","begin":[1192,4],"end":[1194,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2726:2478-0:79:1671":{"id":"a:2:2726:2478-0:79:1671","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:2478","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferedStandardStream","id":"0:79:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2513-0:79:1671":{"id":"b:2:2513-0:79:1671","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferedStandardStream","id":"0:79:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2516:2846"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2523-0:201:1675":{"id":"b:2:2523-0:201:1675","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoColor","id":"0:201:1675","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:2526:126","2:2527:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:324:654":{"id":"0:324:654","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[206,22],"end":[206,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8556:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8545:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:229:1703":{"id":"0:229:1703","crate_id":0,"name":"get_ref","span":{"filename":"src/lib.rs","begin":[1273,4],"end":[1275,5]},"visibility":"public","docs":"Return a reference to the inner writer.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"W"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:227:914":{"id":"0:227:914","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[1263,4],"end":[1265,5]},"visibility":"public","docs":"Create a new writer that satisfies `WriteColor` using standard ANSI\nescape sequences.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["wtr",{"kind":"generic","inner":"W"}]],"output":{"kind":"resolved_path","inner":{"name":"Ansi","id":"0:221:1676","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:234:1657":{"id":"0:234:1657","crate_id":0,"name":"flush","span":{"filename":"src/lib.rs","begin":[1290,4],"end":[1292,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2903:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:161:1726":{"id":"0:161:1726","crate_id":0,"name":"BufferWriter","span":{"filename":"src/lib.rs","begin":[858,0],"end":[865,1]},"visibility":"public","docs":"Writes colored buffers to stdout or stderr.\n\nWritable buffers can be obtained by calling `buffer` on a `BufferWriter`.\n\nThis writer works with terminals that support ANSI escape sequences or\nwith a Windows console.\n\nIt is intended for a `BufferWriter` to be put in an `Arc` and written to\nfrom multiple threads simultaneously.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:166","a:2:7736:2521-0:161:1726","a:2:2676:224-0:161:1726","a:2:2726:2478-0:161:1726","a:2:7735:2522-0:161:1726","a:2:2662:216-0:161:1726","b:2:2238-0:161:1726","b:2:2517-0:161:1726","b:2:2523-0:161:1726","b:2:2513-0:161:1726","b:2:3321-0:161:1726","b:2:2241-0:161:1726","b:2:2528-0:161:1726"]}},"2:11352:56660":{"id":"2:11352:56660","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:48057:175"},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48055:177","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9138:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9138:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11460:53723":{"id":"2:11460:53723","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2585-0:396:1968":{"id":"b:2:2585-0:396:1968","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:2578:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:3370:3228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:396:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2587:3221"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"E"}}},"0:396:1968":{"id":"0:396:1968","crate_id":0,"name":"ParseColorError","span":{"filename":"src/lib.rs","begin":[1926,0],"end":[1929,1]},"visibility":"public","docs":"An error from parsing an invalid color specification.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:281","a:2:7736:2521-0:396:1968","a:2:2676:224-0:396:1968","a:2:2726:2478-0:396:1968","a:2:7735:2522-0:396:1968","a:2:2662:216-0:396:1968","b:2:2238-0:396:1968","b:2:2585-0:396:1968","b:2:2517-0:396:1968","b:2:2523-0:396:1968","b:2:2513-0:396:1968","b:2:3321-0:396:1968","b:2:2241-0:396:1968","b:2:2528-0:396:1968","b:5:5372-0:396:1968","b:5:681-0:396:1968","0:399","0:401","0:403","0:404","0:406","0:407","0:283","0:286"]}},"a:2:2676:224-0:161:1726":{"id":"a:2:2676:224-0:161:1726","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferWriter","id":"0:161:1726","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:14:1584":{"id":"0:14:1584","crate_id":0,"name":"supports_color","span":{"filename":"src/lib.rs","begin":[142,4],"end":[142,37]},"visibility":"default","docs":"Returns true if and only if the underlying writer supports colors.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:11342:60607":{"id":"2:11342:60607","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:221:1676":{"id":"b:2:2238-0:221:1676","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Ansi","id":"0:221:1676","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:2240:2255"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11445:56701":{"id":"2:11445:56701","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:11041:2369","prim@char":"1:12300:407"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48055:177","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:2363","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11046:2363","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11061:2364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2662:216-0:201:1675":{"id":"a:2:2662:216-0:201:1675","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoColor","id":"0:201:1675","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:5111:1999":{"id":"5:5111:1999","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:6992:220"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6992:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11439:60627":{"id":"2:11439:60627","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12300:407","self::pattern":"2:11041:2369"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:2363","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3323:1439":{"id":"2:3323:1439","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:46527:3229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5121:2338":{"id":"5:5121:2338","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:6992:220"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6992:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:323":{"id":"0:323","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[206,22],"end":[206,27]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8596:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:311:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:324:654"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:102:1647":{"id":"0:102:1647","crate_id":0,"name":"stdout","span":{"filename":"src/lib.rs","begin":[458,4],"end":[461,5]},"visibility":"public","docs":"Create a new `StandardStream` with the given color preferences that\nwrites to standard output.\n\nOn Windows, if coloring is desired and a Windows console could not be\nfound, then ANSI escape sequences are used instead.\n\nThe specific color/style settings can be configured when writing via\nthe `WriteColor` trait.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["choice",{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:311:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"StandardStream","id":"0:74:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:196":{"id":"0:196","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1160,0],"end":[1195,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["is_synchronous"],"trait":{"name":"WriteColor","id":"0:13:1582","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Buffer","id":"0:173:1746","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:197:1584","0:198:1590","0:199:1595","0:200:1605"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:209:1703":{"id":"0:209:1703","crate_id":0,"name":"get_ref","span":{"filename":"src/lib.rs","begin":[1213,4],"end":[1215,5]},"visibility":"public","docs":"Return a reference to the inner writer.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"W"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2726:2478-0:74:1660":{"id":"a:2:2726:2478-0:74:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:2478","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStream","id":"0:74:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:684:2910":{"id":"5:684:2910","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:109:1647":{"id":"0:109:1647","crate_id":0,"name":"stdout","span":{"filename":"src/lib.rs","begin":[532,4],"end":[536,5]},"visibility":"public","docs":"Create a new `BufferedStandardStream` with the given color preferences\nthat writes to standard output via a buffered writer.\n\nOn Windows, if coloring is desired and a Windows console could not be\nfound, then ANSI escape sequences are used instead.\n\nThe specific color/style settings can be configured when writing via\nthe `WriteColor` trait.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["choice",{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:311:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"BufferedStandardStream","id":"0:79:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11436:60626":{"id":"2:11436:60626","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12300:407","self::pattern":"2:11041:2369"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:2363","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11046:2363","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:11066:2362","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11413:60617":{"id":"2:11413:60617","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48055:177","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:2363","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11046:2363","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11061:2364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:0:2055":{"id":"0:0:2055","crate_id":0,"name":"termcolor","span":{"filename":"src/lib.rs","begin":[1,0],"end":[2260,1]},"visibility":"public","docs":"This crate provides a cross platform abstraction for writing colored text to\na terminal. Colors are written using either ANSI escape sequences or by\ncommunicating with a Windows console. Much of this API was motivated by use\ninside command line applications, where colors or styles can be configured\nby the end user and/or the environment.\n\nThis crate also provides platform independent support for writing colored text\nto an in memory buffer. While this is easy to do with ANSI escape sequences\n(because they are in the buffer themselves), it is trickier to do with the\nWindows console API, which requires synchronous communication.\n\n# Organization\n\nThe `WriteColor` trait extends the `io::Write` trait with methods for setting\ncolors or resetting them.\n\n`StandardStream` and `StandardStreamLock` both satisfy `WriteColor` and are\nanalogous to `std::io::Stdout` and `std::io::StdoutLock`, or `std::io::Stderr`\nand `std::io::StderrLock`.\n\n`Buffer` is an in memory buffer that supports colored text. In a parallel\nprogram, each thread might write to its own buffer. A buffer can be printed to\nusing a `BufferWriter`. The advantage of this design is that each thread can\nwork in parallel on a buffer without having to synchronize access to global\nresources such as the Windows console. Moreover, this design also prevents\ninterleaving of buffer output.\n\n`Ansi` and `NoColor` both satisfy `WriteColor` for arbitrary implementors of\n`io::Write`. These types are useful when you know exactly what you need. An\nanalogous type for the Windows console is not provided since it cannot exist.\n\n# Example: using `StandardStream`\n\nThe `StandardStream` type in this crate works similarly to `std::io::Stdout`,\nexcept it is augmented with methods for coloring by the `WriteColor` trait.\nFor example, to write some green text:\n\n```rust,no_run\n# fn test() -> Result<(), Box<::std::error::Error>> {\nuse std::io::Write;\nuse termcolor::{Color, ColorChoice, ColorSpec, StandardStream, WriteColor};\n\nlet mut stdout = StandardStream::stdout(ColorChoice::Always);\nstdout.set_color(ColorSpec::new().set_fg(Some(Color::Green)))?;\nwriteln!(&mut stdout, \"green text!\")?;\n# Ok(()) }\n```\n\nNote that any text written to the terminal now will be colored\ngreen when using ANSI escape sequences, even if it is written via\nstderr, and even if stderr had previously been set to `Color::Red`.\nUsers will need to manage any color changes themselves by calling\n[`WriteColor::set_color`](trait.WriteColor.html#tymethod.set_color), and this\nmay include calling [`WriteColor::reset`](trait.WriteColor.html#tymethod.reset)\nbefore the program exits to a shell.\n\n# Example: using `BufferWriter`\n\nA `BufferWriter` can create buffers and write buffers to stdout or stderr. It\ndoes *not* implement `io::Write` or `WriteColor` itself. Instead, `Buffer`\nimplements `io::Write` and `io::WriteColor`.\n\nThis example shows how to print some green text to stderr.\n\n```rust,no_run\n# fn test() -> Result<(), Box<::std::error::Error>> {\nuse std::io::Write;\nuse termcolor::{BufferWriter, Color, ColorChoice, ColorSpec, WriteColor};\n\nlet mut bufwtr = BufferWriter::stderr(ColorChoice::Always);\nlet mut buffer = bufwtr.buffer();\nbuffer.set_color(ColorSpec::new().set_fg(Some(Color::Green)))?;\nwriteln!(&mut buffer, \"green text!\")?;\nbufwtr.print(&buffer)?;\n# Ok(()) }\n```\n\n# Detecting presence of a terminal\n\nIn many scenarios when using color, one often wants to enable colors\nautomatically when writing to a terminal and disable colors automatically when\nwriting to anything else. The typical way to achieve this in Unix environments\nis via libc's\n[`isatty`](https://man7.org/linux/man-pages/man3/isatty.3.html)\nfunction.\nUnfortunately, this notoriously does not work well in Windows environments. To\nwork around that, the currently recommended solution is to use the\n[`atty`](https://crates.io/crates/atty)\ncrate, which goes out of its way to get this as right as possible in Windows\nenvironments.\n\nFor example, in a command line application that exposes a `--color` flag,\nyour logic for how to enable colors might look like this:\n\n```rust,ignore\nuse atty;\nuse termcolor::{ColorChoice, StandardStream};\n\nlet preference = argv.get_flag(\"color\").unwrap_or(\"auto\");\nlet choice = match preference {\n    \"always\" => ColorChoice::Always,\n    \"ansi\" => ColorChoice::AlwaysAnsi,\n    \"auto\" => {\n        if atty::is(atty::Stream::Stdout) {\n            ColorChoice::Auto\n        } else {\n            ColorChoice::Never\n        }\n    }\n    _ => ColorChoice::Never,\n};\nlet stdout = StandardStream::stdout(choice);\n// ... write to stdout\n```\n\nCurrently, `termcolor` does not provide anything to do this for you.","links":{},"attrs":["#![deny(missing_docs)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:13:1582","0:311:1610","0:74:1660","0:76:1668","0:79:1671","0:161:1726","0:173:1746","0:201:1675","0:221:1676","0:339:1592","0:358:1824","0:396:1968"],"is_stripped":false}},"2:11416:2270":{"id":"2:11416:2270","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"str::matches":"2:11416:2270","self::pattern":"2:11041:2369","`DoubleEndedIterator`":"2:7079:119","prim@char":"1:12300:407"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:50227:2387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:2363","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:171:1745":{"id":"0:171:1745","crate_id":0,"name":"buffer","span":{"filename":"src/lib.rs","begin":[956,4],"end":[958,5]},"visibility":"public","docs":"Creates a new `Buffer` with the current color preferences.\n\nA `Buffer` satisfies both `io::Write` and `WriteColor`. A `Buffer` can\nbe printed using the `print` method.","links":{},"attrs":["#[cfg(not(windows))]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Buffer","id":"0:173:1746","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11395:56695":{"id":"2:11395:56695","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"str::split":"2:11389:1974","prim@char":"1:12300:407","self::pattern":"2:11041:2369","`DoubleEndedIterator`":"2:7079:119"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:50041:2389","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:2363","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11046:2363","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11061:2364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2523-0:358:1824":{"id":"b:2:2523-0:358:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:358:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2526:126","2:2527:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2726:2478-0:173:1746":{"id":"a:2:2726:2478-0:173:1746","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:2478","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Buffer","id":"0:173:1746","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:348":{"id":"0:348","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1579,9],"end":[1579,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:349:411"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2241-0:358:1824":{"id":"b:2:2241-0:358:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:358:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2243:53690"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11432:60623":{"id":"2:11432:60623","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:134":{"id":"0:134","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[685,0],"end":[708,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["is_synchronous"],"trait":{"name":"WriteColor","id":"0:13:1582","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferedStandardStream","id":"0:79:1671","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:135:1584","0:136:1590","0:137:1595","0:138:1605"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:7735:2522-0:396:1968":{"id":"a:2:7735:2522-0:396:1968","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:2522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:396:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:406":{"id":"0:406","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1925,27],"end":[1925,36]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2672:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:396:1968","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:7735:2522-0:339:1592":{"id":"a:2:7735:2522-0:339:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:2522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2528-0:161:1726":{"id":"b:2:2528-0:161:1726","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferWriter","id":"0:161:1726","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2531:126","2:2532:1425"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11368:58572":{"id":"2:11368:58572","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:11367:58578"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:50306:2371","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:161:1726":{"id":"b:2:2238-0:161:1726","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:1607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferWriter","id":"0:161:1726","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:2255"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:192:1796":{"id":"0:192:1796","crate_id":0,"name":"as_mut_slice","span":{"filename":"src/lib.rs","begin":[1128,4],"end":[1135,5]},"visibility":"public","docs":"Return the underlying data of the buffer as a mutable slice.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:681-0:339:1592":{"id":"b:5:681-0:339:1592","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:677:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:339:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:683:2909","5:684:2910","5:685:2911"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:168:1647":{"id":"0:168:1647","crate_id":0,"name":"stdout","span":{"filename":"src/lib.rs","begin":[927,4],"end":[929,5]},"visibility":"public","docs":"Create a new `BufferWriter` that writes to stdout with the given\ncolor preferences.\n\nOn Windows, if coloring is desired and a Windows console could not be\nfound, then ANSI escape sequences are used instead.\n\nThe specific color/style settings can be configured when writing to\nthe buffers themselves.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["choice",{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:311:1610","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"BufferWriter","id":"0:161:1726","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:377:1552":{"id":"0:377:1552","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[1815,12],"end":[1815,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}}},"paths":{"2:46959:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"16:3716:6244":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:49058:129":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"18:644:5353":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"13:220:6555":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"17:12349:5822":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"1:3314:2326":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"2:47578:7718":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"6:4506:7037":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"18:80:53525":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:20428:16150":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"2:52371:3887":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2:2255:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"17:9553:4897":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"1:7748:8194":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"2:2673:221":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"17:9031:61421":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"6:6448:7476":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"17:8596:5452":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"6:5692:7325":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"5:6095:2857":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"2:48482:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:11954:4445":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"17:12118:5784":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"1:4766:3405":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"17:11774:5716":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"0:373:1862":{"crate_id":0,"path":["termcolor","Color","White"],"kind":"variant"},"16:5949:4564":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"6:1518:6727":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:11061:2364":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"6:6981:7553":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:47121:3422":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"5:1195:3484":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"16:2487:4801":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"1:6137:5289":{"crate_id":1,"path":["std","sync","mpmc","array","Channel"],"kind":"struct"},"6:1595:6774":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"12:1029:3486":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"1:4908:7447":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"1:2588:5288":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:21257:3847":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"2:9582:2390":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:52885:3911":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"17:10546:47126":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"2:10095:3330":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"2:11066:2362":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"17:11639:5700":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"2:47200:3430":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"16:6735:4654":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"1:8429:2317":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"2:38125:179":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:47545:7714":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"5:2738:7584":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"17:12695:5980":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"12:738:3475":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"5:5000:5269":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"2:11852:3568":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"17:8212:4985":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"2:52515:7742":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:8601:118":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"2:4086:3952":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"16:6877:4487":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"0:396:1968":{"crate_id":0,"path":["termcolor","ParseColorError"],"kind":"struct"},"2:50758:3992":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"17:10394:4964":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"18:719:5045":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"12:2198:6562":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"6:6538:7535":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"17:13557:6211":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"1:9225:3383":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"16:6070:4572":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"1:910:2857":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:21876:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"1:7945:3284":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"6:4126:6881":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"16:2341:4818":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"5:781:4184":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:46300:3727":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"1:661:3218":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"1:11496:3514":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"17:9193:61412":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"2:21115:4016":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"16:6528:4694":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"17:9778:4952":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"2:49097:126":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"2:2800:3374":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"17:11873:5729":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"1:5317:8168":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"16:5494:4539":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"2:6610:3513":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"16:2930:4570":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"17:10159:5505":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"2:6819:2412":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"17:11576:5689":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"12:393:61405":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"2:48801:2918":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:11268:3549":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"1:1967:3217":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"17:8981:8078":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"16:6781:4651":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"1:2383:3624":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"2:20423:3240":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"1:969:3478":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"1:7057:3573":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"1:11585:5308":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"17:11748:5713":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"2:48292:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"2:4126:2932":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"17:10221:8103":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"5:5561:4174":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"2:52056:7740":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"2:50331:2381":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"6:6509:7519":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:50297:2373":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"16:6017:4681":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"1:12319:1445":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"2:2487:146":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"16:4849:6266":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"17:9339:5002":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"1:12301:1463":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"2:75:1447":{"crate_id":2,"path":["core","u8"],"kind":"module"},"5:3763:5257":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"1:8887:3531":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"5:2947:3275":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"1:3160:3650":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"2:50770:3988":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"2:50306:2371":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"2:49347:3244":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"2:50546:3747":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"16:5184:45497":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:9285:3275":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"17:8137:47123":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"1:7924:11047":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"17:10121:4928":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"2:50091:2392":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"2:50631:2394":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"2:47522:7712":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"12:320:4420":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"16:6052:4683":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:50750:3990":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:10799:5304":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"12:725:3474":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"6:4300:6980":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:11124:3620":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"17:8272:4992":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"5:2746:60023":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"2:49752:3976":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:1887:3090":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"1:8379:2310":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"16:7872:4648":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"17:12955:6037":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"2:47295:3443":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2:2758:3282":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"5:5633:2299":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"16:4606:6258":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"5:6956:4226":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"16:6137:4628":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"5:1043:60032":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"2:48267:179":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:8076:3302":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"17:13158:6089":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"2:2839:3262":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"17:10088:5503":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"2:49852:3317":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2:2817:3247":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:11688:7910":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"2:48558:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"17:13506:6200":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"2:48406:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"17:9317:5000":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"6:5841:7367":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"13:0:2155":{"crate_id":13,"path":["std_detect"],"kind":"module"},"16:6668:4833":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"6:62:39486":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"2:5624:59884":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"17:10139:4897":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"1:6393:4000":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"6:7214:7565":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"17:9328:5001":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"16:6472:4434":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"6:4200:6932":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"16:7469:4641":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:50945:191":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"2:1672:1054":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"17:9738:4953":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"9:505:4242":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:46402:195":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"2:4200:3954":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"2:52727:3919":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"2:51900:3921":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"2:0:484":{"crate_id":2,"path":["core"],"kind":"module"},"6:4804:7176":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"16:6567:4650":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"5:5545:2417":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"1:9395:3608":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"6:4417:7024":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"1:8946:3533":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"1:7982:4217":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"5:2918:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"6:6352:7450":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"6:0:793":{"crate_id":6,"path":["libc"],"kind":"module"},"17:11054:5573":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"17:12033:5771":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"17:12322:5819":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"2:3168:3417":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"12:1836:2857":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"1:11070:3401":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"17:12237:5807":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"2:52149:3918":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"6:6545:7538":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"2:21843:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"2:21363:7621":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"2:2935:2481":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"2:47069:3315":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:5348:8168":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:49582:3318":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"2:49067:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"6:5782:7355":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"16:2320:4504":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"17:11909:5735":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"2:2932:2480":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"1:11264:3085":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"2:53759:3904":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"6:5582:7262":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"5:4531:200":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"2:49981:2379":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"17:11315:5627":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"6:6572:7544":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"9:0:2158":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"17:11547:5684":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"9:33:4344":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"12:1044:4414":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"1:8741:7432":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"1:9407:54113":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"2:9138:218":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"17:8475:4874":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"17:8241:4989":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"2:50608:3750":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"2:52569:7744":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"17:13100:6071":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2:20026:59816":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"6:4575:7071":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2:3184:3816":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"17:10625:4872":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"17:11661:5701":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"1:8625:3465":{"crate_id":1,"path":["std","net","socket_addr","SocketAddrV6"],"kind":"struct"},"1:8227:2333":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"2:46779:2381":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:7848:3240":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"6:5727:7340":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"17:13404:6170":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"1:11134:128":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"0:369:1858":{"crate_id":0,"path":["termcolor","Color","Magenta"],"kind":"variant"},"16:6284:4643":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"6:1580:6762":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"1:6677:2423":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"1:9213:182":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"12:1832:3275":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"2:2812:3251":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"2:50127:2391":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"9:592:4294":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"17:8510:5451":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"1:8864:3530":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"2:21280:7609":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"16:2825:4809":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"18:96:53526":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"18:660:5040":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:3594:3411":{"crate_id":1,"path":["std","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:47150:3425":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:10857:2335":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"17:1903:47209":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"2:20863:3575":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"16:6790:4699":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"1:11607:3393":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"14:7:8135":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"2:2497:232":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"16:5203:5450":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"12:0:2161":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"6:4379:7022":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"2:3319:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"2:8873:3243":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:7192:5298":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"17:10845:4987":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"2:21221:7603":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:1632:3278":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"6:1643:6810":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"17:9539:4882":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"1:598:3565":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"2:20456:3784":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"16:4721:6262":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"1:11094:7893":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"2:8324:3962":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"17:8295:47124":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"17:10182:5506":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"2:9334:2319":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:29542:3177":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"6:1668:6829":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:11894:201":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"17:8110:47119":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"16:6186:4632":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"2:47168:7708":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"16:6593:4695":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"12:810:3476":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"13:108:61410":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"17:10642:4993":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"17:2916:4924":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"5:286:1608":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"12:1534:4428":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"2:2768:3359":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"2:8556:130":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"2:9128:3240":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"2:48258:2857":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"1:12311:629":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"2:50245:2388":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"16:6676:4638":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"17:13007:6046":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"2:2674:107":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"17:11259:5609":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"17:13031:6054":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"17:9446:8090":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"5:6463:5271":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"16:6517:4433":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"17:11235:5605":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"6:4716:7137":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:3370:3228":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"1:9347:3503":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"6:4598:7085":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"5:4747:2417":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"6:4427:7025":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"0:0:2055":{"crate_id":0,"path":["termcolor"],"kind":"module"},"6:487:6644":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"17:11161:5592":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"17:11708:5706":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"1:7978:3085":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"16:2727:4806":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"17:12022:5770":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"2:50191:2386":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:48634:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:47253:3440":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"5:6737:3184":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"2:52103:3930":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"18:755:5048":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"5:2476:4213":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"16:5703:4551":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"2:20875:59780":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"12:1859:3277":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"0:371:1860":{"crate_id":0,"path":["termcolor","Color","Yellow"],"kind":"variant"},"1:2253:3621":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"6:5660:7312":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:39348:2826":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"2:52249:3910":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"17:12225:5806":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"1:931:3475":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"2:2676:224":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"1:979:3480":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"6:6554:7541":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"17:8055:4861":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"2:1751:7590":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"2:10830:3981":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"16:6161:4684":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"6:6375:7451":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"5:2742:60022":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"12:387:61408":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"17:11300:5621":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"5:4986:5266":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"1:4017:3659":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"1:8391:2312":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"17:11106:5584":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"16:534:4556":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"17:10283:8108":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"2:4262:3959":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"1:8083:3620":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"1:8131:3642":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"16:7497:4637":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"1:9302:3500":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"1:9831:3618":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"6:5568:7261":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"5:686:109":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"12:1866:3278":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"2:49878:3315":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"5:1348:3275":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:7737:2520":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"2:48815:2921":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"12:632:3275":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"17:8822:61413":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"17:13047:6056":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"16:2749:4807":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"2:10814:3980":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:8071:3618":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"2:47112:3421":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"17:8752:2317":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"2:46992:4052":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"6:4629:7096":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"1:1620:3276":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"6:4461:7028":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:51018:3581":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"11:0:2160":{"crate_id":11,"path":["adler"],"kind":"module"},"1:5680:3378":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"17:247:8071":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"2:29642:4042":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"2:2763:3357":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"1:990:3481":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"16:7117:4493":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"2:49999:2375":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:11847:3666":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"2:2928:2479":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"12:659:2857":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"2:9309:3332":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"17:12756:5987":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"6:592:6705":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"17:11800:5719":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"2:50073:2393":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"16:2433:4502":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"1:6709:2431":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"1:12314:720":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"2:2774:3362":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"17:10497:47387":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"2:48191:189":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"2:54063:7794":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:2796:3372":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"16:4817:6265":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"2:46785:7697":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"6:5733:7343":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"9:622:4295":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"1:9370:2422":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:2938:2482":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:5763:3382":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"16:4413:6253":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"5:4944:2367":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:47306:2316":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"0:358:1824":{"crate_id":0,"path":["termcolor","Color"],"kind":"enum"},"2:50173:2385":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"17:9071:61418":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"2:46466:199":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"5:6321:3194":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"0:365:1855":{"crate_id":0,"path":["termcolor","Color","Red"],"kind":"variant"},"16:2842:4568":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"1:9836:5303":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"16:5472:4538":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"6:4267:6964":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"6:6975:7551":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"17:12008:5768":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"16:7483:4642":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"6:6500:7516":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"16:7267:4700":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"2:9568:2391":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"6:5498:7224":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"17:9458:4860":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"6:4437:7026":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"17:10332:5027":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"1:944:3189":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"2:46422:198":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:3404:2307":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"2:46794:3796":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"2:20297:3574":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"12:2080:3486":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"1:2248:127":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"18:564:5056":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:57025:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:10245:8105":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"6:4185:6925":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"17:8631:5453":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"12:2184:6560":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"17:487:8073":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"16:2705:4805":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"1:6921:8170":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"1:8694:3705":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"1:8534:7865":{"crate_id":1,"path":["std","net","ip_addr","fmt","Span"],"kind":"struct"},"6:5835:7366":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"1:10651:3380":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"2:20454:3884":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"17:13082:6067":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"1:6409:5296":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"2:1552:2299":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"6:6524:7526":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"17:13091:6070":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"6:4515:7042":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"16:3402:6239":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"2:10595:4140":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"5:6799:194":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"0:76:1668":{"crate_id":0,"path":["termcolor","StandardStreamLock"],"kind":"struct"},"16:2579:4854":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"16:5793:4558":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"1:9277:2857":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"2:2713:2825":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"2:10579:4138":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"2:11046:2363":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"2:11623:134":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"6:7266:7578":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"1:2426:1576":{"crate_id":1,"path":["std","io"],"kind":"module"},"17:8339:47125":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"2:11709:8152":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"5:3014:3279":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"17:13459:6186":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"16:5780:4557":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"12:60:61404":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"1:1811:596":{"crate_id":1,"path":["std","env"],"kind":"module"},"9:920:4251":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"6:513:6657":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"17:9488:4884":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"17:13572:6212":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"0:74:1660":{"crate_id":0,"path":["termcolor","StandardStream"],"kind":"struct"},"16:6903:4488":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"1:5169:3236":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"17:11515:5677":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"16:5815:4559":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"1:965:3477":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"16:6200:4685":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"16:7388:4655":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"1:10863:1642":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"6:7249:7573":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:53681:3920":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"16:3632:6242":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"6:495:6649":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"2:52417:3891":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"17:8441:4988":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"6:5504:7227":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:46976:4051":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:12046:5773":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"2:6759:2340":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"2:48106:2856":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"6:6953:7550":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"16:4297:6249":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"6:1532:6732":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"1:4117:3666":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"2:46606:3805":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:47049:8158":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"1:918:3474":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"17:13176:6093":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"17:10949:5544":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"16:6330:4689":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"18:609:8068":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"6:6277:7404":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"17:9371:8080":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2:54219:7802":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"17:10062:8097":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"2:50766:3987":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:12266:8417":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"18:521:5050":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"17:11734:5476":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"18:113:53527":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"6:4581:7074":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"17:12926:6030":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"2:3908:2299":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"16:4662:6260":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"6:4635:7097":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:4191:203":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"17:10490:5518":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"1:9824:127":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"15:214:4441":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"17:13354:6158":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"6:6293:7416":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"16:5737:4554":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"1:11307:3385":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"1:11763:3467":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"1:954:3187":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"2:4272:2933":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"17:12874:6015":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:2327:185":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"16:5388:4533":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"6:5534:7237":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"16:7249:4498":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"17:12730:5981":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:3980:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"16:7166:4495":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"1:9239:3384":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"6:6479:7502":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"1:9430:8179":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"1:9315:3501":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"17:11199:5596":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"17:10708:4986":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"12:1852:3276":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"6:4659:7107":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"9:827:4249":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"16:6123:4630":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"5:778:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"2:49904:3333":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"6:7237:7571":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"16:7847:4709":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"2:50023:2319":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"1:9450:4488":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"17:10532:126":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"1:8123:117":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"1:2612:2323":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"1:7896:3147":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"17:11974:5765":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"1:3377:2299":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"5:1386:3474":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"2:47285:3442":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:7875:3607":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"3:223:206":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"17:9433:8089":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"2:21909:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"16:7426:4656":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:46858:2382":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"2:50980:3998":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"2:49933:3335":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:6233:202":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"6:1695:6842":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"17:11617:5693":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"1:7849:3597":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"2:1760:4084":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"17:9165:61417":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"16:2535:4802":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:46520:3817":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"2:48131:2857":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"1:1123:3487":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"1:11903:7912":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"0:201:1675":{"crate_id":0,"path":["termcolor","NoColor"],"kind":"struct"},"2:46444:197":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"2:48199:206":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"14:40:5559":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"2:50227:2387":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"6:6415:7460":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:1737:4085":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"0:361:1852":{"crate_id":0,"path":["termcolor","Color","Blue"],"kind":"variant"},"17:9362:4897":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"1:7805:5301":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"2:49841:3327":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"18:481:5051":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"6:1574:6760":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:8615:2923":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"16:0:2164":{"crate_id":16,"path":["gimli"],"kind":"module"},"1:9464:54128":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"16:4545:6256":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"1:5880:202":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"17:11125:5585":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"17:9263:8084":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"18:727:5046":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"16:7929:4710":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"0:173:1746":{"crate_id":0,"path":["termcolor","Buffer"],"kind":"struct"},"17:8418:4932":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"6:4683:7121":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"17:11841:5725":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:50041:2389":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"2:47039:5278":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"2:4719:772":{"crate_id":2,"path":["core","iter"],"kind":"module"},"18:548:139":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"6:646:39888":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"17:10583:4867":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"17:11368:5641":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"2:54023:7790":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"2:50322:2380":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"1:1002:3483":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"5:4948:2368":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"17:1931:4881":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"16:6829:4836":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"17:8494:5450":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"0:311:1610":{"crate_id":0,"path":["termcolor","ColorChoice"],"kind":"enum"},"1:6010:2419":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"1:12323:1500":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"5:6419:239":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"6:5720:7339":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"6:545:6680":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"12:1518:4427":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"12:1085:4416":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"2:50774:4062":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"1:10756:3381":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"1:8796:2511":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"2:5457:3429":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"5:630:8139":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"16:7357:4653":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"2:20049:59821":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"2:2444:3240":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1:9261:3275":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"18:614:61427":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"17:10506:5519":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"6:4257:6961":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"2:21645:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"2:48368:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:3486:2314":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"6:5541:7241":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"6:4665:7110":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"17:12176:5793":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"1:10860:1641":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"1:996:3482":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"1:1476:142":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"2:56973:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:46488:4044":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"17:9764:5467":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"2:22407:3729":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:4894:3293":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"12:1065:4415":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"2:54032:7791":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:4838:3562":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"1:8442:2320":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"1:10445:54480":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"6:560:6689":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"1:12142:5311":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"6:1678:6835":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"6:4534:7050":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"17:10374:4962":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"2:54078:7795":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:50988:3999":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"16:2605:4855":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"1:8217:3553":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"1:12317:1447":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2:52803:3926":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"17:11594:5690":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"1:5064:3348":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"2:48182:3153":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:2026:181":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"17:11939:5754":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:21:664":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"2:19981:2830":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"17:8774:4862":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2:3084:3181":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"2:53039:3906":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"2:2788:3368":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"17:13478:6191":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"16:6704:4652":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"17:9303:4895":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"17:9791:5468":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"1:7939:11049":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"1:5646:3376":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"17:13148:6086":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"2:2792:3370":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"2:21334:58784":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"6:4475:7029":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"5:949:5257":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"6:7166:7563":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"16:4262:6248":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"1:774:140":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"16:2509:4813":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"17:8368:4864":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"5:3349:3275":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"5:1690:3187":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"1:8737:3398":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"6:575:6697":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"1:5506:186":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"17:9885:8095":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:4346:2475":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:4268:3293":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"2:50009:2317":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:3157:3649":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"9:19:4343":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"5:1981:4211":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"5:6302:3193":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"17:9250:8083":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"17:9422:8088":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"17:12896:6019":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"1:8412:2315":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"2:49993:2376":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"2:2154:576":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"6:4673:7115":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"17:9930:5471":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"2:4317:3960":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:10902:3147":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"1:6785:2428":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"17:13192:6096":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"17:13059:6062":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"1:12313:719":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"17:12265:5811":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"17:10310:8110":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"1:11112:7898":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"1:11601:7904":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"16:4217:6247":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"17:9722:5466":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"6:4307:6983":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"17:12211:5805":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"2:1919:3567":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"17:11356:5638":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"16:6842:6342":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"2:7433:3512":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"6:4698:7126":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"12:853:3482":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"1:12305:1321":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"16:2465:4824":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"5:1425:3478":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"2:21711:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"17:11186:5595":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"6:7208:7564":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"16:2367:4800":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"2:46561:2933":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"6:4286:6972":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"1:6017:2420":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"6:6302:7422":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:359:3585":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"1:6640:8170":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"16:7372:4842":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"2:48444:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:10128:3331":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"2:50425:3738":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"17:1021:5005":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"16:4519:6255":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"2:50742:3989":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"2:52325:3902":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:9515:163":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"17:12884:6016":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"6:4361:7011":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"16:7452:194":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"16:6146:4676":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"17:10455:5022":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"6:4152:6901":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"12:444:140":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"1:8139:2330":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"2:47130:3423":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:4316:3289":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"5:4026:240":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:53073:3888":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:545:3604":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"1:1615:3187":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"17:8526:4966":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:21062:4015":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"2:3157:229":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"8:0:2157":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"6:1541:6737":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"6:4489:3679":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"6:5472:7209":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"6:4768:7154":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:20241:3949":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"6:5772:7353":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"9:977:4255":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"16:5374:4631":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"17:11330:5633":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"17:9183:8082":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"17:10350:4863":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"17:242:8070":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"14:165:45424":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"16:5525:4543":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"1:3192:2335":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"17:13039:6055":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"17:12781:5997":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"2:46912:4126":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"16:7237:4497":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"6:4212:6937":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:52963:3899":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"0:363:1854":{"crate_id":0,"path":["termcolor","Color","Green"],"kind":"variant"},"0:359:1851":{"crate_id":0,"path":["termcolor","Color","Black"],"kind":"variant"},"2:2726:2478":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"16:6463:4692":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"5:4438:654":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"1:2401:3630":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"17:8796:4871":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"17:8561:4946":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"2:54127:7798":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"6:1714:6848":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"16:7956:4644":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"17:12073:5775":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"17:11528:5679":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"6:1562:6752":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"16:2631:4815":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"16:4357:6251":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"2:52347:3905":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"5:6940:4051":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:973:3479":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"2:46883:2381":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"6:7289:7581":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"2:4326:2934":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"16:7557:4635":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"2:57012:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"6:581:6700":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"17:9401:5464":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:47551:2341":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:29333:4077":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"18:507:5353":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"16:4144:6246":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"1:4403:3704":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"2:46362:196":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:8650:3662":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"12:762:3187":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"17:12674:5975":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"1:1604:3275":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:11002:1578":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"2:47182:3427":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:7786:5299":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"2:21975:165":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"11:36:6565":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"9:800:6616":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"2:54157:7800":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"16:6298:4658":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"5:5976:3189":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"16:7059:2518":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"2:46926:4128":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"2:56590:4005":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"6:5587:7263":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"14:187:45430":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"1:2250:3619":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"1:1826:3072":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"2:48140:2518":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"1:11445:3383":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:21168:7598":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"2:50145:2390":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"2:56960:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"5:3106:3187":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"6:5713:7337":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"1:8422:2316":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"6:4224:6946":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"2:11657:59943":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"16:4441:6254":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"17:11721:5709":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"5:3472:2332":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"16:6171:4677":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"2:50440:3741":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"5:5525:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"2:54104:7797":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"2:21396:4031":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"17:13436:6185":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"6:6409:7458":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:2564:114":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"2:21384:4032":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"2:8546:1577":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"5:2049:4210":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"17:12198:5804":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"17:12307:5815":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"2:50746:3991":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:2869:3556":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"2:2672:222":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:1938:3216":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"16:5664:4550":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"6:7255:7574":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"6:507:6655":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"5:7069:3187":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"16:3566:6240":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"6:7243:7572":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"2:3956:3877":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:1114:3486":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"1:678:8161":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"2:49378:7730":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"16:4635:6259":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"1:4906:7445":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"17:11893:5730":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"6:4611:7090":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"1:8699:3708":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"17:9627:4893":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"16:7093:4490":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"6:501:6652":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"16:4385:6252":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"2:21370:4082":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"16:5981:4566":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"1:8093:3303":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"18:624:61426":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"17:12337:4987":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"2:51770:3916":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"17:9873:8094":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"2:46866:4124":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"2:50937:207":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"2:53009:3903":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"2:2987:3179":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"1:3154:3648":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:10791:3979":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"5:3541:3187":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"6:6392:7453":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"1:3422:2309":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:51724:7737":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"18:582:2830":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"1:686:11050":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"1:11144:117":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"17:9061:4897":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"17:9283:8086":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"16:6210:4686":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"1:7870:3589":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"1:8554:3700":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"17:9712:5465":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"5:6752:4186":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"2:46554:8157":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"6:1636:6806":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"6:5523:7229":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:11947:4445":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"17:11997:5766":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"6:4102:6864":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:20028:59820":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:6544:202":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"6:6269:7399":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"2:47159:3426":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:1608:2857":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"17:8941:8077":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"16:6034:4682":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"5:6791:2857":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"2:2833:3259":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:3230:1641":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"18:652:5353":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"1:11277:3382":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"1:5574:118":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"16:6816:4835":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"6:4540:7053":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"1:2399:3629":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"2:2578:126":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"16:6316:4659":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"17:11828:5724":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"16:6270:4633":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"1:12303:1016":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"17:11174:5594":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"2:29748:4043":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"17:12972:6040":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"16:7909:4649":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"17:12485:5831":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"17:9631:4880":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:20303:3576":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:47191:3435":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"16:153:4500":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"17:9857:4935":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"18:0:2166":{"crate_id":18,"path":["memchr"],"kind":"module"},"6:1608:6781":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"16:7298:4703":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"5:1414:3477":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2:2493:233":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"9:896:4254":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"18:636:5363":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"2:50471:3745":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:6430:2864":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"16:5219:5451":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"17:9501:4895":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"2:11920:138":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"2:56999:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:12318:1444":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"1:8106:128":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"5:6769:4187":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"6:1550:6743":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"6:608:6715":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"17:11217:5604":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"12:646:3332":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:47536:2423":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"0:314:1616":{"crate_id":0,"path":["termcolor","ColorChoice","AlwaysAnsi"],"kind":"variant"},"12:2053:3484":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"17:12739:5985":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"17:11761:5714":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"17:12860:6014":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"12:1555:4429":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"16:7890:4647":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"1:12310:628":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"5:1059:4208":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"16:5839:4560":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"5:6893:3491":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"6:600:6710":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"5:4071:2299":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"6:4294:6977":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:2822:3254":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"17:13393:6169":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"2:49034:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"1:12322:766":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"6:567:6692":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"17:10207:8099":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"11:44:4404":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"2:29508:3176":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"17:10528:4983":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"17:9751:4951":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"2:21297:58775":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"6:4239:6952":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:49803:1677":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"5:36:3186":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"6:4690:972":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"2:2843:3264":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"2:47270:3441":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"2:8599:110":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"1:4454:3710":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"1:0:1343":{"crate_id":1,"path":["std"],"kind":"module"},"1:11289:54140":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"17:12638:5945":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"17:8666:5454":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"16:7211:4496":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"2:54142:7799":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"5:271:5257":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"5:1211:3486":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"2:56986:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:11536:5681":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"17:562:5538":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"6:5749:7347":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"5:2954:3277":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"17:9644:4879":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"5:4041:5261":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"2:2827:3256":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"2:50651:2395":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1:5009:3305":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"2:50793:120":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"7:0:1490":{"crate_id":7,"path":["unwind"],"kind":"module"},"17:12134:5785":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"6:1654:6818":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"1:4657:3678":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"17:10608:4870":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"6:4496:7030":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:25217:3780":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"16:8056:4508":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"17:12514:5851":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"1:4210:3561":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"1:9574:3515":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"17:9108:8080":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:51704:7736":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:11154:2310":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"2:52019:7739":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"5:6807:4155":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"16:7329:4706":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"5:1226:3485":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"16:6619:4696":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"5:6926:4225":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"6:5554:7250":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"16:6376:4691":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"1:12321:1443":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"1:8613:3464":{"crate_id":1,"path":["std","net","socket_addr","SocketAddrV4"],"kind":"struct"},"17:13594:6218":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"6:4621:7093":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"2:4530:4121":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"5:5436:3189":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"17:11014:5562":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"2:4369:2935":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"17:9820:5008":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"2:2445:3457":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"17:3125:8075":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"6:1722:6852":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"1:7150:8456":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"17:8951:61420":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"2:50762:3993":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"2:39335:4217":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"2:47220:3437":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"2:47234:3438":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"2:46527:3229":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"17:10466:5516":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"2:20706:3787":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"2:4:982":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"2:54089:7796":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"17:9681:5407":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"16:7980:4511":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"2:7426:2361":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:11640:7906":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"1:7300:55660":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"2:22008:4019":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"6:5595:7268":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"5:3362:3332":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"2:50287:2384":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"18:681:5042":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:5695:3379":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"1:11670:8172":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"16:7567:4660":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"1:4312:3295":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"17:11684:5705":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"1:6681:2424":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"2:2662:216":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"17:9897:8096":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"17:13231:6108":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:8819:139":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"17:13126:6081":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"2:2235:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"6:1600:6776":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"5:2980:3278":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"16:6865:4838":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"9:382:4247":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"2:11863:4000":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"17:9909:5469":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"17:12909:6025":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"1:9253:3385":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:11975:3183":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"6:4797:7173":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"6:4191:6927":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"16:6059:4799":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"17:8162:4933":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"2:49171:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"12:985:3484":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"17:9274:8085":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"6:7226:7567":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:47560:5284":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"6:1511:6724":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"1:8639:3660":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"18:736:5047":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:20009:59777":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"2:2681:1685":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"16:5614:4548":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"2:49155:2917":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"1:8973:3536":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"1:5709:3380":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"1:3232:1652":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"1:4904:7443":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"2:48808:2920":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"2:50618:3751":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"2:3162:133":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"2:2753:3354":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"2:50277:2320":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"2:49967:2383":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:51918:7738":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:2578:1646":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"17:10670:4990":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"1:8705:3671":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"17:10682:4991":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"2:50754:3994":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"5:5211:3193":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"1:11533:3506":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"2:4059:3951":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:5887:3497":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"1:2257:2308":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"6:4280:6969":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:2856:3271":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"17:12164:5791":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"2:7001:3433":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:53929:3907":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"17:10476:47386":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"2:50315:2370":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"2:4195:3953":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"2:10609:2011":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"5:1953:4154":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"1:9485:7890":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"6:5684:7324":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"17:13184:6095":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"6:4354:7009":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"1:5087:3304":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"2:46836:4129":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"17:13203:6100":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"1:11826:3659":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"17:12748:5986":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"6:6998:7562":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"1:12304:306":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"2:7038:132":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:8545:206":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"17:10270:8107":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"2:8165:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:8596:110":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"16:2868:4569":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:10865:2372":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"17:9475:4885":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"6:5672:7317":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"16:5761:4555":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"5:3429:5257":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"16:6109:4527":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"17:9155:8081":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"16:7343:4640":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"17:8911:61419":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"2:6563:3776":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"16:6690:4639":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:1825:3182":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"6:5480:7211":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"6:539:6677":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:11684:188":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"6:1707:3672":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"2:47529:7713":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"2:2805:3249":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"17:8871:8076":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"16:7288:4702":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"16:3689:6243":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:8749:8151":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"16:5433:4535":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"17:11149:5589":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"6:4398:7023":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"1:4324:3297":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"1:4441:3709":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"17:13340:6152":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"17:10360:5020":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"1:8645:3661":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"18:599:61425":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"1:5394:187":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"1:4433:3707":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"16:5558:4545":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"1:9207:3381":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"16:6743:4698":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"17:9350:5003":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"18:531:5054":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"5:1240:3487":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"12:2205:3185":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"17:9844:5011":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"2:47099:2315":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:9389:3568":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"1:4744:3399":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"16:2771:4808":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"2:4672:11053":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"6:5605:7275":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:53821:3924":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"17:13221:6103":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"17:13366:6161":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"17:11559:5686":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"16:5996:4680":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"9:586:4292":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"17:11087:5579":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"1:2652:2331":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"5:2029:60105":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"5:3484:4230":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"17:13141:6085":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"18:515:5053":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"16:3188:6237":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"5:3733:3189":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"0:375:1864":{"crate_id":0,"path":["termcolor","Color","Ansi256"],"kind":"variant"},"2:20711:16168":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"1:8488:3409":{"crate_id":1,"path":["std","net","ip_addr","Ipv6Addr"],"kind":"struct"},"1:7955:3488":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"17:10752:4865":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"1:6217:3497":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"1:11477:4062":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"1:4262:3292":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"12:1845:3187":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"2:29570:67":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"6:135:39553":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"6:4329:6996":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:6516:3420":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"2:12017:2837":{"crate_id":2,"path":["core","const_closure","ConstFnMutClosure"],"kind":"struct"},"2:2784:3353":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"6:554:6686":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"6:586:6702":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"2:49821:3328":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"16:7044:4489":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"9:863:4252":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"5:3804:3332":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"17:11343:5637":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"2:46964:4050":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"5:2254:4214":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"17:10997:5559":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"2:49085:108":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"5:0:281":{"crate_id":5,"path":["alloc"],"kind":"module"},"17:10520:5522":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"2:51949:3909":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"17:12850:6013":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"2:2670:2823":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"17:12550:5882":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"2:20971:3785":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"2:53571:3900":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:5894:3498":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"6:4274:6967":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"16:7396:4707":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"5:4900:5257":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"2:52038:3886":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"16:4749:6263":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"17:9658:8091":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"16:5460:4537":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"16:4574:6257":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"1:5011:3345":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"1:6886:213":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"16:3263:6238":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"6:1738:6857":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:2481:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"2:46822:3799":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"18:491:5352":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"6:6329:7432":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:21272:7608":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"2:11041:2369":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"16:5541:4544":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"12:119:4422":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"5:2959:4151":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"5:6969:4227":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"18:574:5353":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"5:677:227":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"17:10875:4930":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"0:312:1613":{"crate_id":0,"path":["termcolor","ColorChoice","Always"],"kind":"variant"},"6:1500:6719":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:29548:3947":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"16:5411:4534":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"9:676:4341":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"2:21318:58791":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:10581:3391":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"18:707:2365":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"5:3560:5257":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:2991:3180":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"14:31:8135":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"6:4335:6999":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"1:12320:1446":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"1:8147:2332":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"1:9437:8180":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"2:54005:3892":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:12299:911":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"1:12282:55666":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"2:46945:3801":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"2:5845:3431":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:960:3476":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"12:98:4418":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"2:46806:3797":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:1889:3091":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"2:47321:3444":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"5:1404:3476":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"17:11247:5608":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:47570:7716":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"6:4761:7151":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"1:8814:3520":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"17:8881:61415":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"17:10822:47127":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"6:6311:7423":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"1:6838:2432":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"6:4726:7138":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"17:8814:127":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"2:8833:143":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"16:4327:6250":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"1:1105:3485":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"6:4605:7087":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"6:6430:7465":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"6:4592:7082":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:2739:2827":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"18:538:5055":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"17:11853:5726":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"2:48596:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:1611:3189":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"0:316:1620":{"crate_id":0,"path":["termcolor","ColorChoice","Auto"],"kind":"variant"},"6:4096:6863":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"16:5447:4536":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"17:10894:4929":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:39299:3389":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:51001:157":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:5178:3460":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"16:3854:6245":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"12:2069:3485":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"16:6359:4690":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"17:0:2165":{"crate_id":17,"path":["object"],"kind":"module"},"1:11457:3384":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"2:20266:3786":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"2:11267:110":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"17:10257:8106":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:54052:7793":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:2490:131":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:48123:3332":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"17:10973:5558":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"2:10754:3978":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"16:3457:5373":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"2:52773:3923":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"2:51030:3579":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"6:4653:7106":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"16:6241:4687":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"16:7970:4645":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"16:2793:4810":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"5:869:3275":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"2:8609:2921":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"6:519:6660":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"17:12103:5780":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"0:378:1865":{"crate_id":0,"path":["termcolor","Color","Rgb"],"kind":"variant"},"2:39339:3226":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"2:48115:3275":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"1:10426:3083":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"17:13168:6092":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"5:6992:220":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"1:1637:3279":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"16:2389:4501":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"16:7135:4494":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"17:10075:8098":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"16:2300:4825":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"4:0:2156":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"2:52001:3901":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:12315:721":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"16:6654:4697":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"5:7003:4145":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"2:51748:3928":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:6079:2430":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"2:7156:155":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:7735:2522":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"6:4317:6990":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:53429:3932":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"2:47244:3439":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:12306:1351":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"6:4527:7049":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:46378:194":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"2:21942:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:7737:5538":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"2:52468:7741":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"0:318:1622":{"crate_id":0,"path":["termcolor","ColorChoice","Never"],"kind":"variant"},"17:12361:5829":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"6:1505:6721":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"17:10774:4863":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"17:13413:6172":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"17:13518:6202":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"5:6746:2857":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"0:367:1856":{"crate_id":0,"path":["termcolor","Color","Cyan"],"kind":"variant"},"5:852:4185":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"2:7079:119":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:10495:3550":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"6:4551:7059":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"16:7825:4708":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"16:7435:4672":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"6:4559:7063":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2:2851:3268":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:4246:3290":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"1:3479:2311":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"7:32:44691":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"2:2232:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:48520:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"2:2321:178":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"1:5823:3386":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"1:9637:3090":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"2:21205:7600":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"6:1686:6836":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:50340:2382":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"17:9577:4888":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"1:11921:7913":{"crate_id":1,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"2:46919:4127":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"1:8687:3239":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"1:2029:180":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"1:2905:126":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"16:6252:4688":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"14:0:2162":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"5:217:4182":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"17:11288:5618":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"12:2178:6559":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"1:1931:1575":{"crate_id":1,"path":["std","error"],"kind":"module"},"17:12768:5992":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"2:2780:3365":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"16:2411:4819":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"16:7637:4646":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"1:11089:7891":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"0:13:1582":{"crate_id":0,"path":["termcolor","WriteColor"],"kind":"trait"},"6:1887:40863":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"1:12307:1429":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"16:3599:6241":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"5:1395:3475":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2:48250:3332":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"2:8611:190":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"17:1771:4887":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"12:300:4421":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"16:7309:4704":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"5:6777:60018":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"2:49891:3316":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"12:815:3479":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"17:10403:4865":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"6:6322:7428":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"12:2190:61409":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"17:8991:61416":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"6:4449:7027":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:20215:3881":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"17:10434:5513":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"2:8613:2922":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"2:48794:2919":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:887:3275":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"17:10921:5540":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"6:5861:7381":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"17:12836:6009":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"2:9377:2372":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"14:215:6508":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"5:4104:5261":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"1:5013:3347":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"2:46846:4130":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:7429:3510":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"14:160:8135":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"17:9526:4883":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"2:2917:2322":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:48242:3275":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"12:669:3477":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"1:2385:3625":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"16:8069:126":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"5:6881:3185":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"16:2993:4812":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"6:5443:7185":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"1:8370:1867":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"1:8505:3410":{"crate_id":1,"path":["std","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"5:6828:2857":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"2:3174:3812":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"2:8329:3963":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"3:0:431":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"16:3010:4811":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"1:3269:1642":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"2:51848:3929":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"12:1872:3279":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"2:46547:4510":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"2:5380:3428":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"16:3026:5369":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"1:524:5286":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"17:11436:5643":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"2:3968:3878":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"17:13492:6193":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"17:10854:4947":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"1:11655:7907":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"12:1681:142":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"17:12630:5944":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"17:13024:6053":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"1:7539:56002":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"5:5908:5271":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"2:1636:575":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"2:50927:201":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"2:9610:3338":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"12:697:3478":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"1:11682:7909":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"1:8448:151":{"crate_id":1,"path":["std","net","ip_addr","IpAddr"],"kind":"enum"},"12:861:3483":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"1:6316:5289":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"6:7279:7579":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"2:2290:123":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"1:9269:3496":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"5:1311:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"16:7603:4657":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"5:7014:4146":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"6:4367:7013":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"1:10322:3673":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"1:8956:3275":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"2:52649:3931":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:8435:2319":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"2:48330:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"17:9118:61414":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"2:47090:3419":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"17:12617:5937":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"1:3347:2341":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"1:3271:1653":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"16:7543:4634":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"2:9489:2389":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"2:8868:3242":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"16:4689:6261":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"1:574:3609":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"17:13279:6145":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"5:1445:4206":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"18:699:5044":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"2:2969:3726":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"2:9454:3340":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"2:58300:7809":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"6:4206:6934":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:4014:3658":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"5:6170:5257":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"17:10321:5019":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"1:628:3233":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"1:8577:3701":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"1:3470:57993":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"12:834:3481":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"5:6909:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2:56947:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:11704:5310":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"1:5660:3377":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"2:20969:3240":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"5:6834:2857":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"2:46889:4125":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"1:12316:717":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"2:48055:177":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"2:52295:3898":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"16:4888:6267":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"2:50454:3744":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"17:12964:6038":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"6:4139:6891":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"9:188:4319":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"16:2894:4816":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"6:4179:6924":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"17:12060:5774":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"2:4693:58805":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"2:7042:148":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"2:11112:3740":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:7860:55663":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"2:24:596":{"crate_id":2,"path":["core","env"],"kind":"macro"},"1:9526:214":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"1:9536:3506":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:11055:2365":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"12:1628:5255":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"17:3249:4936":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"1:8713:3660":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"17:11034:5572":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"2:7841:2363":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"5:1943:3604":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"17:11271:5610":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"17:9805:5007":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"16:2557:4803":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:3236:3835":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:8222:3554":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:2669:1607":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"2:29584:4041":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"2:50583:3748":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:50403:3737":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"17:13134:6084":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"2:47140:3424":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"2:51878:3917":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:484:5310":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"2:7005:3432":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"2:9527:3337":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:9416:3329":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"17:12816:6001":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"16:6345:4636":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"17:10385:4963":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"16:8014:4510":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"17:10108:4927":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"12:777:4406":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"1:9555:3514":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"6:7220:7566":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"1:11164:56234":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"7:79:44698":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"12:274:6556":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"17:11070:5577":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"17:8393:4919":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"17:13527:6206":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"16:5878:4561":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"6:6424:7464":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:49356:143":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"17:11606:5692":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"2:49386:7731":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"17:11485:5668":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"1:12298:365":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"2:20047:59818":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:9384:8176":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"1:3086:2342":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"2:7736:2521":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"12:1840:3189":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"2:46347:3880":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"1:6441:8169":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"16:4786:6264":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"17:9671:4920":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"1:11514:7903":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"16:5510:4542":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"18:671:5041":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"1:4969:3397":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"1:7962:3078":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"16:5163:4571":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"5:2993:4152":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:38142:2830":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"17:386:8072":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"17:11813:5721":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"17:13382:6165":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"1:4585:3677":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"17:12148:5787":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"1:6852:2433":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"1:10668:54479":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"0:339:1592":{"crate_id":0,"path":["termcolor","ColorSpec"],"kind":"struct"},"1:12312:722":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"1:8904:3532":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"2:49913:3336":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"17:13536:6208":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"1:2903:206":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"16:5596:4547":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"10:0:2159":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"16:6496:4693":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"17:12087:5778":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"1:12325:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"0:161:1726":{"crate_id":0,"path":["termcolor","BufferWriter"],"kind":"struct"},"2:46905:2380":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"6:4231:6950":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:50814:3517":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"5:4626:2299":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"16:2282:4503":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"1:6604:162":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"6:5625:7291":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"2:51979:3897":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"16:7659:4629":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"5:1594:5257":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"2:21678:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"6:4706:7131":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:9596:3339":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:52393:3890":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:1091:3484":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"1:9531:215":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"6:4644:7100":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"17:9601:4886":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"2:20344:3784":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:719:11051":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"9:111:4311":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"1:5227:2510":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"17:10420:5021":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"6:4816:7181":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"2:10205:5285":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"9:649:4296":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"2:54043:7792":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:4972:3399":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"17:10721:5537":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"2:3147:4045":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"2:50738:3986":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"2:2904:115":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"5:3910:3275":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"9:956:4250":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"6:5510:7228":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"16:7511:4509":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"1:8066:3582":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"2:8605:2919":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"17:12934:6033":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"2:48173:2519":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"5:6022:5257":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"2:47336:3434":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"17:10296:8109":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"17:9021:8079":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"17:9382:5462":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"16:7942:4711":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"17:9223:47171":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"15:193:4437":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"2:49812:3325":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"17:11787:5717":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"17:8701:5455":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"1:3461:1577":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"2:2847:3266":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:8962:3535":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"16:6719:4831":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"6:1701:6845":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"14:221:6510":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"16:2261:4528":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"2:52179:3922":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"17:11951:5756":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"1:4216:3560":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"17:13114:6078":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"6:4810:7178":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"2:4003:3566":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"2:2285:184":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:9331:3502":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"2:53967:3927":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"2:7102:2483":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:8763:3400":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"6:5741:7345":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"5:7086:3188":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"1:11786:3658":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"1:1626:3277":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"17:9831:5010":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"6:5699:7326":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"2:49578:4142":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"2:8607:2920":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"16:5963:190":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"1:11099:3302":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"1:8471:3408":{"crate_id":1,"path":["std","net","ip_addr","Ipv4Addr"],"kind":"struct"},"2:52201:3925":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:11373:5305":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"1:3194:2336":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"1:12300:407":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"6:4346:7004":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"1:4254:3291":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"2:11761:59676":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"5:6331:3195":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"1:11384:5306":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"17:12948:6035":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"1:8363:2340":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"5:1369:2857":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"5:2736:2909":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"2:50519:3746":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"6:1525:6729":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"2:14:1655":{"crate_id":2,"path":["core","write"],"kind":"macro"},"0:79:1671":{"crate_id":0,"path":["termcolor","BufferedStandardStream"],"kind":"struct"},"5:2737:60034":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"2:49119:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"2:51794:3908":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"2:2484:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"1:4302:3294":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:11636:33062":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"6:4737:7144":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"1:1864:3083":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"5:1077:4209":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"1:2411:3635":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:8160:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:53223:3912":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:9442:8181":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"17:12291:5813":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"5:5370:228":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"16:7319:4705":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"2:58321:7810":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"1:411:161":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:3382:3227":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"12:1138:3487":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"18:590:5354":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"2:21777:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:6782:2427":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"17:9947:47314":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"5:6488:5277":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"6:4778:7159":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"2:51816:3896":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"6:4745:7146":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"17:11137:5588":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"12:1003:3485":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"16:2657:4814":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"17:13214:6101":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"17:12980:6042":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"2:49831:3326":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"2:47211:3436":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"2:19994:59777":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"2:21189:3851":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"16:4921:6268":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"5:6986:7588":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"2:50597:3749":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:681:8163":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:20178:3781":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"2:49923:3334":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"2:3616:2857":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"17:10445:4987":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"2:54180:7801":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:9283:3499":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"2:21810:3612":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"17:420:4573":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"17:13580:6215":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"2:7051:2484":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"2:21245:3846":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"17:11500:5672":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"17:10796:4984":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"2:48672:2418":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"16:5122:6269":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"12:353:4419":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"12:751:3189":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"18:766:5049":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"17:9691:4950":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"1:5826:3388":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"2:50826:4064":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"0:221:1676":{"crate_id":0,"path":["termcolor","Ansi"],"kind":"struct"},"16:2683:4804":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"5:6761:3189":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"2:3199:3836":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:20295:3240":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"6:4247:6955":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"2:46261:3350":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"5:1358:3332":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"2:53883:3889":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"17:1962:4948":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"1:8719:3680":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"12:1120:4417":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"5:5822:16362":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"1:1828:3073":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"1:8590:3239":{"crate_id":1,"path":["std","net","socket_addr","SocketAddr"],"kind":"enum"},"17:12251:5808":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"16:5235:6270":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"1:8330:2343":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"17:9293:5004":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"2:1643:3945":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"1:4425:3706":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"12:822:3480":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"15:175:4436":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"2:20447:3240":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"6:4115:6873":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:52546:7743":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"6:5876:7392":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"17:12797:6000":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"2:20254:3240":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"17:967:8074":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"1:900:3332":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"2:49052:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"1:353:3584":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"2:49331:3245":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"16:7278:4701":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:49339:7726":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"2:8603:2918":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"6:131:39552":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"5:3338:159":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"2:49368:3530":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"17:12609:5934":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"9:709:3530":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"1:11469:56236":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"19:0:998":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"1:6043:2421":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"15:0:2163":{"crate_id":15,"path":["addr2line"],"kind":"module"},"6:4565:7065":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"1:6496:3497":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"16:5628:4549":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"1:2515:2329":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"1:3953:3462":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"5:1436:194":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"1:4505:3668":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"17:13374:6164":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"5:2988:3276":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"17:9700:4949":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"18:690:5043":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"1:12271:11052":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"17:13071:6063":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"1:12324:1090":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"17:10233:8104":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"2:21744:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"17:12278:5812":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"1:11390:5307":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"17:13327:6146":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"14:202:4148":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"}},"external_crates":{"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":24}