{"root":"0:0:2830","crate_version":"1.4.1","includes_private":false,"index":{"0:17:2340":{"id":"0:17:2340","crate_id":0,"name":"is_synchronous","span":{"filename":"src/lib.rs","begin":[168,4],"end":[170,5]},"visibility":"default","docs":"Returns true if and only if the underlying writer must synchronously\ninteract with an end user's device in order to control colors. By\ndefault, this always returns `false`.\n\nIn practice, this should return `true` if the underlying writer is\nmanipulating colors using the Windows console APIs.\n\nThis is useful for writing generic code (such as a buffered writer)\nthat can perform certain optimizations when the underlying writer\ndoesn't rely on synchronous APIs. For example, ANSI escape sequences\ncan be passed through to the end user's device as is.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3139:247-0:378:2512":{"id":"a:2:3139:247-0:378:2512","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3139:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Buffer","id":"0:378:2512","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:485":{"id":"0:485","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2190,16],"end":[2190,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10314:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:480:2740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:486:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:74":{"id":"0:74","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[617,0],"end":[645,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"BufferedStandardStream","id":"0:340:2437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:75:2414","0:76:2415"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2926-0:330:2426":{"id":"b:2:2926-0:330:2426","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2896:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStream","id":"0:330:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2929:137","2:2930:1808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:740:3695":{"id":"5:740:3695","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"2:13291:33890":{"id":"2:13291:33890","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13310:33896":{"id":"2:13310:33896","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12341:471","self::pattern":"2:12885:3160"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3154","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:187:2569":{"id":"0:187:2569","crate_id":0,"name":"get_mut","span":{"filename":"src/lib.rs","begin":[1478,4],"end":[1480,5]},"visibility":"public","docs":"Return a mutable reference to the inner writer.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"W"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:254:136":{"id":"0:254:136","crate_id":0,"name":"Err","span":{"filename":"src/lib.rs","begin":[2250,4],"end":[2250,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ParseColorError","id":"0:480:2740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:400":{"id":"0:400","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1386,9],"end":[1386,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoColor","id":"0:396:2441","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["0:402:475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:16:2330":{"id":"0:16:2330","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[155,4],"end":[155,42]},"visibility":"default","docs":"Reset the current color settings to their original settings.\n\nIf there was a problem resetting the color settings, then an error is\nreturned.\n\nNote that this does not reset hyperlinks. Those need to be\nreset on their own, e.g., by calling `set_hyperlink` with\n[`HyperlinkSpec::none`].","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"5:5624:2383":{"id":"5:5624:2383","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7645:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7645:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13210:2569":{"id":"2:13210:2569","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:42005:191"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10975:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10975:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13199:33877":{"id":"2:13199:33877","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:217":{"id":"0:217","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1854,0],"end":[2046,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:218:1178","0:219:2593","0:220:2670","0:221:2673","0:222:2675","0:223:2574","0:224:2679","0:225:2576","0:226:2683","0:227:2578","0:228:2687","0:229:2580","0:230:2691","0:231:2582","0:232:2695","0:233:2330","0:234:2705","0:235:2586","0:236:2713","0:237:2715","0:238:2554"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:69:2415":{"id":"0:69:2415","crate_id":0,"name":"stderr","span":{"filename":"src/lib.rs","begin":[565,4],"end":[568,5]},"visibility":"public","docs":"Create a new `StandardStream` with the given color preferences that\nwrites to standard error.\n\nOn Windows, if coloring is desired and a Windows console could not be\nfound, then ANSI escape sequences are used instead.\n\nThe specific color/style settings can be configured when writing via\nthe `WriteColor` trait.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["choice",{"resolved_path":{"name":"ColorChoice","id":"0:279:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"StandardStream","id":"0:330:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:192:2423":{"id":"0:192:2423","crate_id":0,"name":"flush","span":{"filename":"src/lib.rs","begin":[1501,4],"end":[1503,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13248:2746":{"id":"2:13248:2746","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12885:3160","`DoubleEndedIterator`":"2:8263:129","prim@char":"1:12341:471","str::split_whitespace":"2:13226:31944","str::rsplit":"2:13254:28832"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43895:3122","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3154","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:237:2715":{"id":"0:237:2715","crate_id":0,"name":"is_none","span":{"filename":"src/lib.rs","begin":[2010,4],"end":[2019,5]},"visibility":"public","docs":"Returns true if this color specification has no colors or styles.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:247":{"id":"0:247","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2210,0],"end":[2219,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["source","type_id","cause","description","provide"],"trait":{"name":"Error","id":"2:2979:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:480:2740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:248:2761"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13301:26424":{"id":"2:13301:26424","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns the substring after the prefix,\nwrapped in `Some`. Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12341:471","self::pattern":"2:12885:3160"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3154","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42097:3392-0:298:2381":{"id":"a:2:42097:3392-0:298:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42097:3392","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:298:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42097:3392-0:371:2492":{"id":"a:2:42097:3392-0:371:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42097:3392","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferWriter","id":"0:371:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:302":{"id":"0:302","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[363,16],"end":[363,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10314:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:298:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:303:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2646-0:508:2353":{"id":"b:2:2646-0:508:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2640:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"HyperlinkSpec","id":"0:508:2353","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2648:26275"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:105:2316":{"id":"0:105:2316","crate_id":0,"name":"supports_color","span":{"filename":"src/lib.rs","begin":[801,4],"end":[803,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2646-0:330:2426":{"id":"b:2:2646-0:330:2426","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2640:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStream","id":"0:330:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2648:26275"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2916-0:396:2441":{"id":"b:2:2916-0:396:2441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoColor","id":"0:396:2441","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2919:3632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2931-0:378:2512":{"id":"b:2:2931-0:378:2512","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Buffer","id":"0:378:2512","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2934:137","2:2935:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:100:2340":{"id":"0:100:2340","crate_id":0,"name":"is_synchronous","span":{"filename":"src/lib.rs","begin":[782,4],"end":[784,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:251:802":{"id":"0:251:802","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[2222,4],"end":[2246,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:163:2340":{"id":"0:163:2340","crate_id":0,"name":"is_synchronous","span":{"filename":"src/lib.rs","begin":[1380,4],"end":[1382,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42098:3391-0:340:2437":{"id":"a:2:42098:3391-0:340:2437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42098:3391","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferedStandardStream","id":"0:340:2437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3139:247-0:371:2492":{"id":"a:2:3139:247-0:371:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3139:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferWriter","id":"0:371:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:402:475":{"id":"0:402:475","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[1386,9],"end":[1386,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NoColor","id":"0:396:2441","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13316:2792":{"id":"2:13316:2792","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12846:136","`FromStr`":"2:12845:2310"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42136:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12845:2310","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12845:2310","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:84:2357":{"id":"0:84:2357","crate_id":0,"name":"supports_hyperlinks","span":{"filename":"src/lib.rs","begin":[718,4],"end":[720,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:172:2401":{"id":"0:172:2401","crate_id":0,"name":"write","span":{"filename":"src/lib.rs","begin":[1414,4],"end":[1416,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:377:802":{"id":"0:377:802","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1023,9],"end":[1023,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42097:3392-0:443:2594":{"id":"a:2:42097:3392-0:443:2594","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42097:3392","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:443:2594","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:245":{"id":"0:245","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2203,0],"end":[2208,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ParseColorError","id":"0:480:2740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:246:2760"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:286:2379":{"id":"0:286:2379","crate_id":0,"name":"Never","span":{"filename":"src/lib.rs","begin":[264,4],"end":[264,9]},"visibility":"default","docs":"Never emit colors.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:403":{"id":"0:403","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1386,16],"end":[1386,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10314:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10314:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoColor","id":"0:396:2441","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["0:405:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:196:2357":{"id":"0:196:2357","crate_id":0,"name":"supports_hyperlinks","span":{"filename":"src/lib.rs","begin":[1513,4],"end":[1515,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:214:2330":{"id":"0:214:2330","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[1698,4],"end":[1700,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32235:237-0:406:2442":{"id":"a:2:32235:237-0:406:2442","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32235:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32235:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Ansi","id":"0:406:2442","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3758-0:330:2426":{"id":"b:2:3758-0:330:2426","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3756:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStream","id":"0:330:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3760:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:248:2761":{"id":"0:248:2761","crate_id":0,"name":"description","span":{"filename":"src/lib.rs","begin":[2211,4],"end":[2218,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13244:3638":{"id":"2:13244:3638","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:42005:191","prim@char":"1:12341:471","self::pattern":"2:12885:3160"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3154","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12891:3154","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12906:3155","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:340:2437":{"id":"0:340:2437","crate_id":0,"name":"BufferedStandardStream","span":{"filename":"src/lib.rs","begin":[507,0],"end":[509,1]},"visibility":"public","docs":"Like `StandardStream`, but does buffered writing.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:74","a:2:3139:247-0:340:2437","a:2:42098:3391-0:340:2437","a:2:32294:3249-0:340:2437","a:2:42097:3392-0:340:2437","a:2:3174:3596-0:340:2437","a:2:32235:237-0:340:2437","b:2:2646-0:340:2437","b:2:2643-0:340:2437","b:2:2920-0:340:2437","b:2:2916-0:340:2437","b:2:2926-0:340:2437","b:2:3758-0:340:2437","b:2:2931-0:340:2437","0:342","0:101","0:104"]}}},"0:157":{"id":"0:157","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1328,0],"end":[1383,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["is_synchronous","supports_hyperlinks","set_hyperlink"],"trait":{"name":"WriteColor","id":"0:13:2314","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Buffer","id":"0:378:2512","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:158:2316","0:159:2357","0:160:2322","0:161:2351","0:162:2330","0:163:2340"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:185:2558":{"id":"0:185:2558","crate_id":0,"name":"into_inner","span":{"filename":"src/lib.rs","begin":[1468,4],"end":[1470,5]},"visibility":"public","docs":"Consume this `Ansi` value and return the inner writer.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"W"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13289:33889":{"id":"2:13289:33889","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:180:2330":{"id":"0:180:2330","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[1446,4],"end":[1448,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5632:34596":{"id":"5:5632:34596","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7645:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7645:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3139:247-0:424:2324":{"id":"a:2:3139:247-0:424:2324","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3139:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:147:2542":{"id":"0:147:2542","crate_id":0,"name":"ansi","span":{"filename":"src/lib.rs","begin":[1237,4],"end":[1239,5]},"visibility":"public","docs":"Create a buffer that uses ANSI escape sequences.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Buffer","id":"0:378:2512","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:86:2351":{"id":"0:86:2351","crate_id":0,"name":"set_hyperlink","span":{"filename":"src/lib.rs","begin":[728,4],"end":[730,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["link",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"HyperlinkSpec","id":"0:508:2353","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:343:802":{"id":"0:343:802","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[506,9],"end":[506,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:152:2560":{"id":"0:152:2560","crate_id":0,"name":"as_slice","span":{"filename":"src/lib.rs","begin":[1286,4],"end":[1293,5]},"visibility":"public","docs":"Return the underlying data of the buffer.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:460:2633":{"id":"0:460:2633","crate_id":0,"name":"Ansi256","span":{"filename":"src/lib.rs","begin":[2080,4],"end":[2080,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:462:1973"]},"discriminant":null}}},"a:2:3139:247-0:508:2353":{"id":"a:2:3139:247-0:508:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3139:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HyperlinkSpec","id":"0:508:2353","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:174":{"id":"0:174","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1424,0],"end":[1454,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3643:2309","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_synchronous","supports_hyperlinks","set_hyperlink"],"trait":{"name":"WriteColor","id":"0:13:2314","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoColor","id":"0:396:2441","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["0:176:2316","0:177:2357","0:178:2322","0:179:2351","0:180:2330","0:181:2340"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:225:2576":{"id":"0:225:2576","crate_id":0,"name":"dimmed","span":{"filename":"src/lib.rs","begin":[1900,4],"end":[1902,5]},"visibility":"public","docs":"Get whether this is dimmed or not.\n\nNote that the dimmed setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5633:34597":{"id":"5:5633:34597","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:304:2360","`String`":"5:7645:243"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:304:2360","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7645:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5636:28157":{"id":"5:5636:28157","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:13322:28160"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7645:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2916-0:371:2492":{"id":"b:2:2916-0:371:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferWriter","id":"0:371:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2919:3632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32235:237-0:424:2324":{"id":"a:2:32235:237-0:424:2324","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32235:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:441":{"id":"0:441","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1825,27],"end":[1825,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2693:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:442:699"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13206:336":{"id":"2:13206:336","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:13207:28801","`u8`":"1:12360:1851"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2916-0:406:2442":{"id":"b:2:2916-0:406:2442","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Ansi","id":"0:406:2442","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2919:3632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32294:3249-0:508:2353":{"id":"a:2:32294:3249-0:508:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32294:3249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HyperlinkSpec","id":"0:508:2353","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13287:33888":{"id":"2:13287:33888","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2926-0:371:2492":{"id":"b:2:2926-0:371:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2896:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferWriter","id":"0:371:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2929:137","2:2930:1808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:342":{"id":"0:342","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[506,9],"end":[506,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10314:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferedStandardStream","id":"0:340:2437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:343:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3758-0:424:2324":{"id":"b:2:3758-0:424:2324","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3756:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3760:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3139:247-0:480:2740":{"id":"a:2:3139:247-0:480:2740","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3139:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:480:2740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13269:28838":{"id":"2:13269:28838","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3154","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:491:699":{"id":"0:491:699","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[2190,27],"end":[2190,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ParseColorError","id":"0:480:2740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32235:237-0:443:2594":{"id":"a:2:32235:237-0:443:2594","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32235:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:443:2594","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:143:2517":{"id":"0:143:2517","crate_id":0,"name":"print","span":{"filename":"src/lib.rs","begin":[1140,4],"end":[1168,5]},"visibility":"public","docs":"Prints the contents of the given buffer.\n\nIt is safe to call this from multiple threads simultaneously. In\nparticular, all buffers are written atomically. No interleaving will\noccur.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Buffer","id":"0:378:2512","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13224:7348":{"id":"2:13224:7348","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12341:471"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43871:3168","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2916-0:340:2437":{"id":"b:2:2916-0:340:2437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferedStandardStream","id":"0:340:2437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2919:3632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42098:3391-0:424:2324":{"id":"a:2:42098:3391-0:424:2324","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42098:3391","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:85:2322":{"id":"0:85:2322","crate_id":0,"name":"set_color","span":{"filename":"src/lib.rs","begin":[723,4],"end":[725,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["spec",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:158:2316":{"id":"0:158:2316","crate_id":0,"name":"supports_color","span":{"filename":"src/lib.rs","begin":[1330,4],"end":[1337,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:109:2330":{"id":"0:109:2330","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[827,4],"end":[829,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2920-0:330:2426":{"id":"b:2:2920-0:330:2426","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStream","id":"0:330:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2922:832"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:140:2415":{"id":"0:140:2415","crate_id":0,"name":"stderr","span":{"filename":"src/lib.rs","begin":[1105,4],"end":[1107,5]},"visibility":"public","docs":"Create a new `BufferWriter` that writes to stderr with the given\ncolor preferences.\n\nOn Windows, if coloring is desired and a Windows console could not be\nfound, then ANSI escape sequences are used instead.\n\nThe specific color/style settings can be configured when writing to\nthe buffers themselves.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["choice",{"resolved_path":{"name":"ColorChoice","id":"0:279:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"BufferWriter","id":"0:371:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:437:802":{"id":"0:437:802","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1825,16],"end":[1825,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13251:28830":{"id":"2:13251:28830","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12341:471","self::pattern":"2:12885:3160"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:12700:3163","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3154","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2646-0:378:2512":{"id":"b:2:2646-0:378:2512","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2640:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Buffer","id":"0:378:2512","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2648:26275"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:75:2414":{"id":"0:75:2414","crate_id":0,"name":"stdout","span":{"filename":"src/lib.rs","begin":[626,4],"end":[630,5]},"visibility":"public","docs":"Create a new `BufferedStandardStream` with the given color preferences\nthat writes to standard output via a buffered writer.\n\nOn Windows, if coloring is desired and a Windows console could not be\nfound, then ANSI escape sequences are used instead.\n\nThe specific color/style settings can be configured when writing via\nthe `WriteColor` trait.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["choice",{"resolved_path":{"name":"ColorChoice","id":"0:279:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"BufferedStandardStream","id":"0:340:2437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5635:28156":{"id":"5:5635:28156","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:13321:28159"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7645:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2926-0:298:2381":{"id":"b:2:2926-0:298:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2896:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:298:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2929:137","2:2930:1808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:188":{"id":"0:188","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1483,0],"end":[1504,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3643:2309","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["write_all_vectored","write_fmt","write_all","is_write_vectored","by_ref","write_vectored"],"trait":{"name":"Write","id":"1:3643:2309","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Ansi","id":"0:406:2442","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["0:190:2401","0:191:2519","0:192:2423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42097:3392-0:334:2434":{"id":"a:2:42097:3392-0:334:2434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42097:3392","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStreamLock","id":"0:334:2434","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:516:802":{"id":"0:516:802","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[2268,16],"end":[2268,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:406:2442":{"id":"0:406:2442","crate_id":0,"name":"Ansi","span":{"filename":"src/lib.rs","begin":[1458,0],"end":[1458,22]},"visibility":"public","docs":"Satisfies `WriteColor` using standard ANSI escape sequences.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:182","a:2:3139:247-0:406:2442","a:2:42098:3391-0:406:2442","a:2:32294:3249-0:406:2442","a:2:42097:3392-0:406:2442","a:2:3174:3596-0:406:2442","a:2:32235:237-0:406:2442","b:2:2646-0:406:2442","b:2:2643-0:406:2442","b:2:2920-0:406:2442","b:2:2916-0:406:2442","b:2:2926-0:406:2442","b:2:3758-0:406:2442","b:2:2931-0:406:2442","b:5:738-0:406:2442","0:188","0:193","0:413","0:410"]}}},"b:2:2643-0:443:2594":{"id":"b:2:2643-0:443:2594","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2637:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:443:2594","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2645:3049"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13225:6922":{"id":"2:13225:6922","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43881:3121","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13219:28824":{"id":"2:13219:28824","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_mut_checked`](str::split_at_mut_checked).\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:13218:28823","str::split_at_mut_checked":"2:13221:28828"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:396:2441":{"id":"0:396:2441","crate_id":0,"name":"NoColor","span":{"filename":"src/lib.rs","begin":[1387,0],"end":[1387,25]},"visibility":"public","docs":"Satisfies `WriteColor` but ignores all color options.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:164","a:2:3139:247-0:396:2441","a:2:42098:3391-0:396:2441","a:2:32294:3249-0:396:2441","a:2:42097:3392-0:396:2441","a:2:3174:3596-0:396:2441","a:2:32235:237-0:396:2441","b:2:2646-0:396:2441","b:2:2643-0:396:2441","b:2:2920-0:396:2441","b:2:2916-0:396:2441","b:2:2926-0:396:2441","b:2:3758-0:396:2441","b:2:2931-0:396:2441","b:5:738-0:396:2441","0:400","0:170","0:403","0:174"]}}},"2:13326:33898":{"id":"2:13326:33898","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4951:33898"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:44194:3173","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:107:2322":{"id":"0:107:2322","crate_id":0,"name":"set_color","span":{"filename":"src/lib.rs","begin":[811,4],"end":[816,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["spec",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2931-0:424:2324":{"id":"b:2:2931-0:424:2324","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2934:137","2:2935:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13231:2757":{"id":"2:13231:2757","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12341:471","self::pattern":"2:12885:3160"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3154","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:334:2434":{"id":"0:334:2434","crate_id":0,"name":"StandardStreamLock","span":{"filename":"src/lib.rs","begin":[501,0],"end":[503,1]},"visibility":"public","docs":"`StandardStreamLock` is a locked reference to a `StandardStream`.\n\nThis implements the `io::Write` and `WriteColor` traits, and is constructed\nvia the `Write::lock` method.\n\nThe lifetime `'a` refers to the lifetime of the corresponding\n`StandardStream`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:3139:247-0:334:2434","a:2:42098:3391-0:334:2434","a:2:32294:3249-0:334:2434","a:2:42097:3392-0:334:2434","a:2:3174:3596-0:334:2434","a:2:32235:237-0:334:2434","b:2:2646-0:334:2434","b:2:2643-0:334:2434","b:2:2920-0:334:2434","b:2:2916-0:334:2434","b:2:2926-0:334:2434","b:2:3758-0:334:2434","b:2:2931-0:334:2434","0:89","0:337","0:93"]}}},"0:442:699":{"id":"0:442:699","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[1825,27],"end":[1825,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32294:3249-0:279:2367":{"id":"a:2:32294:3249-0:279:2367","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32294:3249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:332":{"id":"0:332","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[488,9],"end":[488,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10314:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStream","id":"0:330:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:333:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:290":{"id":"0:290","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,16],"end":[251,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3134:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:255:2382":{"id":"0:255:2382","crate_id":0,"name":"from_str","span":{"filename":"src/lib.rs","begin":[2252,4],"end":[2264,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42136:226","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Color","id":"0:443:2594","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"ParseColorError","id":"0:480:2740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2916-0:330:2426":{"id":"b:2:2916-0:330:2426","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStream","id":"0:330:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2919:3632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:479:699":{"id":"0:479:699","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[2070,33],"end":[2070,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Color","id":"0:443:2594","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:483":{"id":"0:483","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2190,9],"end":[2190,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:480:2740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:484:475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:177:2357":{"id":"0:177:2357","crate_id":0,"name":"supports_hyperlinks","span":{"filename":"src/lib.rs","begin":[1431,4],"end":[1433,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42098:3391-0:378:2512":{"id":"a:2:42098:3391-0:378:2512","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42098:3391","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Buffer","id":"0:378:2512","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:333:802":{"id":"0:333:802","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[488,9],"end":[488,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:295":{"id":"0:295","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,33],"end":[251,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32237:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:47:802":{"id":"0:47:802","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[371,4],"end":[378,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:142:2511":{"id":"0:142:2511","crate_id":0,"name":"buffer","span":{"filename":"src/lib.rs","begin":[1122,4],"end":[1124,5]},"visibility":"public","docs":"Creates a new `Buffer` with the current color preferences.\n\nA `Buffer` satisfies both `io::Write` and `WriteColor`. A `Buffer` can\nbe printed using the `print` method.","links":{},"attrs":["#[cfg(not(windows))]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Buffer","id":"0:378:2512","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:480:2740":{"id":"0:480:2740","crate_id":0,"name":"ParseColorError","span":{"filename":"src/lib.rs","begin":[2191,0],"end":[2194,1]},"visibility":"public","docs":"An error from parsing an invalid color specification.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:245","a:2:3139:247-0:480:2740","a:2:42098:3391-0:480:2740","a:2:32294:3249-0:480:2740","a:2:42097:3392-0:480:2740","a:2:3174:3596-0:480:2740","a:2:32235:237-0:480:2740","b:2:2646-0:480:2740","b:2:2643-0:480:2740","b:2:2920-0:480:2740","b:2:2916-0:480:2740","b:2:2926-0:480:2740","b:2:3758-0:480:2740","b:2:2931-0:480:2740","b:5:5866-0:480:2740","b:5:738-0:480:2740","0:485","0:250","0:489","0:483","0:490","0:247","0:487"]}}},"0:36:2340":{"id":"0:36:2340","crate_id":0,"name":"is_synchronous","span":{"filename":"src/lib.rs","begin":[238,4],"end":[240,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:511":{"id":"0:511","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2268,9],"end":[2268,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HyperlinkSpec","id":"0:508:2353","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:513:475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13234:2742":{"id":"2:13234:2742","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, in which case this function will return true if\nthe `&str` is a prefix of this string slice.\n\nThe [pattern] can also be a [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\nThese will only be checked against the first character of this string slice.\nLook at the second example below regarding behavior for slices of [`char`]s.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```\n\n```\nlet bananas = \"bananas\";\n\n// Note that both of these assert successfully.\nassert!(bananas.starts_with(&['b', 'a', 'n', 'a']));\nassert!(bananas.starts_with(&['a', 'b', 'c', 'd']));\n```","links":{"prim@char":"1:12341:471","self::pattern":"2:12885:3160"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3154","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2643-0:279:2367":{"id":"b:2:2643-0:279:2367","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2637:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2645:3049"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:738-0:508:2353":{"id":"b:5:738-0:508:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:734:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HyperlinkSpec","id":"0:508:2353","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["5:740:3695","5:741:3696","5:742:3697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42097:3392-0:406:2442":{"id":"a:2:42097:3392-0:406:2442","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42097:3392","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42097:3392","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Ansi","id":"0:406:2442","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:514":{"id":"0:514","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2268,16],"end":[2268,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10314:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HyperlinkSpec","id":"0:508:2353","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:516:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:198:2351":{"id":"0:198:2351","crate_id":0,"name":"set_hyperlink","span":{"filename":"src/lib.rs","begin":[1547,4],"end":[1553,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["link",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"HyperlinkSpec","id":"0:508:2353","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3174:3596-0:424:2324":{"id":"a:2:3174:3596-0:424:2324","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3174:3596","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42098:3391-0:330:2426":{"id":"a:2:42098:3391-0:330:2426","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42098:3391","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStream","id":"0:330:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:413":{"id":"0:413","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1457,16],"end":[1457,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10314:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10314:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Ansi","id":"0:406:2442","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["0:415:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:195:2316":{"id":"0:195:2316","crate_id":0,"name":"supports_color","span":{"filename":"src/lib.rs","begin":[1508,4],"end":[1510,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13220:28827":{"id":"2:13220:28827","crate_id":2,"name":"split_at_checked","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut_checked`]\nmethod.\n\n[`split_at_mut_checked`]: str::split_at_mut_checked\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at_checked(3).unwrap();\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n\nassert_eq!(None, s.split_at_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_checked(16));  // Beyond the string length\n```","links":{"str::split_at_mut_checked":"2:13221:28828"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:443:2594":{"id":"0:443:2594","crate_id":0,"name":"Color","span":{"filename":"src/lib.rs","begin":[2071,0],"end":[2084,1]},"visibility":"public","docs":"The set of available colors for the terminal foreground/background.\n\nThe `Ansi256` and `Rgb` colors will only output the correct codes when\npaired with the `Ansi` `WriteColor` implementation.\n\nThe `Ansi256` and `Rgb` color types are not supported when writing colors\non Windows using the console. If they are used on Windows, then they are\nsilently ignored and no colors will be emitted.\n\nThis set may expand over time.\n\nThis type has a `FromStr` impl that can parse colors from their human\nreadable form. The format is as follows:\n\n1. Any of the explicitly listed colors in English. They are matched\n   case insensitively.\n2. A single 8-bit integer, in either decimal or hexadecimal format.\n3. A triple of 8-bit integers separated by a comma, where each integer is\n   in decimal or hexadecimal format.\n\nHexadecimal numbers are written with a `0x` prefix.","links":{},"attrs":["#[allow(missing_docs)]"],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":true,"variants":["0:444:2620","0:446:2621","0:448:2623","0:450:2624","0:452:2625","0:454:2627","0:456:2629","0:458:2631","0:460:2633","0:463:2634"],"impls":["a:2:3139:247-0:443:2594","a:2:42098:3391-0:443:2594","a:2:32294:3249-0:443:2594","a:2:42097:3392-0:443:2594","a:2:3174:3596-0:443:2594","a:2:32235:237-0:443:2594","b:2:2646-0:443:2594","b:2:2643-0:443:2594","b:2:2920-0:443:2594","b:2:2916-0:443:2594","b:2:2926-0:443:2594","b:2:3758-0:443:2594","b:2:2931-0:443:2594","b:5:738-0:443:2594","0:473","0:475","0:253","0:478","0:472","0:470","0:477"]}}},"b:2:2643-0:334:2434":{"id":"b:2:2643-0:334:2434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2637:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStreamLock","id":"0:334:2434","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2645:3049"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3174:3596-0:371:2492":{"id":"a:2:3174:3596-0:371:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3174:3596","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferWriter","id":"0:371:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"a:2:3174:3596-0:378:2512":{"id":"a:2:3174:3596-0:378:2512","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3174:3596","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Buffer","id":"0:378:2512","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42097:3392-0:508:2353":{"id":"a:2:42097:3392-0:508:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42097:3392","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HyperlinkSpec","id":"0:508:2353","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2920-0:508:2353":{"id":"b:2:2920-0:508:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"HyperlinkSpec","id":"0:508:2353","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2922:832"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13266:28836":{"id":"2:13266:28836","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12341:471","str::splitn":"2:13263:28834","self::pattern":"2:12885:3160"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:44017:3183","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3154","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12891:3154","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12906:3155","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:219:2593":{"id":"0:219:2593","crate_id":0,"name":"fg","span":{"filename":"src/lib.rs","begin":[1861,4],"end":[1863,5]},"visibility":"public","docs":"Get the foreground color.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Color","id":"0:443:2594","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:466:1974":{"id":"0:466:1974","crate_id":0,"name":"1","span":{"filename":"src/lib.rs","begin":[2081,12],"end":[2081,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"2:13237:28840":{"id":"2:13237:28840","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12341:471","self::pattern":"2:12885:3160"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3154","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12891:3154","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12906:3155","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:233:2330":{"id":"0:233:2330","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[1964,4],"end":[1966,5]},"visibility":"public","docs":"Get whether reset is enabled or not.\n\nreset is enabled by default. When disabled and using ANSI escape\nsequences, a \"reset\" code will be emitted every time a `ColorSpec`'s\nsettings are applied.\n\nNote that the reset setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2920-0:424:2324":{"id":"b:2:2920-0:424:2324","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2922:832"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:405:802":{"id":"0:405:802","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1386,16],"end":[1386,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3174:3596-0:508:2353":{"id":"a:2:3174:3596-0:508:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3174:3596","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HyperlinkSpec","id":"0:508:2353","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13221:28828":{"id":"2:13221:28828","crate_id":2,"name":"split_at_mut_checked","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at_checked`] method.\n\n[`split_at_checked`]: str::split_at_checked\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\nif let Some((first, last)) = s.split_at_mut_checked(3) {\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n\nassert_eq!(None, s.split_at_mut_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_mut_checked(16));  // Beyond the string length\n```","links":{"str::split_at_checked":"2:13220:28827"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42098:3391-0:371:2492":{"id":"a:2:42098:3391-0:371:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42098:3391","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferWriter","id":"0:371:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3174:3596-0:480:2740":{"id":"a:2:3174:3596-0:480:2740","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3174:3596","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:480:2740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3174:3596-0:298:2381":{"id":"a:2:3174:3596-0:298:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3174:3596","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:298:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:20":{"id":"0:20","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[201,0],"end":[220,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"WriteColor","id":"0:13:2314","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_synchronous","supports_hyperlinks","set_hyperlink"],"trait":{"name":"WriteColor","id":"0:13:2314","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"T"}}},"items":["0:23:2316","0:24:2357","0:25:2322","0:26:2351","0:27:2330","0:28:2340"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:291":{"id":"0:291","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,22],"end":[251,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10314:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:292:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13229:33882":{"id":"2:13229:33882","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:44159:3177","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13323:28688":{"id":"2:13323:28688","crate_id":2,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:991:38380"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2643-0:396:2441":{"id":"b:2:2643-0:396:2441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2637:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoColor","id":"0:396:2441","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2645:3049"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:193":{"id":"0:193","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1506,0],"end":[1564,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3643:2309","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_synchronous","supports_hyperlinks","set_hyperlink"],"trait":{"name":"WriteColor","id":"0:13:2314","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Ansi","id":"0:406:2442","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["0:195:2316","0:196:2357","0:197:2322","0:198:2351","0:199:2330","0:200:2340"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:95:2316":{"id":"0:95:2316","crate_id":0,"name":"supports_color","span":{"filename":"src/lib.rs","begin":[757,4],"end":[759,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:212:2322":{"id":"0:212:2322","crate_id":0,"name":"set_color","span":{"filename":"src/lib.rs","begin":[1690,4],"end":[1692,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["_",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2646-0:480:2740":{"id":"b:2:2646-0:480:2740","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2640:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:480:2740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2648:26275"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:381":{"id":"0:381","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1182,9],"end":[1182,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Buffer","id":"0:378:2512","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:382:475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:292:802":{"id":"0:292:802","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[251,22],"end":[251,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13226:31944":{"id":"2:13226:31944","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:13227:31954"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:44169:3164","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42098:3391-0:480:2740":{"id":"a:2:42098:3391-0:480:2740","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42098:3391","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:480:2740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13329:33899":{"id":"2:13329:33899","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4949:33899"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:44212:3175","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2931-0:406:2442":{"id":"b:2:2931-0:406:2442","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Ansi","id":"0:406:2442","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2934:137","2:2935:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:178:2322":{"id":"0:178:2322","crate_id":0,"name":"set_color","span":{"filename":"src/lib.rs","begin":[1436,4],"end":[1438,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["_",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3139:247-0:340:2437":{"id":"a:2:3139:247-0:340:2437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3139:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferedStandardStream","id":"0:340:2437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13318:28154":{"id":"2:13318:28154","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:452:2625":{"id":"0:452:2625","crate_id":0,"name":"Cyan","span":{"filename":"src/lib.rs","begin":[2076,4],"end":[2076,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:227:2578":{"id":"0:227:2578","crate_id":0,"name":"italic","span":{"filename":"src/lib.rs","begin":[1915,4],"end":[1917,5]},"visibility":"public","docs":"Get whether this is italic or not.\n\nNote that the italic setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:454:2627":{"id":"0:454:2627","crate_id":0,"name":"Magenta","span":{"filename":"src/lib.rs","begin":[2077,4],"end":[2077,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:3139:247-0:279:2367":{"id":"a:2:3139:247-0:279:2367","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3139:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:513:475":{"id":"0:513:475","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[2268,9],"end":[2268,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"HyperlinkSpec","id":"0:508:2353","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:463:2634":{"id":"0:463:2634","crate_id":0,"name":"Rgb","span":{"filename":"src/lib.rs","begin":[2081,4],"end":[2081,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:465:1973","0:466:1974","0:467:1975"]},"discriminant":null}}},"0:162:2330":{"id":"0:162:2330","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[1370,4],"end":[1377,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2916-0:334:2434":{"id":"b:2:2916-0:334:2434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStreamLock","id":"0:334:2434","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2919:3632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:280:2370":{"id":"0:280:2370","crate_id":0,"name":"Always","span":{"filename":"src/lib.rs","begin":[255,4],"end":[255,10]},"visibility":"default","docs":"Try very hard to emit colors. This includes emitting ANSI colors\non Windows if the console API is unavailable.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:154":{"id":"0:154","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1306,0],"end":[1326,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["write_all_vectored","write_fmt","write_all","is_write_vectored","by_ref","write_vectored"],"trait":{"name":"Write","id":"1:3643:2309","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Buffer","id":"0:378:2512","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:155:2401","0:156:2423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:223:2574":{"id":"0:223:2574","crate_id":0,"name":"bold","span":{"filename":"src/lib.rs","begin":[1885,4],"end":[1887,5]},"visibility":"public","docs":"Get whether this is bold or not.\n\nNote that the bold setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2926-0:396:2441":{"id":"b:2:2926-0:396:2441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2896:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoColor","id":"0:396:2441","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2929:137","2:2930:1808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:218:1178":{"id":"0:218:1178","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[1856,4],"end":[1858,5]},"visibility":"public","docs":"Create a new color specification that has no colors or styles.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:220:2670":{"id":"0:220:2670","crate_id":0,"name":"set_fg","span":{"filename":"src/lib.rs","begin":[1866,4],"end":[1869,5]},"visibility":"public","docs":"Set the foreground color.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["color",{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Color","id":"0:443:2594","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:473":{"id":"0:473","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2070,22],"end":[2070,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10314:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:443:2594","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:474:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:24:2357":{"id":"0:24:2357","crate_id":0,"name":"supports_hyperlinks","span":{"filename":"src/lib.rs","begin":[205,4],"end":[207,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:99:2330":{"id":"0:99:2330","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[777,4],"end":[779,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:156:2423":{"id":"0:156:2423","crate_id":0,"name":"flush","span":{"filename":"src/lib.rs","begin":[1318,4],"end":[1325,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3139:247-0:406:2442":{"id":"a:2:3139:247-0:406:2442","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3139:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3139:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Ansi","id":"0:406:2442","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:149:997":{"id":"0:149:997","crate_id":0,"name":"len","span":{"filename":"src/lib.rs","begin":[1253,4],"end":[1260,5]},"visibility":"public","docs":"Returns the length of this buffer in bytes.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:181:2340":{"id":"0:181:2340","crate_id":0,"name":"is_synchronous","span":{"filename":"src/lib.rs","begin":[1451,4],"end":[1453,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13325:28690":{"id":"2:13325:28690","crate_id":2,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:991:38380"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:200:2340":{"id":"0:200:2340","crate_id":0,"name":"is_synchronous","span":{"filename":"src/lib.rs","begin":[1561,4],"end":[1563,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:215":{"id":"0:215","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1838,0],"end":[1852,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2968:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:216:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:38:60":{"id":"0:38:60","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[269,4],"end":[271,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"ColorChoice","id":"0:279:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13207:28801":{"id":"2:13207:28801","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12360:1851"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:301:475":{"id":"0:301:475","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[363,9],"end":[363,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:298:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:148:2518":{"id":"0:148:2518","crate_id":0,"name":"is_empty","span":{"filename":"src/lib.rs","begin":[1248,4],"end":[1250,5]},"visibility":"public","docs":"Returns true if and only if this buffer is empty.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3174:3596-0:406:2442":{"id":"a:2:3174:3596-0:406:2442","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"2:3174:3596","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3174:3596","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Ansi","id":"0:406:2442","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3139:247-0:443:2594":{"id":"a:2:3139:247-0:443:2594","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3139:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:443:2594","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42098:3391-0:298:2381":{"id":"a:2:42098:3391-0:298:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42098:3391","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:298:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:103:2423":{"id":"0:103:2423","crate_id":0,"name":"flush","span":{"filename":"src/lib.rs","begin":[794,4],"end":[796,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42098:3391-0:508:2353":{"id":"a:2:42098:3391-0:508:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42098:3391","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HyperlinkSpec","id":"0:508:2353","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:246:2760":{"id":"0:246:2760","crate_id":0,"name":"invalid","span":{"filename":"src/lib.rs","begin":[2205,4],"end":[2207,5]},"visibility":"public","docs":"Return the string that couldn't be parsed as a valid color.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:378:2512":{"id":"0:378:2512","crate_id":0,"name":"Buffer","span":{"filename":"src/lib.rs","begin":[1183,0],"end":[1183,31]},"visibility":"public","docs":"Write colored text to memory.\n\n`Buffer` is a platform independent abstraction for printing colored text to\nan in memory buffer. When the buffer is printed using a `BufferWriter`, the\ncolor information will be applied to the output device (a tty on Unix and a\nconsole on Windows).\n\nA `Buffer` is typically created by calling the `BufferWriter.buffer`\nmethod, which will take color preferences and the environment into\naccount. However, buffers can also be manually created using `no_color`,\n`ansi` or `console` (on Windows).","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:144","a:2:3139:247-0:378:2512","a:2:42098:3391-0:378:2512","a:2:32294:3249-0:378:2512","a:2:42097:3392-0:378:2512","a:2:3174:3596-0:378:2512","a:2:32235:237-0:378:2512","b:2:2646-0:378:2512","b:2:2643-0:378:2512","b:2:2920-0:378:2512","b:2:2916-0:378:2512","b:2:2926-0:378:2512","b:2:3758-0:378:2512","b:2:2931-0:378:2512","b:5:738-0:378:2512","0:381","0:154","0:383","0:157"]}}},"b:2:2920-0:371:2492":{"id":"b:2:2920-0:371:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferWriter","id":"0:371:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2922:832"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:465:1973":{"id":"0:465:1973","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[2081,8],"end":[2081,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"0:39":{"id":"0:39","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[274,0],"end":[288,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12845:2310","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:40:136","0:41:2382"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:232:2695":{"id":"0:232:2695","crate_id":0,"name":"set_strikethrough","span":{"filename":"src/lib.rs","begin":[1952,4],"end":[1955,5]},"visibility":"public","docs":"Set whether the text is strikethrough or not.\n\nNote that the strikethrough setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:738-0:378:2512":{"id":"b:5:738-0:378:2512","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:734:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Buffer","id":"0:378:2512","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:740:3695","5:741:3696","5:742:3697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:424:2324":{"id":"0:424:2324","crate_id":0,"name":"ColorSpec","span":{"filename":"src/lib.rs","begin":[1826,0],"end":[1836,1]},"visibility":"public","docs":"A color specification.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:217","a:2:3139:247-0:424:2324","a:2:42098:3391-0:424:2324","a:2:32294:3249-0:424:2324","a:2:42097:3392-0:424:2324","a:2:3174:3596-0:424:2324","a:2:32235:237-0:424:2324","b:2:2646-0:424:2324","b:2:2643-0:424:2324","b:2:2920-0:424:2324","b:2:2916-0:424:2324","b:2:2926-0:424:2324","b:2:3758-0:424:2324","b:2:2931-0:424:2324","b:5:738-0:424:2324","0:438","0:436","0:441","0:215","0:434","0:440"]}}},"2:13263:28834":{"id":"2:13263:28834","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12341:471","self::pattern":"2:12885:3160","str::rsplitn":"2:13266:28836"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43999:3184","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3154","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13275:3064":{"id":"2:13275:3064","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12885:3160","`DoubleEndedIterator`":"2:8263:129","prim@char":"1:12341:471","str::rmatches":"2:13278:33885"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:44099:3180","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3154","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:258:2778":{"id":"0:258:2778","crate_id":0,"name":"open","span":{"filename":"src/lib.rs","begin":[2275,4],"end":[2277,5]},"visibility":"public","docs":"Creates a new hyperlink specification.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["uri",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"HyperlinkSpec","id":"0:508:2353","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13294:33892":{"id":"2:13294:33892","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:14:2316":{"id":"0:14:2316","crate_id":0,"name":"supports_color","span":{"filename":"src/lib.rs","begin":[136,4],"end":[136,37]},"visibility":"default","docs":"Returns true if and only if the underlying writer supports colors.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:2:42098:3391-0:334:2434":{"id":"a:2:42098:3391-0:334:2434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42098:3391","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStreamLock","id":"0:334:2434","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32294:3249-0:334:2434":{"id":"a:2:32294:3249-0:334:2434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32294:3249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStreamLock","id":"0:334:2434","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32294:3249-0:396:2441":{"id":"a:2:32294:3249-0:396:2441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32294:3249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32294:3249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoColor","id":"0:396:2441","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32294:3249-0:378:2512":{"id":"a:2:32294:3249-0:378:2512","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32294:3249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Buffer","id":"0:378:2512","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:221:2673":{"id":"0:221:2673","crate_id":0,"name":"bg","span":{"filename":"src/lib.rs","begin":[1872,4],"end":[1874,5]},"visibility":"public","docs":"Get the background color.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Color","id":"0:443:2594","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13293:33891":{"id":"2:13293:33891","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:27:2330":{"id":"0:27:2330","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[214,4],"end":[216,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13320:28158":{"id":"2:13320:28158","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:490":{"id":"0:490","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2190,27],"end":[2190,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2693:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:480:2740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:491:699"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:176:2316":{"id":"0:176:2316","crate_id":0,"name":"supports_color","span":{"filename":"src/lib.rs","begin":[1426,4],"end":[1428,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13204:2592":{"id":"2:13204:2592","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12432:2785"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:197:2322":{"id":"0:197:2322","crate_id":0,"name":"set_color","span":{"filename":"src/lib.rs","begin":[1518,4],"end":[1544,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["spec",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2643-0:330:2426":{"id":"b:2:2643-0:330:2426","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2637:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStream","id":"0:330:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2645:3049"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2646-0:371:2492":{"id":"b:2:2646-0:371:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2640:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferWriter","id":"0:371:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2648:26275"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:37":{"id":"0:37","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[268,0],"end":[272,1]},"visibility":"default","docs":"The default is `Auto`.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2968:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:38:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:164":{"id":"0:164","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1389,0],"end":[1410,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Write","id":"1:3643:2309","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"NoColor","id":"0:396:2441","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["0:166:1178","0:167:2558","0:168:2469","0:169:2569"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32235:237-0:298:2381":{"id":"a:2:32235:237-0:298:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32235:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:298:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:288":{"id":"0:288","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,9],"end":[251,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:289:475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:0:2830":{"id":"0:0:2830","crate_id":0,"name":"termcolor","span":{"filename":"src/lib.rs","begin":[1,0],"end":[2572,1]},"visibility":"public","docs":"This crate provides a cross platform abstraction for writing colored text to\na terminal. Colors are written using either ANSI escape sequences or by\ncommunicating with a Windows console. Much of this API was motivated by use\ninside command line applications, where colors or styles can be configured\nby the end user and/or the environment.\n\nThis crate also provides platform independent support for writing colored text\nto an in memory buffer. While this is easy to do with ANSI escape sequences\n(because they are in the buffer themselves), it is trickier to do with the\nWindows console API, which requires synchronous communication.\n\nIn ANSI mode, this crate also provides support for writing hyperlinks.\n\n# Organization\n\nThe `WriteColor` trait extends the `io::Write` trait with methods for setting\ncolors or resetting them.\n\n`StandardStream` and `StandardStreamLock` both satisfy `WriteColor` and are\nanalogous to `std::io::Stdout` and `std::io::StdoutLock`, or `std::io::Stderr`\nand `std::io::StderrLock`.\n\n`Buffer` is an in memory buffer that supports colored text. In a parallel\nprogram, each thread might write to its own buffer. A buffer can be printed to\nusing a `BufferWriter`. The advantage of this design is that each thread can\nwork in parallel on a buffer without having to synchronize access to global\nresources such as the Windows console. Moreover, this design also prevents\ninterleaving of buffer output.\n\n`Ansi` and `NoColor` both satisfy `WriteColor` for arbitrary implementors of\n`io::Write`. These types are useful when you know exactly what you need. An\nanalogous type for the Windows console is not provided since it cannot exist.\n\n# Example: using `StandardStream`\n\nThe `StandardStream` type in this crate works similarly to `std::io::Stdout`,\nexcept it is augmented with methods for coloring by the `WriteColor` trait.\nFor example, to write some green text:\n\n```rust,no_run\n# fn test() -> Result<(), Box<::std::error::Error>> {\nuse std::io::Write;\nuse termcolor::{Color, ColorChoice, ColorSpec, StandardStream, WriteColor};\n\nlet mut stdout = StandardStream::stdout(ColorChoice::Always);\nstdout.set_color(ColorSpec::new().set_fg(Some(Color::Green)))?;\nwriteln!(&mut stdout, \"green text!\")?;\n# Ok(()) }\n```\n\nNote that any text written to the terminal now will be colored\ngreen when using ANSI escape sequences, even if it is written via\nstderr, and even if stderr had previously been set to `Color::Red`.\nUsers will need to manage any color changes themselves by calling\n[`WriteColor::set_color`](trait.WriteColor.html#tymethod.set_color), and this\nmay include calling [`WriteColor::reset`](trait.WriteColor.html#tymethod.reset)\nbefore the program exits to a shell.\n\n# Example: using `BufferWriter`\n\nA `BufferWriter` can create buffers and write buffers to stdout or stderr. It\ndoes *not* implement `io::Write` or `WriteColor` itself. Instead, `Buffer`\nimplements `io::Write` and `io::WriteColor`.\n\nThis example shows how to print some green text to stderr.\n\n```rust,no_run\n# fn test() -> Result<(), Box<::std::error::Error>> {\nuse std::io::Write;\nuse termcolor::{BufferWriter, Color, ColorChoice, ColorSpec, WriteColor};\n\nlet mut bufwtr = BufferWriter::stderr(ColorChoice::Always);\nlet mut buffer = bufwtr.buffer();\nbuffer.set_color(ColorSpec::new().set_fg(Some(Color::Green)))?;\nwriteln!(&mut buffer, \"green text!\")?;\nbufwtr.print(&buffer)?;\n# Ok(()) }\n```\n\n# Detecting presence of a terminal\n\nIn many scenarios when using color, one often wants to enable colors\nautomatically when writing to a terminal and disable colors automatically when\nwriting to anything else. The typical way to achieve this in Unix environments\nis via libc's\n[`isatty`](https://man7.org/linux/man-pages/man3/isatty.3.html)\nfunction.\nUnfortunately, this notoriously does not work well in Windows environments. To\nwork around that, the recommended solution is to use the standard library's\n[`IsTerminal`](https://doc.rust-lang.org/std/io/trait.IsTerminal.html) trait.\nIt goes out of its way to get it as right as possible in Windows environments.\n\nFor example, in a command line application that exposes a `--color` flag,\nyour logic for how to enable colors might look like this:\n\n```ignore\nuse std::io::IsTerminal;\n\nuse termcolor::{ColorChoice, StandardStream};\n\nlet preference = argv.get_flag(\"color\").unwrap_or(\"auto\");\nlet mut choice = preference.parse::<ColorChoice>()?;\nif choice == ColorChoice::Auto && !std::io::stdin().is_terminal() {\n    choice = ColorChoice::Never;\n}\nlet stdout = StandardStream::stdout(choice);\n// ... write to stdout\n```\n\nCurrently, `termcolor` does not provide anything to do this for you.","links":{},"attrs":["#![deny(missing_debug_implementations, missing_docs)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:13:2314","0:279:2367","0:298:2381","0:330:2426","0:334:2434","0:340:2437","0:371:2492","0:378:2512","0:396:2441","0:406:2442","0:424:2324","0:443:2594","0:480:2740","0:508:2353"],"is_stripped":false}}},"0:76:2415":{"id":"0:76:2415","crate_id":0,"name":"stderr","span":{"filename":"src/lib.rs","begin":[640,4],"end":[644,5]},"visibility":"public","docs":"Create a new `BufferedStandardStream` with the given color preferences\nthat writes to standard error via a buffered writer.\n\nOn Windows, if coloring is desired and a Windows console could not be\nfound, then ANSI escape sequences are used instead.\n\nThe specific color/style settings can be configured when writing via\nthe `WriteColor` trait.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["choice",{"resolved_path":{"name":"ColorChoice","id":"0:279:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"BufferedStandardStream","id":"0:340:2437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:298:2381":{"id":"0:298:2381","crate_id":0,"name":"ColorChoiceParseError","span":{"filename":"src/lib.rs","begin":[364,0],"end":[366,1]},"visibility":"public","docs":"An error that occurs when parsing a `ColorChoice` fails.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:3139:247-0:298:2381","a:2:42098:3391-0:298:2381","a:2:32294:3249-0:298:2381","a:2:42097:3392-0:298:2381","a:2:3174:3596-0:298:2381","a:2:32235:237-0:298:2381","b:2:2646-0:298:2381","b:2:2643-0:298:2381","b:2:2920-0:298:2381","b:2:2916-0:298:2381","b:2:2926-0:298:2381","b:2:3758-0:298:2381","b:2:2931-0:298:2381","b:5:5866-0:298:2381","b:5:738-0:298:2381","0:46","0:302","0:45","0:300"]}}},"0:256":{"id":"0:256","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2273,0],"end":[2288,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"HyperlinkSpec","id":"0:508:2353","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:258:2778","0:259:2780","0:260:2589"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:70:2417":{"id":"0:70:2417","crate_id":0,"name":"lock","span":{"filename":"src/lib.rs","begin":[577,4],"end":[579,5]},"visibility":"public","docs":"Lock the underlying writer.\n\nThe lock guard returned also satisfies `io::Write` and\n`WriteColor`.\n\nThis method is **not reentrant**. It may panic if `lock` is called\nwhile a `StandardStreamLock` is still alive.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"StandardStreamLock","id":"0:334:2434","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3758-0:406:2442":{"id":"b:2:3758-0:406:2442","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3756:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Ansi","id":"0:406:2442","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:3760:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:33:2322":{"id":"0:33:2322","crate_id":0,"name":"set_color","span":{"filename":"src/lib.rs","begin":[229,4],"end":[231,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["spec",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:376":{"id":"0:376","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1023,9],"end":[1023,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10314:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferWriter","id":"0:371:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:377:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:297:699":{"id":"0:297:699","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[251,33],"end":[251,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ColorChoice","id":"0:279:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:742:3697":{"id":"5:742:3697","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42097:3392-0:279:2367":{"id":"a:2:42097:3392-0:279:2367","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42097:3392","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42097:3392-0:396:2441":{"id":"a:2:42097:3392-0:396:2441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42097:3392","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42097:3392","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoColor","id":"0:396:2441","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:253":{"id":"0:253","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2249,0],"end":[2265,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12845:2310","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:443:2594","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:254:136","0:255:2382"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2926-0:334:2434":{"id":"b:2:2926-0:334:2434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2896:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStreamLock","id":"0:334:2434","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2929:137","2:2930:1808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:166:1178":{"id":"0:166:1178","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[1392,4],"end":[1394,5]},"visibility":"public","docs":"Create a new writer that satisfies `WriteColor` but drops all color\ninformation.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["wtr",{"generic":"W"}]],"output":{"resolved_path":{"name":"NoColor","id":"0:396:2441","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2920-0:480:2740":{"id":"b:2:2920-0:480:2740","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:480:2740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2922:832"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13240:3675":{"id":"2:13240:3675","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:42005:191","prim@char":"1:12341:471","self::pattern":"2:12885:3160"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3154","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3139:247-0:298:2381":{"id":"a:2:3139:247-0:298:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3139:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:298:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13257:33883":{"id":"2:13257:33883","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12885:3160","str::split":"2:13248:2746","prim@char":"1:12341:471","`DoubleEndedIterator`":"2:8263:129","str::rsplit_terminator":"2:13260:33884"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43945:3186","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3154","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:92:2423":{"id":"0:92:2423","crate_id":0,"name":"flush","span":{"filename":"src/lib.rs","begin":[750,4],"end":[752,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32235:237-0:371:2492":{"id":"a:2:32235:237-0:371:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32235:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferWriter","id":"0:371:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32235:237-0:378:2512":{"id":"a:2:32235:237-0:378:2512","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32235:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Buffer","id":"0:378:2512","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:337":{"id":"0:337","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[500,9],"end":[500,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10314:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStreamLock","id":"0:334:2434","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:339:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3758-0:334:2434":{"id":"b:2:3758-0:334:2434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3756:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStreamLock","id":"0:334:2434","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3760:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13298:33894":{"id":"2:13298:33894","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12341:471","self::pattern":"2:12885:3160"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3154","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:216:60":{"id":"0:216:60","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[1839,4],"end":[1851,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:18:2351":{"id":"0:18:2351","crate_id":0,"name":"set_hyperlink","span":{"filename":"src/lib.rs","begin":[187,4],"end":[189,5]},"visibility":"default","docs":"Set the current hyperlink of the writer.\n\nThe typical way to use this is to first call it with a\n[`HyperlinkSpec::open`] to write the actual URI to a tty that supports\n[OSC-8]. At this point, the caller can now write the label for the\nhyperlink. This may include coloring or other styles. Once the caller\nhas finished writing the label, one should call this method again with\n[`HyperlinkSpec::close`].\n\nIf there was a problem setting the hyperlink, then an error is\nreturned.\n\nThis defaults to doing nothing.\n\n[OSC8]: https://github.com/Alhadis/OSC8-Adoption/","links":{"`HyperlinkSpec::open`":"0:258:2778","`HyperlinkSpec::close`":"0:259:2780"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["_link",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"HyperlinkSpec","id":"0:508:2353","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:23:2316":{"id":"0:23:2316","crate_id":0,"name":"supports_color","span":{"filename":"src/lib.rs","begin":[202,4],"end":[204,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42098:3391-0:443:2594":{"id":"a:2:42098:3391-0:443:2594","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42098:3391","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:443:2594","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:190:2401":{"id":"0:190:2401","crate_id":0,"name":"write","span":{"filename":"src/lib.rs","begin":[1485,4],"end":[1487,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13272:28839":{"id":"2:13272:28839","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3154","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12891:3154","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12906:3155","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13322:28160":{"id":"2:13322:28160","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:382:475":{"id":"0:382:475","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[1182,9],"end":[1182,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Buffer","id":"0:378:2512","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:738-0:279:2367":{"id":"b:5:738-0:279:2367","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:734:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:740:3695","5:741:3696","5:742:3697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:222:2675":{"id":"0:222:2675","crate_id":0,"name":"set_bg","span":{"filename":"src/lib.rs","begin":[1877,4],"end":[1880,5]},"visibility":"public","docs":"Set the background color.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["color",{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Color","id":"0:443:2594","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:236:2713":{"id":"0:236:2713","crate_id":0,"name":"set_intense","span":{"filename":"src/lib.rs","begin":[2004,4],"end":[2007,5]},"visibility":"public","docs":"Set whether the text is intense or not.\n\nOn Unix-like systems, this will output the ANSI escape sequence\nthat will print a high-intensity version of the color\nspecified.\n\nOn Windows systems, this will output the ANSI escape sequence\nthat will print a brighter version of the color specified.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2929:137":{"id":"2:2929:137","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:144":{"id":"0:144","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1200,0],"end":[1304,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Buffer","id":"0:378:2512","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:146:2543","0:147:2542","0:148:2518","0:149:997","0:150:2554","0:151:2558","0:152:2560","0:153:2562"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2931-0:508:2353":{"id":"b:2:2931-0:508:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"HyperlinkSpec","id":"0:508:2353","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2934:137","2:2935:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:282:2373":{"id":"0:282:2373","crate_id":0,"name":"AlwaysAnsi","span":{"filename":"src/lib.rs","begin":[258,4],"end":[258,14]},"visibility":"default","docs":"AlwaysAnsi is like Always, except it never tries to use anything other\nthan emitting ANSI color codes.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:456:2629":{"id":"0:456:2629","crate_id":0,"name":"Yellow","span":{"filename":"src/lib.rs","begin":[2078,4],"end":[2078,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:13:2314":{"id":"0:13:2314","crate_id":0,"name":"WriteColor","span":{"filename":"src/lib.rs","begin":[134,0],"end":[199,1]},"visibility":"public","docs":"This trait describes the behavior of writers that support colored output.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:14:2316","0:15:2322","0:16:2330","0:17:2340","0:18:2351","0:19:2357"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3643:2309","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:20","0:29","0:82","0:209","0:193","0:104","0:93","0:157","0:174"]}}},"0:32:2357":{"id":"0:32:2357","crate_id":0,"name":"supports_hyperlinks","span":{"filename":"src/lib.rs","begin":[226,4],"end":[228,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3758-0:279:2367":{"id":"b:2:3758-0:279:2367","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3756:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3760:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42097:3392-0:340:2437":{"id":"a:2:42097:3392-0:340:2437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42097:3392","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferedStandardStream","id":"0:340:2437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:160:2322":{"id":"0:160:2322","crate_id":0,"name":"set_color","span":{"filename":"src/lib.rs","begin":[1350,4],"end":[1357,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["spec",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2931-0:396:2441":{"id":"b:2:2931-0:396:2441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoColor","id":"0:396:2441","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2934:137","2:2935:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3758-0:340:2437":{"id":"b:2:3758-0:340:2437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3756:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferedStandardStream","id":"0:340:2437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3760:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:40:136":{"id":"0:40:136","crate_id":0,"name":"Err","span":{"filename":"src/lib.rs","begin":[275,4],"end":[275,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:298:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:13196:997":{"id":"2:13196:997","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12341:471"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13295:33893":{"id":"2:13295:33893","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12341:471","self::pattern":"2:12885:3160"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3154","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12891:3154","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12911:3153","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:34:2351":{"id":"0:34:2351","crate_id":0,"name":"set_hyperlink","span":{"filename":"src/lib.rs","begin":[232,4],"end":[234,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["link",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"HyperlinkSpec","id":"0:508:2353","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2931-0:298:2381":{"id":"b:2:2931-0:298:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:298:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2934:137","2:2935:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2931-0:330:2426":{"id":"b:2:2931-0:330:2426","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStream","id":"0:330:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2934:137","2:2935:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:508:2353":{"id":"0:508:2353","crate_id":0,"name":"HyperlinkSpec","span":{"filename":"src/lib.rs","begin":[2269,0],"end":[2271,1]},"visibility":"public","docs":"A hyperlink specification.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:256","a:2:3139:247-0:508:2353","a:2:42098:3391-0:508:2353","a:2:32294:3249-0:508:2353","a:2:42097:3392-0:508:2353","a:2:3174:3596-0:508:2353","a:2:32235:237-0:508:2353","b:2:2646-0:508:2353","b:2:2643-0:508:2353","b:2:2920-0:508:2353","b:2:2916-0:508:2353","b:2:2926-0:508:2353","b:2:3758-0:508:2353","b:2:2931-0:508:2353","b:5:738-0:508:2353","0:514","0:511"]}}},"0:450:2624":{"id":"0:450:2624","crate_id":0,"name":"Red","span":{"filename":"src/lib.rs","begin":[2075,4],"end":[2075,7]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:13324:28689":{"id":"2:13324:28689","crate_id":2,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:991:38380"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13198:33876":{"id":"2:13198:33876","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:28:2340":{"id":"0:28:2340","crate_id":0,"name":"is_synchronous","span":{"filename":"src/lib.rs","begin":[217,4],"end":[219,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2916-0:480:2740":{"id":"b:2:2916-0:480:2740","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:480:2740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2919:3632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:224:2679":{"id":"0:224:2679","crate_id":0,"name":"set_bold","span":{"filename":"src/lib.rs","begin":[1892,4],"end":[1895,5]},"visibility":"public","docs":"Set whether the text is bolded or not.\n\nNote that the bold setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13321:28159":{"id":"2:13321:28159","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:738-0:298:2381":{"id":"b:5:738-0:298:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:734:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:298:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:740:3695","5:741:3696","5:742:3697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:738-0:443:2594":{"id":"b:5:738-0:443:2594","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:734:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:443:2594","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:740:3695","5:741:3696","5:742:3697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13217:33881":{"id":"2:13217:33881","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12347:1721","crate::ops::IndexMut":"2:3417:3947","str::slice_unchecked":"2:13216:33880"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13223:2750":{"id":"2:13223:2750","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12341:471"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43865:3169","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13218:28823":{"id":"2:13218:28823","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_checked`](str::split_at_checked).\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_checked":"2:13220:28827","str::split_at_mut":"2:13219:28824"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13284:33887":{"id":"2:13284:33887","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12885:3160","`DoubleEndedIterator`":"2:8263:129","prim@char":"1:12341:471","str::match_indices":"2:13281:33886"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:44063:3179","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3154","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12891:3154","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12906:3155","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:35:2330":{"id":"0:35:2330","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[235,4],"end":[237,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:339:802":{"id":"0:339:802","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[500,9],"end":[500,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32294:3249-0:340:2437":{"id":"a:2:32294:3249-0:340:2437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32294:3249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferedStandardStream","id":"0:340:2437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:168:2469":{"id":"0:168:2469","crate_id":0,"name":"get_ref","span":{"filename":"src/lib.rs","begin":[1402,4],"end":[1404,5]},"visibility":"public","docs":"Return a reference to the inner writer.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"W"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2646-0:396:2441":{"id":"b:2:2646-0:396:2441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2640:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoColor","id":"0:396:2441","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2648:26275"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3174:3596-0:334:2434":{"id":"a:2:3174:3596-0:334:2434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3174:3596","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStreamLock","id":"0:334:2434","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:137":{"id":"0:137","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1033,0],"end":[1169,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"BufferWriter","id":"0:371:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:139:2414","0:140:2415","0:141:2494","0:142:2511","0:143:2517"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:153:2562":{"id":"0:153:2562","crate_id":0,"name":"as_mut_slice","span":{"filename":"src/lib.rs","begin":[1296,4],"end":[1303,5]},"visibility":"public","docs":"Return the underlying data of the buffer as a mutable slice.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5616":{"id":"5:5616","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5617:34594","5:5618:14693","5:5621:34595","5:5624:2383","5:5632:34596","5:5633:34597","5:5634:3142","5:5635:28156","5:5636:28157"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:303:802":{"id":"0:303:802","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[363,16],"end":[363,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:211:2357":{"id":"0:211:2357","crate_id":0,"name":"supports_hyperlinks","span":{"filename":"src/lib.rs","begin":[1686,4],"end":[1688,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:412:475":{"id":"0:412:475","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[1457,9],"end":[1457,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Ansi","id":"0:406:2442","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2920-0:340:2437":{"id":"b:2:2920-0:340:2437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferedStandardStream","id":"0:340:2437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2922:832"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:67":{"id":"0:67","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[543,0],"end":[580,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"StandardStream","id":"0:330:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:68:2414","0:69:2415","0:70:2417"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32235:237-0:480:2740":{"id":"a:2:32235:237-0:480:2740","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32235:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:480:2740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:438":{"id":"0:438","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1825,23],"end":[1825,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2698:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42098:3391-0:396:2441":{"id":"a:2:42098:3391-0:396:2441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42098:3391","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42098:3391","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoColor","id":"0:396:2441","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2926-0:508:2353":{"id":"b:2:2926-0:508:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2896:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"HyperlinkSpec","id":"0:508:2353","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2929:137","2:2930:1808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2926-0:279:2367":{"id":"b:2:2926-0:279:2367","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2896:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2929:137","2:2930:1808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2643-0:298:2381":{"id":"b:2:2643-0:298:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2637:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:298:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2645:3049"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:235:2586":{"id":"0:235:2586","crate_id":0,"name":"intense","span":{"filename":"src/lib.rs","begin":[1992,4],"end":[1994,5]},"visibility":"public","docs":"Get whether this is intense or not.\n\nOn Unix-like systems, this will output the ANSI escape sequence\nthat will print a high-intensity version of the color\nspecified.\n\nOn Windows systems, this will output the ANSI escape sequence\nthat will print a brighter version of the color specified.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:487":{"id":"0:487","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2190,23],"end":[2190,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2698:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:480:2740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:260:2589":{"id":"0:260:2589","crate_id":0,"name":"uri","span":{"filename":"src/lib.rs","begin":[2285,4],"end":[2287,5]},"visibility":"public","docs":"Returns the URI of the hyperlink if one is attached to this spec.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"primitive":"u8"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13278:33885":{"id":"2:13278:33885","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12885:3160","`DoubleEndedIterator`":"2:8263:129","prim@char":"1:12341:471","str::matches":"2:13275:3064"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:44117:3181","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3154","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12891:3154","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12906:3155","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2646-0:406:2442":{"id":"b:2:2646-0:406:2442","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2640:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Ansi","id":"0:406:2442","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2648:26275"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2916-0:298:2381":{"id":"b:2:2916-0:298:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:298:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2919:3632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5617:34594":{"id":"5:5617:34594","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:304:2360","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:304:2360","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:470":{"id":"0:470","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2070,9],"end":[2070,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:443:2594","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:471:475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2931-0:480:2740":{"id":"b:2:2931-0:480:2740","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:480:2740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2934:137","2:2935:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:96:2357":{"id":"0:96:2357","crate_id":0,"name":"supports_hyperlinks","span":{"filename":"src/lib.rs","begin":[762,4],"end":[764,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13328:9238":{"id":"2:13328:9238","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4952:9238"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:44203:3174","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42097:3392-0:330:2426":{"id":"a:2:42097:3392-0:330:2426","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42097:3392","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStream","id":"0:330:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2643-0:371:2492":{"id":"b:2:2643-0:371:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2637:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferWriter","id":"0:371:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2645:3049"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2926-0:424:2324":{"id":"b:2:2926-0:424:2324","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2896:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2929:137","2:2930:1808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:226:2683":{"id":"0:226:2683","crate_id":0,"name":"set_dimmed","span":{"filename":"src/lib.rs","begin":[1907,4],"end":[1910,5]},"visibility":"public","docs":"Set whether the text is dimmed or not.\n\nNote that the dimmed setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:26:2351":{"id":"0:26:2351","crate_id":0,"name":"set_hyperlink","span":{"filename":"src/lib.rs","begin":[211,4],"end":[213,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["link",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"HyperlinkSpec","id":"0:508:2353","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5866-0:298:2381":{"id":"b:5:5866-0:298:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10319:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5864:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:298:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5868:1781"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:141:2494":{"id":"0:141:2494","crate_id":0,"name":"separator","span":{"filename":"src/lib.rs","begin":[1113,4],"end":[1115,5]},"visibility":"public","docs":"If set, the separator given is printed between buffers. By default, no\nseparator is printed.\n\nThe default value is `None`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["sep",{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Vec","id":"5:7059:264","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:238:2554":{"id":"0:238:2554","crate_id":0,"name":"clear","span":{"filename":"src/lib.rs","begin":[2022,4],"end":[2031,5]},"visibility":"public","docs":"Clears this color specification so that it has no color/style settings.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:475":{"id":"0:475","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2070,29],"end":[2070,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2698:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:443:2594","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3758-0:443:2594":{"id":"b:2:3758-0:443:2594","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3756:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:443:2594","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3760:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:467:1975":{"id":"0:467:1975","crate_id":0,"name":"2","span":{"filename":"src/lib.rs","begin":[2081,16],"end":[2081,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"0:458:2631":{"id":"0:458:2631","crate_id":0,"name":"White","span":{"filename":"src/lib.rs","begin":[2079,4],"end":[2079,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:13208:28798":{"id":"2:13208:28798","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:42005:191"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10975:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10975:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:371:2492":{"id":"0:371:2492","crate_id":0,"name":"BufferWriter","span":{"filename":"src/lib.rs","begin":[1024,0],"end":[1031,1]},"visibility":"public","docs":"Writes colored buffers to stdout or stderr.\n\nWritable buffers can be obtained by calling `buffer` on a `BufferWriter`.\n\nThis writer works with terminals that support ANSI escape sequences or\nwith a Windows console.\n\nIt is intended for a `BufferWriter` to be put in an `Arc` and written to\nfrom multiple threads simultaneously.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:137","a:2:3139:247-0:371:2492","a:2:42098:3391-0:371:2492","a:2:32294:3249-0:371:2492","a:2:42097:3392-0:371:2492","a:2:3174:3596-0:371:2492","a:2:32235:237-0:371:2492","b:2:2646-0:371:2492","b:2:2643-0:371:2492","b:2:2920-0:371:2492","b:2:2916-0:371:2492","b:2:2926-0:371:2492","b:2:3758-0:371:2492","b:2:2931-0:371:2492","0:376"]}}},"0:170":{"id":"0:170","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1412,0],"end":[1422,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3643:2309","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["write_all_vectored","write_fmt","write_all","is_write_vectored","by_ref","write_vectored"],"trait":{"name":"Write","id":"1:3643:2309","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoColor","id":"0:396:2441","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["0:172:2401","0:173:2423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:209":{"id":"0:209","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1681,0],"end":[1701,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["is_synchronous","supports_hyperlinks","set_hyperlink"],"trait":{"name":"WriteColor","id":"0:13:2314","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"io::Sink","id":"1:8479:2636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:210:2316","0:211:2357","0:212:2322","0:213:2351","0:214:2330"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13304:28841":{"id":"2:13304:28841","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12341:471","self::pattern":"2:12885:3160"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3154","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12891:3154","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12906:3155","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:384:802":{"id":"0:384:802","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1182,16],"end":[1182,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5868:1781":{"id":"5:5868:1781","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7645:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2920-0:406:2442":{"id":"b:2:2920-0:406:2442","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Ansi","id":"0:406:2442","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2922:832"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2643-0:378:2512":{"id":"b:2:2643-0:378:2512","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2637:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Buffer","id":"0:378:2512","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2645:3049"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2926-0:378:2512":{"id":"b:2:2926-0:378:2512","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2896:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Buffer","id":"0:378:2512","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2929:137","2:2930:1808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3758-0:396:2441":{"id":"b:2:3758-0:396:2441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3756:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoColor","id":"0:396:2441","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:3760:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32294:3249-0:443:2594":{"id":"a:2:32294:3249-0:443:2594","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32294:3249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:443:2594","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:462:1973":{"id":"0:462:1973","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[2080,12],"end":[2080,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"0:230:2691":{"id":"0:230:2691","crate_id":0,"name":"set_underline","span":{"filename":"src/lib.rs","begin":[1937,4],"end":[1940,5]},"visibility":"public","docs":"Set whether the text is underlined or not.\n\nNote that the underline setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:738-0:396:2441":{"id":"b:5:738-0:396:2441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:734:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoColor","id":"0:396:2441","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["5:740:3695","5:741:3696","5:742:3697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:108:2351":{"id":"0:108:2351","crate_id":0,"name":"set_hyperlink","span":{"filename":"src/lib.rs","begin":[819,4],"end":[824,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["link",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"HyperlinkSpec","id":"0:508:2353","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2643-0:340:2437":{"id":"b:2:2643-0:340:2437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2637:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferedStandardStream","id":"0:340:2437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2645:3049"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:151:2558":{"id":"0:151:2558","crate_id":0,"name":"into_inner","span":{"filename":"src/lib.rs","begin":[1276,4],"end":[1283,5]},"visibility":"public","docs":"Consume this buffer and return the underlying raw data.\n\nOn Windows, this unrecoverably drops all color information associated\nwith the buffer.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Vec","id":"5:7059:264","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2920-0:298:2381":{"id":"b:2:2920-0:298:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:298:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2922:832"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32235:237-0:330:2426":{"id":"a:2:32235:237-0:330:2426","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32235:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStream","id":"0:330:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:101":{"id":"0:101","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[787,0],"end":[797,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["write_all_vectored","write_fmt","write_all","is_write_vectored","by_ref","write_vectored"],"trait":{"name":"Write","id":"1:3643:2309","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferedStandardStream","id":"0:340:2437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:102:2401","0:103:2423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:738-0:406:2442":{"id":"b:5:738-0:406:2442","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:734:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Ansi","id":"0:406:2442","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["5:740:3695","5:741:3696","5:742:3697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32235:237-0:508:2353":{"id":"a:2:32235:237-0:508:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32235:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HyperlinkSpec","id":"0:508:2353","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:186:2469":{"id":"0:186:2469","crate_id":0,"name":"get_ref","span":{"filename":"src/lib.rs","begin":[1473,4],"end":[1475,5]},"visibility":"public","docs":"Return a reference to the inner writer.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"W"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2926-0:340:2437":{"id":"b:2:2926-0:340:2437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2896:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferedStandardStream","id":"0:340:2437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2929:137","2:2930:1808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:415:802":{"id":"0:415:802","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1457,16],"end":[1457,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:474:802":{"id":"0:474:802","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[2070,22],"end":[2070,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13260:33884":{"id":"2:13260:33884","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12885:3160","str::split":"2:13248:2746","prim@char":"1:12341:471","str::split_terminator":"2:13257:33883"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43963:3185","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3154","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12891:3154","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12906:3155","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:104":{"id":"0:104","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[799,0],"end":[835,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["is_synchronous","supports_hyperlinks","set_hyperlink"],"trait":{"name":"WriteColor","id":"0:13:2314","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferedStandardStream","id":"0:340:2437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:105:2316","0:106:2357","0:107:2322","0:108:2351","0:109:2330","0:110:2340"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:19:2357":{"id":"0:19:2357","crate_id":0,"name":"supports_hyperlinks","span":{"filename":"src/lib.rs","begin":[196,4],"end":[198,5]},"visibility":"default","docs":"Returns true if and only if the underlying writer supports hyperlinks.\n\nThis can be used to avoid generating hyperlink URIs unnecessarily.\n\nThis defaults to `false`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3174:3596-0:330:2426":{"id":"a:2:3174:3596-0:330:2426","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3174:3596","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStream","id":"0:330:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:300":{"id":"0:300","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[363,9],"end":[363,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:298:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:301:475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42097:3392-0:378:2512":{"id":"a:2:42097:3392-0:378:2512","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42097:3392","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Buffer","id":"0:378:2512","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42097:3392-0:424:2324":{"id":"a:2:42097:3392-0:424:2324","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42097:3392","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2916-0:424:2324":{"id":"b:2:2916-0:424:2324","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2919:3632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2926-0:480:2740":{"id":"b:2:2926-0:480:2740","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2896:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:480:2740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2929:137","2:2930:1808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2931-0:371:2492":{"id":"b:2:2931-0:371:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferWriter","id":"0:371:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2934:137","2:2935:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:79":{"id":"0:79","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[699,0],"end":[709,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["write_all_vectored","write_fmt","write_all","is_write_vectored","by_ref","write_vectored"],"trait":{"name":"Write","id":"1:3643:2309","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStream","id":"0:330:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:80:2401","0:81:2423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2643-0:480:2740":{"id":"b:2:2643-0:480:2740","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2637:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:480:2740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2645:3049"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2922:832":{"id":"2:2922:832","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13197:2518":{"id":"2:13197:2518","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2935:1806":{"id":"2:2935:1806","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:42136:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:213:2351":{"id":"0:213:2351","crate_id":0,"name":"set_hyperlink","span":{"filename":"src/lib.rs","begin":[1694,4],"end":[1696,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["_",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"HyperlinkSpec","id":"0:508:2353","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2930:1808":{"id":"2:2930:1808","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:42136:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13254:28832":{"id":"2:13254:28832","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12885:3160","`DoubleEndedIterator`":"2:8263:129","prim@char":"1:12341:471","str::split":"2:13248:2746"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43913:3182","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3154","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12891:3154","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12906:3155","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:279:2367":{"id":"0:279:2367","crate_id":0,"name":"ColorChoice","span":{"filename":"src/lib.rs","begin":[252,0],"end":[265,1]},"visibility":"public","docs":"ColorChoice represents the color preferences of an end user.\n\nThe `Default` implementation for this type will select `Auto`, which tries\nto do the right thing based on the current environment.\n\nThe `FromStr` implementation for this type converts a lowercase kebab-case\nstring of the variant name to the corresponding variant. Any other string\nresults in an error.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:280:2370","0:282:2373","0:284:2377","0:286:2379"],"impls":["a:2:3139:247-0:279:2367","a:2:42098:3391-0:279:2367","a:2:32294:3249-0:279:2367","a:2:42097:3392-0:279:2367","a:2:3174:3596-0:279:2367","a:2:32235:237-0:279:2367","b:2:2646-0:279:2367","b:2:2643-0:279:2367","b:2:2920-0:279:2367","b:2:2916-0:279:2367","b:2:2926-0:279:2367","b:2:3758-0:279:2367","b:2:2931-0:279:2367","b:5:738-0:279:2367","0:37","0:288","0:39","0:290","0:291","0:295","0:293","0:296"]}}},"b:2:2646-0:334:2434":{"id":"b:2:2646-0:334:2434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2640:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStreamLock","id":"0:334:2434","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2648:26275"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2931-0:443:2594":{"id":"b:2:2931-0:443:2594","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:443:2594","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2934:137","2:2935:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:106:2357":{"id":"0:106:2357","crate_id":0,"name":"supports_hyperlinks","span":{"filename":"src/lib.rs","begin":[806,4],"end":[808,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13307:33895":{"id":"2:13307:33895","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12341:471","self::pattern":"2:12885:3160"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3154","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12891:3154","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12906:3155","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32235:237-0:340:2437":{"id":"a:2:32235:237-0:340:2437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32235:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferedStandardStream","id":"0:340:2437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:41:2382":{"id":"0:41:2382","crate_id":0,"name":"from_str","span":{"filename":"src/lib.rs","begin":[277,4],"end":[287,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42136:226","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ColorChoice","id":"0:279:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:298:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3139:247-0:330:2426":{"id":"a:2:3139:247-0:330:2426","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3139:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStream","id":"0:330:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32294:3249-0:424:2324":{"id":"a:2:32294:3249-0:424:2324","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32294:3249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13227:31954":{"id":"2:13227:31954","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:13226:31944"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:44178:3162","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3758-0:371:2492":{"id":"b:2:3758-0:371:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3756:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferWriter","id":"0:371:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3760:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3174:3596-0:443:2594":{"id":"a:2:3174:3596-0:443:2594","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3174:3596","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:443:2594","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:435:475":{"id":"0:435:475","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[1825,9],"end":[1825,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:46":{"id":"0:46","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[370,0],"end":[379,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10319:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:298:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:47:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:330:2426":{"id":"0:330:2426","crate_id":0,"name":"StandardStream","span":{"filename":"src/lib.rs","begin":[489,0],"end":[491,1]},"visibility":"public","docs":"Satisfies `io::Write` and `WriteColor`, and supports optional coloring\nto either of the standard output streams, stdout and stderr.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:67","a:2:3139:247-0:330:2426","a:2:42098:3391-0:330:2426","a:2:32294:3249-0:330:2426","a:2:42097:3392-0:330:2426","a:2:3174:3596-0:330:2426","a:2:32235:237-0:330:2426","b:2:2646-0:330:2426","b:2:2643-0:330:2426","b:2:2920-0:330:2426","b:2:2916-0:330:2426","b:2:2926-0:330:2426","b:2:3758-0:330:2426","b:2:2931-0:330:2426","0:79","0:82","0:332"]}}},"5:5634:3142":{"id":"5:5634:3142","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7645:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7645:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:448:2623":{"id":"0:448:2623","crate_id":0,"name":"Green","span":{"filename":"src/lib.rs","begin":[2074,4],"end":[2074,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:3758-0:298:2381":{"id":"b:2:3758-0:298:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3756:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:298:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3760:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2643-0:406:2442":{"id":"b:2:2643-0:406:2442","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2637:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Ansi","id":"0:406:2442","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2645:3049"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13205:33879":{"id":"2:13205:33879","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3758-0:480:2740":{"id":"b:2:3758-0:480:2740","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3756:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:480:2740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3760:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:80:2401":{"id":"0:80:2401","crate_id":0,"name":"write","span":{"filename":"src/lib.rs","begin":[701,4],"end":[703,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["b",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:284:2377":{"id":"0:284:2377","crate_id":0,"name":"Auto","span":{"filename":"src/lib.rs","begin":[262,4],"end":[262,8]},"visibility":"default","docs":"Try to use colors, but don't force the issue. If the console isn't\navailable on Windows, or if TERM=dumb, or if `NO_COLOR` is defined, for\nexample, then don't use colors.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:3760:1821":{"id":"2:3760:1821","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39718:7096","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:167:2558":{"id":"0:167:2558","crate_id":0,"name":"into_inner","span":{"filename":"src/lib.rs","begin":[1397,4],"end":[1399,5]},"visibility":"public","docs":"Consume this `NoColor` value and return the inner writer.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"W"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3758-0:508:2353":{"id":"b:2:3758-0:508:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3756:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HyperlinkSpec","id":"0:508:2353","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3760:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32294:3249-0:330:2426":{"id":"a:2:32294:3249-0:330:2426","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32294:3249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStream","id":"0:330:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2648:26275":{"id":"2:2648:26275","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:150:2554":{"id":"0:150:2554","crate_id":0,"name":"clear","span":{"filename":"src/lib.rs","begin":[1263,4],"end":[1270,5]},"visibility":"public","docs":"Clears this buffer.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:88:2340":{"id":"0:88:2340","crate_id":0,"name":"is_synchronous","span":{"filename":"src/lib.rs","begin":[738,4],"end":[740,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:259:2780":{"id":"0:259:2780","crate_id":0,"name":"close","span":{"filename":"src/lib.rs","begin":[2280,4],"end":[2282,5]},"visibility":"public","docs":"Creates a hyperlink specification representing no hyperlink.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"HyperlinkSpec","id":"0:508:2353","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:210:2316":{"id":"0:210:2316","crate_id":0,"name":"supports_color","span":{"filename":"src/lib.rs","begin":[1682,4],"end":[1684,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:87:2330":{"id":"0:87:2330","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[733,4],"end":[735,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5618:14693":{"id":"5:5618:14693","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7645:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7645:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3154","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:486:802":{"id":"0:486:802","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[2190,16],"end":[2190,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10288:143","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10269:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:250":{"id":"0:250","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2221,0],"end":[2247,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10319:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:480:2740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:251:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32294:3249-0:298:2381":{"id":"a:2:32294:3249-0:298:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32294:3249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:298:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:5866-0:480:2740":{"id":"b:5:5866-0:480:2740","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10319:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5864:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:480:2740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5868:1781"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:179:2351":{"id":"0:179:2351","crate_id":0,"name":"set_hyperlink","span":{"filename":"src/lib.rs","begin":[1441,4],"end":[1443,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["_",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"HyperlinkSpec","id":"0:508:2353","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:738-0:480:2740":{"id":"b:5:738-0:480:2740","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:734:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:480:2740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:740:3695","5:741:3696","5:742:3697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2645:3049":{"id":"2:2645:3049","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:102:2401":{"id":"0:102:2401","crate_id":0,"name":"write","span":{"filename":"src/lib.rs","begin":[789,4],"end":[791,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["b",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:434":{"id":"0:434","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1825,9],"end":[1825,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:435:475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3174:3596-0:279:2367":{"id":"a:2:3174:3596-0:279:2367","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3174:3596","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2926-0:443:2594":{"id":"b:2:2926-0:443:2594","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2896:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:443:2594","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2929:137","2:2930:1808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13201:33878":{"id":"2:13201:33878","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:13199:33877"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2646-0:279:2367":{"id":"b:2:2646-0:279:2367","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2640:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2648:26275"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2646-0:298:2381":{"id":"b:2:2646-0:298:2381","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2640:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:298:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2648:26275"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32294:3249-0:406:2442":{"id":"a:2:32294:3249-0:406:2442","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32294:3249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32294:3249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Ansi","id":"0:406:2442","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:231:2582":{"id":"0:231:2582","crate_id":0,"name":"strikethrough","span":{"filename":"src/lib.rs","begin":[1945,4],"end":[1947,5]},"visibility":"public","docs":"Get whether this is strikethrough or not.\n\nNote that the strikethrough setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:191:2519":{"id":"0:191:2519","crate_id":0,"name":"write_all","span":{"filename":"src/lib.rs","begin":[1496,4],"end":[1498,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:446:2621":{"id":"0:446:2621","crate_id":0,"name":"Blue","span":{"filename":"src/lib.rs","begin":[2073,4],"end":[2073,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:289:475":{"id":"0:289:475","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[251,9],"end":[251,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ColorChoice","id":"0:279:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:139:2414":{"id":"0:139:2414","crate_id":0,"name":"stdout","span":{"filename":"src/lib.rs","begin":[1093,4],"end":[1095,5]},"visibility":"public","docs":"Create a new `BufferWriter` that writes to stdout with the given\ncolor preferences.\n\nOn Windows, if coloring is desired and a Windows console could not be\nfound, then ANSI escape sequences are used instead.\n\nThe specific color/style settings can be configured when writing to\nthe buffers themselves.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["choice",{"resolved_path":{"name":"ColorChoice","id":"0:279:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"BufferWriter","id":"0:371:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2916-0:443:2594":{"id":"b:2:2916-0:443:2594","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:443:2594","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2919:3632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2646-0:424:2324":{"id":"b:2:2646-0:424:2324","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2640:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2648:26275"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:436":{"id":"0:436","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1825,16],"end":[1825,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10314:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:437:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:110:2340":{"id":"0:110:2340","crate_id":0,"name":"is_synchronous","span":{"filename":"src/lib.rs","begin":[832,4],"end":[834,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:91:2401":{"id":"0:91:2401","crate_id":0,"name":"write","span":{"filename":"src/lib.rs","begin":[745,4],"end":[747,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["b",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:741:3696":{"id":"5:741:3696","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:484:475":{"id":"0:484:475","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[2190,9],"end":[2190,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParseColorError","id":"0:480:2740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:440":{"id":"0:440","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1825,27],"end":[1825,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32237:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:155:2401":{"id":"0:155:2401","crate_id":0,"name":"write","span":{"filename":"src/lib.rs","begin":[1308,4],"end":[1315,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:169:2569":{"id":"0:169:2569","crate_id":0,"name":"get_mut","span":{"filename":"src/lib.rs","begin":[1407,4],"end":[1409,5]},"visibility":"public","docs":"Return a mutable reference to the inner writer.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"W"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2646-0:340:2437":{"id":"b:2:2646-0:340:2437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2640:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferedStandardStream","id":"0:340:2437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2648:26275"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2643-0:508:2353":{"id":"b:2:2643-0:508:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2637:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"HyperlinkSpec","id":"0:508:2353","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2645:3049"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3174:3596-0:396:2441":{"id":"a:2:3174:3596-0:396:2441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"2:3174:3596","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3174:3596","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoColor","id":"0:396:2441","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13319:28685":{"id":"2:13319:28685","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39904:14637","Self::is_ascii":"2:13318:28154"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42003:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39904:14637","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:29":{"id":"0:29","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[222,0],"end":[241,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"WriteColor","id":"0:13:2314","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_synchronous","supports_hyperlinks","set_hyperlink"],"trait":{"name":"WriteColor","id":"0:13:2314","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Box","id":"5:304:2360","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:31:2316","0:32:2357","0:33:2322","0:34:2351","0:35:2330","0:36:2340"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:25:2322":{"id":"0:25:2322","crate_id":0,"name":"set_color","span":{"filename":"src/lib.rs","begin":[208,4],"end":[210,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["spec",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:93":{"id":"0:93","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[755,0],"end":[785,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["is_synchronous","supports_hyperlinks","set_hyperlink"],"trait":{"name":"WriteColor","id":"0:13:2314","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStreamLock","id":"0:334:2434","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:95:2316","0:96:2357","0:97:2322","0:98:2351","0:99:2330","0:100:2340"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32235:237-0:279:2367":{"id":"a:2:32235:237-0:279:2367","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32235:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:173:2423":{"id":"0:173:2423","crate_id":0,"name":"flush","span":{"filename":"src/lib.rs","begin":[1419,4],"end":[1421,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42097:3392-0:480:2740":{"id":"a:2:42097:3392-0:480:2740","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42097:3392","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:480:2740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2916-0:508:2353":{"id":"b:2:2916-0:508:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"HyperlinkSpec","id":"0:508:2353","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2919:3632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2920-0:378:2512":{"id":"b:2:2920-0:378:2512","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Buffer","id":"0:378:2512","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2922:832"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:383":{"id":"0:383","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1182,16],"end":[1182,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10314:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Buffer","id":"0:378:2512","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:384:802"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32235:237-0:396:2441":{"id":"a:2:32235:237-0:396:2441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32235:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32235:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoColor","id":"0:396:2441","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:229:2580":{"id":"0:229:2580","crate_id":0,"name":"underline","span":{"filename":"src/lib.rs","begin":[1930,4],"end":[1932,5]},"visibility":"public","docs":"Get whether this is underline or not.\n\nNote that the underline setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2931-0:340:2437":{"id":"b:2:2931-0:340:2437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferedStandardStream","id":"0:340:2437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2934:137","2:2935:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3139:247-0:396:2441":{"id":"a:2:3139:247-0:396:2441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3139:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3139:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoColor","id":"0:396:2441","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13216:33880":{"id":"2:13216:33880","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12347:1721","str::slice_mut_unchecked":"2:13217:33881","crate::ops::Index":"2:39549:3946"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:81:2423":{"id":"0:81:2423","crate_id":0,"name":"flush","span":{"filename":"src/lib.rs","begin":[706,4],"end":[708,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13195":{"id":"2:13195","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:13196:997","2:13197:2518","2:13198:33876","2:13199:33877","2:13201:33878","2:13204:2592","2:13205:33879","2:13206:336","2:13207:28801","2:13208:28798","2:13210:2569","2:13212:28799","2:13214:28800","2:13216:33880","2:13217:33881","2:13218:28823","2:13219:28824","2:13220:28827","2:13221:28828","2:13223:2750","2:13224:7348","2:13225:6922","2:13226:31944","2:13227:31954","2:13228:28272","2:13229:33882","2:13230:31940","2:13231:2757","2:13234:2742","2:13237:28840","2:13240:3675","2:13244:3638","2:13248:2746","2:13251:28830","2:13254:28832","2:13257:33883","2:13260:33884","2:13263:28834","2:13266:28836","2:13269:28838","2:13272:28839","2:13275:3064","2:13278:33885","2:13281:33886","2:13284:33887","2:13287:33888","2:13289:33889","2:13291:33890","2:13293:33891","2:13294:33892","2:13295:33893","2:13298:33894","2:13301:26424","2:13304:28841","2:13307:33895","2:13310:33896","2:13313:33897","2:13316:2792","2:13318:28154","2:13319:28685","2:13320:28158","2:13321:28159","2:13322:28160","2:13323:28688","2:13324:28689","2:13325:28690","2:13326:33898","2:13328:9238","2:13329:33899"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2934:137":{"id":"2:2934:137","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32159:5739","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:82":{"id":"0:82","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[711,0],"end":[741,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["is_synchronous","supports_hyperlinks","set_hyperlink"],"trait":{"name":"WriteColor","id":"0:13:2314","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStream","id":"0:330:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:83:2316","0:84:2357","0:85:2322","0:86:2351","0:87:2330","0:88:2340"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:89":{"id":"0:89","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[743,0],"end":[753,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["write_all_vectored","write_fmt","write_all","is_write_vectored","by_ref","write_vectored"],"trait":{"name":"Write","id":"1:3643:2309","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStreamLock","id":"0:334:2434","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:91:2401","0:92:2423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13281:33886":{"id":"2:13281:33886","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12885:3160","`DoubleEndedIterator`":"2:8263:129","prim@char":"1:12341:471","str::rmatch_indices":"2:13284:33887"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:44045:3178","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3154","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:83:2316":{"id":"0:83:2316","crate_id":0,"name":"supports_color","span":{"filename":"src/lib.rs","begin":[713,4],"end":[715,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:182":{"id":"0:182","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1460,0],"end":[1481,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Write","id":"1:3643:2309","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Ansi","id":"0:406:2442","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["0:184:1178","0:185:2558","0:186:2469","0:187:2569"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:478":{"id":"0:478","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2070,33],"end":[2070,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2693:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:443:2594","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:479:699"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5621:34595":{"id":"5:5621:34595","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7645:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7645:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3154","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2920-0:443:2594":{"id":"b:2:2920-0:443:2594","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:443:2594","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2922:832"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:68:2414":{"id":"0:68:2414","crate_id":0,"name":"stdout","span":{"filename":"src/lib.rs","begin":[552,4],"end":[555,5]},"visibility":"public","docs":"Create a new `StandardStream` with the given color preferences that\nwrites to standard output.\n\nOn Windows, if coloring is desired and a Windows console could not be\nfound, then ANSI escape sequences are used instead.\n\nThe specific color/style settings can be configured when writing via\nthe `WriteColor` trait.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["choice",{"resolved_path":{"name":"ColorChoice","id":"0:279:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"StandardStream","id":"0:330:2426","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3139:247-0:334:2434":{"id":"a:2:3139:247-0:334:2434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3139:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStreamLock","id":"0:334:2434","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13212:28799":{"id":"2:13212:28799","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10975:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10975:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:15:2322":{"id":"0:15:2322","crate_id":0,"name":"set_color","span":{"filename":"src/lib.rs","begin":[145,4],"end":[145,64]},"visibility":"default","docs":"Set the color settings of the writer.\n\nSubsequent writes to this writer will use these settings until either\n`reset` is called or new color settings are set.\n\nIf there was a problem setting the color settings, then an error is\nreturned.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["spec",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:2:2916-0:279:2367":{"id":"b:2:2916-0:279:2367","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2919:3632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:444:2620":{"id":"0:444:2620","crate_id":0,"name":"Black","span":{"filename":"src/lib.rs","begin":[2072,4],"end":[2072,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:3758-0:378:2512":{"id":"b:2:3758-0:378:2512","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3756:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Buffer","id":"0:378:2512","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3760:1821"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:97:2322":{"id":"0:97:2322","crate_id":0,"name":"set_color","span":{"filename":"src/lib.rs","begin":[767,4],"end":[769,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["spec",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:228:2687":{"id":"0:228:2687","crate_id":0,"name":"set_italic","span":{"filename":"src/lib.rs","begin":[1922,4],"end":[1925,5]},"visibility":"public","docs":"Set whether the text is italicized or not.\n\nNote that the italic setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:489":{"id":"0:489","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2190,27],"end":[2190,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32237:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:480:2740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:184:1178":{"id":"0:184:1178","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[1463,4],"end":[1465,5]},"visibility":"public","docs":"Create a new writer that satisfies `WriteColor` using standard ANSI\nescape sequences.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["wtr",{"generic":"W"}]],"output":{"resolved_path":{"name":"Ansi","id":"0:406:2442","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3174:3596-0:340:2437":{"id":"a:2:3174:3596-0:340:2437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3174:3596","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferedStandardStream","id":"0:340:2437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:31:2316":{"id":"0:31:2316","crate_id":0,"name":"supports_color","span":{"filename":"src/lib.rs","begin":[223,4],"end":[225,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:293":{"id":"0:293","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,29],"end":[251,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2698:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42098:3391-0:406:2442":{"id":"a:2:42098:3391-0:406:2442","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42098:3391","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42098:3391","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Ansi","id":"0:406:2442","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2919:3632":{"id":"2:2919:3632","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2893:144"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2931-0:334:2434":{"id":"b:2:2931-0:334:2434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStreamLock","id":"0:334:2434","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2934:137","2:2935:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:472":{"id":"0:472","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2070,16],"end":[2070,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3134:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:443:2594","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:98:2351":{"id":"0:98:2351","crate_id":0,"name":"set_hyperlink","span":{"filename":"src/lib.rs","begin":[772,4],"end":[774,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["link",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"HyperlinkSpec","id":"0:508:2353","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2646-0:443:2594":{"id":"b:2:2646-0:443:2594","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2640:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:443:2594","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2648:26275"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2926-0:406:2442":{"id":"b:2:2926-0:406:2442","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2896:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Ansi","id":"0:406:2442","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2929:137","2:2930:1808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13230:31940":{"id":"2:13230:31940","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:44187:3161","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13228:28272":{"id":"2:13228:28272","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:44149:3118","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2643-0:424:2324":{"id":"b:2:2643-0:424:2324","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32236:2359","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2637:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2645:3049"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:45":{"id":"0:45","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[368,0],"end":[368,51]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["source","type_id","cause","description","provide"],"trait":{"name":"Error","id":"2:2979:137","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:298:2381","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:477":{"id":"0:477","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2070,33],"end":[2070,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32237:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:443:2594","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2920-0:396:2441":{"id":"b:2:2920-0:396:2441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoColor","id":"0:396:2441","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2922:832"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13214:28800":{"id":"2:13214:28800","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10975:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10975:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32294:3249-0:480:2740":{"id":"a:2:32294:3249-0:480:2740","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32294:3249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:480:2740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13313:33897":{"id":"2:13313:33897","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12341:471","self::pattern":"2:12885:3160"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12891:3154","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12891:3154","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12906:3155","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:199:2330":{"id":"0:199:2330","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[1556,4],"end":[1558,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:159:2357":{"id":"0:159:2357","crate_id":0,"name":"supports_hyperlinks","span":{"filename":"src/lib.rs","begin":[1340,4],"end":[1347,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2920-0:279:2367":{"id":"b:2:2920-0:279:2367","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2922:832"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32235:237-0:334:2434":{"id":"a:2:32235:237-0:334:2434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32235:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStreamLock","id":"0:334:2434","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:234:2705":{"id":"0:234:2705","crate_id":0,"name":"set_reset","span":{"filename":"src/lib.rs","begin":[1979,4],"end":[1982,5]},"visibility":"public","docs":"Set whether to reset the terminal whenever color settings are applied.\n\nreset is enabled by default. When disabled and using ANSI escape\nsequences, a \"reset\" code will be emitted every time a `ColorSpec`'s\nsettings are applied.\n\nTypically this is useful if callers have a requirement to more\nscrupulously manage the exact sequence of escape codes that are emitted\nwhen using ANSI for colors.\n\nNote that the reset setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2931-0:279:2367":{"id":"b:2:2931-0:279:2367","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2900:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2934:137","2:2935:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2916-0:378:2512":{"id":"b:2:2916-0:378:2512","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2890:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Buffer","id":"0:378:2512","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2919:3632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:410":{"id":"0:410","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1457,9],"end":[1457,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Ansi","id":"0:406:2442","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["0:412:475"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32294:3249-0:371:2492":{"id":"a:2:32294:3249-0:371:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32294:3249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferWriter","id":"0:371:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:146:2543":{"id":"0:146:2543","crate_id":0,"name":"no_color","span":{"filename":"src/lib.rs","begin":[1232,4],"end":[1234,5]},"visibility":"public","docs":"Create a buffer that drops all color information.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Buffer","id":"0:378:2512","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:471:475":{"id":"0:471:475","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[2070,9],"end":[2070,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Color","id":"0:443:2594","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2920-0:334:2434":{"id":"b:2:2920-0:334:2434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2893:144","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStreamLock","id":"0:334:2434","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2922:832"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42098:3391-0:279:2367":{"id":"a:2:42098:3391-0:279:2367","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42098:3391","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:738-0:424:2324":{"id":"b:5:738-0:424:2324","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2659:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:734:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorSpec","id":"0:424:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:740:3695","5:741:3696","5:742:3697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:161:2351":{"id":"0:161:2351","crate_id":0,"name":"set_hyperlink","span":{"filename":"src/lib.rs","begin":[1360,4],"end":[1367,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["link",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"HyperlinkSpec","id":"0:508:2353","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3059:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:296":{"id":"0:296","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,33],"end":[251,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2693:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:2367","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:297:699"],"negative":false,"synthetic":false,"blanket_impl":null}}}},"paths":{"6:5014:6176":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"1:11682:8118":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"17:11583:7855":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"2:34394:5510":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"5:5466:3158":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"1:8498:3117":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"16:5863:21989":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"1:10898:8160":{"crate_id":1,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"5:2220:6891":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"5:4252:3096":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"18:531:4056":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"2:45909:7394":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2:10530:153":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"5:3674:7993":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"17:12056:4301":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"2:42729:3702":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"2:32295:3600":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"2:3174:3596":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"5:3039:3695":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"11:1887:3642":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"2:43802:8072":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"5:1340:7989":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"6:7485:6776":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"2:40827:7259":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"2:45947:7400":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"6:491:5838":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"1:674:9240":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"16:5742:5289":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"14:7:7975":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"1:9337:7619":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"6:8006:6848":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"17:15058:4857":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"2:5296:977":{"crate_id":2,"path":["core","iter"],"kind":"module"},"16:4424:5263":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"2:40508:7235":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"0:286:2379":{"crate_id":0,"path":["termcolor","ColorChoice","Never"],"kind":"variant"},"1:12341:471":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"12:0:2954":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"2:47117:7502":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"16:5897:5307":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"2:21669:9306":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"17:9938:22058":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"2:2537:14726":{"crate_id":2,"path":["core","ptr","with_exposed_provenance"],"kind":"function"},"17:15521:5002":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"6:5277:6266":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:38146:14710":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"2:11431:8043":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:44878:7379":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"17:12043:7871":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"6:1510:5910":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"2:2637:102":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"1:4688:9365":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"1:11108:28216":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"17:14489:4668":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"17:15655:5030":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"2:33462:9412":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"11:2383:5727":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"6:5306:6278":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"6:538:5870":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"2:11289:8041":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"6:1671:6017":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:46154:7420":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"2:2698:134":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"16:4976:5280":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"17:10612:7820":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"6:5212:6232":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"17:11214:7834":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"17:14341:4640":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"16:4560:5267":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"17:14311:4635":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"17:12107:4239":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"17:15445:4957":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"16:3925:5260":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"6:8029:6860":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"9:447:20977":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"17:14402:4651":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"17:13674:4500":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"17:14414:4653":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"17:14298:4634":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"2:44891:32079":{"crate_id":2,"path":["core","task","wake","ExtData"],"kind":"enum"},"6:7984:6847":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"2:26051:267":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"2:3144:2451":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"16:2548:5212":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"2:22279:9306":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"17:11661:4254":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"2:21583:3612":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"2:2864:14636":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:6712:3221":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"5:2322:6900":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"2:46285:7427":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"2:44327:7349":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"16:7473:5337":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"2:9461:3154":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"2:43469:7324":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"2:12959:14583":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"17:12969:4371":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"2:6084:6944":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:8631:7587":{"crate_id":1,"path":["std","os","unix","net","ucred","UCred"],"kind":"struct"},"17:10170:4202":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"1:4217:9344":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"16:3669:4100":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"0:334:2434":{"crate_id":0,"path":["termcolor","StandardStreamLock"],"kind":"struct"},"17:15418:4950":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"16:6427:7938":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"1:4400:8098":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"17:15456:4958":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"16:2878:5227":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:22560:14726":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","with_exposed_provenance"],"kind":"function"},"17:10759:4239":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"18:698:4079":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"2:32766:5504":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"2:43812:6967":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"2:5216:32015":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"16:4830:5275":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"1:947:7981":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"1:10976:3116":{"crate_id":1,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"16:6560:5231":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"17:597:4198":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"16:2572:5213":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"9:238:7318":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"0:443:2594":{"crate_id":0,"path":["termcolor","Color"],"kind":"enum"},"1:10334:3848":{"crate_id":1,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"6:7575:6835":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"17:10524:7819":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"16:2768:5222":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"6:6689:6609":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"2:40401:7232":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:12900:3156":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"16:4718:5271":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"5:4162:7993":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"2:42031:5727":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"6:5536:6377":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"6:8012:6850":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"16:5385:4201":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:43780:8071":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"6:5200:6225":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"5:3820:8008":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"6:6409:6471":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"1:8606:7586":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"17:14516:4672":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"17:13946:4564":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"16:7061:5480":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"17:15390:4943":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"15:306:21083":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"17:15116:4871":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"17:11313:4236":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"16:4940:5279":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"5:7449:3642":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"16:2338:5196":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"2:23100:7010":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU32Inner"],"kind":"struct"},"17:13437:4451":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"6:6756:6636":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"1:3586:3105":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"0:454:2627":{"crate_id":0,"path":["termcolor","Color","Magenta"],"kind":"variant"},"1:1083:7988":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"6:5219:6233":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"1:9551:3854":{"crate_id":1,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"1:11764:28004":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"16:7910:22001":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"1:11005:3859":{"crate_id":1,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"1:3291:28668":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:44621:7366":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"17:261:7804":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"2:42098:3391":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"6:5466:6356":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"2:44522:3188":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"6:6729:6625":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"2:44815:164":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"6:473:5830":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"17:15410:4949":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"18:589:4062":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"16:7857:5569":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"17:13046:4376":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"17:14177:4613":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:46861:7492":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:7723:28126":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"9:0:2951":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"16:5347:5286":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"17:10573:35457":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"16:5817:5296":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"2:32205:5545":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"17:13015:4332":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"6:5134:6208":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"1:11316:7640":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"6:6788:6646":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"2:32212:8058":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"17:10671:35456":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"1:8349:3137":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"17:15616:5021":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"2:47216:7509":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:6031:3220":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"1:4327:9360":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"2:8214:145":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"0:378:2512":{"crate_id":0,"path":["termcolor","Buffer"],"kind":"struct"},"2:1958:671":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"6:553:5879":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"2:44099:3180":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"17:14847:4794":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"2:45962:7401":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"6:0:1002":{"crate_id":6,"path":["libc"],"kind":"module"},"15:394:21092":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"2:22455:9505":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"17:11089:7830":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"16:7397:35449":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"5:5934:3954":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"2:45894:7393":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"0:0:2830":{"crate_id":0,"path":["termcolor"],"kind":"module"},"11:2548:5737":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"2:43741:7327":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2:2060:14736":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"2:32219:3713":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"6:7339:6722":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"18:0:2959":{"crate_id":18,"path":["memchr"],"kind":"module"},"17:4986:7818":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"2:12885:3160":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"2:44203:3174":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"11:837:7982":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"1:12308:8764":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"5:3805:3136":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"2:40765:7253":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"11:1891:3954":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"2:22911:6988":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"5:3318:5733":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"17:16069:5138":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"5:7405:3954":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"5:6693:3642":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"1:909:5729":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"2:10114:3722":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"6:4864:6105":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"17:1207:7808":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:22591:9306":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"1:11028:26413":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"2:3629:14556":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"6:6379:6446":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:46479:7451":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"2:11324:3182":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"6:1526:5918":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"1:8265:3136":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"16:7132:5490":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"5:3297:34948":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:33596:14705":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"17:16121:5150":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"1:2535:2308":{"crate_id":1,"path":["std","io"],"kind":"module"},"16:7014:21996":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"16:5107:5284":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"18:735:26245":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:41202:7268":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"2:11212:3163":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"6:497:5841":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"5:4848:802":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"1:6793:3216":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"5:2539:6901":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"1:9743:127":{"crate_id":1,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"2:43484:7325":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"16:5846:5301":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"2:44928:7382":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:9469:7624":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"5:2210:9221":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"11:1917:5732":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"5:1531:5728":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"17:13568:4488":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"17:13455:4459":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"0:450:2624":{"crate_id":0,"path":["termcolor","Color","Red"],"kind":"variant"},"17:12089:4304":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"5:3040:34924":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"17:14986:4846":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"11:396:35416":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"2:21593:31914":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"1:8241:7542":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"17:10710:7822":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"1:9179:3642":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"2:13834:6971":{"crate_id":2,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"17:11467:4246":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"6:4979:6157":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"6:6524:6525":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"6:4959:6147":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"16:5722:5234":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"9:178:8753":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:43841:3176":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:9726:28193":{"crate_id":1,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"17:14876:4805":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"1:10947:7539":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"6:1496:5905":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"1:9721:8123":{"crate_id":1,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"6:7348:6723":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"6:1653:6010":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:8683:9263":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:4811:6743":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"function"},"16:6047:7902":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"1:11090:28217":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"1:9155:7614":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:43010:32118":{"crate_id":2,"path":["core","fmt","rt","ArgumentType"],"kind":"enum"},"6:6874:6666":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"16:6342:35448":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"17:16223:5174":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"2:40774:7254":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"2:34048:14708":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"6:6519:6524":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"17:15313:4920":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"1:10512:28195":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"16:6480:5230":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"2:47293:7526":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:12352:738":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"6:4916:6131":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"17:11419:4239":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"17:11392:7842":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"5:5729:3958":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"1:6368:28247":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"1:8177:4144":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"2:2640:103":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"2:44645:7372":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"2:21637:31918":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"17:12225:7881":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"17:10018:22040":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"17:13766:4536":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"1:617:9237":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"17:15624:5022":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"17:12485:22186":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"17:2203:7810":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"2:44117:3181":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"17:13553:4482":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"2:23111:7011":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU64Inner"],"kind":"struct"},"2:42982:7312":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"2:44419:7353":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"17:13497:4464":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"2:46441:7449":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"17:14212:4625":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"2:40795:7256":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"2:42459:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"6:5191:6220":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"0:371:2492":{"crate_id":0,"path":["termcolor","BufferWriter"],"kind":"struct"},"1:5616:8105":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"2:47231:7510":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"6:1621:5987":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:8479:2636":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"6:8306:6874":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"2:46574:7454":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"17:14463:4666":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"17:13399:4447":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"1:9296:26409":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"2:6007:3096":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"16:7497:5546":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"16:8202:5249":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"9:357:20992":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"1:951:7982":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"2:43023:73":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"6:7306:6699":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"1:2699:2412":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"1:5986:3208":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"2:47059:7498":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"17:13146:4390":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"6:8351:6885":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"18:659:7798":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"5:5422:33828":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"1:4209:9342":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:7993:3199":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"17:16187:5167":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"1:8470:3144":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"6:4952:6144":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"1:12347:1721":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"2:44277:14589":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"17:15769:5064":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"17:11405:7843":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"17:12300:22184":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"11:811:3952":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"16:3196:5195":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"6:4924:6133":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"17:11026:22073":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"1:7875:4198":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"1:2629:3133":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"17:9781:22054":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"17:11354:7841":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"11:1142:7991":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"4:0:2949":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"5:6566:3954":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"6:5031:6185":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"16:7528:5547":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"2:41931:7294":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"2:12432:2785":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"16:3014:21130":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"2:47106:7501":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"17:15138:4875":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"17:11915:22160":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"6:5370:6298":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"16:6278:7909":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"5:5470:3159":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"16:5802:21988":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"2:32324:3599":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"1:5083:9383":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"6:1535:5924":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:2523:672":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"6:6657:6600":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:6707:6948":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:4555:8100":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"17:10954:22071":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"2:9974:8762":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"2:44617:7365":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"2:2735:202":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"2:46524:7452":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"17:12353:4325":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"16:4468:5264":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"1:1101:7992":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"2:3574:14715":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:8344:8127":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"6:5472:6359":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"2:22507:14726":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_exposed_provenance"],"kind":"function"},"5:7727:3952":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"17:14051:4580":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"17:12887:4366":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"6:6706:6619":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"17:11812:7863":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"2:40552:14773":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"6:5598:6403":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"5:7415:8026":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"17:10769:35458":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"17:14752:4711":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"17:14372:4645":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"2:4391:109":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:3756:70":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"17:13959:4567":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"2:42264:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:43488:7326":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"6:5617:6417":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"7:32:20963":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"17:13252:4417":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"5:1739:33828":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"16:3842:5258":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"1:6566:186":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"6:8271:6866":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:4811:3246":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:8072:9244":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"2:13926:3948":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"6:5624:6420":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"6:7412:6751":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"16:4913:5278":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"6:7584:6838":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"1:6276:28219":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"2:40992:3120":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:44819:219":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"17:9984:22059":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"5:3661:5727":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2:47201:7508":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"5:7425:6914":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"18:706:3156":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"16:7144:21997":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"5:304:2360":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"1:10604:8138":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"2:38256:14712":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"17:15176:4889":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"6:6447:6490":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"1:6177:7531":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"1:586:8081":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"2:746:9320":{"crate_id":2,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"17:11547:4143":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"11:1051:7989":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"1:5509:128":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"1:3480:3128":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"17:12371:4369":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"11:1923:5733":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"2:42342:93":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"2:44169:3164":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2:23133:7013":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroUsizeInner"],"kind":"struct"},"1:9317:8146":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"6:5046:6192":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"17:12851:4364":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"1:2479:9298":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"16:6160:21100":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"16:6466:5383":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"14:202:14591":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"6:8197:6861":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:40686:7241":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:46412:7448":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"2:43793:6966":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"17:12030:7870":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"5:5077:3096":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"2:45815:7384":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"2:42225:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"10:44:5746":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"11:673:5727":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"1:6455:7531":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"2:22771:6975":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:7144:9415":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"5:1369:7992":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"17:11142:4239":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"5:1204:33729":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"18:613:35465":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"1:669:8084":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"17:14503:4671":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"16:2528:5211":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"16:7306:35451":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"6:5102:6205":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"16:7570:5243":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"11:710:7980":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"16:2612:5215":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:6907:2512":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"6:7314:6704":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"2:47137:7504":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:30363:9319":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"17:15102:4870":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"16:6456:21993":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"11:2469:3952":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"5:5230:3204":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"6:586:5896":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"2:40412:3175":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"17:13922:4563":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"2:30624:7021":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"2:22962:32050":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"17:13387:4444":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"2:39681:9250":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"17:15356:4935":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"16:3778:5256":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"2:43266:7318":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"17:12808:4362":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"2:43913:3182":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"2:44902:8076":{"crate_id":2,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"2:7645:14633":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"2:42201:196":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:1069:5491":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"17:13738:4529":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"1:10647:28253":{"crate_id":1,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"2:4733:3713":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"17:10419:4210":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"16:6300:7924":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"18:573:4052":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"16:6263:5369":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"17:12201:7879":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"16:6895:5457":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"2:3212:14553":{"crate_id":2,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"16:4771:5273":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"17:12584:7823":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"17:15720:5049":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"1:938:7994":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"17:2175:22118":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"17:12408:4329":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"16:6433:5378":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"5:883:9258":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"6:6435:6486":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"17:15931:4399":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"17:15249:4902":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"17:513:7806":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"17:14599:4689":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"17:15206:4894":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"17:437:4151":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"5:3050:33701":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"2:46183:7421":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"17:12150:4307":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"17:16212:5172":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"3:0:505":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"17:12659:7892":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"17:15126:4872":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"16:7799:5235":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"1:4801:9339":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"5:1509:3642":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"2:22903:6987":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:8194:7539":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"17:15463:4960":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"17:12362:4326":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"2:22878:6985":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:3059:226":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"1:11360:8165":{"crate_id":1,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"2:749:190":{"crate_id":2,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"17:15010:4848":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"2:3376:3250":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"16:7052:7940":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"6:5244:6247":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"6:5181:6213":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"6:4985:6160":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"17:13814:4546":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"1:12313:9245":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"6:4891:6115":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"17:13877:4557":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"16:2458:5208":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"18:598:35463":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:46014:7404":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"6:6491:6512":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"6:5146:6209":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"17:14025:4576":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"2:10538:157":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"1:11916:31374":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"6:4837:6082":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"16:2808:5224":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"17:3264:7814":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:44063:3179":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"17:12516:7887":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"17:3473:7815":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"11:2403:7993":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"16:2438:5207":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"6:7602:6841":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"16:5831:5299":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"6:4885:6113":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"1:5162:3380":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"17:13412:4449":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"2:21639:31909":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"2:23651:236":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"17:15799:5069":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"0:396:2441":{"crate_id":0,"path":["termcolor","NoColor"],"kind":"struct"},"17:14066:4583":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"17:11730:4261":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"1:4917:9350":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"8:0:2950":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"18:515:4055":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"2:12845:2310":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"2:42736:3703":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"2:23078:7008":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU8Inner"],"kind":"struct"},"1:8812:9397":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"6:5483:6362":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"6:6670:6604":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"17:13308:4432":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"2:39711:8059":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"17:13024:22065":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"17:16079:5139":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"1:9214:9408":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"17:256:7803":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"5:956:5727":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"17:403:7805":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"17:12929:4369":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"1:2004:785":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"1:11013:8107":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"18:643:4052":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"2:41983:7296":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"2:43701:6963":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"6:7446:6757":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"17:11367:4223":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"11:1025:7988":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"16:5415:5287":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"2:11120:5727":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"16:6872:5456":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"6:4824:6072":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"1:1636:5733":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"5:2116:8008":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"17:15266:4910":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"17:12238:7882":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"6:1503:5908":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"17:12572:4239":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"2:46221:7423":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"2:44187:3161":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"2:40704:7244":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"16:7379:35450":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"16:8118:5614":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:39621:215":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:5773:9402":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"5:6968:3960":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"2:3134:117":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"2:42047:3642":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:46707:7459":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"17:13424:4450":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"17:13292:4428":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"16:7098:5485":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"17:10622:35460":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"17:11799:7861":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"1:11225:31044":{"crate_id":1,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"2:46268:7426":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:41231:3145":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:23009:7004":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:888:3642":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"6:5320:6282":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"1:896:5728":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"17:11674:4255":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"5:6414:9511":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"16:2303:21101":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"17:10350:4208":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"17:14723:4691":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"6:5677:6442":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"2:43895:3122":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"2:47152:7505":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"17:12768:22041":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"6:4971:6152":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"1:5582:8103":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"2:8316:3251":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"6:5002:6170":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"6:6698:6615":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"15:0:2956":{"crate_id":15,"path":["addr2line"],"kind":"module"},"1:1603:5727":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:46029:7405":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"5:839:101":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"17:15944:4413":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"17:11341:7840":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"17:12264:7884":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:22927:32046":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"14:160:7975":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"16:5037:5282":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"11:2352:7989":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"17:15023:4853":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"1:7885:8171":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"17:15582:5009":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"6:5581:6396":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"11:844:9257":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"17:2037:7809":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"17:11115:7832":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"17:15092:4869":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"2:40673:3119":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"2:43229:7314":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:2477:9297":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"6:6471:6499":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"1:5702:8107":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"1:12355:909":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"1:12340:1174":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"5:7645:243":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"17:11715:4258":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"1:2309:8092":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"16:6991:35442":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"2:22855:6981":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"17:13272:4427":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"17:11051:7828":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"17:12318:4314":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"2:4379:8032":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:10957:139":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"2:13547:7252":{"crate_id":2,"path":["core","future","async_drop","Fuse"],"kind":"struct"},"1:12363:1845":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"2:40541:7238":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"2:46906:7493":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:4659:8035":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"2:40714:133":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"2:44212:3175":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:44951:7383":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"2:46043:7406":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"18:608:7797":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"6:6664:6601":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"17:14235:4626":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"1:10964:7636":{"crate_id":1,"path":["std","sys","pal","unix","fs","Mode"],"kind":"struct"},"2:45862:7391":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"6:5376:6299":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:39603:212":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"5:4481:3096":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"16:6948:5238":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"18:113:26237":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:43069:3711":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"2:40857:7261":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"2:41016:7266":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"6:6768:6638":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"17:12478:4337":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"1:5831:220":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:42715:3701":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:980:7987":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"2:41240:7271":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"2:40756:7252":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"17:15778:5066":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"16:2478:5209":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"1:4002:8097":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"5:7634:8027":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"17:11574:5734":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"2:13636:205":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"16:8226:22002":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"2:12623:7334":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"2:45930:7399":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:9229:9407":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"2:7761:14679":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"17:11702:4257":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"16:6504:5387":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:12586:7331":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"16:6758:5429":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"6:7330:6716":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"16:6246:206":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"2:2890:163":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"11:1896:3952":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"15:288:21082":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"2:3511:211":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"17:15190:4892":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"17:13723:4525":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"5:289:33828":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"6:5436:6335":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"9:392:20978":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"16:8136:5617":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"16:7559:5551":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"17:15078:4865":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"5:6612:33828":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"5:3292:5730":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"1:8611:9363":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"6:5344:6287":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"2:5195:435":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"2:44687:7375":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"6:6562:6553":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"1:5648:113":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"2:3614:32645":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"2:43767:6965":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"0:282:2373":{"crate_id":0,"path":["termcolor","ColorChoice","AlwaysAnsi"],"kind":"variant"},"2:44344:7350":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:22505:32741":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"6:5445:6341":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"2:22947:32053":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:3297:8863":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"2:2062:14737":{"crate_id":2,"path":["core","ptr","metadata","Thin"],"kind":"trait_alias"},"6:5653:6430":{"crate_id":6,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"16:8188:7974":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"17:11256:4229":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"13:110:35430":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"1:8554:8133":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"11:2562:5740":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"1:8797:7602":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"1:8726:7599":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"16:2394:5205":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"17:16151:5158":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"16:6494:5386":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"17:13899:4558":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"6:4942:6141":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"6:6915:6692":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:10975:239":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"6:6532:6530":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"6:8247:6862":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"17:11647:4253":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"1:10721:2407":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"16:4856:5276":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"16:5769:5294":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"6:532:5867":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"17:15646:5028":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"1:8012:7535":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"17:15473:4965":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:25:696":{"crate_id":2,"path":["core","env"],"kind":"macro"},"2:42722:3700":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"6:6714:6623":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"5:3042:6897":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"1:12356:891":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"6:5266:6258":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"1:10421:9404":{"crate_id":1,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"1:9433:162":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"1:8216:139":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"17:10720:35454":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"2:42498:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"2:46236:7424":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"6:8253:6863":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"16:5700:5232":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"17:11841:7867":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"2:46462:7450":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"2:42097:3392":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"2:40536:106":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"2:23041:9306":{"crate_id":2,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"1:4975:8101":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"1:11201:7612":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"16:3329:5253":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"1:2316:3106":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"2:10787:32930":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"17:15197:4893":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"17:13485:4463":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"17:15569:5003":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"5:4322:5727":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"18:726:4087":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"6:1485:5900":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"1:6916:233":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"6:5336:6286":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"5:1077:33828":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"17:10877:7824":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"16:6398:5228":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"2:3215:14554":{"crate_id":2,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"2:23177:7017":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI64Inner"],"kind":"struct"},"16:6335:7935":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:10755:33600":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"6:6417:6473":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"5:7658:6924":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"16:4352:5262":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"17:14131:4589":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"17:12399:4328":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"5:3046:33702":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"17:14038:4578":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"1:11268:7639":{"crate_id":1,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"16:7355:5528":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"1:3294:8859":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"1:11233:7372":{"crate_id":1,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"1:12365:966":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"6:5528:6372":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"17:14325:4638":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"0:458:2631":{"crate_id":0,"path":["termcolor","Color","White"],"kind":"variant"},"17:13785:4541":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"2:42965:3710":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"11:1087:35423":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"17:13325:4434":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"6:8265:6865":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"17:12494:4338":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"16:2936:21129":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"16:2708:5219":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"5:1540:5729":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"1:4335:9361":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"6:1692:6027":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"9:53:8742":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"14:31:7975":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"1:12368:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"1:8339:8126":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"6:7516:6802":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"17:13211:4413":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"2:10689:14795":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"2:13609:33694":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:8650:8137":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"1:12292:8174":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"2:23199:7019":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroIsizeInner"],"kind":"struct"},"16:7580:5552":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"11:430:35428":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"2:22839:6977":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"6:5250:6249":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:44194:3173":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"11:0:2953":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"16:5781:5233":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"1:521:9221":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"11:2304:5491":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"5:4117:33828":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"17:11788:7860":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"1:10724:2408":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"2:40818:7258":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:4195:9340":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:46686:7458":{"crate_id":2,"path":["core","core_arch","simd","m32x8"],"kind":"struct"},"1:9370:7622":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"6:5457:6350":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"17:15814:5070":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"6:5643:6429":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"11:2554:35413":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"17:14449:4665":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"2:41209:7269":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:4815:6747":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"function"},"6:6636:6588":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"5:1493:7993":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"16:7085:5481":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"2:40808:7257":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"2:46553:7453":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:11286:162":{"crate_id":1,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"0:279:2367":{"crate_id":0,"path":["termcolor","ColorChoice"],"kind":"enum"},"6:6880:6667":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:43031:3710":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"2:43854:3172":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"2:39581:210":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"2:11144:7993":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"11:774:5728":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"6:6650:6599":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"2:2074:6928":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"1:1607:3642":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"1:9244:9409":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"2:43730:8070":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"5:2102:3136":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"2:3329:14557":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"11:787:5729":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"16:7428:21998":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"16:7888:5573":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"17:11764:4266":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"17:15400:4946":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"17:10092:22061":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"6:5423:6325":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"2:2729:195":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"17:15376:4941":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"6:5636:6426":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"2:41743:170":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"16:8216:5623":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"17:12707:7896":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"6:7389:6750":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:10965:9306":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"17:12993:22064":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"2:46612:7456":{"crate_id":2,"path":["core","core_arch","simd","m8x32"],"kind":"struct"},"17:13363:4440":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"5:6433:9512":{"crate_id":5,"path":["alloc","task","LocalWake"],"kind":"trait"},"1:5283:8102":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"6:5064:6203":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"16:6648:5404":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:44637:7370":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:12362:1839":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"2:8680:149":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:1997:3879":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"16:7648:7969":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"2:6902:6952":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"18:96:26236":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"1:12358:903":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"2:43871:3168":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"2:46139:7419":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"11:102:5717":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"1:12366:1911":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"17:13173:4398":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"1:12348:1811":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"2:45830:7387":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"17:11269:22090":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"17:13375:4443":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"17:16093:5143":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"5:1581:210":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"2:40523:7237":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"17:14475:4667":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"11:883:7987":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"2:32236:2359":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"6:1593:5962":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"17:16249:5178":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"16:2636:5216":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"1:9350:26437":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"2:44149:3118":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"2:3220:14555":{"crate_id":2,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"16:4802:5274":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"1:1958:2307":{"crate_id":1,"path":["std","error"],"kind":"module"},"6:570:5887":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"6:485:5836":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"2:23020:9333":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"17:13344:4439":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"1:752:154":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"1:11827:8096":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"2:44829:227":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"1:8093:3859":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"2:3200:5505":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"2:12646:7335":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"5:6775:33828":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2:21724:9417":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:3604:3107":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"16:4062:5261":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"17:16176:5166":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"16:2355:5198":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"16:2323:21127":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"16:7823:22000":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"2:11930:8045":{"crate_id":2,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"5:3251:5727":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"17:14868:4804":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"16:7604:5245":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"16:6849:5455":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"2:40391:7231":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:932:3952":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"6:5489:6364":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"6:6629:6587":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"17:12597:4343":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"6:7452:6759":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"16:6026:5329":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"2:33529:9414":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"17:14260:4630":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"16:6574:5248":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"11:1883:5727":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"1:10495:113":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"2:9969:32667":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"17:13606:4496":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"17:12342:4321":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"17:15836:5076":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"11:2369:7999":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"2:10323:3701":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"1:3643:2309":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"2:40867:7262":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"6:5546:6383":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"16:6976:5465":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"16:6927:5461":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"2:3388:142":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"16:3899:5259":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:32294:3249":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"17:15342:4928":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"11:2536:5735":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"1:11214:7613":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"1:7925:28258":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"1:8058:9243":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"1:12367:1419":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"5:7132:33850":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"17:15701:5044":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"2:39505:14558":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"2:43963:3185":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:12360:1851":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"1:6861:3223":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLockGuard"],"kind":"struct"},"11:2124:5491":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:12911:3153":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:23166:7016":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI32Inner"],"kind":"struct"},"2:40843:4072":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"2:43999:3184":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:8709:3384":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"18:581:3612":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"1:5106:9385":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"1:4205:9341":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"2:40695:7243":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"2:4414:14552":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"17:10915:35461":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"2:13791:115":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"6:1663:6016":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"1:11609:8166":{"crate_id":1,"path":["std","sys","thread_local","fast_local","Key"],"kind":"struct"},"14:220:5710":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"17:13526:4473":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"16:7755:5237":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"2:12004:3165":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"2:40352:7227":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"17:11688:4256":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"16:7727:5246":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:2863:9306":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"17:10218:4204":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"5:3263:34947":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"2:44470:14590":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"2:43276:7322":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:8257:3134":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"6:7429:6752":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"16:2418:5206":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"17:11324:7837":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"1:2461:6930":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"17:15608:5018":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"1:8774:7318":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"6:5400:6314":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"16:5367:21987":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"5:6934:3958":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"16:7549:5550":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"2:10333:3705":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"6:5290:6271":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"17:14246:4628":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"17:14994:4847":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"2:3589:146":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"2:41943:7585":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"2:42192:3642":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"5:1549:7994":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"2:39549:3946":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"0:460:2633":{"crate_id":0,"path":["termcolor","Color","Ansi256"],"kind":"variant"},"2:42136:226":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"1:4481:8099":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"2:11169:3122":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"5:1590:8007":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"1:8236:7541":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"2:42578:97":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"6:5630:6423":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"11:1910:5731":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"6:6721:6624":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"5:7610:6920":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"2:22121:9306":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"1:1855:3839":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"6:1707:6034":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"17:16235:5177":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"17:13116:4386":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"1:6847:3222":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLock"],"kind":"struct"},"17:12621:4344":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"6:1680:6023":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"1:11648:8168":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"5:40:3951":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"1:11787:8095":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:47254:7511":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:4919:9352":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"2:43237:7316":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"14:40:4414":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"2:43710:8069":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:40724:7246":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:4319:9359":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"0:406:2442":{"crate_id":0,"path":["termcolor","Ansi"],"kind":"struct"},"1:3897:8095":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"17:12251:7883":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"6:1628:5991":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"1:666:8082":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"17:13581:4492":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"2:32978:5501":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"6:5671:6439":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"2:22718:6974":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"17:14529:4673":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"11:1007:5491":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"1:11923:7656":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"6:6478:6503":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"0:480:2740":{"crate_id":0,"path":["termcolor","ParseColorError"],"kind":"struct"},"17:16032:4417":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"2:8181:14684":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"2:9787:91":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"17:12127:4306":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"16:7711:210":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"16:8093:5611":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"2:44633:7369":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"2:22996:7003":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"17:13509:4465":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"5:7743:3953":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"1:10227:7291":{"crate_id":1,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"2:46101:7417":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"2:41225:7270":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"1:8182:8123":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"16:7590:5244":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"5:7485:3642":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"1:11668:7650":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"2:22417:9504":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"2:42617:3205":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"2:41781:7280":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"16:3810:5257":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"17:13797:4543":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"17:11042:7827":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"1:8676:7588":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"2:44456:7354":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"16:8073:5610":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"16:2902:21128":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"16:6782:21995":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"1:9171:8139":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"13:0:2948":{"crate_id":13,"path":["std_detect"],"kind":"module"},"2:2693:201":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:12364:1827":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"17:11510:7846":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"1:878:7993":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"1:9406:3096":{"crate_id":1,"path":["std","sync","poison","Guard"],"kind":"struct"},"2:8689:14683":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:9118:199":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"17:15635:5027":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"16:4502:5265":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"1:2312:7628":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"2:46980:7495":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:3387:2407":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"2:42003:194":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"16:6098:21990":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"17:12388:4327":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"1:4921:9353":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"16:6079:5188":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"11:1728:156":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"11:490:154":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"2:45877:7392":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:1891:3848":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"2:12906:3155":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"19:0:1291":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"2:3360:3124":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:5252:8102":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:11251:8040":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"5:7376:3949":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"2:23089:7009":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU16Inner"],"kind":"struct"},"2:4532:6936":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"2:22633:9500":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"2:22126:9423":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"5:7622:6923":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:46122:7418":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"5:4282:3096":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"2:32159:5739":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"1:1475:156":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"5:843:8002":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:11403:3184":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:9129:7612":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"6:479:5833":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"1:11904:7655":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"2:46657:7457":{"crate_id":2,"path":["core","core_arch","simd","m16x16"],"kind":"struct"},"17:11634:4252":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"2:32226:7086":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"17:10137:22037":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"1:5952:3206":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"1:1092:7989":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"1:12354:733":{"crate_id":1,"path":["std","f128"],"kind":"primitive"},"2:10321:3700":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"2:21620:31919":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:22479:9306":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"6:4909:6127":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"17:12557:4223":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"2:43720:6964":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"2:3666:14559":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"16:7741:5247":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"2:45845:7388":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:12359:884":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"2:2968:123":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"2:22373:9503":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"9:482:20976":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"1:10922:7627":{"crate_id":1,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"2:39661:216":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"2:47178:7507":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:865:5727":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"1:10927:7538":{"crate_id":1,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"17:15273:4911":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"17:12695:7895":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"6:4800:6054":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"5:4938:217":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"2:30650:32117":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"2:43245:7317":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:9410:234":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"1:9163:5727":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"1:3835:9318":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"5:0:309":{"crate_id":5,"path":["alloc"],"kind":"module"},"2:21848:9418":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:9393:187":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"16:8175:7971":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"1:968:7985":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"1:957:9257":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"17:13538:4476":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"11:800:3954":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"1:1968:3878":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"2:12700:3163":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:46335:7429":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"5:7551:9256":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"1:1614:3952":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"2:4654:8034":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"1:373:8079":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"10:36:5745":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"6:5390:6307":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"1:11693:7652":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"2:22:817":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"16:6588:5392":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"2:10288:143":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"5:1559:7980":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2:10331:3704":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:1914:3854":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"11:687:7993":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"5:4436:265":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"17:15992:5124":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"6:1517:5913":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"1:11631:26403":{"crate_id":1,"path":["std","sys","thread_local","fast_local","DtorState"],"kind":"enum"},"1:9425:3219":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockWriteGuard"],"kind":"struct"},"17:15301:4919":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"1:8488:3116":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"5:6019:71":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"17:13832:4547":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"17:14933:4840":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"1:8030:3914":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"14:187:21070":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:10772:28250":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"2:47080:7499":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"17:15333:4927":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"2:8263:129":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"0:456:2629":{"crate_id":0,"path":["termcolor","Color","Yellow"],"kind":"variant"},"2:3185:9411":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"1:4103:9334":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"1:494:28248":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"2:40435:14630":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"16:6962:5239":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"1:11654:7649":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"1:9420:3218":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockReadGuard"],"kind":"struct"},"16:5075:5283":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"1:562:9226":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"16:7321:3388":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"2:2270:6934":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"2:40316:3174":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"2:21838:9306":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:3430:2408":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"16:5307:5285":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"17:12422:4330":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"2:10269:226":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"0:508:2353":{"crate_id":0,"path":["termcolor","HyperlinkSpec"],"kind":"struct"},"17:10317:4207":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"2:40637:3147":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"17:11621:4250":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"17:12724:22062":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"2:13121:119":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:974:7986":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"17:9737:22038":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"1:9329:8148":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"17:11773:4348":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"2:44939:5743":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"5:2249:6894":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"1:367:8077":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"1:3336:3140":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"11:1582:7995":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"2:46058:7407":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"17:13594:4493":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"1:8230:127":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"2:2539:14727":{"crate_id":2,"path":["core","ptr","with_exposed_provenance_mut"],"kind":"function"},"16:6353:5371":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"11:856:7985":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"2:3190:9413":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"6:5174:6211":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"17:13986:4572":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"11:1566:21057":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"11:742:7981":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"1:4297:28003":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"1:1853:3838":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"1:12324:26402":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"5:1441:99":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"1:5632:8106":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"17:15151:4881":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"1:11102:28257":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"6:6775:6639":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"17:14189:4616":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"18:481:4050":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"2:2979:137":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:10573:9310":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"16:3614:5255":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"2:44159:3177":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"5:6176:3096":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"17:10251:4205":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"2:43048:137":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"17:11242:7836":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"2:0:563":{"crate_id":2,"path":["core"],"kind":"module"},"2:32237:244":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"2:32235:237":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"2:43284:7323":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:10329:206":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"16:7539:5242":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"17:12175:7874":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"2:30586:3943":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:8625:8133":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"2:11963:8046":{"crate_id":2,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"6:1565:5943":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"6:5565:6391":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"6:5160:6210":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:5254:3146":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"2:36270:5511":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"11:2443:3954":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"17:11189:4227":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"16:2592:5214":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"17:9807:22044":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"17:11102:7831":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"2:39553:7090":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"6:517:5858":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"1:7944:28245":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"18:521:26247":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"17:11128:4191":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"17:13844:4549":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"18:507:4052":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"16:5914:5312":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"11:2569:3950":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"1:2735:3125":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"17:15368:4938":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"1:3671:3111":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"6:7366:6732":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"6:465:5825":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"2:32201:8057":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"6:8294:6872":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:41965:7295":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"2:1882:3096":{"crate_id":2,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"6:6621:6586":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"2:40378:7230":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"18:623:35466":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"16:7695:5557":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"5:7435:34946":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"2:44313:7346":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"17:11567:7850":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"1:3661:3108":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"1:8007:8119":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"1:9112:8138":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"2:43881:3121":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"16:6606:5400":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"16:2854:5226":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"2:43822:8073":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"2:30618:3944":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"16:872:7804":{"crate_id":16,"path":["gimli","read","endian_slice","DebugLen"],"kind":"struct"},"17:13999:4573":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"6:5112:6206":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"2:4580:3712":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"2:8177:14685":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"6:5314:6281":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"17:14912:4835":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"9:502:5806":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"2:7710:32281":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"2:10314:119":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:22638:9498":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"1:1916:3855":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"2:3601:14603":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"2:40363:32108":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"11:1107:7990":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"16:7633:35443":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"2:44807:7378":{"crate_id":2,"path":["core","future","async_drop","Noop"],"kind":"struct"},"17:11166:4225":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"2:44837:207":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"1:9265:3209":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"6:4932:6135":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"6:5361:6292":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"17:10155:4201":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"2:41216:3211":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"5:7107:33833":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"11:328:5722":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"2:42955:7304":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"2:40322:7226":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"16:2788:5223":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"2:43641:8068":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:9289:8142":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"1:11251:7623":{"crate_id":1,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"2:21622:31911":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"16:5006:5281":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"2:44870:8074":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"0:330:2426":{"crate_id":0,"path":["termcolor","StandardStream"],"kind":"struct"},"2:44491:7359":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"5:3410:3952":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"6:5352:6288":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"6:1580:5955":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"6:5122:6207":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"2:5022:14624":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"2:4723:6937":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"2:21651:31906":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"6:4811:6062":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:44912:180":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:10355:8151":{"crate_id":1,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"1:6676:3212":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"5:3885:3952":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"2:3347:124":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"10:0:2952":{"crate_id":10,"path":["adler"],"kind":"module"},"17:14271:4631":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"1:6790:3215":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"17:14284:4633":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"2:42994:5588":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"1:3389:2419":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"6:7537:6816":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"5:1355:7988":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"6:523:5861":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"18:765:26246":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"16:542:5185":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"2:40644:6965":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"6:6811:6652":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"16:7769:5559":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"16:6749:5428":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"2:38201:14711":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"16:2728:5220":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"16:3029:4095":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"17:13235:4414":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"1:5441:203":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"1:650:3880":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"0:446:2621":{"crate_id":0,"path":["termcolor","Color","Blue"],"kind":"variant"},"16:7813:5561":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"2:3132:3594":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"17:11497:7845":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"1:10938:7633":{"crate_id":1,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"2:44045:3178":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"16:8259:5545":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"1:6503:220":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"2:44613:7364":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"5:680:8001":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"2:3417:3947":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"6:6821:6655":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:44625:7367":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"17:14977:4845":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"16:4641:5270":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"17:10818:7823":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"1:12361:1833":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"16:5960:5320":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"5:7566:6916":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"6:5260:6255":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2:2149:189":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"2:39641:214":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:2070:197":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"1:5329:204":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"17:10982:22072":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"17:10661:7821":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"2:41002:7265":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"5:3284:5732":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"6:8288:6871":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"2:4:1256":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"1:9415:235":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"2:40474:7234":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"15:327:8739":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"17:10997:4220":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"17:11865:7869":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"1:3334:3139":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"16:7509:7962":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"6:5329:6285":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"1:8654:6732":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"16:4614:5269":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"11:832:7994":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"16:7006:7939":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"6:5083:6204":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"17:2234:7813":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"17:10068:22043":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"5:7393:6913":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"1:10764:3914":{"crate_id":1,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"1:2307:138":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"16:2998:5250":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"1:12345:335":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"2:41765:7278":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"17:16198:5168":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"17:15039:4856":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"2:47126:7503":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"6:8300:6873":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"17:14079:4584":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"18:680:4075":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:2226:128":{"crate_id":1,"path":["std","ffi","os_str","Display"],"kind":"struct"},"1:8852:7607":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"2:3020:3883":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"1:4998:9349":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"16:6412:21992":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCacheStrategy"],"kind":"enum"},"18:689:4078":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:4367:8031":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:8541:3122":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"2:33663:14704":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"6:5557:6389":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"6:6441:6489":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"16:4531:5266":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:44641:7371":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"6:5665:6437":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"6:6763:6637":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"1:11423:5803":{"crate_id":1,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"1:4161:9339":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"1:6672:3211":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"2:21742:6972":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"6:5039:6190":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"17:9755:22036":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"17:15383:4942":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"16:8155:5620":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"2:44663:130":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"5:1168:33724":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"5:7059:264":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:23155:7015":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI16Inner"],"kind":"struct"},"2:4290:3096":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"16:867:7803":{"crate_id":16,"path":["gimli","read","endian_slice","DebugByte"],"kind":"struct"},"17:13064:4379":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:12416:8047":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"2:41250:7272":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"17:11524:7847":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"2:3584:254":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"2:44017:3183":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:10917:7625":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"5:4087:3954":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"2:2896:258":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"5:743:118":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"2:5911:3096":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"6:5407:1243":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"1:2067:198":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"2:22160:31916":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"5:7668:8028":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"17:15822:5073":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"6:1639:5999":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"18:538:4059":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"6:559:5882":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"17:11537:7848":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"1:8535:3121":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"1:5838:7531":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"9:330:5783":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"17:12792:4165":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"2:44609:7363":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"5:1478:5727":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:10578:6957":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"16:150:5183":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"6:6505:6523":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"1:2774:3135":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"17:14111:4588":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"2:21605:31914":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"2:44298:7340":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"6:564:5884":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"1:8528:3120":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"2:46253:7425":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"17:14091:4585":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"0:340:2437":{"crate_id":0,"path":["termcolor","BufferedStandardStream"],"kind":"struct"},"17:4821:7817":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"17:3597:7816":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"1:5770:6653":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"17:15281:4912":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"17:12530:7889":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"2:42381:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"16:0:2957":{"crate_id":16,"path":["gimli"],"kind":"module"},"1:7331:28266":{"crate_id":1,"path":["std","sys","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"2:40428:3173":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:1625:5731":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"2:46591:7455":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"2:4780:14614":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"17:9671:22039":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"2:42022:173":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"1:1838:696":{"crate_id":1,"path":["std","env"],"kind":"module"},"1:4348:9362":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"16:6317:7927":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"2:3382:140":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"17:10044:22060":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"2:46204:7422":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"17:10284:4206":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"17:10457:138":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"1:4766:9382":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"18:548:153":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"6:6746:6629":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"5:7457:210":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"2:22546:9509":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"2:39566:213":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"17:16165:5161":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"17:12863:4365":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"1:9714:138":{"crate_id":1,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"2:40515:7236":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"struct"},"1:8617:8136":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"16:2660:5217":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"17:14575:4332":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"2:9782:84":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:11848:8097":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"2:2887:76":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"16:2684:5218":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"1:3026:8093":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"17:12328:4316":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"17:14855:4797":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:3139:247":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"5:6051:3204":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"17:15434:4953":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"2:10327:3703":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"2:43865:3169":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"17:14560:4679":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"6:4897:6118":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"11:2231:5734":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"1:8204:7540":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"16:5756:7900":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"1:1619:5730":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"6:1723:6039":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"6:5236:6243":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"6:4876:6108":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"17:10534:35462":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"2:40742:7249":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"16:2838:5225":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"6:6597:6574":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"17:15214:4896":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"6:6900:6681":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"2:8234:3252":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"2:46314:7428":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"6:5283:6269":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"17:14356:4644":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"17:9916:22057":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"17:10185:4203":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"1:4133:9336":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"6:6678:6606":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:12400:14784":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"2:3181:3598":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"17:15734:5051":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"17:12900:4368":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"5:7595:14773":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:14147:4594":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"2:47038:7497":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"17:14587:4682":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"1:3432:2420":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"1:12344:1314":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"2:40420:3174":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:3900:8096":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"14:165:21063":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"2:43254:157":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"6:7467:6765":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"2:6198:6947":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"11:2140:7988":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2:13524:8052":{"crate_id":2,"path":["core","future","async_drop","AsyncDropInPlace"],"kind":"struct"},"2:21671:9421":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"1:10353:8152":{"crate_id":1,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"1:4813:6745":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"function"},"17:10887:35459":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"17:12543:7890":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"17:15678:5043":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"1:8862:5727":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"5:5864:251":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"17:12189:7878":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"2:44178:3162":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"17:15957:5094":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"16:5686:5229":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"2:47163:7506":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"11:299:5719":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"5:219:8000":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"6:5588:6398":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"0:452:2625":{"crate_id":0,"path":["termcolor","Color","Cyan"],"kind":"variant"},"14:0:2955":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"5:1184:33810":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"1:2489:9303":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"6:1585:5957":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:40664:8061":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"2:8371:178":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:11699:7653":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"2:41909:32109":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"2:1965:6927":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"1:12351:735":{"crate_id":1,"path":["std","f16"],"kind":"primitive"},"1:12339:417":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"2:8225:165":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"17:12647:7891":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"17:13774:4538":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"16:6231:5364":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"6:5515:6371":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"6:5477:6361":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:32326:114":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"1:8187:7538":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"16:8301:5630":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"16:4882:5277":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"0:463:2634":{"crate_id":0,"path":["termcolor","Color","Rgb"],"kind":"variant"},"5:1570:7981":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"0:280:2370":{"crate_id":0,"path":["termcolor","ColorChoice","Always"],"kind":"variant"},"17:11227:7835":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"1:9185:7615":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"2:39469:14602":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"2:15:2401":{"crate_id":2,"path":["core","write"],"kind":"macro"},"17:11755:4265":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"1:10994:31041":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"2:39904:14637":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"11:1603:7996":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"2:22281:9419":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:9278:8140":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"6:1547:5933":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"17:15324:4924":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"11:2151:7989":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"2:21850:6972":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"17:12949:4314":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"16:5400:4202":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"1:922:3954":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"17:11016:7826":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"1:4097:9335":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"1:7989:7534":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"1:11513:28263":{"crate_id":1,"path":["std","sys","sync","once","futex","CompletionGuard"],"kind":"struct"},"1:9451:7623":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"2:46367:7431":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"17:15168:4886":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"2:4789:3714":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"16:6940:5463":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"16:6120:21991":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"1:11931:7656":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"17:10399:3121":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"17:12454:4335":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"1:8599:7585":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"11:700:3642":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"6:1559:5941":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:44698:14828":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"2:39718:7096":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"1:1631:5732":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"1:5092:9384":{"crate_id":1,"path":["std","os","net","linux_ext","socket","UnixSocketExt"],"kind":"trait"},"11:434:35424":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"0:424:2324":{"crate_id":0,"path":["termcolor","ColorSpec"],"kind":"struct"},"1:8078:3858":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"18:491:4051":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"17:0:2958":{"crate_id":17,"path":["object"],"kind":"module"},"16:6802:5441":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"16:4743:5272":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"1:8249:8125":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"1:6193:220":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"17:16105:5145":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"5:3222:100":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"7:0:1901":{"crate_id":7,"path":["unwind"],"kind":"module"},"2:2893:144":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"1:3523:3145":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:3365:14547":{"crate_id":2,"path":["core","ops","deref","DerefPure"],"kind":"trait"},"5:7582:6917":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"16:8313:137":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"17:12289:4309":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"16:7656:21999":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"6:7461:6763":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:33875:14707":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:5845:7532":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"2:30639:3710":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"11:2498:21052":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"1:9398:3210":{"crate_id":1,"path":["std","sync","mutex","MappedMutexGuard"],"kind":"struct"},"11:1066:21056":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"17:12683:7894":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"5:7493:3642":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"17:13753:4534":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"0:298:2381":{"crate_id":0,"path":["termcolor","ColorChoiceParseError"],"kind":"struct"},"16:6543:5391":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"2:2900:257":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"17:11605:4248":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"1:10718:3139":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"6:6460:6491":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"17:15760:5060":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:40617:8060":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"1:8565:9316":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"1:0:1713":{"crate_id":1,"path":["std"],"kind":"module"},"17:11557:7849":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"1:4877:9386":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"2:42087:3389":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:8560:8135":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"1:7478:27996":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"16:5927:5313":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"6:5225:6236":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:41825:7287":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"9:424:20979":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"5:7540:3950":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"17:16269:4449":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"1:1610:3954":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"17:13473:4460":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"5:6072:15019":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"2:22148:6973":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:12662:7336":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"2:40567:7239":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"2:22605:9499":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"1:8518:3119":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"2:42128:7301":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"2:40607:6938":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"17:13187:4399":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"2:44481:7355":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"2:38890:14714":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"0:13:2314":{"crate_id":0,"path":["termcolor","WriteColor"],"kind":"trait"},"17:13089:4380":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"2:44812:150":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"5:2127:8009":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"1:4666:9364":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"5:3754:33828":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"16:7618:5553":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"6:8328:6879":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"3:234:226":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"2:46951:7494":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"2:10270:2309":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"11:1160:7992":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"16:7686:7970":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"1:3652:30905":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"2:45997:7403":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"17:12213:7880":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"11:1676:35414":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"2:7646:14634":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"17:14386:4647":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"1:12346:1687":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"17:12278:7885":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"17:16259:4444":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"2:42119:3926":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"2:13871:152":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"13:229:5716":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"6:578:5892":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"1:12353:754":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"5:4451:33831":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"16:6385:5374":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"6:6609:6579":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"6:7546:6819":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"17:15596:5015":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"2:42056:3388":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"1:426:185":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"1:2463:9293":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"2:11445:8044":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"18:718:4084":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"2:10319:128":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"11:2542:5736":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:2083:6931":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"2:10325:3702":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"2:44629:7368":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"17:13855:4550":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"2:3595:14604":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"6:7561:6826":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:4501:8033":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"11:1903:5730":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"2:11362:8042":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"17:11063:7829":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"1:9324:8147":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"6:4787:6045":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:11493:7844":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"17:11743:4262":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"2:1995:1358":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"17:12711:137":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:7540:3649":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"2:4650:221":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"17:12824:22063":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"2:40733:7248":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:34221:14709":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"11:351:35418":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"2:42039:7993":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"16:6620:5402":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"18:80:26235":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:38311:14713":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"16:4587:5268":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"1:5959:3207":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"2:44504:3187":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"16:6442:5379":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"16:6634:5236":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"18:651:4052":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"17:14436:4664":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"5:3648:182":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"16:6813:5442":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"2:7933:3144":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"17:11443:4244":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"11:123:5718":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"6:4870:6106":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"11:2326:7988":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"2:21722:9306":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"6:5382:6302":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"17:12508:4341":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"1:12127:28262":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"2:46784:7491":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"2:11417:3183":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:13661:8053":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"2:23122:7012":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU128Inner"],"kind":"struct"},"2:21730:9420":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"17:10439:4211":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"2:46352:7430":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"2:42420:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"5:4515:33831":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"6:6542:6537":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"16:2374:5204":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"2:2884:77":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"1:8548:3118":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"16:860:7899":{"crate_id":16,"path":["gimli","read","endian_slice","DebugBytes"],"kind":"struct"},"2:22493:9508":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"5:7465:6915":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"5:734:250":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:8727:32671":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"16:7111:5488":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"1:7360:8851":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"6:4965:6149":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"17:15426:4952":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"5:2770:6904":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"17:16050:4427":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"2:31024:3612":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"1:3553:3096":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"2:3996:3642":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"17:11898:4269":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"2:39731:7098":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"17:15289:4913":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"5:939:9259":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"1:4880:9364":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"2:46072:7408":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"2:2659:112":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"17:12443:4334":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"2:22824:6976":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:30997:196":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:44392:7352":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"17:14545:4675":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"6:7359:6728":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:45976:7402":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"17:14012:4575":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"5:3258:5731":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"16:6665:21994":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"2:9350:3390":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:5596:8104":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"2:41258:7274":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"6:545:5874":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"17:14788:4742":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"17:11595:4247":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"17:11075:4223":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"0:448:2623":{"crate_id":0,"path":["termcolor","Color","Green"],"kind":"variant"},"6:4992:6163":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"17:1098:7807":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"16:6066:5333":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"18:635:4074":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"0:284:2377":{"crate_id":0,"path":["termcolor","ColorChoice","Auto"],"kind":"variant"},"1:2713:28250":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"17:11153:7823":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"6:1686:6026":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"1:9202:7616":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"1:3061:137":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"1:943:7980":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"1:8879:7611":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"17:11293:22091":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"6:8259:6864":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"6:6738:6628":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"1:6400:8110":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"2:42176:5727":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"7:79:20970":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"1:12357:897":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"1:4147:9337":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"2:3863:3954":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"1:12342:1873":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"18:563:4061":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"18:754:4092":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"2:40579:3121":{"crate_id":2,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"2:47009:7496":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"2:40786:7255":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"17:9886:22056":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"6:1699:6030":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"11:875:7986":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"17:11877:4267":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"1:10985:31043":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"1:6352:6969":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"16:6532:5390":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"1:7403:28260":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"5:2302:35387":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"16:2508:5210":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"2:4433:14606":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"6:8282:6870":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"5:6958:3959":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"17:10905:7825":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"2:22989:7000":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:11642:7647":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"2:22889:32086":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:4155:9338":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"2:3270:5506":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"17:12433:4332":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"2:3385:141":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"5:7385:3642":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"6:1490:5902":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:12891:3154":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"2:47097:7500":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"2:6896:6953":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"17:13972:4274":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"2:42539:90":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"11:364:35421":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"6:5502:6370":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"16:2748:5221":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"16:5995:5323":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"2:43945:3186":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:13814:6969":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"6:5415:6320":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"17:16138:5152":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"5:1324:5491":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"5:1843:3952":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"0:444:2620":{"crate_id":0,"path":["termcolor","Color","Black"],"kind":"variant"},"1:8868:7610":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"17:14968:4841":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"1:9142:7613":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"6:8341:6883":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:11045:7614":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"2:42184:7993":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"6:5020:6179":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"16:3475:5254":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"18:670:7802":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"17:11853:7868":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:4842:3715":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"2:33190:14703":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"17:10828:35455":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"17:12076:7873":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"17:9858:22055":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"2:43692:2443":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:41797:9317":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"2:33730:14706":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"2:23144:7014":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI8Inner"],"kind":"struct"},"6:5296:6274":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"11:2423:3642":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"14:214:5708":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"2:13507:8049":{"crate_id":2,"path":["core","future","async_drop","AsyncDropOwning"],"kind":"struct"},"17:12464:22185":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"17:12671:7893":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"16:7168:7619":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"2:1755:3826":{"crate_id":2,"path":["core","intrinsics","AggregateRawPtr"],"kind":"trait"},"6:5052:6194":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"17:15222:4898":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"2:40589:9277":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"1:7988:9306":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"6:8317:6878":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"17:11825:7865":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"17:15748:5058":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"1:9283:115":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"2:42303:86":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:23188:7018":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI128Inner"],"kind":"struct"}},"external_crates":{"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":29}