{"root":"0:0:2264","crate_version":"1.3.0","includes_private":false,"index":{"b:5:5790-0:299:1811":{"id":"b:5:5790-0:299:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9490:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5788:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:299:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5792:1555"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2570-0:400:1871":{"id":"b:2:2570-0:400:1871","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Ansi","id":"0:400:1871","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2572:736"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:68:1843":{"id":"0:68:1843","crate_id":0,"name":"stdout","span":{"filename":"src/lib.rs","begin":[552,4],"end":[555,5]},"visibility":"public","docs":"Create a new `StandardStream` with the given color preferences that\nwrites to standard output.\n\nOn Windows, if coloring is desired and a Windows console could not be\nfound, then ANSI escape sequences are used instead.\n\nThe specific color/style settings can be configured when writing via\nthe `WriteColor` trait.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["choice",{"resolved_path":{"name":"ColorChoice","id":"0:279:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"StandardStream","id":"0:331:1855","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:74":{"id":"0:74","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[617,0],"end":[645,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"BufferedStandardStream","id":"0:341:1866","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:75:1843","0:76:1844"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12390:31100":{"id":"2:12390:31100","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:43721:2582","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3411-0:400:1871":{"id":"b:2:3411-0:400:1871","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3409:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Ansi","id":"0:400:1871","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:3413:1593"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2263-0:331:1855":{"id":"b:2:2263-0:331:1855","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2257:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStream","id":"0:331:1855","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2265:24685"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:680-0:299:1811":{"id":"b:5:680-0:299:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2276:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:299:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:3108","5:683:3109","5:684:3110"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8561:2804-0:279:1797":{"id":"a:2:8561:2804-0:279:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8561:2804","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:335:1863":{"id":"0:335:1863","crate_id":0,"name":"StandardStreamLock","span":{"filename":"src/lib.rs","begin":[501,0],"end":[503,1]},"visibility":"public","docs":"`StandardStreamLock` is a locked reference to a `StandardStream`.\n\nThis implements the `io::Write` and `WriteColor` traits, and is constructed\nvia the `Write::lock` method.\n\nThe lifetime `'a` refers to the lifetime of the corresponding\n`StandardStream`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:8560:2805-0:335:1863","a:2:8561:2804-0:335:1863","a:2:2792:249-0:335:1863","a:2:2775:240-0:335:1863","a:2:2832:2665-0:335:1863","b:2:2260-0:335:1863","b:2:2566-0:335:1863","b:2:2570-0:335:1863","b:2:3411-0:335:1863","b:2:2263-0:335:1863","b:2:2581-0:335:1863","b:2:2576-0:335:1863","0:89","0:338","0:93"]}}},"0:92:1852":{"id":"0:92:1852","crate_id":0,"name":"flush","span":{"filename":"src/lib.rs","begin":[750,4],"end":[752,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:185:1987":{"id":"0:185:1987","crate_id":0,"name":"into_inner","span":{"filename":"src/lib.rs","begin":[1468,4],"end":[1470,5]},"visibility":"public","docs":"Consume this `Ansi` value and return the inner writer.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"W"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:230:2122":{"id":"0:230:2122","crate_id":0,"name":"set_underline","span":{"filename":"src/lib.rs","begin":[1937,4],"end":[1940,5]},"visibility":"public","docs":"Set whether the text is underlined or not.\n\nNote that the underline setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12432:25511":{"id":"2:12432:25511","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41467:196","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12065:2575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12065:2575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12080:2576","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:217":{"id":"0:217","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1854,0],"end":[2046,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:218:993","0:219:2022","0:220:2100","0:221:2103","0:222:2105","0:223:2003","0:224:2109","0:225:2005","0:226:2114","0:227:2007","0:228:2118","0:229:2009","0:230:2122","0:231:2011","0:232:2126","0:233:1760","0:234:2136","0:235:2015","0:236:2144","0:237:2146","0:238:1983"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:479:710":{"id":"0:479:710","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[2190,16],"end":[2190,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9460:136","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9441:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2263-0:400:1871":{"id":"b:2:2263-0:400:1871","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2257:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Ansi","id":"0:400:1871","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2265:24685"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:247":{"id":"0:247","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2210,0],"end":[2219,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["cause","description","provide","source","type_id"],"trait":{"name":"Error","id":"2:2628:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:473:2171","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:248:2194"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:472:652":{"id":"0:472:652","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[2070,33],"end":[2070,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Color","id":"0:435:2023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2792:249-0:372:1921":{"id":"a:2:2792:249-0:372:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2792:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferWriter","id":"0:372:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2585:1578":{"id":"2:2585:1578","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:41612:229","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2550:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2570-0:379:1941":{"id":"b:2:2570-0:379:1941","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Buffer","id":"0:379:1941","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2572:736"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12453:32118":{"id":"2:12453:32118","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:35:1760":{"id":"0:35:1760","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[235,4],"end":[237,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5516":{"id":"5:5516","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5517:32782","5:5518:13882","5:5521:32783","5:5524:1813","5:5532:32784","5:5533:32785","5:5534:2562","5:5535:26780","5:5536:26781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2263-0:393:1870":{"id":"b:2:2263-0:393:1870","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2257:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoColor","id":"0:393:1870","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2265:24685"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:383:710":{"id":"0:383:710","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1182,9],"end":[1182,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9460:136","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9441:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2581-0:415:1754":{"id":"b:2:2581-0:415:1754","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2550:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2584:132","2:2585:1578"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:426:450":{"id":"0:426:450","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[1825,9],"end":[1825,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2576-0:400:1871":{"id":"b:2:2576-0:400:1871","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2550:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2546:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Ansi","id":"0:400:1871","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2579:132","2:2580:1580"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:438:2051":{"id":"0:438:2051","crate_id":0,"name":"Blue","span":{"filename":"src/lib.rs","begin":[2073,4],"end":[2073,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12368:32106":{"id":"2:12368:32106","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"5:5536:26781":{"id":"5:5536:26781","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12482:26652"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7487:245","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2566-0:415:1754":{"id":"b:2:2566-0:415:1754","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:3045"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:245":{"id":"0:245","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2203,0],"end":[2208,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ParseColorError","id":"0:473:2171","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:246:2193"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:506":{"id":"0:506","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2268,9],"end":[2268,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2276:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HyperlinkSpec","id":"0:503:1783","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:508:450"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2260-0:503:1783":{"id":"b:2:2260-0:503:1783","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2254:99","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"HyperlinkSpec","id":"0:503:1783","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2262:2478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2832:2665-0:400:1871":{"id":"a:2:2832:2665-0:400:1871","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2832:2665","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2832:2665","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Ansi","id":"0:400:1871","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2832:2665-0:415:1754":{"id":"a:2:2832:2665-0:415:1754","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2832:2665","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2792:249-0:503:1783":{"id":"a:2:2792:249-0:503:1783","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2792:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HyperlinkSpec","id":"0:503:1783","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2792:249-0:299:1811":{"id":"a:2:2792:249-0:299:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2792:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:299:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:279:1797":{"id":"0:279:1797","crate_id":0,"name":"ColorChoice","span":{"filename":"src/lib.rs","begin":[252,0],"end":[265,1]},"visibility":"public","docs":"ColorChoice represents the color preferences of an end user.\n\nThe `Default` implementation for this type will select `Auto`, which tries\nto do the right thing based on the current environment.\n\nThe `FromStr` implementation for this type converts a lowercase kebab-case\nstring of the variant name to the corresponding variant. Any other string\nresults in an error.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:280:1800","0:282:1803","0:284:1807","0:286:1809"],"impls":["a:2:8560:2805-0:279:1797","a:2:8561:2804-0:279:1797","a:2:2792:249-0:279:1797","a:2:2775:240-0:279:1797","a:2:2832:2665-0:279:1797","b:2:2260-0:279:1797","b:2:2566-0:279:1797","b:2:2570-0:279:1797","b:2:3411-0:279:1797","b:2:2263-0:279:1797","b:2:2581-0:279:1797","b:2:2576-0:279:1797","b:5:680-0:279:1797","0:37","0:296","0:290","0:293","0:288","0:291","0:294","0:297","0:39"]}}},"b:2:2576-0:503:1783":{"id":"b:2:2576-0:503:1783","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2550:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2546:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"HyperlinkSpec","id":"0:503:1783","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2579:132","2:2580:1580"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:196:1787":{"id":"0:196:1787","crate_id":0,"name":"supports_hyperlinks","span":{"filename":"src/lib.rs","begin":[1513,4],"end":[1515,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:331:1855":{"id":"0:331:1855","crate_id":0,"name":"StandardStream","span":{"filename":"src/lib.rs","begin":[489,0],"end":[491,1]},"visibility":"public","docs":"Satisfies `io::Write` and `WriteColor`, and supports optional coloring\nto either of the standard output streams, stdout and stderr.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:67","a:2:8560:2805-0:331:1855","a:2:8561:2804-0:331:1855","a:2:2792:249-0:331:1855","a:2:2775:240-0:331:1855","a:2:2832:2665-0:331:1855","b:2:2260-0:331:1855","b:2:2566-0:331:1855","b:2:2570-0:331:1855","b:2:3411-0:331:1855","b:2:2263-0:331:1855","b:2:2581-0:331:1855","b:2:2576-0:331:1855","0:82","0:333","0:79"]}}},"0:233:1760":{"id":"0:233:1760","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[1964,4],"end":[1966,5]},"visibility":"public","docs":"Get whether reset is enabled or not.\n\nreset is enabled by default. When disabled and using ANSI escape\nsequences, a \"reset\" code will be emitted every time a `ColorSpec`'s\nsettings are applied.\n\nNote that the reset setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12464:25512":{"id":"2:12464:25512","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12051:446","self::pattern":"2:12060:2581"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41467:196","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12065:2575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12065:2575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12080:2576","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3411-0:503:1783":{"id":"b:2:3411-0:503:1783","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3409:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HyperlinkSpec","id":"0:503:1783","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3413:1593"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:157":{"id":"0:157","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1328,0],"end":[1383,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["set_hyperlink","is_synchronous","supports_hyperlinks"],"trait":{"name":"WriteColor","id":"0:13:1744","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Buffer","id":"0:379:1941","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:158:1746","0:159:1787","0:160:1752","0:161:1781","0:162:1760","0:163:1770"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2260-0:331:1855":{"id":"b:2:2260-0:331:1855","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2254:99","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStream","id":"0:331:1855","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2262:2478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2260-0:279:1797":{"id":"b:2:2260-0:279:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2254:99","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2262:2478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5524:1813":{"id":"5:5524:1813","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7487:245"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7487:245","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:186:1898":{"id":"0:186:1898","crate_id":0,"name":"get_ref","span":{"filename":"src/lib.rs","begin":[1473,4],"end":[1475,5]},"visibility":"public","docs":"Return a reference to the inner writer.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"W"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:174":{"id":"0:174","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1424,0],"end":[1454,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3504:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["set_hyperlink","is_synchronous","supports_hyperlinks"],"trait":{"name":"WriteColor","id":"0:13:1744","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoColor","id":"0:393:1870","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["0:176:1746","0:177:1787","0:178:1752","0:179:1781","0:180:1760","0:181:1770"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2581-0:331:1855":{"id":"b:2:2581-0:331:1855","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2550:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStream","id":"0:331:1855","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2584:132","2:2585:1578"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12400:3089":{"id":"2:12400:3089","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41469:194","prim@char":"1:12051:446","self::pattern":"2:12060:2581"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41467:196","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12065:2575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12449:32116":{"id":"2:12449:32116","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:218:993":{"id":"0:218:993","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[1856,4],"end":[1858,5]},"visibility":"public","docs":"Create a new color specification that has no colors or styles.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12391:2190":{"id":"2:12391:2190","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12051:446","self::pattern":"2:12060:2581"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12065:2575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2569:3045":{"id":"2:2569:3045","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2543:137"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2581-0:379:1941":{"id":"b:2:2581-0:379:1941","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2550:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Buffer","id":"0:379:1941","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2584:132","2:2585:1578"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2570-0:415:1754":{"id":"b:2:2570-0:415:1754","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2572:736"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:141:1923":{"id":"0:141:1923","crate_id":0,"name":"separator","span":{"filename":"src/lib.rs","begin":[1113,4],"end":[1115,5]},"visibility":"public","docs":"If set, the separator given is printed between buffers. By default, no\nseparator is printed.\n\nThe default value is `None`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["sep",{"resolved_path":{"name":"Option","id":"2:41467:196","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Vec","id":"5:6912:265","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2260-0:299:1811":{"id":"b:2:2260-0:299:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2254:99","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:299:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2262:2478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2566-0:341:1866":{"id":"b:2:2566-0:341:1866","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferedStandardStream","id":"0:341:1866","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:3045"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12441:32113":{"id":"2:12441:32113","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12060:2581","`DoubleEndedIterator`":"2:7476:125","prim@char":"1:12051:446","str::rmatch_indices":"2:12444:32114"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:43579:2597","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12065:2575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:24:1787":{"id":"0:24:1787","crate_id":0,"name":"supports_hyperlinks","span":{"filename":"src/lib.rs","begin":[205,4],"end":[207,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2262:2478":{"id":"2:2262:2478","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8560:2805-0:393:1870":{"id":"a:2:8560:2805-0:393:1870","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8560:2805","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8560:2805","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoColor","id":"0:393:1870","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:172:1831":{"id":"0:172:1831","crate_id":0,"name":"write","span":{"filename":"src/lib.rs","begin":[1414,4],"end":[1416,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:84:1787":{"id":"0:84:1787","crate_id":0,"name":"supports_hyperlinks","span":{"filename":"src/lib.rs","begin":[718,4],"end":[720,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3413:1593":{"id":"2:3413:1593","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39314:6575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:100:1770":{"id":"0:100:1770","crate_id":0,"name":"is_synchronous","span":{"filename":"src/lib.rs","begin":[782,4],"end":[784,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:379:1941":{"id":"0:379:1941","crate_id":0,"name":"Buffer","span":{"filename":"src/lib.rs","begin":[1183,0],"end":[1183,31]},"visibility":"public","docs":"Write colored text to memory.\n\n`Buffer` is a platform independent abstraction for printing colored text to\nan in memory buffer. When the buffer is printed using a `BufferWriter`, the\ncolor information will be applied to the output device (a tty on Unix and a\nconsole on Windows).\n\nA `Buffer` is typically created by calling the `BufferWriter.buffer`\nmethod, which will take color preferences and the environment into\naccount. However, buffers can also be manually created using `no_color`,\n`ansi` or `console` (on Windows).","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:144","a:2:8560:2805-0:379:1941","a:2:8561:2804-0:379:1941","a:2:2792:249-0:379:1941","a:2:2775:240-0:379:1941","a:2:2832:2665-0:379:1941","b:2:2260-0:379:1941","b:2:2566-0:379:1941","b:2:2570-0:379:1941","b:2:3411-0:379:1941","b:2:2263-0:379:1941","b:2:2581-0:379:1941","b:2:2576-0:379:1941","0:154","0:382","0:157"]}}},"0:248:2194":{"id":"0:248:2194","crate_id":0,"name":"description","span":{"filename":"src/lib.rs","begin":[2211,4],"end":[2218,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2263-0:415:1754":{"id":"b:2:2263-0:415:1754","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2257:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2265:24685"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8561:2804-0:341:1866":{"id":"a:2:8561:2804-0:341:1866","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8561:2804","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferedStandardStream","id":"0:341:1866","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2775:240-0:393:1870":{"id":"a:2:2775:240-0:393:1870","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2775:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2775:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoColor","id":"0:393:1870","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12426:25508":{"id":"2:12426:25508","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12051:446","str::splitn":"2:12423:25506","self::pattern":"2:12060:2581"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43551:2602","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12065:2575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12065:2575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12080:2576","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:102:1831":{"id":"0:102:1831","crate_id":0,"name":"write","span":{"filename":"src/lib.rs","begin":[789,4],"end":[791,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["b",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:184:993":{"id":"0:184:993","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[1463,4],"end":[1465,5]},"visibility":"public","docs":"Create a new writer that satisfies `WriteColor` using standard ANSI\nescape sequences.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["wtr",{"generic":"W"}]],"output":{"resolved_path":{"name":"Ansi","id":"0:400:1871","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:188":{"id":"0:188","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1483,0],"end":[1504,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3504:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["write_vectored","write_fmt","write_all_vectored","write_all","is_write_vectored","by_ref"],"trait":{"name":"Write","id":"1:3504:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Ansi","id":"0:400:1871","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["0:190:1831","0:191:1948","0:192:1852"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5521:32783":{"id":"5:5521:32783","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7487:245"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7487:245","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12065:2575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12461:24934":{"id":"2:12461:24934","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12051:446","self::pattern":"2:12060:2581"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41467:196","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12065:2575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2260-0:341:1866":{"id":"b:2:2260-0:341:1866","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2254:99","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferedStandardStream","id":"0:341:1866","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2262:2478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8561:2804-0:503:1783":{"id":"a:2:8561:2804-0:503:1783","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8561:2804","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HyperlinkSpec","id":"0:503:1783","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:397":{"id":"0:397","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1386,9],"end":[1386,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:9485:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9485:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoColor","id":"0:393:1870","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["0:399:710"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:198:1781":{"id":"0:198:1781","crate_id":0,"name":"set_hyperlink","span":{"filename":"src/lib.rs","begin":[1547,4],"end":[1553,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["link",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"HyperlinkSpec","id":"0:503:1783","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2832:2665-0:279:1797":{"id":"a:2:2832:2665-0:279:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2832:2665","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:290":{"id":"0:290","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,16],"end":[251,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2787:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2581-0:341:1866":{"id":"b:2:2581-0:341:1866","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2550:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferedStandardStream","id":"0:341:1866","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2584:132","2:2585:1578"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:192:1852":{"id":"0:192:1852","crate_id":0,"name":"flush","span":{"filename":"src/lib.rs","begin":[1501,4],"end":[1503,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:446:2057":{"id":"0:446:2057","crate_id":0,"name":"Magenta","span":{"filename":"src/lib.rs","begin":[2077,4],"end":[2077,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:444:2055":{"id":"0:444:2055","crate_id":0,"name":"Cyan","span":{"filename":"src/lib.rs","begin":[2076,4],"end":[2076,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:483":{"id":"0:483","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2190,27],"end":[2190,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2785:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:473:2171","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:151:1987":{"id":"0:151:1987","crate_id":0,"name":"into_inner","span":{"filename":"src/lib.rs","begin":[1276,4],"end":[1283,5]},"visibility":"public","docs":"Consume this buffer and return the underlying raw data.\n\nOn Windows, this unrecoverably drops all color information associated\nwith the buffer.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Vec","id":"5:6912:265","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:139:1843":{"id":"0:139:1843","crate_id":0,"name":"stdout","span":{"filename":"src/lib.rs","begin":[1093,4],"end":[1095,5]},"visibility":"public","docs":"Create a new `BufferWriter` that writes to stdout with the given\ncolor preferences.\n\nOn Windows, if coloring is desired and a Windows console could not be\nfound, then ANSI escape sequences are used instead.\n\nThe specific color/style settings can be configured when writing to\nthe buffers themselves.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["choice",{"resolved_path":{"name":"ColorChoice","id":"0:279:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"BufferWriter","id":"0:372:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8560:2805-0:415:1754":{"id":"a:2:8560:2805-0:415:1754","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8560:2805","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12451:32117":{"id":"2:12451:32117","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:289:450":{"id":"0:289:450","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[251,9],"end":[251,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ColorChoice","id":"0:279:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2581-0:335:1863":{"id":"b:2:2581-0:335:1863","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2550:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStreamLock","id":"0:335:1863","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2584:132","2:2585:1578"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8561:2804-0:415:1754":{"id":"a:2:8561:2804-0:415:1754","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8561:2804","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:251:710":{"id":"0:251:710","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[2222,4],"end":[2246,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9460:136","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9441:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2792:249-0:435:2023":{"id":"a:2:2792:249-0:435:2023","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2792:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:435:2023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8561:2804-0:372:1921":{"id":"a:2:8561:2804-0:372:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8561:2804","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferWriter","id":"0:372:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:177:1787":{"id":"0:177:1787","crate_id":0,"name":"supports_hyperlinks","span":{"filename":"src/lib.rs","begin":[1431,4],"end":[1433,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:442:2054":{"id":"0:442:2054","crate_id":0,"name":"Red","span":{"filename":"src/lib.rs","begin":[2075,4],"end":[2075,7]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"5:682:3108":{"id":"5:682:3108","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"b:2:2263-0:473:2171":{"id":"b:2:2263-0:473:2171","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2257:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:473:2171","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2265:24685"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:286:1809":{"id":"0:286:1809","crate_id":0,"name":"Never","span":{"filename":"src/lib.rs","begin":[264,4],"end":[264,9]},"visibility":"default","docs":"Never emit colors.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:297":{"id":"0:297","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,33],"end":[251,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2324:203","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ColorChoice","id":"0:279:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:298:652"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2566-0:372:1921":{"id":"b:2:2566-0:372:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferWriter","id":"0:372:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:3045"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2775:240-0:400:1871":{"id":"a:2:2775:240-0:400:1871","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2775:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2775:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Ansi","id":"0:400:1871","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:415:1754":{"id":"0:415:1754","crate_id":0,"name":"ColorSpec","span":{"filename":"src/lib.rs","begin":[1826,0],"end":[1836,1]},"visibility":"public","docs":"A color specification.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:217","a:2:8560:2805-0:415:1754","a:2:8561:2804-0:415:1754","a:2:2792:249-0:415:1754","a:2:2775:240-0:415:1754","a:2:2832:2665-0:415:1754","b:2:2260-0:415:1754","b:2:2566-0:415:1754","b:2:2570-0:415:1754","b:2:3411-0:415:1754","b:2:2263-0:415:1754","b:2:2581-0:415:1754","b:2:2576-0:415:1754","b:5:680-0:415:1754","0:215","0:432","0:429","0:425","0:427","0:433","0:430"]}}},"0:98:1781":{"id":"0:98:1781","crate_id":0,"name":"set_hyperlink","span":{"filename":"src/lib.rs","begin":[772,4],"end":[774,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["link",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"HyperlinkSpec","id":"0:503:1783","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12408:2177":{"id":"2:12408:2177","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12060:2581","`DoubleEndedIterator`":"2:7476:125","prim@char":"1:12051:446","str::split_whitespace":"2:12386:31111","str::rsplit":"2:12414:25504"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43429:2543","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12065:2575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2566-0:400:1871":{"id":"b:2:2566-0:400:1871","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Ansi","id":"0:400:1871","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2569:3045"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3411-0:379:1941":{"id":"b:2:3411-0:379:1941","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3409:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Buffer","id":"0:379:1941","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3413:1593"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:199:1760":{"id":"0:199:1760","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[1556,4],"end":[1558,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2832:2665-0:393:1870":{"id":"a:2:2832:2665-0:393:1870","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2832:2665","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2832:2665","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoColor","id":"0:393:1870","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8560:2805-0:372:1921":{"id":"a:2:8560:2805-0:372:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8560:2805","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferWriter","id":"0:372:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:15:1752":{"id":"0:15:1752","crate_id":0,"name":"set_color","span":{"filename":"src/lib.rs","begin":[145,4],"end":[145,64]},"visibility":"default","docs":"Set the color settings of the writer.\n\nSubsequent writes to this writer will use these settings until either\n`reset` is called or new color settings are set.\n\nIf there was a problem setting the color settings, then an error is\nreturned.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["spec",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:147:1971":{"id":"0:147:1971","crate_id":0,"name":"ansi","span":{"filename":"src/lib.rs","begin":[1237,4],"end":[1239,5]},"visibility":"public","docs":"Create a buffer that uses ANSI escape sequences.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Buffer","id":"0:379:1941","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12384:6826":{"id":"2:12384:6826","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12051:446"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43405:2587","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12360:1947":{"id":"2:12360:1947","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8561:2804-0:331:1855":{"id":"a:2:8561:2804-0:331:1855","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8561:2804","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStream","id":"0:331:1855","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12385:6425":{"id":"2:12385:6425","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43415:2542","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:195:1746":{"id":"0:195:1746","crate_id":0,"name":"supports_color","span":{"filename":"src/lib.rs","begin":[1508,4],"end":[1510,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5535:26780":{"id":"5:5535:26780","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12481:26651"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7487:245","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:20":{"id":"0:20","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[201,0],"end":[220,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"WriteColor","id":"0:13:1744","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["set_hyperlink","is_synchronous","supports_hyperlinks"],"trait":{"name":"WriteColor","id":"0:13:1744","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"T"}}},"items":["0:23:1746","0:24:1787","0:25:1752","0:26:1781","0:27:1760","0:28:1770"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:291":{"id":"0:291","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,22],"end":[251,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9485:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:292:710"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2792:249-0:473:2171":{"id":"a:2:2792:249-0:473:2171","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2792:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:473:2171","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:143:1946":{"id":"0:143:1946","crate_id":0,"name":"print","span":{"filename":"src/lib.rs","begin":[1140,4],"end":[1168,5]},"visibility":"public","docs":"Prints the contents of the given buffer.\n\nIt is safe to call this from multiple threads simultaneously. In\nparticular, all buffers are written atomically. No interleaving will\noccur.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Buffer","id":"0:379:1941","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2263-0:335:1863":{"id":"b:2:2263-0:335:1863","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2257:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStreamLock","id":"0:335:1863","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2265:24685"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:193":{"id":"0:193","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1506,0],"end":[1564,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3504:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["set_hyperlink","is_synchronous","supports_hyperlinks"],"trait":{"name":"WriteColor","id":"0:13:1744","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Ansi","id":"0:400:1871","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["0:195:1746","0:196:1787","0:197:1752","0:198:1781","0:199:1760","0:200:1770"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2576-0:435:2023":{"id":"b:2:2576-0:435:2023","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2550:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2546:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:435:2023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2579:132","2:2580:1580"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2570-0:299:1811":{"id":"b:2:2570-0:299:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:299:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2572:736"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2260-0:415:1754":{"id":"b:2:2260-0:415:1754","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2254:99","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2262:2478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:162:1760":{"id":"0:162:1760","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[1370,4],"end":[1377,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:88:1770":{"id":"0:88:1770","crate_id":0,"name":"is_synchronous","span":{"filename":"src/lib.rs","begin":[738,4],"end":[740,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:106:1787":{"id":"0:106:1787","crate_id":0,"name":"supports_hyperlinks","span":{"filename":"src/lib.rs","begin":[806,4],"end":[808,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:109:1760":{"id":"0:109:1760","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[827,4],"end":[829,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:110:1770":{"id":"0:110:1770","crate_id":0,"name":"is_synchronous","span":{"filename":"src/lib.rs","begin":[832,4],"end":[834,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12361:32103":{"id":"2:12361:32103","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12454:32119":{"id":"2:12454:32119","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2581-0:393:1870":{"id":"b:2:2581-0:393:1870","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2550:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoColor","id":"0:393:1870","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2584:132","2:2585:1578"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:503:1783":{"id":"0:503:1783","crate_id":0,"name":"HyperlinkSpec","span":{"filename":"src/lib.rs","begin":[2269,0],"end":[2271,1]},"visibility":"public","docs":"A hyperlink specification.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:256","a:2:8560:2805-0:503:1783","a:2:8561:2804-0:503:1783","a:2:2792:249-0:503:1783","a:2:2775:240-0:503:1783","a:2:2832:2665-0:503:1783","b:2:2260-0:503:1783","b:2:2566-0:503:1783","b:2:2570-0:503:1783","b:2:3411-0:503:1783","b:2:2263-0:503:1783","b:2:2581-0:503:1783","b:2:2576-0:503:1783","b:5:680-0:503:1783","0:509","0:506"]}}},"0:436:2050":{"id":"0:436:2050","crate_id":0,"name":"Black","span":{"filename":"src/lib.rs","begin":[2072,4],"end":[2072,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:32:1787":{"id":"0:32:1787","crate_id":0,"name":"supports_hyperlinks","span":{"filename":"src/lib.rs","begin":[226,4],"end":[228,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3411-0:415:1754":{"id":"b:2:3411-0:415:1754","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3409:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3413:1593"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2581-0:372:1921":{"id":"b:2:2581-0:372:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2550:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferWriter","id":"0:372:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2584:132","2:2585:1578"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2792:249-0:279:1797":{"id":"a:2:2792:249-0:279:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2792:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:41:1812":{"id":"0:41:1812","crate_id":0,"name":"from_str","span":{"filename":"src/lib.rs","begin":[277,4],"end":[287,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41612:229","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ColorChoice","id":"0:279:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:299:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:187:1998":{"id":"0:187:1998","crate_id":0,"name":"get_mut","span":{"filename":"src/lib.rs","begin":[1478,4],"end":[1480,5]},"visibility":"public","docs":"Return a mutable reference to the inner writer.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"W"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:140:1844":{"id":"0:140:1844","crate_id":0,"name":"stderr","span":{"filename":"src/lib.rs","begin":[1105,4],"end":[1107,5]},"visibility":"public","docs":"Create a new `BufferWriter` that writes to stderr with the given\ncolor preferences.\n\nOn Windows, if coloring is desired and a Windows console could not be\nfound, then ANSI escape sequences are used instead.\n\nThe specific color/style settings can be configured when writing to\nthe buffers themselves.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["choice",{"resolved_path":{"name":"ColorChoice","id":"0:279:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"BufferWriter","id":"0:372:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:680-0:473:2171":{"id":"b:5:680-0:473:2171","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2276:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:473:2171","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:3108","5:683:3109","5:684:3110"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5792:1555":{"id":"5:5792:1555","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7487:245","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12423:25506":{"id":"2:12423:25506","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12051:446","self::pattern":"2:12060:2581","str::rsplitn":"2:12426:25508"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43533:2603","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12065:2575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:455:2064":{"id":"0:455:2064","crate_id":0,"name":"Rgb","span":{"filename":"src/lib.rs","begin":[2081,4],"end":[2081,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:457:1714","0:458:1715","0:459:1716"]},"discriminant":null}}},"0:255:1812":{"id":"0:255:1812","crate_id":0,"name":"from_str","span":{"filename":"src/lib.rs","begin":[2252,4],"end":[2264,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41612:229","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Color","id":"0:435:2023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"ParseColorError","id":"0:473:2171","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2263-0:379:1941":{"id":"b:2:2263-0:379:1941","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2257:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Buffer","id":"0:379:1941","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2265:24685"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:154":{"id":"0:154","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1306,0],"end":[1326,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["write_vectored","write_fmt","write_all_vectored","write_all","is_write_vectored","by_ref"],"trait":{"name":"Write","id":"1:3504:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Buffer","id":"0:379:1941","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:155:1831","0:156:1852"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:169:1998":{"id":"0:169:1998","crate_id":0,"name":"get_mut","span":{"filename":"src/lib.rs","begin":[1407,4],"end":[1409,5]},"visibility":"public","docs":"Return a mutable reference to the inner writer.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"W"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:400:1871":{"id":"0:400:1871","crate_id":0,"name":"Ansi","span":{"filename":"src/lib.rs","begin":[1458,0],"end":[1458,22]},"visibility":"public","docs":"Satisfies `WriteColor` using standard ANSI escape sequences.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:182","a:2:8560:2805-0:400:1871","a:2:8561:2804-0:400:1871","a:2:2792:249-0:400:1871","a:2:2775:240-0:400:1871","a:2:2832:2665-0:400:1871","b:2:2260-0:400:1871","b:2:2566-0:400:1871","b:2:2570-0:400:1871","b:2:3411-0:400:1871","b:2:2263-0:400:1871","b:2:2581-0:400:1871","b:2:2576-0:400:1871","0:193","0:404","0:188"]}}},"b:2:2566-0:279:1797":{"id":"b:2:2566-0:279:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:3045"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12485:8460":{"id":"2:12485:8460","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4560:8460"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:43737:2593","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12467:32122":{"id":"2:12467:32122","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12051:446","self::pattern":"2:12060:2581"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12065:2575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12065:2575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12080:2576","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:210:1746":{"id":"0:210:1746","crate_id":0,"name":"supports_color","span":{"filename":"src/lib.rs","begin":[1682,4],"end":[1684,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2260-0:335:1863":{"id":"b:2:2260-0:335:1863","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2254:99","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStreamLock","id":"0:335:1863","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2262:2478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:70:1846":{"id":"0:70:1846","crate_id":0,"name":"lock","span":{"filename":"src/lib.rs","begin":[577,4],"end":[579,5]},"visibility":"public","docs":"Lock the underlying writer.\n\nThe lock guard returned also satisfies `io::Write` and\n`WriteColor`.\n\nThis method is **not reentrant**. It may panic if `lock` is called\nwhile a `StandardStreamLock` is still alive.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"StandardStreamLock","id":"0:335:1863","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:38:60":{"id":"0:38:60","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[269,4],"end":[271,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"ColorChoice","id":"0:279:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8561:2804-0:299:1811":{"id":"a:2:8561:2804-0:299:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8561:2804","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:299:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2260-0:372:1921":{"id":"b:2:2260-0:372:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2254:99","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferWriter","id":"0:372:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2262:2478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:304:710":{"id":"0:304:710","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[363,16],"end":[363,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9460:136","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9441:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2832:2665-0:341:1866":{"id":"a:2:2832:2665-0:341:1866","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2832:2665","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferedStandardStream","id":"0:341:1866","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:215":{"id":"0:215","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1838,0],"end":[1852,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2617:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:216:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:466:710":{"id":"0:466:710","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[2070,22],"end":[2070,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9460:136","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9441:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8560:2805-0:503:1783":{"id":"a:2:8560:2805-0:503:1783","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8560:2805","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HyperlinkSpec","id":"0:503:1783","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:428:710":{"id":"0:428:710","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1825,16],"end":[1825,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9460:136","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9441:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2832:2665-0:503:1783":{"id":"a:2:2832:2665-0:503:1783","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2832:2665","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HyperlinkSpec","id":"0:503:1783","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2576-0:415:1754":{"id":"b:2:2576-0:415:1754","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2550:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2546:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2579:132","2:2580:1580"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:16:1760":{"id":"0:16:1760","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[155,4],"end":[155,42]},"visibility":"default","docs":"Reset the current color settings to their original settings.\n\nIf there was a problem resetting the color settings, then an error is\nreturned.\n\nNote that this does not reset hyperlinks. Those need to be\nreset on their own, e.g., by calling `set_hyperlink` with\n[`HyperlinkSpec::none`].","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:178:1752":{"id":"0:178:1752","crate_id":0,"name":"set_color","span":{"filename":"src/lib.rs","begin":[1436,4],"end":[1438,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["_",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2792:249-0:335:1863":{"id":"a:2:2792:249-0:335:1863","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2792:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStreamLock","id":"0:335:1863","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:47:710":{"id":"0:47:710","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[371,4],"end":[378,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9460:136","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9441:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:508:450":{"id":"0:508:450","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[2268,9],"end":[2268,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"HyperlinkSpec","id":"0:503:1783","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12373:1998":{"id":"2:12373:1998","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41469:194"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41467:196","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10150:242","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10150:242","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:173:1852":{"id":"0:173:1852","crate_id":0,"name":"flush","span":{"filename":"src/lib.rs","begin":[1419,4],"end":[1421,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2581-0:473:2171":{"id":"b:2:2581-0:473:2171","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2550:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:473:2171","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2584:132","2:2585:1578"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12382:25494":{"id":"2:12382:25494","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12381:25493"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12420:32111":{"id":"2:12420:32111","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12060:2581","str::split":"2:12408:2177","prim@char":"1:12051:446","str::split_terminator":"2:12417:32110"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43497:2604","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12065:2575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12065:2575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12080:2576","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12455:32120":{"id":"2:12455:32120","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12051:446","self::pattern":"2:12060:2581"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12065:2575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12065:2575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12085:2574","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12486:32126":{"id":"2:12486:32126","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4557:32126"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:43746:2594","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5534:2562":{"id":"5:5534:2562","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7487:245"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7487:245","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:211:1787":{"id":"0:211:1787","crate_id":0,"name":"supports_hyperlinks","span":{"filename":"src/lib.rs","begin":[1686,4],"end":[1688,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2832:2665-0:299:1811":{"id":"a:2:2832:2665-0:299:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2832:2665","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:299:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:197:1752":{"id":"0:197:1752","crate_id":0,"name":"set_color","span":{"filename":"src/lib.rs","begin":[1518,4],"end":[1544,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["spec",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:684:3110":{"id":"5:684:3110","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:39":{"id":"0:39","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[274,0],"end":[288,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12020:1740","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:40:131","0:41:1812"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2832:2665-0:331:1855":{"id":"a:2:2832:2665-0:331:1855","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2832:2665","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStream","id":"0:331:1855","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2832:2665-0:335:1863":{"id":"a:2:2832:2665-0:335:1863","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2832:2665","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStreamLock","id":"0:335:1863","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:153:1991":{"id":"0:153:1991","crate_id":0,"name":"as_mut_slice","span":{"filename":"src/lib.rs","begin":[1296,4],"end":[1303,5]},"visibility":"public","docs":"Return the underlying data of the buffer as a mutable slice.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:476":{"id":"0:476","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2190,9],"end":[2190,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2276:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:473:2171","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:477:450"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12371:25468":{"id":"2:12371:25468","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41469:194"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41467:196","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10150:242","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10150:242","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:683:3109":{"id":"5:683:3109","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:31:1746":{"id":"0:31:1746","crate_id":0,"name":"supports_color","span":{"filename":"src/lib.rs","begin":[223,4],"end":[225,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2566-0:379:1941":{"id":"b:2:2566-0:379:1941","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Buffer","id":"0:379:1941","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:3045"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12381:25493":{"id":"2:12381:25493","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:12382:25494"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:509":{"id":"0:509","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2268,16],"end":[2268,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9485:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HyperlinkSpec","id":"0:503:1783","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:511:710"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8561:2804-0:393:1870":{"id":"a:2:8561:2804-0:393:1870","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8561:2804","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8561:2804","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoColor","id":"0:393:1870","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2566-0:335:1863":{"id":"b:2:2566-0:335:1863","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStreamLock","id":"0:335:1863","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2569:3045"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:164":{"id":"0:164","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1389,0],"end":[1410,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Write","id":"1:3504:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"NoColor","id":"0:393:1870","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["0:166:993","0:167:1987","0:168:1898","0:169:1998"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:37":{"id":"0:37","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[268,0],"end":[272,1]},"visibility":"default","docs":"The default is `Auto`.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2617:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:38:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:222:2105":{"id":"0:222:2105","crate_id":0,"name":"set_bg","span":{"filename":"src/lib.rs","begin":[1877,4],"end":[1880,5]},"visibility":"public","docs":"Set the background color.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["color",{"resolved_path":{"name":"Option","id":"2:41467:196","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Color","id":"0:435:2023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:288":{"id":"0:288","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,9],"end":[251,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2276:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:289:450"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2775:240-0:473:2171":{"id":"a:2:2775:240-0:473:2171","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2775:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:473:2171","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:181:1770":{"id":"0:181:1770","crate_id":0,"name":"is_synchronous","span":{"filename":"src/lib.rs","begin":[1451,4],"end":[1453,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:485:652":{"id":"0:485:652","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[2190,27],"end":[2190,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ParseColorError","id":"0:473:2171","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2566-0:503:1783":{"id":"b:2:2566-0:503:1783","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"HyperlinkSpec","id":"0:503:1783","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2569:3045"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12389:32109":{"id":"2:12389:32109","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:43693:2596","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:256":{"id":"0:256","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2273,0],"end":[2288,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"HyperlinkSpec","id":"0:503:1783","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:258:2211","0:259:2213","0:260:2018"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:292:710":{"id":"0:292:710","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[251,22],"end":[251,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9460:136","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9441:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2581-0:400:1871":{"id":"b:2:2581-0:400:1871","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2550:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Ansi","id":"0:400:1871","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2584:132","2:2585:1578"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12481:26651":{"id":"2:12481:26651","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:253":{"id":"0:253","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2249,0],"end":[2265,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12020:1740","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:435:2023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:254:131","0:255:1812"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12397:25064":{"id":"2:12397:25064","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12051:446","self::pattern":"2:12060:2581"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12065:2575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12065:2575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12080:2576","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2263-0:372:1921":{"id":"b:2:2263-0:372:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2257:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferWriter","id":"0:372:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2265:24685"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2792:249-0:331:1855":{"id":"a:2:2792:249-0:331:1855","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2792:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStream","id":"0:331:1855","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8560:2805-0:341:1866":{"id":"a:2:8560:2805-0:341:1866","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8560:2805","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferedStandardStream","id":"0:341:1866","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2832:2665-0:372:1921":{"id":"a:2:2832:2665-0:372:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2832:2665","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferWriter","id":"0:372:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:404":{"id":"0:404","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1457,9],"end":[1457,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:9485:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9485:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Ansi","id":"0:400:1871","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["0:406:710"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2792:249-0:415:1754":{"id":"a:2:2792:249-0:415:1754","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2792:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:219:2022":{"id":"0:219:2022","crate_id":0,"name":"fg","span":{"filename":"src/lib.rs","begin":[1861,4],"end":[1863,5]},"visibility":"public","docs":"Get the foreground color.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41467:196","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Color","id":"0:435:2023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:232:2126":{"id":"0:232:2126","crate_id":0,"name":"set_strikethrough","span":{"filename":"src/lib.rs","begin":[1952,4],"end":[1955,5]},"visibility":"public","docs":"Set whether the text is strikethrough or not.\n\nNote that the strikethrough setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5518:13882":{"id":"5:5518:13882","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7487:245"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7487:245","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12065:2575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:378:710":{"id":"0:378:710","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1023,9],"end":[1023,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9460:136","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9441:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3411-0:435:2023":{"id":"b:2:3411-0:435:2023","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3409:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:435:2023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3413:1593"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:680-0:279:1797":{"id":"b:5:680-0:279:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2276:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:3108","5:683:3109","5:684:3110"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2263-0:503:1783":{"id":"b:2:2263-0:503:1783","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2257:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"HyperlinkSpec","id":"0:503:1783","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2265:24685"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:425":{"id":"0:425","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1825,9],"end":[1825,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2276:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:426:450"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:97:1752":{"id":"0:97:1752","crate_id":0,"name":"set_color","span":{"filename":"src/lib.rs","begin":[767,4],"end":[769,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["spec",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2570-0:503:1783":{"id":"b:2:2570-0:503:1783","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"HyperlinkSpec","id":"0:503:1783","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2572:736"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2581-0:279:1797":{"id":"b:2:2581-0:279:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2550:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2584:132","2:2585:1578"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12370:337":{"id":"2:12370:337","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12068:1602"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8560:2805-0:331:1855":{"id":"a:2:8560:2805-0:331:1855","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8560:2805","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStream","id":"0:331:1855","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:17:1770":{"id":"0:17:1770","crate_id":0,"name":"is_synchronous","span":{"filename":"src/lib.rs","begin":[168,4],"end":[170,5]},"visibility":"default","docs":"Returns true if and only if the underlying writer must synchronously\ninteract with an end user's device in order to control colors. By\ndefault, this always returns `false`.\n\nIn practice, this should return `true` if the underlying writer is\nmanipulating colors using the Windows console APIs.\n\nThis is useful for writing generic code (such as a buffered writer)\nthat can perform certain optimizations when the underlying writer\ndoesn't rely on synchronous APIs. For example, ANSI escape sequences\ncan be passed through to the end user's device as is.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8561:2804-0:379:1941":{"id":"a:2:8561:2804-0:379:1941","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8561:2804","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Buffer","id":"0:379:1941","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:69:1844":{"id":"0:69:1844","crate_id":0,"name":"stderr","span":{"filename":"src/lib.rs","begin":[565,4],"end":[568,5]},"visibility":"public","docs":"Create a new `StandardStream` with the given color preferences that\nwrites to standard error.\n\nOn Windows, if coloring is desired and a Windows console could not be\nfound, then ANSI escape sequences are used instead.\n\nThe specific color/style settings can be configured when writing via\nthe `WriteColor` trait.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["choice",{"resolved_path":{"name":"ColorChoice","id":"0:279:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"StandardStream","id":"0:331:1855","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:216:60":{"id":"0:216:60","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[1839,4],"end":[1851,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2581-0:503:1783":{"id":"b:2:2581-0:503:1783","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2550:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"HyperlinkSpec","id":"0:503:1783","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2584:132","2:2585:1578"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:338":{"id":"0:338","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[500,9],"end":[500,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9485:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStreamLock","id":"0:335:1863","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:340:710"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12377:25470":{"id":"2:12377:25470","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10150:242","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10150:242","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:26:1781":{"id":"0:26:1781","crate_id":0,"name":"set_hyperlink","span":{"filename":"src/lib.rs","begin":[211,4],"end":[213,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["link",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"HyperlinkSpec","id":"0:503:1783","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12404:3051":{"id":"2:12404:3051","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41469:194","prim@char":"1:12051:446","self::pattern":"2:12060:2581"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41467:196","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12065:2575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12065:2575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12080:2576","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:144":{"id":"0:144","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1200,0],"end":[1304,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Buffer","id":"0:379:1941","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:146:1972","0:147:1971","0:148:1947","0:149:864","0:150:1983","0:151:1987","0:152:1989","0:153:1991"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:680-0:415:1754":{"id":"b:5:680-0:415:1754","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2276:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:3108","5:683:3109","5:684:3110"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:427":{"id":"0:427","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1825,16],"end":[1825,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9485:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:428:710"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8560:2805-0:379:1941":{"id":"a:2:8560:2805-0:379:1941","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8560:2805","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Buffer","id":"0:379:1941","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:28:1770":{"id":"0:28:1770","crate_id":0,"name":"is_synchronous","span":{"filename":"src/lib.rs","begin":[217,4],"end":[219,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12367:2021":{"id":"2:12367:2021","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11620:2218"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:220:2100":{"id":"0:220:2100","crate_id":0,"name":"set_fg","span":{"filename":"src/lib.rs","begin":[1866,4],"end":[1869,5]},"visibility":"public","docs":"Set the foreground color.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["color",{"resolved_path":{"name":"Option","id":"2:41467:196","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Color","id":"0:435:2023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2792:249-0:341:1866":{"id":"a:2:2792:249-0:341:1866","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2792:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferedStandardStream","id":"0:341:1866","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:0:2264":{"id":"0:0:2264","crate_id":0,"name":"termcolor","span":{"filename":"src/lib.rs","begin":[1,0],"end":[2572,1]},"visibility":"public","docs":"This crate provides a cross platform abstraction for writing colored text to\na terminal. Colors are written using either ANSI escape sequences or by\ncommunicating with a Windows console. Much of this API was motivated by use\ninside command line applications, where colors or styles can be configured\nby the end user and/or the environment.\n\nThis crate also provides platform independent support for writing colored text\nto an in memory buffer. While this is easy to do with ANSI escape sequences\n(because they are in the buffer themselves), it is trickier to do with the\nWindows console API, which requires synchronous communication.\n\nIn ANSI mode, this crate also provides support for writing hyperlinks.\n\n# Organization\n\nThe `WriteColor` trait extends the `io::Write` trait with methods for setting\ncolors or resetting them.\n\n`StandardStream` and `StandardStreamLock` both satisfy `WriteColor` and are\nanalogous to `std::io::Stdout` and `std::io::StdoutLock`, or `std::io::Stderr`\nand `std::io::StderrLock`.\n\n`Buffer` is an in memory buffer that supports colored text. In a parallel\nprogram, each thread might write to its own buffer. A buffer can be printed to\nusing a `BufferWriter`. The advantage of this design is that each thread can\nwork in parallel on a buffer without having to synchronize access to global\nresources such as the Windows console. Moreover, this design also prevents\ninterleaving of buffer output.\n\n`Ansi` and `NoColor` both satisfy `WriteColor` for arbitrary implementors of\n`io::Write`. These types are useful when you know exactly what you need. An\nanalogous type for the Windows console is not provided since it cannot exist.\n\n# Example: using `StandardStream`\n\nThe `StandardStream` type in this crate works similarly to `std::io::Stdout`,\nexcept it is augmented with methods for coloring by the `WriteColor` trait.\nFor example, to write some green text:\n\n```rust,no_run\n# fn test() -> Result<(), Box<::std::error::Error>> {\nuse std::io::Write;\nuse termcolor::{Color, ColorChoice, ColorSpec, StandardStream, WriteColor};\n\nlet mut stdout = StandardStream::stdout(ColorChoice::Always);\nstdout.set_color(ColorSpec::new().set_fg(Some(Color::Green)))?;\nwriteln!(&mut stdout, \"green text!\")?;\n# Ok(()) }\n```\n\nNote that any text written to the terminal now will be colored\ngreen when using ANSI escape sequences, even if it is written via\nstderr, and even if stderr had previously been set to `Color::Red`.\nUsers will need to manage any color changes themselves by calling\n[`WriteColor::set_color`](trait.WriteColor.html#tymethod.set_color), and this\nmay include calling [`WriteColor::reset`](trait.WriteColor.html#tymethod.reset)\nbefore the program exits to a shell.\n\n# Example: using `BufferWriter`\n\nA `BufferWriter` can create buffers and write buffers to stdout or stderr. It\ndoes *not* implement `io::Write` or `WriteColor` itself. Instead, `Buffer`\nimplements `io::Write` and `io::WriteColor`.\n\nThis example shows how to print some green text to stderr.\n\n```rust,no_run\n# fn test() -> Result<(), Box<::std::error::Error>> {\nuse std::io::Write;\nuse termcolor::{BufferWriter, Color, ColorChoice, ColorSpec, WriteColor};\n\nlet mut bufwtr = BufferWriter::stderr(ColorChoice::Always);\nlet mut buffer = bufwtr.buffer();\nbuffer.set_color(ColorSpec::new().set_fg(Some(Color::Green)))?;\nwriteln!(&mut buffer, \"green text!\")?;\nbufwtr.print(&buffer)?;\n# Ok(()) }\n```\n\n# Detecting presence of a terminal\n\nIn many scenarios when using color, one often wants to enable colors\nautomatically when writing to a terminal and disable colors automatically when\nwriting to anything else. The typical way to achieve this in Unix environments\nis via libc's\n[`isatty`](https://man7.org/linux/man-pages/man3/isatty.3.html)\nfunction.\nUnfortunately, this notoriously does not work well in Windows environments. To\nwork around that, the recommended solution is to use the standard library's\n[`IsTerminal`](https://doc.rust-lang.org/std/io/trait.IsTerminal.html) trait.\nIt goes out of its way to get it as right as possible in Windows environments.\n\nFor example, in a command line application that exposes a `--color` flag,\nyour logic for how to enable colors might look like this:\n\n```ignore\nuse std::io::IsTerminal;\n\nuse termcolor::{ColorChoice, StandardStream};\n\nlet preference = argv.get_flag(\"color\").unwrap_or(\"auto\");\nlet mut choice = preference.parse::<ColorChoice>()?;\nif choice == ColorChoice::Auto && !std::io::stdin().is_terminal() {\n    choice = ColorChoice::Never;\n}\nlet stdout = StandardStream::stdout(choice);\n// ... write to stdout\n```\n\nCurrently, `termcolor` does not provide anything to do this for you.","links":{},"attrs":["#![deny(missing_debug_implementations, missing_docs)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:13:1744","0:279:1797","0:299:1811","0:331:1855","0:335:1863","0:341:1866","0:372:1921","0:379:1941","0:393:1870","0:400:1871","0:415:1754","0:435:2023","0:473:2171","0:503:1783"],"is_stripped":false}}},"2:12414:25504":{"id":"2:12414:25504","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12060:2581","`DoubleEndedIterator`":"2:7476:125","prim@char":"1:12051:446","str::split":"2:12408:2177"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43447:2601","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12065:2575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12065:2575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12080:2576","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2576-0:299:1811":{"id":"b:2:2576-0:299:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2550:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2546:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:299:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2579:132","2:2580:1580"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:399:710":{"id":"0:399:710","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1386,9],"end":[1386,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9460:136","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9441:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2570-0:372:1921":{"id":"b:2:2570-0:372:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferWriter","id":"0:372:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2572:736"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2832:2665-0:435:2023":{"id":"a:2:2832:2665-0:435:2023","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2832:2665","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:435:2023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2263-0:299:1811":{"id":"b:2:2263-0:299:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2257:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:299:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2265:24685"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12369:338":{"id":"2:12369:338","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12370:337","`u8`":"1:12068:1602"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3411-0:299:1811":{"id":"b:2:3411-0:299:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3409:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:299:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3413:1593"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:34:1781":{"id":"0:34:1781","crate_id":0,"name":"set_hyperlink","span":{"filename":"src/lib.rs","begin":[232,4],"end":[234,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["link",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"HyperlinkSpec","id":"0:503:1783","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:299:1811":{"id":"0:299:1811","crate_id":0,"name":"ColorChoiceParseError","span":{"filename":"src/lib.rs","begin":[364,0],"end":[366,1]},"visibility":"public","docs":"An error that occurs when parsing a `ColorChoice` fails.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:8560:2805-0:299:1811","a:2:8561:2804-0:299:1811","a:2:2792:249-0:299:1811","a:2:2775:240-0:299:1811","a:2:2832:2665-0:299:1811","b:2:2260-0:299:1811","b:2:2566-0:299:1811","b:2:2570-0:299:1811","b:2:3411-0:299:1811","b:2:2263-0:299:1811","b:2:2581-0:299:1811","b:2:2576-0:299:1811","b:5:680-0:299:1811","b:5:5790-0:299:1811","0:45","0:303","0:46","0:301"]}}},"0:212:1752":{"id":"0:212:1752","crate_id":0,"name":"set_color","span":{"filename":"src/lib.rs","begin":[1690,4],"end":[1692,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["_",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:190:1831":{"id":"0:190:1831","crate_id":0,"name":"write","span":{"filename":"src/lib.rs","begin":[1485,4],"end":[1487,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12479:26648":{"id":"2:12479:26648","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39501:25409","Self::is_ascii":"2:12478:26647"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41467:196","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39501:25409","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8561:2804-0:335:1863":{"id":"a:2:8561:2804-0:335:1863","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8561:2804","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStreamLock","id":"0:335:1863","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12473:32124":{"id":"2:12473:32124","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12051:446","self::pattern":"2:12060:2581"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12065:2575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12065:2575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12080:2576","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12383:2181":{"id":"2:12383:2181","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12051:446"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43399:2588","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:223:2003":{"id":"0:223:2003","crate_id":0,"name":"bold","span":{"filename":"src/lib.rs","begin":[1885,4],"end":[1887,5]},"visibility":"public","docs":"Get whether this is bold or not.\n\nNote that the bold setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:467":{"id":"0:467","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2070,29],"end":[2070,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2786:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:435:2023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2576-0:393:1870":{"id":"b:2:2576-0:393:1870","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2550:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2546:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoColor","id":"0:393:1870","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2579:132","2:2580:1580"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:454:1714":{"id":"0:454:1714","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[2080,12],"end":[2080,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"0:462":{"id":"0:462","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2070,9],"end":[2070,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2276:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:435:2023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:463:450"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2576-0:279:1797":{"id":"b:2:2576-0:279:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2550:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2546:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2579:132","2:2580:1580"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2265:24685":{"id":"2:2265:24685","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5790-0:473:2171":{"id":"b:5:5790-0:473:2171","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9490:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5788:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:473:2171","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5792:1555"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2775:240-0:503:1783":{"id":"a:2:2775:240-0:503:1783","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2775:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HyperlinkSpec","id":"0:503:1783","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2566-0:473:2171":{"id":"b:2:2566-0:473:2171","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:473:2171","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:3045"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2570-0:473:2171":{"id":"b:2:2570-0:473:2171","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:473:2171","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2572:736"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:149:864":{"id":"0:149:864","crate_id":0,"name":"len","span":{"filename":"src/lib.rs","begin":[1253,4],"end":[1260,5]},"visibility":"public","docs":"Returns the length of this buffer in bytes.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:166:993":{"id":"0:166:993","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[1392,4],"end":[1394,5]},"visibility":"public","docs":"Create a new writer that satisfies `WriteColor` but drops all color\ninformation.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["wtr",{"generic":"W"}]],"output":{"resolved_path":{"name":"NoColor","id":"0:393:1870","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:168:1898":{"id":"0:168:1898","crate_id":0,"name":"get_ref","span":{"filename":"src/lib.rs","begin":[1402,4],"end":[1404,5]},"visibility":"public","docs":"Return a reference to the inner writer.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"W"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:432":{"id":"0:432","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1825,27],"end":[1825,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2785:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:40:131":{"id":"0:40:131","crate_id":0,"name":"Err","span":{"filename":"src/lib.rs","begin":[275,4],"end":[275,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:299:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:137":{"id":"0:137","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1033,0],"end":[1169,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"BufferWriter","id":"0:372:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:139:1843","0:140:1844","0:141:1923","0:142:1940","0:143:1946"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12478:26647":{"id":"2:12478:26647","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2576-0:335:1863":{"id":"b:2:2576-0:335:1863","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2550:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2546:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStreamLock","id":"0:335:1863","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2579:132","2:2580:1580"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12388:30081":{"id":"2:12388:30081","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:43683:2539","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2572:736":{"id":"2:2572:736","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3411-0:335:1863":{"id":"b:2:3411-0:335:1863","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3409:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStreamLock","id":"0:335:1863","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3413:1593"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:152:1989":{"id":"0:152:1989","crate_id":0,"name":"as_slice","span":{"filename":"src/lib.rs","begin":[1286,4],"end":[1293,5]},"visibility":"public","docs":"Return the underlying data of the buffer.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2581-0:435:2023":{"id":"b:2:2581-0:435:2023","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2550:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:435:2023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2584:132","2:2585:1578"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:464":{"id":"0:464","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2070,16],"end":[2070,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2787:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:435:2023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2576-0:341:1866":{"id":"b:2:2576-0:341:1866","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2550:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2546:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferedStandardStream","id":"0:341:1866","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2579:132","2:2580:1580"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:67":{"id":"0:67","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[543,0],"end":[580,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"StandardStream","id":"0:331:1855","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:68:1843","0:69:1844","0:70:1846"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:234:2136":{"id":"0:234:2136","crate_id":0,"name":"set_reset","span":{"filename":"src/lib.rs","begin":[1979,4],"end":[1982,5]},"visibility":"public","docs":"Set whether to reset the terminal whenever color settings are applied.\n\nreset is enabled by default. When disabled and using ANSI escape\nsequences, a \"reset\" code will be emitted every time a `ColorSpec`'s\nsettings are applied.\n\nTypically this is useful if callers have a requirement to more\nscrupulously manage the exact sequence of escape codes that are emitted\nwhen using ANSI for colors.\n\nNote that the reset setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2576-0:473:2171":{"id":"b:2:2576-0:473:2171","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2550:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2546:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:473:2171","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2579:132","2:2580:1580"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:280:1800":{"id":"0:280:1800","crate_id":0,"name":"Always","span":{"filename":"src/lib.rs","begin":[255,4],"end":[255,10]},"visibility":"default","docs":"Try very hard to emit colors. This includes emitting ANSI colors\non Windows if the console API is unavailable.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:2792:249-0:393:1870":{"id":"a:2:2792:249-0:393:1870","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2792:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2792:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoColor","id":"0:393:1870","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3411-0:331:1855":{"id":"b:2:3411-0:331:1855","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3409:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStream","id":"0:331:1855","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3413:1593"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:33:1752":{"id":"0:33:1752","crate_id":0,"name":"set_color","span":{"filename":"src/lib.rs","begin":[229,4],"end":[231,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["spec",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2832:2665-0:473:2171":{"id":"a:2:2832:2665-0:473:2171","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2832:2665","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:473:2171","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5533:32785":{"id":"5:5533:32785","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:276:1790","`String`":"5:7487:245"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:1790","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7220:3361","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7487:245","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12359:864":{"id":"2:12359:864","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12051:446"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12447:32115":{"id":"2:12447:32115","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:254:131":{"id":"0:254:131","crate_id":0,"name":"Err","span":{"filename":"src/lib.rs","begin":[2250,4],"end":[2250,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ParseColorError","id":"0:473:2171","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:237:2146":{"id":"0:237:2146","crate_id":0,"name":"is_none","span":{"filename":"src/lib.rs","begin":[2010,4],"end":[2019,5]},"visibility":"public","docs":"Returns true if this color specification has no colors or styles.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:470":{"id":"0:470","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2070,33],"end":[2070,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2785:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:435:2023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2775:240-0:341:1866":{"id":"a:2:2775:240-0:341:1866","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2775:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferedStandardStream","id":"0:341:1866","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:236:2144":{"id":"0:236:2144","crate_id":0,"name":"set_intense","span":{"filename":"src/lib.rs","begin":[2004,4],"end":[2007,5]},"visibility":"public","docs":"Set whether the text is intense or not.\n\nOn Unix-like systems, this will output the ANSI escape sequence\nthat will print a high-intensity version of the color\nspecified.\n\nOn Windows systems, this will output the ANSI escape sequence\nthat will print a brighter version of the color specified.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2260-0:435:2023":{"id":"b:2:2260-0:435:2023","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2254:99","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:435:2023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2262:2478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:80:1831":{"id":"0:80:1831","crate_id":0,"name":"write","span":{"filename":"src/lib.rs","begin":[701,4],"end":[703,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["b",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2579:132":{"id":"2:2579:132","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2550:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"a:2:8560:2805-0:299:1811":{"id":"a:2:8560:2805-0:299:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8560:2805","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:299:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:91:1831":{"id":"0:91:1831","crate_id":0,"name":"write","span":{"filename":"src/lib.rs","begin":[745,4],"end":[747,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["b",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:155:1831":{"id":"0:155:1831","crate_id":0,"name":"write","span":{"filename":"src/lib.rs","begin":[1308,4],"end":[1315,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2775:240-0:335:1863":{"id":"a:2:2775:240-0:335:1863","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2775:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStreamLock","id":"0:335:1863","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:99:1760":{"id":"0:99:1760","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[777,4],"end":[779,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:19:1787":{"id":"0:19:1787","crate_id":0,"name":"supports_hyperlinks","span":{"filename":"src/lib.rs","begin":[196,4],"end":[198,5]},"visibility":"default","docs":"Returns true if and only if the underlying writer supports hyperlinks.\n\nThis can be used to avoid generating hyperlink URIs unnecessarily.\n\nThis defaults to `false`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:103:1852":{"id":"0:103:1852","crate_id":0,"name":"flush","span":{"filename":"src/lib.rs","begin":[794,4],"end":[796,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12476:2225":{"id":"2:12476:2225","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12021:131","`FromStr`":"2:12020:1740"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41612:229","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12020:1740","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12020:1740","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:170":{"id":"0:170","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1412,0],"end":[1422,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3504:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["write_vectored","write_fmt","write_all_vectored","write_all","is_write_vectored","by_ref"],"trait":{"name":"Write","id":"1:3504:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoColor","id":"0:393:1870","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["0:172:1831","0:173:1852"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:209":{"id":"0:209","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1681,0],"end":[1701,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["set_hyperlink","is_synchronous","supports_hyperlinks"],"trait":{"name":"WriteColor","id":"0:13:1744","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"io::Sink","id":"1:8158:2066","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:210:1746","0:211:1787","0:212:1752","0:213:1781","0:214:1760"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2580:1580":{"id":"2:2580:1580","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41612:229","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2550:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:85:1752":{"id":"0:85:1752","crate_id":0,"name":"set_color","span":{"filename":"src/lib.rs","begin":[723,4],"end":[725,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["spec",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:377":{"id":"0:377","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1023,9],"end":[1023,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9485:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferWriter","id":"0:372:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:378:710"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12483:32125":{"id":"2:12483:32125","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4559:32125"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:43728:2592","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:75:1843":{"id":"0:75:1843","crate_id":0,"name":"stdout","span":{"filename":"src/lib.rs","begin":[626,4],"end":[630,5]},"visibility":"public","docs":"Create a new `BufferedStandardStream` with the given color preferences\nthat writes to standard output via a buffered writer.\n\nOn Windows, if coloring is desired and a Windows console could not be\nfound, then ANSI escape sequences are used instead.\n\nThe specific color/style settings can be configured when writing via\nthe `WriteColor` trait.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["choice",{"resolved_path":{"name":"ColorChoice","id":"0:279:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"BufferedStandardStream","id":"0:341:1866","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2775:240-0:299:1811":{"id":"a:2:2775:240-0:299:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2775:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:299:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:246:2193":{"id":"0:246:2193","crate_id":0,"name":"invalid","span":{"filename":"src/lib.rs","begin":[2205,4],"end":[2207,5]},"visibility":"public","docs":"Return the string that couldn't be parsed as a valid color.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12380:32108":{"id":"2:12380:32108","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12057:1496","crate::ops::IndexMut":"2:3076:3359","str::slice_unchecked":"2:12379:32107"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:150:1983":{"id":"0:150:1983","crate_id":0,"name":"clear","span":{"filename":"src/lib.rs","begin":[1263,4],"end":[1270,5]},"visibility":"public","docs":"Clears this buffer.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12386:31111":{"id":"2:12386:31111","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12387:31109"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:43703:2585","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:340:710":{"id":"0:340:710","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[500,9],"end":[500,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9460:136","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9441:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12482:26652":{"id":"2:12482:26652","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:146:1972":{"id":"0:146:1972","crate_id":0,"name":"no_color","span":{"filename":"src/lib.rs","begin":[1232,4],"end":[1234,5]},"visibility":"public","docs":"Create a buffer that drops all color information.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Buffer","id":"0:379:1941","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:302:450":{"id":"0:302:450","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[363,9],"end":[363,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:299:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:18:1781":{"id":"0:18:1781","crate_id":0,"name":"set_hyperlink","span":{"filename":"src/lib.rs","begin":[187,4],"end":[189,5]},"visibility":"default","docs":"Set the current hyperlink of the writer.\n\nThe typical way to use this is to first call it with a\n[`HyperlinkSpec::open`] to write the actual URI to a tty that supports\n[OSC-8]. At this point, the caller can now write the label for the\nhyperlink. This may include coloring or other styles. Once the caller\nhas finished writing the label, one should call this method again with\n[`HyperlinkSpec::close`].\n\nIf there was a problem setting the hyperlink, then an error is\nreturned.\n\nThis defaults to doing nothing.\n\n[OSC8]: https://github.com/Alhadis/OSC8-Adoption/","links":{"`HyperlinkSpec::open`":"0:258:2211","`HyperlinkSpec::close`":"0:259:2213"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["_link",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"HyperlinkSpec","id":"0:503:1783","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:221:2103":{"id":"0:221:2103","crate_id":0,"name":"bg","span":{"filename":"src/lib.rs","begin":[1872,4],"end":[1874,5]},"visibility":"public","docs":"Get the background color.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41467:196","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Color","id":"0:435:2023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:680-0:435:2023":{"id":"b:5:680-0:435:2023","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2276:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:435:2023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:3108","5:683:3109","5:684:3110"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:81:1852":{"id":"0:81:1852","crate_id":0,"name":"flush","span":{"filename":"src/lib.rs","begin":[706,4],"end":[708,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2584:132":{"id":"2:2584:132","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:31972:5317","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:101":{"id":"0:101","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[787,0],"end":[797,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["write_vectored","write_fmt","write_all_vectored","write_all","is_write_vectored","by_ref"],"trait":{"name":"Write","id":"1:3504:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferedStandardStream","id":"0:341:1866","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:102:1831","0:103:1852"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:680-0:503:1783":{"id":"b:5:680-0:503:1783","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2276:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"HyperlinkSpec","id":"0:503:1783","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["5:682:3108","5:683:3109","5:684:3110"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2581-0:299:1811":{"id":"b:2:2581-0:299:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2550:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:299:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2584:132","2:2585:1578"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:108:1781":{"id":"0:108:1781","crate_id":0,"name":"set_hyperlink","span":{"filename":"src/lib.rs","begin":[819,4],"end":[824,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["link",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"HyperlinkSpec","id":"0:503:1783","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:238:1983":{"id":"0:238:1983","crate_id":0,"name":"clear","span":{"filename":"src/lib.rs","begin":[2022,4],"end":[2031,5]},"visibility":"public","docs":"Clears this color specification so that it has no color/style settings.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:13:1744":{"id":"0:13:1744","crate_id":0,"name":"WriteColor","span":{"filename":"src/lib.rs","begin":[134,0],"end":[199,1]},"visibility":"public","docs":"This trait describes the behavior of writers that support colored output.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:14:1746","0:15:1752","0:16:1760","0:17:1770","0:18:1781","0:19:1787"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3504:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:104","0:82","0:193","0:209","0:20","0:93","0:29","0:157","0:174"]}}},"b:2:2263-0:279:1797":{"id":"b:2:2263-0:279:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2257:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2265:24685"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3411-0:393:1870":{"id":"b:2:3411-0:393:1870","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3409:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoColor","id":"0:393:1870","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:3413:1593"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:104":{"id":"0:104","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[799,0],"end":[835,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["set_hyperlink","is_synchronous","supports_hyperlinks"],"trait":{"name":"WriteColor","id":"0:13:1744","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferedStandardStream","id":"0:341:1866","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:105:1746","0:106:1787","0:107:1752","0:108:1781","0:109:1760","0:110:1770"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:458:1715":{"id":"0:458:1715","crate_id":0,"name":"1","span":{"filename":"src/lib.rs","begin":[2081,12],"end":[2081,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"0:471":{"id":"0:471","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2070,33],"end":[2070,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2324:203","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Color","id":"0:435:2023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:435:2023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:472:652"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:14:1746":{"id":"0:14:1746","crate_id":0,"name":"supports_color","span":{"filename":"src/lib.rs","begin":[136,4],"end":[136,37]},"visibility":"default","docs":"Returns true if and only if the underlying writer supports colors.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:2:2576-0:331:1855":{"id":"b:2:2576-0:331:1855","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2550:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2546:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStream","id":"0:331:1855","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2579:132","2:2580:1580"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:477:450":{"id":"0:477:450","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[2190,9],"end":[2190,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParseColorError","id":"0:473:2171","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:105:1746":{"id":"0:105:1746","crate_id":0,"name":"supports_color","span":{"filename":"src/lib.rs","begin":[801,4],"end":[803,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:200:1770":{"id":"0:200:1770","crate_id":0,"name":"is_synchronous","span":{"filename":"src/lib.rs","begin":[1561,4],"end":[1563,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:95:1746":{"id":"0:95:1746","crate_id":0,"name":"supports_color","span":{"filename":"src/lib.rs","begin":[757,4],"end":[759,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:79":{"id":"0:79","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[699,0],"end":[709,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["write_vectored","write_fmt","write_all_vectored","write_all","is_write_vectored","by_ref"],"trait":{"name":"Write","id":"1:3504:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStream","id":"0:331:1855","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:80:1831","0:81:1852"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:372:1921":{"id":"0:372:1921","crate_id":0,"name":"BufferWriter","span":{"filename":"src/lib.rs","begin":[1024,0],"end":[1031,1]},"visibility":"public","docs":"Writes colored buffers to stdout or stderr.\n\nWritable buffers can be obtained by calling `buffer` on a `BufferWriter`.\n\nThis writer works with terminals that support ANSI escape sequences or\nwith a Windows console.\n\nIt is intended for a `BufferWriter` to be put in an `Arc` and written to\nfrom multiple threads simultaneously.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:137","a:2:8560:2805-0:372:1921","a:2:8561:2804-0:372:1921","a:2:2792:249-0:372:1921","a:2:2775:240-0:372:1921","a:2:2832:2665-0:372:1921","b:2:2260-0:372:1921","b:2:2566-0:372:1921","b:2:2570-0:372:1921","b:2:3411-0:372:1921","b:2:2263-0:372:1921","b:2:2581-0:372:1921","b:2:2576-0:372:1921","0:377"]}}},"0:213:1781":{"id":"0:213:1781","crate_id":0,"name":"set_hyperlink","span":{"filename":"src/lib.rs","begin":[1694,4],"end":[1696,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["_",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"HyperlinkSpec","id":"0:503:1783","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2570-0:341:1866":{"id":"b:2:2570-0:341:1866","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferedStandardStream","id":"0:341:1866","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2572:736"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2570-0:279:1797":{"id":"b:2:2570-0:279:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2572:736"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:333":{"id":"0:333","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[488,9],"end":[488,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9485:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStream","id":"0:331:1855","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:334:710"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2576-0:372:1921":{"id":"b:2:2576-0:372:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2550:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2546:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferWriter","id":"0:372:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2579:132","2:2580:1580"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:158:1746":{"id":"0:158:1746","crate_id":0,"name":"supports_color","span":{"filename":"src/lib.rs","begin":[1330,4],"end":[1337,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8560:2805-0:335:1863":{"id":"a:2:8560:2805-0:335:1863","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8560:2805","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStreamLock","id":"0:335:1863","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2263-0:341:1866":{"id":"b:2:2263-0:341:1866","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2257:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferedStandardStream","id":"0:341:1866","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2265:24685"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2260-0:379:1941":{"id":"b:2:2260-0:379:1941","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2254:99","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Buffer","id":"0:379:1941","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2262:2478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:231:2011":{"id":"0:231:2011","crate_id":0,"name":"strikethrough","span":{"filename":"src/lib.rs","begin":[1945,4],"end":[1947,5]},"visibility":"public","docs":"Get whether this is strikethrough or not.\n\nNote that the strikethrough setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:452:2063":{"id":"0:452:2063","crate_id":0,"name":"Ansi256","span":{"filename":"src/lib.rs","begin":[2080,4],"end":[2080,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:454:1714"]},"discriminant":null}}},"0:227:2007":{"id":"0:227:2007","crate_id":0,"name":"italic","span":{"filename":"src/lib.rs","begin":[1915,4],"end":[1917,5]},"visibility":"public","docs":"Get whether this is italic or not.\n\nNote that the italic setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12387:31109":{"id":"2:12387:31109","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12386:31111"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:43712:2583","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:303":{"id":"0:303","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[363,16],"end":[363,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9485:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:299:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:304:710"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:224:2109":{"id":"0:224:2109","crate_id":0,"name":"set_bold","span":{"filename":"src/lib.rs","begin":[1892,4],"end":[1895,5]},"visibility":"public","docs":"Set whether the text is bolded or not.\n\nNote that the bold setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:46":{"id":"0:46","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[370,0],"end":[379,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9490:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:299:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:47:710"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12429:25510":{"id":"2:12429:25510","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41467:196","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12065:2575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2570-0:335:1863":{"id":"b:2:2570-0:335:1863","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStreamLock","id":"0:335:1863","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2572:736"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2260-0:400:1871":{"id":"b:2:2260-0:400:1871","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2254:99","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Ansi","id":"0:400:1871","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2262:2478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:282:1803":{"id":"0:282:1803","crate_id":0,"name":"AlwaysAnsi","span":{"filename":"src/lib.rs","begin":[258,4],"end":[258,14]},"visibility":"default","docs":"AlwaysAnsi is like Always, except it never tries to use anything other\nthan emitting ANSI color codes.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:160:1752":{"id":"0:160:1752","crate_id":0,"name":"set_color","span":{"filename":"src/lib.rs","begin":[1350,4],"end":[1357,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["spec",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2566-0:299:1811":{"id":"b:2:2566-0:299:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:299:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:3045"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:163:1770":{"id":"0:163:1770","crate_id":0,"name":"is_synchronous","span":{"filename":"src/lib.rs","begin":[1380,4],"end":[1382,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3411-0:372:1921":{"id":"b:2:3411-0:372:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3409:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferWriter","id":"0:372:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3413:1593"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:159:1787":{"id":"0:159:1787","crate_id":0,"name":"supports_hyperlinks","span":{"filename":"src/lib.rs","begin":[1340,4],"end":[1347,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:301":{"id":"0:301","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[363,9],"end":[363,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2276:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:299:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:302:450"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:191:1948":{"id":"0:191:1948","crate_id":0,"name":"write_all","span":{"filename":"src/lib.rs","begin":[1496,4],"end":[1498,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12417:32110":{"id":"2:12417:32110","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12060:2581","str::split":"2:12408:2177","prim@char":"1:12051:446","`DoubleEndedIterator`":"2:7476:125","str::rsplit_terminator":"2:12420:32111"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43479:2605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12065:2575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12379:32107":{"id":"2:12379:32107","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12057:1496","str::slice_mut_unchecked":"2:12380:32108","crate::ops::Index":"2:3072:3358"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8560:2805-0:279:1797":{"id":"a:2:8560:2805-0:279:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8560:2805","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:214:1760":{"id":"0:214:1760","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[1698,4],"end":[1700,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2775:240-0:372:1921":{"id":"a:2:2775:240-0:372:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2775:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferWriter","id":"0:372:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8560:2805-0:400:1871":{"id":"a:2:8560:2805-0:400:1871","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8560:2805","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8560:2805","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Ansi","id":"0:400:1871","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:468":{"id":"0:468","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2070,29],"end":[2070,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2329:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:435:2023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3411-0:341:1866":{"id":"b:2:3411-0:341:1866","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3409:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferedStandardStream","id":"0:341:1866","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3413:1593"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:429":{"id":"0:429","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1825,23],"end":[1825,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2786:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3411-0:473:2171":{"id":"b:2:3411-0:473:2171","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3409:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:473:2171","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3413:1593"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2566-0:393:1870":{"id":"b:2:2566-0:393:1870","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoColor","id":"0:393:1870","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2569:3045"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:179:1781":{"id":"0:179:1781","crate_id":0,"name":"set_hyperlink","span":{"filename":"src/lib.rs","begin":[1441,4],"end":[1443,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["_",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"HyperlinkSpec","id":"0:503:1783","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:250":{"id":"0:250","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2221,0],"end":[2247,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9490:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:473:2171","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:251:710"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:156:1852":{"id":"0:156:1852","crate_id":0,"name":"flush","span":{"filename":"src/lib.rs","begin":[1318,4],"end":[1325,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12438:32112":{"id":"2:12438:32112","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12060:2581","`DoubleEndedIterator`":"2:7476:125","prim@char":"1:12051:446","str::matches":"2:12435:2492"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:43651:2600","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12065:2575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12065:2575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12080:2576","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:235:2015":{"id":"0:235:2015","crate_id":0,"name":"intense","span":{"filename":"src/lib.rs","begin":[1992,4],"end":[1994,5]},"visibility":"public","docs":"Get whether this is intense or not.\n\nOn Unix-like systems, this will output the ANSI escape sequence\nthat will print a high-intensity version of the color\nspecified.\n\nOn Windows systems, this will output the ANSI escape sequence\nthat will print a brighter version of the color specified.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3411-0:279:1797":{"id":"b:2:3411-0:279:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3409:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3413:1593"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2566-0:435:2023":{"id":"b:2:2566-0:435:2023","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:435:2023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:3045"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:435:2023":{"id":"0:435:2023","crate_id":0,"name":"Color","span":{"filename":"src/lib.rs","begin":[2071,0],"end":[2084,1]},"visibility":"public","docs":"The set of available colors for the terminal foreground/background.\n\nThe `Ansi256` and `Rgb` colors will only output the correct codes when\npaired with the `Ansi` `WriteColor` implementation.\n\nThe `Ansi256` and `Rgb` color types are not supported when writing colors\non Windows using the console. If they are used on Windows, then they are\nsilently ignored and no colors will be emitted.\n\nThis set may expand over time.\n\nThis type has a `FromStr` impl that can parse colors from their human\nreadable form. The format is as follows:\n\n1. Any of the explicitly listed colors in English. They are matched\n   case insensitively.\n2. A single 8-bit integer, in either decimal or hexadecimal format.\n3. A triple of 8-bit integers separated by a comma, where each integer is\n   in decimal or hexadecimal format.\n\nHexadecimal numbers are written with a `0x` prefix.","links":{},"attrs":["#[allow(missing_docs)]"],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":true,"variants":["0:436:2050","0:438:2051","0:440:2053","0:442:2054","0:444:2055","0:446:2057","0:448:2059","0:450:2061","0:452:2063","0:455:2064"],"impls":["a:2:8560:2805-0:435:2023","a:2:8561:2804-0:435:2023","a:2:2792:249-0:435:2023","a:2:2775:240-0:435:2023","a:2:2832:2665-0:435:2023","b:2:2260-0:435:2023","b:2:2566-0:435:2023","b:2:2570-0:435:2023","b:2:3411-0:435:2023","b:2:2263-0:435:2023","b:2:2581-0:435:2023","b:2:2576-0:435:2023","b:5:680-0:435:2023","0:468","0:462","0:471","0:465","0:464","0:470","0:467","0:253"]}}},"0:393:1870":{"id":"0:393:1870","crate_id":0,"name":"NoColor","span":{"filename":"src/lib.rs","begin":[1387,0],"end":[1387,25]},"visibility":"public","docs":"Satisfies `WriteColor` but ignores all color options.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:164","a:2:8560:2805-0:393:1870","a:2:8561:2804-0:393:1870","a:2:2792:249-0:393:1870","a:2:2775:240-0:393:1870","a:2:2832:2665-0:393:1870","b:2:2260-0:393:1870","b:2:2566-0:393:1870","b:2:2570-0:393:1870","b:2:3411-0:393:1870","b:2:2263-0:393:1870","b:2:2581-0:393:1870","b:2:2576-0:393:1870","0:397","0:170","0:174"]}}},"a:2:8560:2805-0:435:2023":{"id":"a:2:8560:2805-0:435:2023","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8560:2805","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:435:2023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5532:32784":{"id":"5:5532:32784","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7487:245"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7487:245","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:344:710":{"id":"0:344:710","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[506,9],"end":[506,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9460:136","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9441:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:25:1752":{"id":"0:25:1752","crate_id":0,"name":"set_color","span":{"filename":"src/lib.rs","begin":[208,4],"end":[210,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["spec",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2775:240-0:379:1941":{"id":"a:2:2775:240-0:379:1941","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2775:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Buffer","id":"0:379:1941","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:433":{"id":"0:433","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1825,27],"end":[1825,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2324:203","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:434:652"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8561:2804-0:435:2023":{"id":"a:2:8561:2804-0:435:2023","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8561:2804","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:435:2023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:473:2171":{"id":"0:473:2171","crate_id":0,"name":"ParseColorError","span":{"filename":"src/lib.rs","begin":[2191,0],"end":[2194,1]},"visibility":"public","docs":"An error from parsing an invalid color specification.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:245","a:2:8560:2805-0:473:2171","a:2:8561:2804-0:473:2171","a:2:2792:249-0:473:2171","a:2:2775:240-0:473:2171","a:2:2832:2665-0:473:2171","b:2:2260-0:473:2171","b:2:2566-0:473:2171","b:2:2570-0:473:2171","b:2:3411-0:473:2171","b:2:2263-0:473:2171","b:2:2581-0:473:2171","b:2:2576-0:473:2171","b:5:680-0:473:2171","b:5:5790-0:473:2171","0:484","0:483","0:476","0:478","0:481","0:480","0:247","0:250"]}}},"2:12362:32104":{"id":"2:12362:32104","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:258:2211":{"id":"0:258:2211","crate_id":0,"name":"open","span":{"filename":"src/lib.rs","begin":[2275,4],"end":[2277,5]},"visibility":"public","docs":"Creates a new hyperlink specification.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["uri",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"HyperlinkSpec","id":"0:503:1783","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12375:25469":{"id":"2:12375:25469","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10150:242","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10150:242","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:481":{"id":"0:481","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2190,23],"end":[2190,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2329:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:473:2171","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:228:2118":{"id":"0:228:2118","crate_id":0,"name":"set_italic","span":{"filename":"src/lib.rs","begin":[1922,4],"end":[1925,5]},"visibility":"public","docs":"Set whether the text is italicized or not.\n\nNote that the italic setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5517:32782":{"id":"5:5517:32782","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:1790","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7220:3361","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:276:1790","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}},{"type":{"resolved_path":{"name":"Global","id":"5:7220:3361","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:465":{"id":"0:465","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2070,22],"end":[2070,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9485:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:435:2023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:466:710"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:226:2114":{"id":"0:226:2114","crate_id":0,"name":"set_dimmed","span":{"filename":"src/lib.rs","begin":[1907,4],"end":[1910,5]},"visibility":"public","docs":"Set whether the text is dimmed or not.\n\nNote that the dimmed setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:36:1770":{"id":"0:36:1770","crate_id":0,"name":"is_synchronous","span":{"filename":"src/lib.rs","begin":[238,4],"end":[240,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8561:2804-0:473:2171":{"id":"a:2:8561:2804-0:473:2171","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8561:2804","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:473:2171","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:448:2059":{"id":"0:448:2059","crate_id":0,"name":"Yellow","span":{"filename":"src/lib.rs","begin":[2078,4],"end":[2078,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:93":{"id":"0:93","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[755,0],"end":[785,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["set_hyperlink","is_synchronous","supports_hyperlinks"],"trait":{"name":"WriteColor","id":"0:13:1744","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStreamLock","id":"0:335:1863","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:95:1746","0:96:1787","0:97:1752","0:98:1781","0:99:1760","0:100:1770"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:29":{"id":"0:29","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[222,0],"end":[241,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"WriteColor","id":"0:13:1744","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["set_hyperlink","is_synchronous","supports_hyperlinks"],"trait":{"name":"WriteColor","id":"0:13:1744","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Box","id":"5:276:1790","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:31:1746","0:32:1787","0:33:1752","0:34:1781","0:35:1760","0:36:1770"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:334:710":{"id":"0:334:710","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[488,9],"end":[488,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9460:136","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9441:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12470:32123":{"id":"2:12470:32123","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12051:446","self::pattern":"2:12060:2581"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12065:2575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:86:1781":{"id":"0:86:1781","crate_id":0,"name":"set_hyperlink","span":{"filename":"src/lib.rs","begin":[728,4],"end":[730,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["link",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"HyperlinkSpec","id":"0:503:1783","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:27:1760":{"id":"0:27:1760","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[214,4],"end":[216,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:484":{"id":"0:484","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2190,27],"end":[2190,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2324:203","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ParseColorError","id":"0:473:2171","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:473:2171","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:485:652"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2263-0:435:2023":{"id":"b:2:2263-0:435:2023","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2257:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:435:2023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2265:24685"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2570-0:331:1855":{"id":"b:2:2570-0:331:1855","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStream","id":"0:331:1855","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2572:736"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2775:240-0:331:1855":{"id":"a:2:2775:240-0:331:1855","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2775:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStream","id":"0:331:1855","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:343":{"id":"0:343","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[506,9],"end":[506,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9485:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BufferedStandardStream","id":"0:341:1866","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:344:710"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:259:2213":{"id":"0:259:2213","crate_id":0,"name":"close","span":{"filename":"src/lib.rs","begin":[2280,4],"end":[2282,5]},"visibility":"public","docs":"Creates a hyperlink specification representing no hyperlink.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"HyperlinkSpec","id":"0:503:1783","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:225:2005":{"id":"0:225:2005","crate_id":0,"name":"dimmed","span":{"filename":"src/lib.rs","begin":[1900,4],"end":[1902,5]},"visibility":"public","docs":"Get whether this is dimmed or not.\n\nNote that the dimmed setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:440:2053":{"id":"0:440:2053","crate_id":0,"name":"Green","span":{"filename":"src/lib.rs","begin":[2074,4],"end":[2074,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:2775:240-0:279:1797":{"id":"a:2:2775:240-0:279:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2775:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:463:450":{"id":"0:463:450","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[2070,9],"end":[2070,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Color","id":"0:435:2023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:260:2018":{"id":"0:260:2018","crate_id":0,"name":"uri","span":{"filename":"src/lib.rs","begin":[2285,4],"end":[2287,5]},"visibility":"public","docs":"Returns the URI of the hyperlink if one is attached to this spec.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41467:196","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"primitive":"u8"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12480:26650":{"id":"2:12480:26650","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:142:1940":{"id":"0:142:1940","crate_id":0,"name":"buffer","span":{"filename":"src/lib.rs","begin":[1122,4],"end":[1124,5]},"visibility":"public","docs":"Creates a new `Buffer` with the current color preferences.\n\nA `Buffer` satisfies both `io::Write` and `WriteColor`. A `Buffer` can\nbe printed using the `print` method.","links":{},"attrs":["#[cfg(not(windows))]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Buffer","id":"0:379:1941","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12394:2173":{"id":"2:12394:2173","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:12051:446","self::pattern":"2:12060:2581"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12065:2575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:430":{"id":"0:430","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1825,23],"end":[1825,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2329:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:82":{"id":"0:82","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[711,0],"end":[741,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["set_hyperlink","is_synchronous","supports_hyperlinks"],"trait":{"name":"WriteColor","id":"0:13:1744","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStream","id":"0:331:1855","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:83:1746","0:84:1787","0:85:1752","0:86:1781","0:87:1760","0:88:1770"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2566-0:331:1855":{"id":"b:2:2566-0:331:1855","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStream","id":"0:331:1855","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:3045"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:89":{"id":"0:89","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[743,0],"end":[753,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["write_vectored","write_fmt","write_all_vectored","write_all","is_write_vectored","by_ref"],"trait":{"name":"Write","id":"1:3504:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StandardStreamLock","id":"0:335:1863","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:91:1831","0:92:1852"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8560:2805-0:473:2171":{"id":"a:2:8560:2805-0:473:2171","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8560:2805","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:473:2171","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:182":{"id":"0:182","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1460,0],"end":[1481,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Write","id":"1:3504:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Ansi","id":"0:400:1871","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["0:184:993","0:185:1987","0:186:1898","0:187:1998"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:176:1746":{"id":"0:176:1746","crate_id":0,"name":"supports_color","span":{"filename":"src/lib.rs","begin":[1426,4],"end":[1428,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:478":{"id":"0:478","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2190,16],"end":[2190,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9485:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:473:2171","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:479:710"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12411:25502":{"id":"2:12411:25502","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12051:446","self::pattern":"2:12060:2581"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:11876:2584","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12065:2575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2792:249-0:379:1941":{"id":"a:2:2792:249-0:379:1941","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2792:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Buffer","id":"0:379:1941","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:96:1787":{"id":"0:96:1787","crate_id":0,"name":"supports_hyperlinks","span":{"filename":"src/lib.rs","begin":[762,4],"end":[764,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2576-0:379:1941":{"id":"b:2:2576-0:379:1941","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2550:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2546:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Buffer","id":"0:379:1941","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2579:132","2:2580:1580"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:87:1760":{"id":"0:87:1760","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[733,4],"end":[735,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:459:1716":{"id":"0:459:1716","crate_id":0,"name":"2","span":{"filename":"src/lib.rs","begin":[2081,16],"end":[2081,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"0:406:710":{"id":"0:406:710","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1457,9],"end":[1457,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9460:136","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9441:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:457:1714":{"id":"0:457:1714","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[2081,8],"end":[2081,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"0:148:1947":{"id":"0:148:1947","crate_id":0,"name":"is_empty","span":{"filename":"src/lib.rs","begin":[1248,4],"end":[1250,5]},"visibility":"public","docs":"Returns true if and only if this buffer is empty.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:83:1746":{"id":"0:83:1746","crate_id":0,"name":"supports_color","span":{"filename":"src/lib.rs","begin":[713,4],"end":[715,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2570-0:435:2023":{"id":"b:2:2570-0:435:2023","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:435:2023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2572:736"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12364:32105":{"id":"2:12364:32105","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12362:32104"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:293":{"id":"0:293","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,29],"end":[251,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2786:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:167:1987":{"id":"0:167:1987","crate_id":0,"name":"into_inner","span":{"filename":"src/lib.rs","begin":[1397,4],"end":[1399,5]},"visibility":"public","docs":"Consume this `NoColor` value and return the inner writer.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"W"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:76:1844":{"id":"0:76:1844","crate_id":0,"name":"stderr","span":{"filename":"src/lib.rs","begin":[640,4],"end":[644,5]},"visibility":"public","docs":"Create a new `BufferedStandardStream` with the given color preferences\nthat writes to standard error via a buffered writer.\n\nOn Windows, if coloring is desired and a Windows console could not be\nfound, then ANSI escape sequences are used instead.\n\nThe specific color/style settings can be configured when writing via\nthe `WriteColor` trait.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["choice",{"resolved_path":{"name":"ColorChoice","id":"0:279:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"BufferedStandardStream","id":"0:341:1866","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2260-0:393:1870":{"id":"b:2:2260-0:393:1870","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2254:99","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoColor","id":"0:393:1870","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2262:2478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:480":{"id":"0:480","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2190,23],"end":[2190,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2786:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:473:2171","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8561:2804-0:400:1871":{"id":"a:2:8561:2804-0:400:1871","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8561:2804","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8561:2804","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Ansi","id":"0:400:1871","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2792:249-0:400:1871":{"id":"a:2:2792:249-0:400:1871","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2792:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2792:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Ansi","id":"0:400:1871","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:23:1746":{"id":"0:23:1746","crate_id":0,"name":"supports_color","span":{"filename":"src/lib.rs","begin":[202,4],"end":[204,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:294":{"id":"0:294","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,29],"end":[251,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2329:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2832:2665-0:379:1941":{"id":"a:2:2832:2665-0:379:1941","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2832:2665","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Buffer","id":"0:379:1941","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:298:652":{"id":"0:298:652","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[251,33],"end":[251,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ColorChoice","id":"0:279:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:434:652":{"id":"0:434:652","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[1825,27],"end":[1825,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:511:710":{"id":"0:511:710","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[2268,16],"end":[2268,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9460:136","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9441:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12435:2492":{"id":"2:12435:2492","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12060:2581","`DoubleEndedIterator`":"2:7476:125","prim@char":"1:12051:446","str::rmatches":"2:12438:32112"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:43633:2599","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12065:2575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12444:32114":{"id":"2:12444:32114","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12060:2581","`DoubleEndedIterator`":"2:7476:125","prim@char":"1:12051:446","str::match_indices":"2:12441:32113"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:43597:2598","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12065:2575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12065:2575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12080:2576","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2570-0:393:1870":{"id":"b:2:2570-0:393:1870","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoColor","id":"0:393:1870","args":{"angle_bracketed":{"args":[{"type":{"generic":"W"}}],"bindings":[]}}}},"items":["2:2572:736"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:45":{"id":"0:45","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[368,0],"end":[368,51]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["cause","description","provide","source","type_id"],"trait":{"name":"Error","id":"2:2628:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoiceParseError","id":"0:299:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:382":{"id":"0:382","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1182,9],"end":[1182,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9485:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Buffer","id":"0:379:1941","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:383:710"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2775:240-0:415:1754":{"id":"a:2:2775:240-0:415:1754","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2775:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:107:1752":{"id":"0:107:1752","crate_id":0,"name":"set_color","span":{"filename":"src/lib.rs","begin":[811,4],"end":[816,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["spec",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ColorSpec","id":"0:415:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:180:1760":{"id":"0:180:1760","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[1446,4],"end":[1448,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2260-0:473:2171":{"id":"b:2:2260-0:473:2171","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2254:99","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseColorError","id":"0:473:2171","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2262:2478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:229:2009":{"id":"0:229:2009","crate_id":0,"name":"underline","span":{"filename":"src/lib.rs","begin":[1930,4],"end":[1932,5]},"visibility":"public","docs":"Get whether this is underline or not.\n\nNote that the underline setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:161:1781":{"id":"0:161:1781","crate_id":0,"name":"set_hyperlink","span":{"filename":"src/lib.rs","begin":[1360,4],"end":[1367,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["link",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"HyperlinkSpec","id":"0:503:1783","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:229","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12458:32121":{"id":"2:12458:32121","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12051:446","self::pattern":"2:12060:2581"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12065:2575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:450:2061":{"id":"0:450:2061","crate_id":0,"name":"White","span":{"filename":"src/lib.rs","begin":[2079,4],"end":[2079,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12358":{"id":"2:12358","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12359:864","2:12360:1947","2:12361:32103","2:12362:32104","2:12364:32105","2:12367:2021","2:12368:32106","2:12369:338","2:12370:337","2:12371:25468","2:12373:1998","2:12375:25469","2:12377:25470","2:12379:32107","2:12380:32108","2:12381:25493","2:12382:25494","2:12383:2181","2:12384:6826","2:12385:6425","2:12386:31111","2:12387:31109","2:12388:30081","2:12389:32109","2:12390:31100","2:12391:2190","2:12394:2173","2:12397:25064","2:12400:3089","2:12404:3051","2:12408:2177","2:12411:25502","2:12414:25504","2:12417:32110","2:12420:32111","2:12423:25506","2:12426:25508","2:12429:25510","2:12432:25511","2:12435:2492","2:12438:32112","2:12441:32113","2:12444:32114","2:12447:32115","2:12449:32116","2:12451:32117","2:12453:32118","2:12454:32119","2:12455:32120","2:12458:32121","2:12461:24934","2:12464:25512","2:12467:32122","2:12470:32123","2:12473:32124","2:12476:2225","2:12478:26647","2:12479:26648","2:12480:26650","2:12481:26651","2:12482:26652","2:12483:32125","2:12485:8460","2:12486:32126"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:341:1866":{"id":"0:341:1866","crate_id":0,"name":"BufferedStandardStream","span":{"filename":"src/lib.rs","begin":[507,0],"end":[509,1]},"visibility":"public","docs":"Like `StandardStream`, but does buffered writing.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:74","a:2:8560:2805-0:341:1866","a:2:8561:2804-0:341:1866","a:2:2792:249-0:341:1866","a:2:2775:240-0:341:1866","a:2:2832:2665-0:341:1866","b:2:2260-0:341:1866","b:2:2566-0:341:1866","b:2:2570-0:341:1866","b:2:3411-0:341:1866","b:2:2263-0:341:1866","b:2:2581-0:341:1866","b:2:2576-0:341:1866","0:104","0:343","0:101"]}}},"0:296":{"id":"0:296","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,33],"end":[251,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2785:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ColorChoice","id":"0:279:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2775:240-0:435:2023":{"id":"a:2:2775:240-0:435:2023","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2775:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:435:2023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:284:1807":{"id":"0:284:1807","crate_id":0,"name":"Auto","span":{"filename":"src/lib.rs","begin":[262,4],"end":[262,8]},"visibility":"default","docs":"Try to use colors, but don't force the issue. If the console isn't\navailable on Windows, or if TERM=dumb, or if `NO_COLOR` is defined, for\nexample, then don't use colors.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}}},"paths":{"2:47742:6956":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"6:7526:6375":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"6:7514:6373":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"17:3232:7252":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:40764:2565":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"17:11490:4005":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"6:6139:6175":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:43399:2588":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"18:719:3739":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"2:4787:415":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"2:30224:6500":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"2:40395:6744":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2:40202:2540":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:6902:3628":{"crate_id":1,"path":["std","sys","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"1:12017:8304":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"2:9504:3118":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"5:6584:3056":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"11:968:5033":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"6:1520:5487":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"17:12225:4116":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"0:438:2051":{"crate_id":0,"path":["termcolor","Color","Blue"],"kind":"variant"},"2:44452:5321":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"2:2875:8620":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"2:2865:13891":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:23403:239":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"6:5899:6076":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"1:589:8459":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"16:7694:4792":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"17:10420:3795":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"2:41299:6760":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"2:40371:3727":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"6:4397:5692":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:45698:6872":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"2:8562:2803":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"6:4477:5729":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"6:6714:6266":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"6:7573:6385":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"2:3243:255":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"17:11547:4008":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"1:2384:8516":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"17:11971:4070":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"16:3915:4806":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"5:7501:6427":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"16:8294:132":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"6:1631:5564":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"17:13826:4514":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"1:918:7409":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"16:6425:4930":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"17:11448:20689":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"17:10750:3914":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"2:41418:7027":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"2:39929:30751":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"9:450:19607":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"1:7600:3633":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"5:676:252":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"6:1506:5482":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:43216:6454":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"16:8167:7404":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"2:2546:259":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"5:7434:31548":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"6:6850:6346":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"16:2810:4769":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"17:12724:4219":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"16:5743:4846":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"2:40773:3595":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"2:39981:2594":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"17:3565:7254":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"6:541:5444":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:8560:2805":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:7664:7513":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"6:5082:5988":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"17:8953:20685":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"14:215:5249":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"2:45567:6867":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"17:13685:4488":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"11:2186:33585":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"2:9460:136":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"1:1568:3364":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"17:11191:3961":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"2:40243:6727":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"17:9998:3840":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"2:4808:31704":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"17:13215:4314":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"1:3348:2550":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"6:4783:5842":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"6:532:5438":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"11:447:148":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"17:9886:7262":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"1:8870:7534":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"6:4706:5801":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:3518:3366":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"1:12068:1602":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"6:6003:6134":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"5:2223:33548":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"2:30816:3025":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"6:4812:5854":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"1:4059:8548":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"17:10316:3892":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"1:10551:1838":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"1:3115:2566":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"2:0:527":{"crate_id":2,"path":["core"],"kind":"module"},"17:9328:2542":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"5:1138:33497":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"17:9607:7258":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"1:1067:7419":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"2:22725:188":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:8808:7532":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"1:1561:3056":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"6:4330:5649":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"5:895:5306":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"2:42983:6804":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"17:11639:3961":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"5:2170:6403":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"0:286:1809":{"crate_id":0,"path":["termcolor","ColorChoice","Never"],"kind":"variant"},"1:12065:789":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"2:9494:3114":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"17:11173:20811":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"0:415:1754":{"crate_id":0,"path":["termcolor","ColorSpec"],"kind":"struct"},"16:6569:4782":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"2:39149:216":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:11066:3639":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"2:43993:6832":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"17:12945:4270":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"16:5088:4829":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"16:5963:7332":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"17:11000:3953":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"17:11162:3956":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"6:1733:5616":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"17:13188:4310":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"1:8244:7529":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:3288:13756":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:2366:204":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:12072:1598":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"16:7090:5032":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"2:41671:3056":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"16:4613:4815":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"17:8825:20681":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:40030:13830":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"16:6243:7357":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"1:12033:27019":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"11:798:7411":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"9:0:2382":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"0:503:1783":{"crate_id":0,"path":["termcolor","HyperlinkSpec"],"kind":"struct"},"2:5555:6439":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:2638:2555":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"16:2526:4757":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"2:3248:139":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"11:667:7409":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"1:8149:2564":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:44359:230":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"1:11613:7094":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"16:4719:4817":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"1:10545:2559":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"1:3303:1838":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"6:5076:5985":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"2:2879:8622":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"2:22031:6464":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"18:531:3711":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"1:8304:7530":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"1:622:3292":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"6:1702:5604":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"18:609:7235":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"5:1273:7419":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:8488:7043":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"1:8996:7537":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"11:2168:5313":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"2:4834:846":{"crate_id":2,"path":["core","iter"],"kind":"module"},"16:2305:19756":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"6:653:14639":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:21351:8629":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"6:6024:6146":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"1:2888:3617":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"17:11389:7327":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"17:13868:4528":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"6:4391:5690":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"18:481:3705":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"2:45467:6863":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"2:10347:2543":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"17:12074:4086":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"2:42564:74":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"2:47400:6949":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"17:13838:4517":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"17:10468:3895":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"6:5814:6036":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"5:3212:5309":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"6:6574:6208":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"16:7722:4783":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"2:45738:6874":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:43256:6805":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"6:4376:5683":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:4341:3587":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"17:14134:4596":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"5:1302:7422":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"11:793:7424":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"6:1709:5607":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:3233:13903":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"15:0:2387":{"crate_id":15,"path":["addr2line"],"kind":"module"},"2:1671:1146":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"6:7561:6383":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"14:187:19699":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:4268:224":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"5:3238:5312":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:3020:2668":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"5:2966:33477":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:41441:6777":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"17:12750:4223":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"2:42979:6803":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:6433:2629":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"1:2382:8515":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"1:3391:2565":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"1:9288:3268":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"1:10862:27022":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"2:22137:6466":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:42524:68":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"17:12645:4207":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"2:21365:6461":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"2:41612:229":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"2:45668:6871":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"6:6616:6232":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"6:4919:5909":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"16:6960:7369":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"17:400:7243":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"17:13792:4511":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"18:491:3706":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"2:46682:6911":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"2:12074:2577":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"5:6332:8716":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"1:9060:27025":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"17:12184:4106":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:40110:8496":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"6:7287:6361":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:12065:2575":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:6169:3624":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"3:0:471":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"18:699:3734":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"17:10646:3993":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"6:4403:5695":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"17:10616:3909":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"6:6017:6145":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"2:21475:8635":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"2:41783:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:40271:6731":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:2562:1842":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"2:45637:6870":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"6:474:5402":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"7:79:19600":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"2:2783:3007":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"1:10814:6983":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"17:12373:4143":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"2:40314:6737":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:6549:2634":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"6:5891:6071":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"1:7581:3631":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"11:695:7410":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"1:3945:8538":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"2:6203:1941":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"2:21790:6463":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:44402:7478":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"2:7401:13869":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"16:7041:5024":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"6:4508:5747":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"6:6165:6190":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"17:13202:4313":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"2:2160:626":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"5:6663:3537":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2:40355:6741":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"16:8115:5159":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"5:7403:104":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"1:1573:5309":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"2:43651:2600":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2:21283:8524":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"2:2360:197":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"1:5832:2636":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"6:7595:6390":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"2:39087:13759":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"17:13101:4293":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"1:12050:990":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2:21180:8639":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"2:3652:3056":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"16:6545:4945":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"2:41535:7423":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:44028:6837":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"2:10140:8524":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"2:4626:13823":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"11:119:3525":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"1:4051:8546":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:42771:6800":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"17:10685:7303":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"1:3989:8541":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"17:13071:4287":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"1:8826:7053":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"1:6304:223":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"11:1826:3366":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"17:13906:4537":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"16:3049:19759":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"18:96:24643":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"11:1663:150":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"6:5070:5983":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"16:6901:4784":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"16:5939:4874":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"2:2891:13894":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"17:11337:20812":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"2:12730:7459":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"17:14316:4664":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"2:2918:5052":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:1986:199":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"17:12554:4193":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"2:41978:92":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"17:11617:4012":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"2:40004:13829":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"1:12075:1206":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"7:0:1648":{"crate_id":7,"path":["unwind"],"kind":"module"},"1:11055:3638":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"6:506:5418":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"1:4138:29565":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"2:39307:7463":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"5:3142:97":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"17:14110:4592":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"5:2960:33481":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"2:9500:209":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"2:11590:13970":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"11:1027:19686":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"17:11815:4029":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"1:11332:7563":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"1:5390:7502":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"6:4994:5949":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"5:1464:5307":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"16:0:2388":{"crate_id":16,"path":["gimli"],"kind":"module"},"16:5017:4827":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"17:13922:4541":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"5:1473:5308":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"17:14434:4694":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"2:41680:198":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"17:12062:4083":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"17:11327:3982":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"2:30788:198":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"6:4965:5935":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"6:4652:5785":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:10322:7423":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"2:22220:6477":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"17:9531:33612":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"17:14145:4600":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"11:0:2384":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"16:8195:5164":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"1:4037:8544":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:43479:2605":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:10429:7450":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"2:22228:6478":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:42724:6792":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"2:2844:8619":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"16:2548:4758":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"2:8990:88":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"17:13897:4536":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"2:2859:5043":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"1:8249:8533":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"2:44176:6848":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"18:113:24644":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:10298:5306":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"6:5017:5957":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"1:4712:8567":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"1:5440:7505":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"16:4949:4825":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"2:4405:3125":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"1:943:7414":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"5:878:3545":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"16:2504:4756":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"16:5995:4734":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"2:21693:8632":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"1:9984:6773":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"2:43405:2587":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:646:8462":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"6:4725:5809":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"16:5760:20618":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"0:452:2063":{"crate_id":0,"path":["termcolor","Color","Ansi256"],"kind":"variant"},"5:7299:6419":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"11:332:3527":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"17:12484:4184":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"2:10467:7451":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:11389:7512":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"2:21914:8628":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"2:46187:6888":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"2:3017:2667":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"17:11048:7314":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"0:282:1803":{"crate_id":0,"path":["termcolor","ColorChoice","AlwaysAnsi"],"kind":"variant"},"17:9564:7257":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"2:45898:6879":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"17:11381:3988":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"1:840:5306":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"2:7897:13868":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:3529:2535":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"16:4585:4814":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"11:365:3529":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"2:2896:5048":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"17:10447:7291":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"17:10397:7284":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"17:11244:4012":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"17:10340:3894":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"6:1690:5600":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"6:1590:5532":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"17:11295:3977":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"11:1501:19687":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"17:13162:4308":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:21802:31294":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"1:7690:3327":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:41382:31549":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"2:2785:247":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:8884:7056":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"1:3266:1848":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"6:6086:6164":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:2782:1789":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"2:40346:6740":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:3679:8535":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"17:9752:7260":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"17:13259:4321":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"0:393:1870":{"crate_id":0,"path":["termcolor","NoColor"],"kind":"struct"},"0:473:2171":{"crate_id":0,"path":["termcolor","ParseColorError"],"kind":"struct"},"1:10109:7548":{"crate_id":1,"path":["std","sys","unix","os","EnvStrDebug"],"kind":"struct"},"11:749:3366":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"2:12080:2576":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"17:11507:20690":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"2:41744:93":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"17:14378:4686":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"6:6829:6334":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"17:10478:3896":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"16:6279:4916":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"17:8765:20679":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"1:2214:133":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"1:1895:3290":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"2:22593:192":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"2:47290:6948":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"6:6045:6152":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"1:955:7416":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"1:7751:3272":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"6:62:14230":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"6:4471:5726":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:44184:6850":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"2:9492:3113":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"16:4745:4818":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"17:14499:4712":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"5:1514:213":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"16:4921:4824":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"11:736:5308":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"5:6465:3366":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"1:3846:7497":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"2:43703:2585":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2:22890:185":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"17:10366:7281":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"6:4570:5779":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"2:2534:77":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"1:1058:7417":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"6:1527:5490":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"2:12953:3360":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"2:9496:3115":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"2:30218:3356":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"17:14068:4581":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"2:45822:6877":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"17:10628:3912":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"17:11124:7323":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"17:11358:20813":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"16:4344:4808":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"17:9350:3859":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"17:10265:7279":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"1:8225:2543":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"17:9823:20698":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"17:11098:7321":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"1:8293:7028":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"17:13989:4556":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"1:1764:649":{"crate_id":1,"path":["std","env"],"kind":"module"},"2:43225:7473":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:43835:6818":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"2:12656:158":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"2:4452:3126":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"2:43415:2542":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"2:41655:5306":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"2:43881:6828":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"5:7476:3569":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"16:6226:7354":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"17:9488:33610":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"17:13148:4307":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"16:4417:4809":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"17:10588:3906":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"5:3720:2556":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"5:3594:7423":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"2:11825:6813":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:2938:13900":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:12069:1599":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"16:5866:4865":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"1:11326:7086":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"2:43551:2602":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"16:6268:33607":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"2:46090:6885":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2:11108:7455":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"2:47876:6966":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"2:42233:3115":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:9081:7063":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"0:335:1863":{"crate_id":0,"path":["termcolor","StandardStreamLock"],"kind":"struct"},"2:43387:2591":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:4578:8585":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"17:9780:7261":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"1:9038:7543":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"16:8281:5171":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"5:4074:7423":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"17:11215:3968":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"2:47899:6967":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:907:3364":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"2:40233:6725":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"2:2257:100":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"5:3204:5311":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"17:13135:4306":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"2:4396:3588":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:40294:6735":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"2:41822:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"17:9912:7263":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"11:399:33586":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"1:12049:397":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"2:43156:7472":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"16:6352:4921":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"11:1068:7420":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"2:22084:6465":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"2:30184:3355":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:4003:8543":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"16:6467:4934":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"2:3254:13805":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:42019:87":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:42487:113":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"17:9972:7268":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"16:5322:4831":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"17:9102:3852":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:39908:6705":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"2:42226:3113":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"17:14522:4716":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"2:45968:6881":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"16:3655:3755":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"5:3669:3537":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"6:4796:5847":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"16:6696:4972":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"1:4915:8592":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"17:434:3803":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"2:1751:6431":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"11:1048:33592":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"1:12054:1107":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"19:0:1087":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"16:5673:4779":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"2:22857:184":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"17:12911:4267":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"1:10975:7506":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"17:11872:4041":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"2:4:1070":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"1:11401:7091":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"10:36:5322":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"1:10167:7550":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"2:47808:6962":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:5249:205":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:22956:187":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:8397:2797":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"16:2472:4755":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"16:7568:4791":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"2:21227:13913":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"16:6531:4943":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"1:9033:7542":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"16:6346:7368":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"8:0:2381":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"1:10548:1837":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"2:3002:2545":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:10784:7075":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"16:7284:2801":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"17:10126:3877":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"17:13546:4436":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"0:379:1941":{"crate_id":0,"path":["termcolor","Buffer"],"kind":"struct"},"1:8320:7029":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"2:46136:6887":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"5:3178:5310":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"1:11253:155":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"2:44367:210":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"6:595:5473":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"2:4035:105":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"1:11472:3643":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"1:7865:6982":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"6:1575:5520":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"6:5858:6058":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"17:8978:20686":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"2:22692:191":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"17:13667:4483":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"17:11062:7318":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"16:149:3521":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"16:3032:4796":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"16:2596:4760":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"6:1696:5603":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"16:2722:4765":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"2:46044:6883":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"17:11719:20692":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"1:12055:335":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"1:897:3366":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"2:47762:6958":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"2:39134:6569":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"17:12543:4192":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"16:6171:209":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"2:39989:2593":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:4749:8554":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"6:1638:5568":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"17:11316:3981":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"6:1500:5479":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"16:6318:4919":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"0:442:2054":{"crate_id":0,"path":["termcolor","Color","Red"],"kind":"variant"},"9:426:19609":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"1:5578:8610":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"2:1737:13923":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"5:1257:5033":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"1:9026:7541":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"2:25:649":{"crate_id":2,"path":["core","env"],"kind":"macro"},"2:40742:6751":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"17:13710:4490":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"17:12997:4276":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"17:11351:3984":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"5:2131:3554":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"5:778:98":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"17:12621:4206":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"1:10962:3273":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"2:47540:6951":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"2:5613:6441":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2:7529:2670":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:2797:1880":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"17:11151:7325":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"17:10370:7282":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:22153:6467":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"2:46368:6892":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"16:7342:33604":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"2:29969:8536":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"1:4176:8564":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"6:1717:5611":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"6:4306:5631":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"17:12934:4268":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"6:6805:6324":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"1:6256:3625":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"6:5784:6019":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"6:1681:5594":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"6:1663:5587":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"17:9921:7264":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"16:3232:4741":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"0:436:2050":{"crate_id":0,"path":["termcolor","Color","Black"],"kind":"variant"},"2:40549:6748":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:8364:7030":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"16:2969:19758":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"5:4846:220":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"1:1557:5306":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"1:0:1488":{"crate_id":1,"path":["std"],"kind":"module"},"17:8594:20666":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"1:7029:3629":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"1:3224:2559":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"2:46288:6891":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"6:6753:6284":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"1:9493:3635":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"5:7320:3056":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"11:760:3364":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"2:9172:31550":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:40224:6724":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"17:13723:4495":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"11:1845:5310":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"1:7739:6978":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"1:3226:2560":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"2:22282:30747":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"17:12513:4189":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"17:582:3847":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"2:43207:1872":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:32019:7462":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"17:14324:4665":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"2:43235:6456":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"2:6192:6446":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"2:46446:6907":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"2:43728:2592":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"2:43712:2583":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"2:44041:2606":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"2:12705:207":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"17:8686:20677":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"6:4520:5753":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:7153:2564":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"6:4415:5704":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"2:40791:6756":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"2:7893:8481":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"17:10903:7310":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"17:8895:20683":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"2:21042:8524":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"2:3260:13804":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"2:5407:2522":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"1:6546:2633":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"1:8158:2066":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"1:5424:7504":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"16:3797:4803":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"1:11625:27532":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"2:7397:13870":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"6:568:5458":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"17:14156:4601":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"11:805:8478":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"1:8342:6241":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"2:2837:109":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"6:6627:6237":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"16:2696:4764":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"17:11226:3972":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"16:2406:4752":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"2:41316:6762":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"2:3273:31965":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"6:526:5435":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"17:9711:33611":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"5:4194:2522":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"1:5753:2625":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"17:256:7241":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"2:2883:13893":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"2:11765:6809":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"2:12678:31767":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:12067:786":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"16:6415:4929":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"2:45720:6873":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"6:4628:5783":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"5:261:3537":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"1:7137:29562":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"1:8971:2628":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:39165:213":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"2:47823:6963":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"6:5802:6032":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"17:11272:3975":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"1:7541:7566":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"1:7381:24989":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"2:40063:103":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"9:357:19622":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"2:7934:31551":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:41362:6769":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"2:39275:8471":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"5:1776:3364":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"17:14126:4595":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"17:14001:4562":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"17:14269:4646":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"1:5455:108":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"16:5798:4852":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"1:11309:3641":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"2:44240:14010":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"17:13914:4539":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"1:8202:2540":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"5:7450:6423":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"11:403:33587":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"16:6560:3523":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"1:4646:6254":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"0:0:2264":{"crate_id":0,"path":["termcolor"],"kind":"module"},"16:3461:4800":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"2:45489:6864":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"17:14296:4658":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"11:1831:3364":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"17:10726:7308":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"6:4766:5831":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"1:10486:3636":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"17:10520:3901":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"5:35:3363":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"17:10036:3873":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"2:42499:5130":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"1:7718:8465":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"17:11367:3985":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"2:43327:6459":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"16:4774:4819":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"17:12765:4226":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"17:10456:7294":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"2:41467:196":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"17:12280:4135":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"1:1579:5310":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"1:11234:7085":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"5:7487:245":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"1:558:7482":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"1:11008:7055":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"17:13024:4280":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:46758:6913":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"6:1649:5576":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"17:10165:20718":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"2:40535:6747":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"16:6041:20620":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"1:11495:7495":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"16:5384:20616":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:4272:7445":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"17:8926:20684":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"17:10980:3887":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"11:1012:7419":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"0:280:1800":{"crate_id":0,"path":["termcolor","ColorChoice","Always"],"kind":"variant"},"17:10788:20787":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:2170:13913":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"1:10443:7532":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"1:10088:3262":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"17:11910:4056":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"6:7567:6384":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"17:11573:4009":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"6:4640:5784":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"16:6189:4914":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"17:12685:4215":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"16:6893:5006":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"2:22245:30756":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"16:7677:213":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"5:1523:7430":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"17:12711:4218":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"1:5509:7506":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"10:0:2383":{"crate_id":10,"path":["adler"],"kind":"module"},"16:6361:4922":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"17:9277:3857":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"6:6053:6155":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"17:11661:4014":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"1:2394:8521":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"1:4634:8543":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"17:9701:7259":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"6:4731:5812":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"16:4497:4811":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"2:44423:173":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:6817:8623":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"1:5994:223":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"1:8932:8615":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"6:6735:6273":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"16:5696:20617":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"6:7532:6376":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"17:11951:4060":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"1:8286:7027":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"2:9490:124":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"2:47648:6953":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"16:7054:5027":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"5:2243:6409":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"17:14100:4589":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"2:43295:7475":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"2:43597:2598":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:47938:6968":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"17:11111:7322":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"17:12452:4177":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"2:22344:8537":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"17:10012:3887":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"5:4002:3366":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"2:40525:2541":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:10990:27017":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"16:6818:4999":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"6:4526:5756":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"2:6932:31716":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"5:4393:2522":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"0:372:1921":{"crate_id":0,"path":["termcolor","BufferWriter"],"kind":"struct"},"1:2923:132":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"6:6877:6352":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:32008:7461":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"2:12898:146":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"2:45757:6875":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:10334:108":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"1:7936:2556":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"1:8121:2567":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"6:5872:6069":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"6:6145:6176":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"1:8563:7051":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"17:10771:3916":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"2:3409:69":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"17:10059:3875":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:21299:8625":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"2:2254:99":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:40068:6719":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"2:2537:76":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"6:0:869":{"crate_id":6,"path":["libc"],"kind":"module"},"16:5612:4780":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:44349:222":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"6:1495:5477":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"1:4924:8593":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"2:42515:72":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"16:5363:4832":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"2:2498:13834":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:8238:7527":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"11:2201:3362":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"17:12111:4092":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"16:5648:7330":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"6:4465:5724":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"17:14308:4661":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"1:12062:684":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"1:5404:7503":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"6:4618:5782":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"17:14469:4707":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"1:3465:2532":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"6:6180:6201":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:43579:2597":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"2:44018:6833":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"5:6912:265":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"17:13739:4498":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"11:1838:5309":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"5:1672:3537":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"2:43429:2543":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"1:2216:7492":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"18:624:33621":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"1:12070:1600":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"1:5787:2627":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"16:6156:4909":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"6:5053:5979":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"1:3504:1739":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"2:9749:6450":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"16:4862:4822":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"1:4189:8565":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"1:7912:123":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"1:11163:7053":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"1:8948:8617":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"18:0:2390":{"crate_id":18,"path":["memchr"],"kind":"module"},"2:41518:3055":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"17:14460:4703":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"16:7523:5093":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"16:5816:4857":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"1:1817:3262":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"2:21213:8634":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr"],"kind":"trait"},"2:40303:6736":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"2:44007:13791":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:7882:6984":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"2:41527:5306":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"17:11886:4042":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"2:42779:6801":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"17:9650:3887":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"6:4680:5787":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"1:7860:7517":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"2:2497:8524":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"6:4850:5868":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"16:7513:5092":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"17:14024:4567":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"1:1842:3269":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"6:7259:6358":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"18:614:33618":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"1:8903:7057":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"18:507:3707":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"17:13286:4324":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"6:7520:6374":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"5:1411:5306":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"17:10383:7283":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"2:20889:31442":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:2832:2665":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"5:822:3543":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"2:10150:242":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1:12057:1496":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"2:9931:3600":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"18:660:7236":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"11:1858:5312":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"17:13966:4553":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"5:2049:7431":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"2:40016:6713":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"2:3013:2666":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:12066:790":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"5:1503:7410":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"2:9709:151":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"1:4160:8562":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"1:8465:6796":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"16:2321:4742":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"16:6879:5004":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"2:2942:13901":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:638:7483":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"1:3975:8540":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"2:45423:6861":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"2:44160:6844":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:39945:6709":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"6:1911:15630":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"17:10112:7273":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"1:1924:3291":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"2:40096:6720":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:11536:7496":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"2:44228:6853":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"2:42097:2624":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"18:755:3747":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"17:12658:4210":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"17:11473:3817":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"11:1103:7421":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"1:10107:7549":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"16:6792:4998":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"6:123:14285":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"2:2903:13895":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"17:9762:33617":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"9:507:5383":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"16:7862:5115":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"1:7669:6977":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"2:11620:2218":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"2:8985:81":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"16:6742:4984":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"16:5435:4833":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"5:2461:6410":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"17:11261:3974":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"2:12060:2581":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"16:5727:4844":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"1:8854:7055":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"0:341:1866":{"crate_id":0,"path":["termcolor","BufferedStandardStream"],"kind":"struct"},"6:6729:6272":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"0:284:1807":{"crate_id":0,"path":["termcolor","ColorChoice","Auto"],"kind":"variant"},"17:9086:3851":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"2:45513:6865":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"17:2178:7248":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"1:11359:7088":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"2:5495:2522":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"2:30254:30746":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"16:7006:7370":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"5:3217:33469":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:43864:6827":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:4351:3124":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"17:12983:4275":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"16:6844:5000":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"1:4478:8567":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"17:2150:20745":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"16:7436:4882":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"16:7318:5070":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"2:2628:132":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:41333:8534":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"2:46492:6908":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"17:10561:3904":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"2:22824:183":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"2:7213:2618":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"1:7645:6976":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"16:7067:5030":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"11:2194:5318":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"6:1569:5518":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"1:2921:229":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"2:31972:5317":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:46604:6910":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:6987:8378":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"1:4973:2793":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"5:7237:6418":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"5:4348:266":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:43447:2601":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"2:22626:189":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"17:12098:4090":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"2:4277:7446":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"17:9867:3868":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"2:45868:6878":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"17:12154:4102":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"17:9617:33613":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"6:4589:5780":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:20906:31438":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"17:12959:4272":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"17:13228:4315":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"17:13451:4353":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"17:13487:4384":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"6:4820:5857":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"17:13567:4446":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"1:5060:7501":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:15:1831":{"crate_id":2,"path":["core","write"],"kind":"macro"},"2:20908:31443":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:10351:27686":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"16:8239:5087":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"2:41861:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"5:4164:2522":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"6:547:5447":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"2:2172:13914":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"1:1884:1737":{"crate_id":1,"path":["std","error"],"kind":"module"},"2:11141:7456":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"2:21698:8640":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"18:590:3717":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"1:7644:8524":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"16:3830:4804":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"1:8212:2541":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"2:42761:6796":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"2:42964:6802":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"17:12086:4087":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"17:10097:7272":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"11:1538:7426":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"11:2060:7419":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"16:7503:4788":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"1:10760:7558":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"2:40336:6739":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"2:21092:31066":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"2:8561:2804":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"4:0:2380":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"1:4500:8568":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"2:42219:3114":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"0:446:2057":{"crate_id":0,"path":["termcolor","Color","Magenta"],"kind":"variant"},"1:6201:7509":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"1:8181:2538":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"16:4527:4812":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"1:2366:6433":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"16:2744:4766":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"5:1102:33496":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"16:6083:19729":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"2:47686:6954":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:11189:27020":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"2:21266:8630":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"2:2786:246":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"2:25805:268":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"16:6386:4926":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"2:47751:6957":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:4751:8556":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"17:12876:4256":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"16:7102:20625":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"1:7855:3796":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"16:2864:4771":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"2:9963:3606":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"17:9372:3860":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"1:3939:8539":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:21912:8524":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"2:10623:7454":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"5:7587:3365":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"15:327:8279":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"11:311:5303":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"16:8050:5152":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"5:7229:3056":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:2324:203":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:6650:236":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"17:9003:20687":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"5:2690:6413":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"11:1121:7422":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"2:43308:6458":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"5:5942:70":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"2:45597:6868":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"17:9172:3854":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"6:1536:5495":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:44061:2607":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"2:9865:3597":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"1:3744:7496":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"1:12022:8467":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"2:43533:2603":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"16:7621:20627":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"1:10591:3327":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"2:40262:6730":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"6:554:5450":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"1:1779:3252":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"6:4608:5781":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"18:736:24653":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"16:5419:3851":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"5:1118:33480":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"17:10547:3903":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"2:2540:156":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:11606:7457":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"17:9660:33609":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"16:4462:4810":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"16:7474:7392":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"2:44164:6845":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:4753:8557":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"5:685:114":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"6:5909:6083":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:10502:2601":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"6:4718:5808":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:10390:2584":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"6:4756:5825":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"16:4986:4826":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:8670:2575":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"2:12850:110":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"2:3076:3359":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"2:2792:249":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"6:7584:6389":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:47782:6960":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"0:400:1871":{"crate_id":0,"path":["termcolor","Ansi"],"kind":"struct"},"1:5575:6162":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"1:8338:7531":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"1:3741:7495":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"5:6098:2522":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"17:9207:3855":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:5317:124":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"1:1840:3268":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"17:10949:7313":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"17:10278:7280":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"5:7259:3548":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"2:12020:1740":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"16:5712:4841":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"17:14536:4719":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"1:10802:7080":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"1:8298:8566":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"17:12465:4179":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"16:7792:20628":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"1:9140:7064":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"11:1822:3056":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"2:21044:8631":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"1:12064:788":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"2:44465:6860":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"2:6198:6445":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"17:12671:3921":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"16:2907:4773":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"17:10139:20717":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"11:723:5307":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"16:6204:7339":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"16:4889:4823":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"16:4557:4813":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"5:629:7427":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"16:7597:33603":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"16:8072:5153":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"17:14346:4671":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"5:0:309":{"crate_id":5,"path":["alloc"],"kind":"module"},"1:8916:8616":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"2:22923:182":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"2:2329:129":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"17:11235:3973":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"6:119:14284":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"2:41405:6776":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"1:11639:7095":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"16:6915:4785":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"6:6037:6150":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"6:6598:6225":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"6:4940:5924":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"16:7534:4789":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"2:9948:3601":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"17:9445:7255":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:40023:6714":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"2:30240:68":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"2:44180:6849":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"16:6332:4774":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"2:39501:25409":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"1:3522:2533":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"18:652:3707":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"1:8574:7052":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"9:486:19606":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"17:12043:4082":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"16:2380:4751":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"2:42469:68":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"2:1760:6434":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"2:45920:6880":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"18:521:24655":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"5:207:3535":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"17:13174:4309":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"1:12058:1583":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"16:2574:4759":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:46234:6889":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:7928:2554":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"13:0:2379":{"crate_id":13,"path":["std_detect"],"kind":"module"},"5:1426:7423":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"5:276:1790":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"17:10197:7274":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"5:7328:3056":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"1:11835:3647":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"1:932:8478":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"9:237:6796":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"2:7585:171":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:2924:5053":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:3513:29661":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"2:2543:137":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"11:2174:5314":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"11:1852:5311":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"17:13298:4331":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"17:8713:20678":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"1:11407:7092":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"2:2829:3009":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"1:871:5307":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"1:5091:7501":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"6:7304:6371":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"16:2881:4772":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"17:12778:4227":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"18:548:147":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"1:6153:3611":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"1:3997:8542":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"2:4011:7442":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"17:13085:4289":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"6:4438:5712":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"16:7544:5094":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"1:505:3554":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"6:7555:6382":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"5:2141:6401":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"2:7476:125":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"6:488:5410":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"17:9390:133":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"1:12076:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"2:10609:7453":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"6:500:5415":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"6:587:5468":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"5:5325:3537":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"16:6017:20619":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"16:2450:4754":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"17:13554:4439":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"17:9242:3856":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"17:13973:4554":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"17:10714:7307":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"16:2618:4761":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:3325:13757":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"6:4789:5845":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"17:11687:20691":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"17:13611:4477":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"2:22169:6471":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"2:40783:6754":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"16:2284:19730":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"1:4240:7498":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"17:10916:7311":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"5:1288:7417":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"5:7249:3366":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"6:7281:6359":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"6:4742:5819":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"1:3305:1849":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"1:4709:8594":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"17:12496:4186":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"5:1482:7424":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"5:7220:3361":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"2:3072:3358":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"5:3581:5306":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"1:2576:3601":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"1:2219:3583":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"17:10292:3887":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"6:4874:5882":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"17:3441:7253":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"17:10410:7285":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"6:4485:5734":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"17:12698:4216":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"17:11586:4011":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"2:30418:30750":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"6:6076:6161":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"17:12422:4168":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"16:7613:7399":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"6:4844:5867":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"17:12252:4125":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"6:6697:6261":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"1:10789:6982":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"17:13890:4534":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"16:6401:4776":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"2:40173:6457":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"16:7582:5095":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"17:10738:7309":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"2:45443:6862":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:9116:238":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"17:8659:20664":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"1:1585:5311":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"2:43850:6824":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"2:9701:147":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"1:12061:682":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"6:4835:5861":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"6:573:5460":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"17:10637:3913":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"17:2012:7247":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"14:0:2386":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"17:8848:20682":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"17:9574:33614":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"2:44148:6841":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"1:8505:8605":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"17:12196:4107":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"5:7571:3364":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"11:657:3056":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"2:43317:7476":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"6:7549:6381":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"17:11742:4019":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"1:9208:7069":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"2:42058:94":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"16:5982:4878":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"2:4158:6438":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"2:43693:2596":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"5:3183:33461":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"17:12970:4273":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"17:12136:4094":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"1:5646:6975":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"18:766:24654":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"17:14173:4608":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"6:494:5413":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"17:13802:4512":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"1:8219:2542":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"17:14118:4593":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"11:285:5300":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"18:681:3730":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"2:40735:6750":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:949:7415":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"17:11761:4022":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:43282:6457":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"5:3330:3364":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"2:2835:3011":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"2:44168:6846":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"6:6607:6231":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:12052:1618":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"1:10824:134":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"5:5858:3366":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"1:10853:27011":{"crate_id":1,"path":["std","sys","unix","kernel_copy","FdHandle"],"kind":"enum"},"2:21468:8524":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"6:1603:5539":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"2:22332:6494":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:4644:6252":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"17:11991:4071":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"16:3065:3750":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"5:7269:33467":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"2:4127:7444":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:8006:7520":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"2:41900:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:3191:7951":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"5:5973:2623":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"1:9111:237":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"18:564:3716":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:44203:126":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"3:234:229":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"16:3315:4799":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"2:39189:215":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"16:8181:4795":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"12:0:2385":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"17:11023:3954":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"5:1442:3056":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"1:7895:134":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"16:8134:5162":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"16:6929:5008":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:12085:2574":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"5:7420:6420":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"1:10779:7073":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"17:12293:4136":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"2:1641:6430":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"6:4802:5850":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"1:11632:7095":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"5:4759:710":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"17:9933:7265":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"16:7015:5023":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"16:4835:4821":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"2:4200:3123":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"15:394:19721":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"6:4826:5858":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"17:14335:4670":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"17:12846:4237":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"17:12790:4228":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"1:2368:8511":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"2:47771:6959":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:5639:3625":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"2:22:723":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"6:5027:5962":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"18:515:3710":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"1:8415:7040":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"16:6513:4935":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"2:40285:6734":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"2:42740:6795":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"6:4881:1056":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"2:39902:2593":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"2:21477:6461":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"2:46014:6882":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"6:4931:5918":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"6:7608:6394":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"17:14083:4585":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"1:9176:7545":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"16:5905:4868":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"11:844:7416":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"17:14514:4713":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"5:6824:3372":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"2:43956:6831":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"2:40193:7465":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"9:52:8282":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"2:47846:6964":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"2:47602:6952":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"2:10540:7452":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"17:11393:132":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:42732:6794":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"17:9985:7269":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"17:12531:4190":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"2:2550:258":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"17:10240:3871":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"5:7387:8477":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"1:8312:7527":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"1:9159:7065":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"6:4448:5718":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"17:12473:4181":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"1:12071:1601":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"16:5574:4775":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"17:2209:7251":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"2:22318:6493":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"13:110:33593":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"2:40758:6752":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"1:3188:7947":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"5:6956:3579":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"6:7538:6377":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"1:7767:3273":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"1:5978:3625":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"1:11374:7089":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"16:6600:20622":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"16:6753:4985":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"2:39314:6575":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"2:39048:13803":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"11:1611:3531":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"17:14090:4586":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"17:10186:3884":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"5:2035:2556":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"1:10259:8612":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"1:483:3613":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"14:7:7405":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"17:13113:4295":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"2:6983:13864":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"1:358:7480":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"16:5588:4778":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"16:8154:7401":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"1:11557:7497":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"17:261:7242":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"17:9455:33615":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"2:2887:13892":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"17:12123:4093":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"16:5403:3850":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"1:1781:3253":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"1:9481:133":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"2:40385:6743":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"17:11306:3979":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"17:13055:4286":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"1:8985:7535":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"1:8990:110":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"2:3939:2522":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"1:9106:179":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"16:6376:20621":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"17:10023:7259":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"1:6473:2637":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"16:7708:4793":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"11:2130:19681":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"2:39997:2592":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"17:10575:3905":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"2:42749:151":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:4807:3618":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"5:7283:3056":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"1:12051:446":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"6:4537:5761":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"0:450:2061":{"crate_id":0,"path":["termcolor","Color","White"],"kind":"variant"},"2:40080:31548":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"6:6859:6349":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"17:10214:7277":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"6:4545:5766":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"17:11934:4057":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"1:11197:6850":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"1:2409:1738":{"crate_id":1,"path":["std","io"],"kind":"module"},"16:7884:20629":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"6:4889:5888":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"2:1922:6437":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"6:6031:6147":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"6:4491:5737":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"2:9441:229":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"2:41543:3056":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:3170:214":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"2:21136:8638":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"17:11201:3963":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"5:2970:33478":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"5:4363:3563":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"16:8205:20630":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"2:44152:6842":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"17:10440:7288":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"9:330:5360":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"6:6657:6259":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"16:8097:5156":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:1825:181":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"5:7463:6426":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:43746:2594":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:6364:178":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"1:8557:5306":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"9:177:8293":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"6:5808:6035":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"0:279:1797":{"crate_id":0,"path":["termcolor","ColorChoice"],"kind":"enum"},"17:14448:4701":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"16:2832:4770":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"11:1517:7425":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"2:11876:2584":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"14:202:13792":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"0:331:1855":{"crate_id":0,"path":["termcolor","StandardStream"],"kind":"struct"},"1:9488:7517":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"2:12131:13784":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"6:7618:6396":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"1:8840:7054":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"1:2499:2553":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"2:10581:2603":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"6:5964:6120":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"17:1075:7245":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"2:44172:6847":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"2:9744:13839":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"17:9790:33616":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"17:11845:4033":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"2:10595:2602":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"17:11407:20688":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"6:5746:5992":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"17:14033:4570":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"6:5060:5982":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:39328:6577":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:2669:3295":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"17:10494:3898":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"17:13040:4282":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"5:1492:7409":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"6:7472:6372":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"17:9137:3853":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"16:7828:5111":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"1:863:3056":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"9:393:19608":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"2:22758:193":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"1:4648:6256":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"2:41663:7423":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"17:13876:4531":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"6:4772:5834":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:41705:86":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"2:3054:13758":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"6:4951:5929":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"6:1545:5501":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"16:2644:4762":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"2:12861:3611":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:2849:8621":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"17:11074:7319":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"2:32026:3124":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"2:45775:6876":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"17:12437:4172":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"18:636:3729":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"0:444:2055":{"crate_id":0,"path":["termcolor","Color","Cyan"],"kind":"variant"},"16:7782:5103":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"17:10430:7287":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"16:6583:4947":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:46942:6915":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:3185:27864":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"1:5137:206":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"6:482:5407":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"5:5369:2579":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:41595:3338":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"17:12888:4258":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"2:11802:6812":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"2:2989:121":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"17:10698:7305":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"17:14401:4687":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"1:5632:223":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:21343:8524":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"2:30312:30741":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"5:5994:14204":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"2:47861:6965":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:11177:7054":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"6:6784:6310":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"1:8878:3056":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"2:4425:2662":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"2:20861:31291":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"18:80:24642":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:47148:6947":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:11072:3640":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"2:1548:2522":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"6:4856:5871":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"2:42542:132":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"17:11535:4007":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"2:9498:3116":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"6:6720:6268":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"6:4957:5930":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"16:7554:4790":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"1:12000:7569":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"17:9945:3871":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"2:39253:219":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"6:5988:6132":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"16:4641:4816":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"2:39917:6706":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"5:4426:3563":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"17:12007:4075":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"17:10661:7299":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"16:6456:4933":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"17:12267:4131":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"17:14355:4673":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"6:4697:5796":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"1:7733:8466":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"17:9959:7267":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"2:46265:6890":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"2:21080:8633":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr"],"kind":"trait"},"2:2775:240":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"5:782:3540":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"5:3171:5306":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"2:32120:3014":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"2:9177:8302":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:10966:5380":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"5:3800:3364":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"16:5634:4835":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"2:46066:6884":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"6:562:5455":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"2:41604:208":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"17:10507:3900":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"6:5046:5976":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"5:3735:7431":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:40049:6718":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"0:455:2064":{"crate_id":0,"path":["termcolor","Color","Rgb"],"kind":"variant"},"1:922:7410":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"2:4023:7443":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"2:6014:6442":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"5:6511:3537":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"17:10672:7300":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"2:43721:2582":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"2:7890:2573":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"2:22659:190":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"16:6261:7365":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:42240:3116":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"5:2959:3108":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"5:4234:5306":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"16:3764:4802":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"1:727:148":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"6:579:5463":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"16:6944:33602":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"16:7128:7060":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"2:43813:13790":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"16:6485:4777":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"18:690:3733":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"16:7736:5101":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"17:12737:4221":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"1:12063:791":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"6:4975:5941":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"11:2180:5315":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"6:4666:5786":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"1:10834:123":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"1:8547:7048":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"2:20876:31291":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"15:306:19712":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"16:7269:33606":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"6:4864:5876":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"17:12305:4139":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"16:5661:4839":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"1:8011:7521":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:2913:13897":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"6:4293:5622":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:11710:3979":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"2:21345:8627":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"11:836:7415":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"17:12024:4077":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"17:12830:4232":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"17:10929:3948":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"14:40:4057":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"2:2934:13899":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"6:5010:5954":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"17:13632:4482":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"1:5760:2626":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"16:3888:4805":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"1:7530:3847":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"1:8232:2539":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"17:12208:4108":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"17:9521:7256":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"14:221:5251":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"17:14163:4603":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"2:46112:6886":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:39209:218":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"6:4370:5682":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:22266:30743":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"16:6499:4794":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"1:8814:201":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"2:43497:2604":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"2:22791:186":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"16:7768:4781":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"2:43633:2599":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"6:5929:6099":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"17:13851:4523":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"2:7434:138":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:416:177":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"17:13758:4499":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"16:6968:20624":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"2:41552:2801":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"17:13575:4447":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"16:2788:4768":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"2:41453:6778":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"17:10084:7271":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"1:6602:2638":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"13:226:5298":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"11:986:7417":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"2:49744:8642":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"16:7391:20626":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"6:1513:5485":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"1:6077:3620":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"1:884:5308":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"2:2947:13902":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"2:43683:2539":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"17:13816:4513":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"0:299:1811":{"crate_id":0,"path":["termcolor","ColorChoiceParseError"],"kind":"struct"},"1:926:7411":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"17:14221:4645":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"6:4946:5927":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"5:1011:3537":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"2:44156:6843":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"18:727:3742":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"17:14056:4578":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"17:11086:7320":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"5:7375:3362":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"2:43737:2593":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"6:4430:5710":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"1:1564:3366":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"17:10227:7278":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"17:14478:4709":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:43929:6830":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"18:538:3714":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"1:4047:8545":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"11:2049:7417":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"17:12172:4103":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"1:10844:2537":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"1:12073:840":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"1:4392:7500":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"2:46728:6912":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"17:0:2389":{"crate_id":17,"path":["object"],"kind":"module"},"1:3419:2522":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"17:14042:4571":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"6:4986:5947":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"17:9852:20699":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"16:4053:4807":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"16:7651:7400":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:32012:5087":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"5:4985:2522":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"2:39969:6711":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"16:3600:4801":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"6:6582:6213":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"6:4498:5740":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:2223:2531":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"17:10534:3902":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"17:11137:7324":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:32033:6565":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"6:4458:5721":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"1:7771:7461":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"1:1590:5312":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"2:21449:8626":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"2:43373:2595":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:4830:8553":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"6:5845:6049":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"17:14420:4692":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"17:13244:4317":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"11:2033:5033":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"1:9003:24935":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"17:12576:4200":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"7:32:19593":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"16:2933:19757":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"2:22193:6475":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"16:7360:33605":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"16:5830:4858":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"2:20848:3025":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"2:2930:13898":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:641:7485":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"1:2598:2546":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"18:574:3707":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"16:2339:4744":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"17:12810:4231":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"17:14076:4584":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"17:10962:3951":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"5:6795:3370":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"16:2359:4750":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"5:3568:175":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"1:1983:200":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"11:630:5306":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"2:2787:112":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"1:853:7423":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"11:97:5299":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"16:2670:4763":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"1:6616:2639":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"2:2617:120":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"2:22205:31547":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"11:1818:5306":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"2:46792:6914":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"2:40215:6722":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"17:13010:4277":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"6:4552:5768":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"2:44440:6859":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"2:9485:115":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:7438:159":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"0:13:1744":{"crate_id":0,"path":["termcolor","WriteColor"],"kind":"trait"},"16:7462:5088":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"2:41585:2802":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"16:4806:4820":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"2:47724:6955":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"18:644:3707":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"2:46522:6909":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:8016:2557":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"1:8169:2537":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"2:42459:6783":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"6:4382:5685":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"17:13274:3979":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"1:9198:28211":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"2:40253:6728":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:1931:695":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"11:644:7423":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:39959:6710":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:7872:6983":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"2:41939:85":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"16:2766:4767":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"2:45535:6866":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"17:1184:7246":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"1:8862:5306":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"1:534:3614":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"17:13693:4489":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"5:7512:7441":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"6:5886:6070":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"10:44:5323":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"2:43337:7477":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:9051:20665":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"17:504:7244":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"6:6843:6343":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"5:4032:3537":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"1:11216:7064":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"1:1044:5033":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"1:12056:1464":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"1:1076:7422":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"16:2428:4753":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"2:41276:164":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"2:9442:1739":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"17:11788:4023":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"5:5788:253":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"14:160:7405":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:1634:625":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"2:2871:5047":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"5:7291:213":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"2:40749:2629":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"1:12074:1658":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"15:288:19711":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"17:13949:4545":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"1:1429:150":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"18:707:2577":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:6795:3063":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:4168:8563":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"1:9121:155":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"6:6634:6241":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:40323:6738":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"6:4343:5659":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"1:7744:6979":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"18:671:7240":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"6:4750:5823":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"16:7660:5099":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"17:11281:3976":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"2:2854:5046":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"2:22311:6490":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"6:5776:6017":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:4058:13755":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"5:6814:3371":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"17:14013:4563":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"2:21094:13913":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"5:5373:2580":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"6:4317:5639":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"16:536:4731":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"14:165:19692":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"6:4687:5789":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"5:5631:3370":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"0:435:2023":{"crate_id":0,"path":["termcolor","Color"],"kind":"enum"},"18:582:3025":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"6:5827:6037":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:40153:7464":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"6:1673:5593":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"6:4910:5903":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"1:3264:1837":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"1:7920:7519":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"5:2962:6406":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"2:12286:115":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"6:5996:6133":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"1:3447:2530":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"14:31:7405":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"5:5135:2623":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"16:7492:5089":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"2:43245:7474":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"6:1557:5510":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"1:9046:7060":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"1:913:7424":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"0:448:2059":{"crate_id":0,"path":["termcolor","Color","Yellow"],"kind":"variant"},"17:12237:4119":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:39231:217":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"6:1595:5534":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"17:12598:4201":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"6:5838:6045":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"17:13676:4487":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"17:10603:3908":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"0:440:2053":{"crate_id":0,"path":["termcolor","Color","Green"],"kind":"variant"},"6:6680:6260":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:9502:3117":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"2:47478:6950":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"16:5049:4828":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"1:6437:2630":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"17:9070:3850":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"16:6721:20623":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"2:2840:3013":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"1:4320:7499":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"17:9896:20700":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"2:44410:6856":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2:11841:6814":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"6:6814:6327":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"17:8794:20680":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"18:599:33620":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"16:6687:4971":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"1:364:7481":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"6:4558:5770":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"6:5976:6125":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:7447:2671":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"2:47797:6961":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:2276:107":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:12643:142":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"16:5121:4830":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"2:21444:8524":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"17:13981:4555":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"17:13778:4507":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"11:817:7414":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"2:2908:13896":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"2:45619:6869":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"2:6884:13872":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"2:11182:13782":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"2:20891:31440":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"6:4422:5708":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:3023:2669":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"5:6981:3582":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"17:13422:4333":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"6:4897:5893":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"2:40143:3589":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"17:14282:4652":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"5:1374:96":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"}},"external_crates":{"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":27}