{"root":"0:0:2052","crate_version":"1.1.3","includes_private":false,"index":{"2:3217:1416":{"id":"2:3217:1416","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47742:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6104:60320":{"id":"5:6104:60320","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`String`":"5:8361:216","`Box<str>`":"5:432:1600"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:1600","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8106:3169","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8361:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6088:60318":{"id":"5:6088:60318","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:8361:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8361:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3559:3874":{"id":"2:3559:3874","crate_id":2,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3561:237","2:3562:206","2:3563:58503"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6881:3234":{"id":"1:6881:3234","crate_id":1,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6882:57742"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3269:211-0:414:1960":{"id":"a:2:3269:211-0:414:1960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:414:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3202-0:376:1816":{"id":"b:2:3202-0:376:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:376:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:237:1668":{"id":"0:237:1668","crate_id":0,"name":"Ansi","span":{"filename":"src/lib.rs","begin":[1258,0],"end":[1258,22]},"visibility":"public","docs":"Satisfies `WriteColor` using standard ANSI escape sequences.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:241","a:2:9407:2512-0:237:1668","a:2:3269:211-0:237:1668","a:2:9408:2511-0:237:1668","a:2:3310:2470-0:237:1668","a:2:3281:220-0:237:1668","b:2:2869-0:237:1668","b:2:4002-0:237:1668","b:2:3202-0:237:1668","b:2:3213-0:237:1668","b:2:3198-0:237:1668","b:2:2872-0:237:1668","b:2:3208-0:237:1668","0:247","0:251"]}},"0:126:1640":{"id":"0:126:1640","crate_id":0,"name":"stderr","span":{"filename":"src/lib.rs","begin":[546,4],"end":[550,5]},"visibility":"public","docs":"Create a new `BufferedStandardStream` with the given color preferences\nthat writes to standard error via a buffered writer.\n\nOn Windows, if coloring is desired and a Windows console could not be\nfound, then ANSI escape sequences are used instead.\n\nThe specific color/style settings can be configured when writing via\nthe `WriteColor` trait.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["choice",{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:329:1602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"BufferedStandardStream","id":"0:95:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:237:1668":{"id":"b:2:2872-0:237:1668","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:2355","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Ansi","id":"0:237:1668","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:2874:53252"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:339:408":{"id":"0:339:408","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[206,9],"end":[206,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:329:1602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13658:59673":{"id":"2:13658:59673","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:41":{"id":"0:41","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[190,0],"end":[203,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"WriteColor","id":"0:29:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_synchronous"],"trait":{"name":"WriteColor","id":"0:29:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:1600","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:43:1575","0:44:1581","0:45:1586","0:46:1596"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2926:124":{"id":"2:2926:124","crate_id":2,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13575:59661":{"id":"2:13575:59661","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:2863:97":{"id":"2:2863:97","crate_id":2,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2865:2251"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:3401:3330":{"id":"2:3401:3330","crate_id":2,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3403:181","2:3404:353"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3269:211-0:90:1652":{"id":"a:2:3269:211-0:90:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStream","id":"0:90:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:250:1649":{"id":"0:250:1649","crate_id":0,"name":"flush","span":{"filename":"src/lib.rs","begin":[1290,4],"end":[1292,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:329:1602":{"id":"a:2:3269:211-0:329:1602","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:329:1602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:389:1852":{"id":"0:389:1852","crate_id":0,"name":"Yellow","span":{"filename":"src/lib.rs","begin":[1813,4],"end":[1813,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:4783:3627":{"id":"2:4783:3627","crate_id":2,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4784:2836","2:4785:58906","2:4786:2839"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13584:54941":{"id":"2:13584:54941","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11082:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11082:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:95:1663":{"id":"b:2:2872-0:95:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:2355","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferedStandardStream","id":"0:95:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:53252"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:14314:141":{"id":"2:14314:141","crate_id":2,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14315:277","2:14316:518","2:14317:280","2:14318:1079"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:144:1581":{"id":"0:144:1581","crate_id":0,"name":"set_color","span":{"filename":"src/lib.rs","begin":[658,4],"end":[660,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["spec",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:376:1816":{"id":"b:2:4002-0:376:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:376:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3740:3734":{"id":"2:3740:3734","crate_id":2,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3742:53969"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5749:3219":{"id":"1:5749:3219","crate_id":1,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5750:5320","1:5751:54754","1:5752:54755"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13611:2832":{"id":"2:13611:2832","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:47617:176","prim@char":"1:15989:2182","self::pattern":"2:13202:2364"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47617:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:2359","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3169:74":{"id":"2:3169:74","crate_id":2,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3171:1707"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:3211:127":{"id":"2:3211:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"2:22988:3730":{"id":"2:22988:3730","crate_id":2,"name":"SimdUint","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22989:58766","2:22990:1227","2:22991:1228","2:22992:58767","2:22993:58768","2:22994:58769","2:22995:58770","2:22996:58771","2:22997:58772","2:22998:58773"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23001:3238","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:426:604":{"id":"0:426:604","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[1925,27],"end":[1925,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:414:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:229:1647":{"id":"0:229:1647","crate_id":0,"name":"write","span":{"filename":"src/lib.rs","begin":[1225,4],"end":[1227,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:329:1602":{"id":"b:2:4002-0:329:1602","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:329:1602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3411:3640":{"id":"2:3411:3640","crate_id":2,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3413:181","2:3414:1233"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13618:31771":{"id":"2:13618:31771","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"self::pattern":"2:13202:2364","prim@char":"1:15989:2182"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:12994:2367","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:139:1647":{"id":"0:139:1647","crate_id":0,"name":"write","span":{"filename":"src/lib.rs","begin":[641,4],"end":[643,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["b",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:141":{"id":"0:141","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[651,0],"end":[671,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["is_synchronous"],"trait":{"name":"WriteColor","id":"0:29:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStreamLock","id":"0:92:1660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:143:1575","0:144:1581","0:145:1586","0:146:1596"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3198-0:92:1660":{"id":"b:2:3198-0:92:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStreamLock","id":"0:92:1660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3201:2826"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13651:59670":{"id":"2:13651:59670","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:13202:2364","prim@char":"1:15989:2182","str::match_indices":"1:15995:2187","`DoubleEndedIterator`":"2:8591:120"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:49748:2381","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:2359","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5807:3223":{"id":"1:5807:3223","crate_id":1,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5808:56704"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3364:3672":{"id":"2:3364:3672","crate_id":2,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3365:181","2:3366:913"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10688:146":{"id":"2:10688:146","crate_id":2,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10689:652","2:10690:1647","2:10691:56547","2:10692:56548","2:10693:56549","2:10694:56550","2:10695:56551","2:10696:56552","2:10697:56553","2:10698:56554","2:10699:56555","2:10700:56556","2:10701:56557","2:10702:56558","2:10703:56559","2:10704:1533"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6105:2333":{"id":"5:6105:2333","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:8361:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8361:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:414:1960":{"id":"b:2:2872-0:414:1960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:2355","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:414:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:53252"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:385:1848":{"id":"0:385:1848","crate_id":0,"name":"Cyan","span":{"filename":"src/lib.rs","begin":[1811,4],"end":[1811,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"1:4748:2311":{"id":"1:4748:2311","crate_id":1,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4749:57775","1:4750:57776","1:4751:57778","1:4753:2310","1:4754:57777","1:4756:1966","1:4757:4442"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"1:4666:2304","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:279:1802":{"id":"0:279:1802","crate_id":0,"name":"dimmed","span":{"filename":"src/lib.rs","begin":[1652,4],"end":[1654,5]},"visibility":"public","docs":"Get whether this is dimmed or not.\n\nNote that the dimmed setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:783:222":{"id":"5:783:222","crate_id":5,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:784:2889","5:785:2890","5:786:2891"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:186:1720":{"id":"0:186:1720","crate_id":0,"name":"separator","span":{"filename":"src/lib.rs","begin":[947,4],"end":[949,5]},"visibility":"public","docs":"If set, the separator given is printed between buffers. By default, no\nseparator is printed.\n\nThe default value is `None`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["sep",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47617:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:391:1854":{"id":"0:391:1854","crate_id":0,"name":"White","span":{"filename":"src/lib.rs","begin":[1814,4],"end":[1814,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:44:1581":{"id":"0:44:1581","crate_id":0,"name":"set_color","span":{"filename":"src/lib.rs","begin":[194,4],"end":[196,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["spec",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:133:1575":{"id":"0:133:1575","crate_id":0,"name":"supports_color","span":{"filename":"src/lib.rs","begin":[619,4],"end":[621,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3337:3438":{"id":"2:3337:3438","crate_id":2,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3339:181","2:3340:265"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3198-0:357:1583":{"id":"b:2:3198-0:357:1583","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:2826"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9408:2511-0:95:1663":{"id":"a:2:9408:2511-0:95:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:2511","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferedStandardStream","id":"0:95:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:10723:3315":{"id":"2:10723:3315","crate_id":2,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10724:146","2:10725:33171","2:10726:57957"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:413:604":{"id":"0:413:604","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[1805,33],"end":[1805,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Color","id":"0:376:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3368:3439":{"id":"2:3368:3439","crate_id":2,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3370:266"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5669:3255":{"id":"1:5669:3255","crate_id":1,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5670:54579","1:5671:2594"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10587:3238","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:366":{"id":"0:366","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1579,9],"end":[1579,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:367:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:39:1586":{"id":"0:39:1586","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[182,4],"end":[184,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13627:59665":{"id":"2:13627:59665","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:13202:2364","str::split":"1:15995:2187","prim@char":"1:15989:2182","str::split_terminator":"1:15995:2187"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:49648:2387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:2359","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9408:2511-0:414:1960":{"id":"a:2:9408:2511-0:414:1960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:2511","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:414:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:22899:3865":{"id":"2:22899:3865","crate_id":2,"name":"SimdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22900:3757","2:22901:58766","2:22902:59268","2:22903:59269","2:22904:59270","2:22905:42506","2:22906:59271","2:22907:59272","2:22908:59273","2:22909:59274","2:22910:59275","2:22911:59276","2:22912:59277","2:22913:59278","2:22914:59279","2:22915:59280","2:22916:58823","2:22917:59281","2:22918:58439","2:22919:58438","2:22920:58440","2:22921:58767","2:22922:58768","2:22923:58769","2:22924:58770"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23001:3238","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:211:1649":{"id":"0:211:1649","crate_id":0,"name":"flush","span":{"filename":"src/lib.rs","begin":[1150,4],"end":[1157,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13680:59680":{"id":"2:13680:59680","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:13202:2364","prim@char":"1:15989:2182"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:2359","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:237:1668":{"id":"b:2:4002-0:237:1668","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Ansi","id":"0:237:1668","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5797:3222":{"id":"1:5797:3222","crate_id":1,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5798:54561","1:5799:54562","1:5800:54563","1:5801:54564"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:22952:3878":{"id":"2:22952:3878","crate_id":2,"name":"SimdInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22953:3757","2:22954:58766","2:22955:1227","2:22956:1228","2:22957:42506","2:22958:58819","2:22959:58820","2:22960:58821","2:22961:58822","2:22962:58823","2:22963:58767","2:22964:58768","2:22965:58769","2:22966:58770","2:22967:58771","2:22968:58772","2:22969:58773"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23001:3238","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3204:681":{"id":"2:3204:681","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:217:1667":{"id":"b:2:2869-0:217:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoColor","id":"0:217:1667","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:2871:2251"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3208-0:90:1652":{"id":"b:2:3208-0:90:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStream","id":"0:90:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:341":{"id":"0:341","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[206,22],"end":[206,27]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:329:1602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:342:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3812:3619":{"id":"2:3812:3619","crate_id":2,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:32:1586":{"id":"0:32:1586","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[157,4],"end":[157,42]},"visibility":"default","docs":"Reset the current color settings to their original settings.\n\nIf there was a problem resetting the color settings, then an error is\nreturned.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:338":{"id":"0:338","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[206,9],"end":[206,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:329:1602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:339:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2888:104":{"id":"2:2888:104","crate_id":2,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2889:408","2:2890:410"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:151:1575":{"id":"0:151:1575","crate_id":0,"name":"supports_color","span":{"filename":"src/lib.rs","begin":[687,4],"end":[689,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10461:2903":{"id":"2:10461:2903","crate_id":2,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10462:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3213-0:90:1652":{"id":"b:2:3213-0:90:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStream","id":"0:90:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4002-0:357:1583":{"id":"b:2:4002-0:357:1583","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:150":{"id":"0:150","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[685,0],"end":[708,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["is_synchronous"],"trait":{"name":"WriteColor","id":"0:29:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferedStandardStream","id":"0:95:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:151:1575","0:152:1581","0:153:1586","0:154:1596"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:243:920":{"id":"0:243:920","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[1263,4],"end":[1265,5]},"visibility":"public","docs":"Create a new writer that satisfies `WriteColor` using standard ANSI\nescape sequences.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["wtr",{"kind":"generic","inner":"W"}]],"output":{"kind":"resolved_path","inner":{"name":"Ansi","id":"0:237:1668","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13594:31904":{"id":"2:13594:31904","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"1:15995:2187"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:49863:2366","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9407:2512":{"id":"2:9407:2512","crate_id":2,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:381:1846":{"id":"0:381:1846","crate_id":0,"name":"Green","span":{"filename":"src/lib.rs","begin":[1809,4],"end":[1809,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:233:1575":{"id":"0:233:1575","crate_id":0,"name":"supports_color","span":{"filename":"src/lib.rs","begin":[1237,4],"end":[1239,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:414:1960":{"id":"b:2:3202-0:414:1960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:414:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5008:3264":{"id":"1:5008:3264","crate_id":1,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5009:3291","1:5010:57079"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:5833:2362":{"id":"5:5833:2362","crate_id":5,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5835:181","5:5836:432"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"b:2:3208-0:329:1602":{"id":"b:2:3208-0:329:1602","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:329:1602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13574:1814":{"id":"2:13574:1814","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12673:2003"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:367:408":{"id":"0:367:408","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[1579,9],"end":[1579,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4741:2308":{"id":"1:4741:2308","crate_id":1,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4742:57516","1:4743:39517","1:4744:57517","1:4745:57518"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:271":{"id":"0:271","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1606,0],"end":[1781,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:272:920","0:273:1815","0:274:1893","0:275:1896","0:276:1898","0:277:1800","0:278:1902","0:279:1802","0:280:1907","0:281:1804","0:282:1911","0:283:1806","0:284:1915","0:285:1586","0:286:1925","0:287:1811","0:288:1933","0:289:1935","0:290:1780"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3281:220-0:237:1668":{"id":"a:2:3281:220-0:237:1668","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Ansi","id":"0:237:1668","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:10440:109":{"id":"2:10440:109","crate_id":2,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10441:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:284:1915":{"id":"0:284:1915","crate_id":0,"name":"set_underline","span":{"filename":"src/lib.rs","begin":[1689,4],"end":[1692,5]},"visibility":"public","docs":"Set whether the text is underlined or not.\n\nNote that the underline setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9407:2512-0:237:1668":{"id":"a:2:9407:2512-0:237:1668","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"W"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9407:2512","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:2512","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Ansi","id":"0:237:1668","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:152:1581":{"id":"0:152:1581","crate_id":0,"name":"set_color","span":{"filename":"src/lib.rs","begin":[692,4],"end":[697,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["spec",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:357:1583":{"id":"a:2:3281:220-0:357:1583","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9407:2512-0:329:1602":{"id":"a:2:9407:2512-0:329:1602","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:2512","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:329:1602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:202:1768":{"id":"0:202:1768","crate_id":0,"name":"ansi","span":{"filename":"src/lib.rs","begin":[1069,4],"end":[1071,5]},"visibility":"public","docs":"Create a buffer that uses ANSI escape sequences.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Buffer","id":"0:189:1738","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:38:1581":{"id":"0:38:1581","crate_id":0,"name":"set_color","span":{"filename":"src/lib.rs","begin":[179,4],"end":[181,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["spec",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3775:3618":{"id":"2:3775:3618","crate_id":2,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:13668:14473":{"id":"2:13668:14473","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:15989:2182","self::pattern":"2:13202:2364"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47617:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13592:3371":{"id":"2:13592:3371","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:49566:2314","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:189:1738":{"id":"b:2:4002-0:189:1738","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Buffer","id":"0:189:1738","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:332:1608":{"id":"0:332:1608","crate_id":0,"name":"AlwaysAnsi","span":{"filename":"src/lib.rs","begin":[213,4],"end":[213,14]},"visibility":"default","docs":"AlwaysAnsi is like Always, except it never tries to use anything other\nthan emitting ANSI color codes.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"a:2:3281:220-0:217:1667":{"id":"a:2:3281:220-0:217:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoColor","id":"0:217:1667","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3279:106":{"id":"2:3279:106","crate_id":2,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:300:1982":{"id":"0:300:1982","crate_id":0,"name":"invalid","span":{"filename":"src/lib.rs","begin":[1940,4],"end":[1942,5]},"visibility":"public","docs":"Return the string that couldn't be parsed as a valid color.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3172:149":{"id":"2:3172:149","crate_id":2,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3174:2826"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:286:1925":{"id":"0:286:1925","crate_id":0,"name":"set_reset","span":{"filename":"src/lib.rs","begin":[1716,4],"end":[1719,5]},"visibility":"public","docs":"Set whether to reset the terminal whenever color settings are applied.\n\nreset is enabled by default. When disabled and using ANSI escape\nsequences, a \"reset\" code will be emitted every time a `ColorSpec`'s\nsettings are applied.\n\nTypically this is useful if callers have a requirement to more\nscrupulously manage the exact sequence of escape codes that are emitted\nwhen using ANSI for colors.\n\nNote that the reset setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9408:2511-0:92:1660":{"id":"a:2:9408:2511-0:92:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:2511","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStreamLock","id":"0:92:1660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:10457:189":{"id":"2:10457:189","crate_id":2,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10458:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:214:1581":{"id":"0:214:1581","crate_id":0,"name":"set_color","span":{"filename":"src/lib.rs","begin":[1172,4],"end":[1179,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["spec",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:425":{"id":"0:425","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1925,27],"end":[1925,36]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:414:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:414:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:426:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:251":{"id":"0:251","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1295,0],"end":[1336,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:4723:1567","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_synchronous"],"trait":{"name":"WriteColor","id":"0:29:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Ansi","id":"0:237:1668","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["0:253:1575","0:254:1581","0:255:1586","0:256:1596"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3342:3332":{"id":"2:3342:3332","crate_id":2,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3344:181","2:3345:1355"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:393:1856":{"id":"0:393:1856","crate_id":0,"name":"Ansi256","span":{"filename":"src/lib.rs","begin":[1815,4],"end":[1815,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"primitive","inner":"u8"}]}},"0:280:1907":{"id":"0:280:1907","crate_id":0,"name":"set_dimmed","span":{"filename":"src/lib.rs","begin":[1659,4],"end":[1662,5]},"visibility":"public","docs":"Set whether the text is dimmed or not.\n\nNote that the dimmed setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:189:1738":{"id":"a:2:3269:211-0:189:1738","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Buffer","id":"0:189:1738","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:6411:223":{"id":"5:6411:223","crate_id":5,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6412:1397"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3581:3165":{"id":"2:3581:3165","crate_id":2,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3583:754"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Index","id":"2:3577:3164","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13566:793":{"id":"2:13566:793","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:15989:2182"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9408:2511-0:189:1738":{"id":"a:2:9408:2511-0:189:1738","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:2511","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Buffer","id":"0:189:1738","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:10390:1567":{"id":"2:10390:1567","crate_id":2,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10391:1533","2:10392:57610","2:10394:2756"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3208-0:95:1663":{"id":"b:2:3208-0:95:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferedStandardStream","id":"0:95:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:309:1990":{"id":"0:309:1990","crate_id":0,"name":"from_str","span":{"filename":"src/lib.rs","begin":[1987,4],"end":[1999,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47742:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Color","id":"0:376:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:414:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13685:4139":{"id":"2:13685:4139","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:414:1960":{"id":"b:2:4002-0:414:1960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:414:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:205:1780":{"id":"0:205:1780","crate_id":0,"name":"clear","span":{"filename":"src/lib.rs","begin":[1095,4],"end":[1102,5]},"visibility":"public","docs":"Clears this buffer.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3166:75":{"id":"2:3166:75","crate_id":2,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3168:305"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"a:2:3281:220-0:376:1816":{"id":"a:2:3281:220-0:376:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:376:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3376:3676":{"id":"2:3376:3676","crate_id":2,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3378:893"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3175:135":{"id":"2:3175:135","crate_id":2,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3177:681"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:369:660":{"id":"0:369:660","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1579,16],"end":[1579,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:357:1583":{"id":"b:2:3208-0:357:1583","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:203:1744":{"id":"0:203:1744","crate_id":0,"name":"is_empty","span":{"filename":"src/lib.rs","begin":[1080,4],"end":[1082,5]},"visibility":"public","docs":"Returns true if and only if this buffer is empty.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5757:3220":{"id":"1:5757:3220","crate_id":1,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5758:5320","1:5759:7622"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:154:1596":{"id":"0:154:1596","crate_id":0,"name":"is_synchronous","span":{"filename":"src/lib.rs","begin":[705,4],"end":[707,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2572:127":{"id":"1:2572:127","crate_id":1,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2573:3213","1:2575:1983","1:2576:3214","1:2577:3215"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Display","id":"2:10447:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:4051:3206":{"id":"2:4051:3206","crate_id":2,"name":"Provider","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4052:3215"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:411":{"id":"0:411","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1805,33],"end":[1805,42]},"visibility":"crate","docs":null,"links":{},"attrs":["#[allow(missing_docs)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:376:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:342:660":{"id":"0:342:660","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[206,22],"end":[206,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:33:1596":{"id":"0:33:1596","crate_id":0,"name":"is_synchronous","span":{"filename":"src/lib.rs","begin":[170,4],"end":[172,5]},"visibility":"default","docs":"Returns true if and only if the underlying writer must synchronously\ninteract with an end user's device in order to control colors. By\ndefault, this always returns `false`.\n\nIn practice, this should return `true` if the underlying writer is\nmanipulating colors using the Windows console APIs.\n\nThis is useful for writing generic code (such as a buffered writer)\nthat can perform certain optimizations when the underlying writer\ndoesn't rely on synchronous APIs. For example, ANSI escape sequences\ncan be passed through to the end user's device as is.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:329:1602":{"id":"a:2:3281:220-0:329:1602","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:329:1602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:10453:2900":{"id":"2:10453:2900","crate_id":2,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10454:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2871:2251":{"id":"2:2871:2251","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:307":{"id":"0:307","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1984,0],"end":[2000,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:13141:1568","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:376:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:308:126","0:309:1990"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:4004:1429":{"id":"2:4004:1429","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:46145:3207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:376:1816":{"id":"b:2:2872-0:376:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:2355","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:376:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:53252"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6809:3259":{"id":"1:6809:3259","crate_id":1,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6810:7279","1:6811:54692"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10587:3238","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:270:59":{"id":"0:270:59","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[1592,4],"end":[1603,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9408:2511-0:237:1668":{"id":"a:2:9408:2511-0:237:1668","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"W"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9408:2511","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:2511","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Ansi","id":"0:237:1668","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:236:1596":{"id":"0:236:1596","crate_id":0,"name":"is_synchronous","span":{"filename":"src/lib.rs","begin":[1252,4],"end":[1254,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:189:1738":{"id":"b:2:2872-0:189:1738","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:2355","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Buffer","id":"0:189:1738","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:53252"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:140:1649":{"id":"0:140:1649","crate_id":0,"name":"flush","span":{"filename":"src/lib.rs","begin":[646,4],"end":[648,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13930:150":{"id":"2:13930:150","crate_id":2,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13931:181","2:13932:150","2:13933:767"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3269:211-0:95:1663":{"id":"a:2:3269:211-0:95:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferedStandardStream","id":"0:95:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:215:1586":{"id":"0:215:1586","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[1182,4],"end":[1189,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2874:53252":{"id":"2:2874:53252","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:130:1647":{"id":"0:130:1647","crate_id":0,"name":"write","span":{"filename":"src/lib.rs","begin":[607,4],"end":[609,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["b",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:90:1652":{"id":"b:2:2872-0:90:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:2355","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStream","id":"0:90:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:53252"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:266:1575":{"id":"0:266:1575","crate_id":0,"name":"supports_color","span":{"filename":"src/lib.rs","begin":[1454,4],"end":[1456,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:281:1804":{"id":"0:281:1804","crate_id":0,"name":"italic","span":{"filename":"src/lib.rs","begin":[1667,4],"end":[1669,5]},"visibility":"public","docs":"Get whether this is italic or not.\n\nNote that the italic setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13671:54978":{"id":"2:13671:54978","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:15989:2182","self::pattern":"2:13202:2364"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47617:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:2359","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:414:1960":{"id":"b:2:2869-0:414:1960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:414:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2251"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23922:3754":{"id":"2:23922:3754","crate_id":2,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:23923:3757"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23918:3238","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3352:3666":{"id":"2:3352:3666","crate_id":2,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3354:181","2:3355:558"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3202-0:217:1667":{"id":"b:2:3202-0:217:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoColor","id":"0:217:1667","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11082:214":{"id":"2:11082:214","crate_id":2,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:11084:181","2:11085:54939","2:11086:1795","2:11087:54940","2:11088:54941","2:11089:753","2:11090:754"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:11073:3238","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:374":{"id":"0:374","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1579,27],"end":[1579,36]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:375:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5741:3218":{"id":"1:5741:3218","crate_id":1,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5742:57699","1:5743:57701","1:5744:57700","1:5745:57702"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:1075:3261":{"id":"1:1075:3261","crate_id":1,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:1076:2889","1:1077:4139","1:1078:56018","1:1079:56019","1:1080:54859","1:1081:54860","1:1082:54861"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:177:1718":{"id":"0:177:1718","crate_id":0,"name":"BufferWriter","span":{"filename":"src/lib.rs","begin":[858,0],"end":[865,1]},"visibility":"public","docs":"Writes colored buffers to stdout or stderr.\n\nWritable buffers can be obtained by calling `buffer` on a `BufferWriter`.\n\nThis writer works with terminals that support ANSI escape sequences or\nwith a Windows console.\n\nIt is intended for a `BufferWriter` to be put in an `Arc` and written to\nfrom multiple threads simultaneously.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:182","a:2:9407:2512-0:177:1718","a:2:3269:211-0:177:1718","a:2:9408:2511-0:177:1718","a:2:3310:2470-0:177:1718","a:2:3281:220-0:177:1718","b:2:2869-0:177:1718","b:2:4002-0:177:1718","b:2:3202-0:177:1718","b:2:3213-0:177:1718","b:2:3198-0:177:1718","b:2:2872-0:177:1718","b:2:3208-0:177:1718"]}},"5:6107:56019":{"id":"5:6107:56019","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:15995:2187"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8361:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:92:1660":{"id":"b:2:3213-0:92:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStreamLock","id":"0:92:1660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6883:3247":{"id":"1:6883:3247","crate_id":1,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6884:54781"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:787-0:357:1583":{"id":"b:5:787-0:357:1583","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:2889","5:790:2890","5:791:2891"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9407:2512-0:217:1667":{"id":"a:2:9407:2512-0:217:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"W"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9407:2512","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:2512","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoColor","id":"0:217:1667","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:9408:2511":{"id":"2:9408:2511","crate_id":2,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:216:1596":{"id":"0:216:1596","crate_id":0,"name":"is_synchronous","span":{"filename":"src/lib.rs","begin":[1192,4],"end":[1194,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3431:3649":{"id":"2:3431:3649","crate_id":2,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3433:357"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13568:59658":{"id":"2:13568:59658","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:407:660":{"id":"0:407:660","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1805,22],"end":[1805,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:184:1639":{"id":"0:184:1639","crate_id":0,"name":"stdout","span":{"filename":"src/lib.rs","begin":[927,4],"end":[929,5]},"visibility":"public","docs":"Create a new `BufferWriter` that writes to stdout with the given\ncolor preferences.\n\nOn Windows, if coloring is desired and a Windows console could not be\nfound, then ANSI escape sequences are used instead.\n\nThe specific color/style settings can be configured when writing to\nthe buffers themselves.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["choice",{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:329:1602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"BufferWriter","id":"0:177:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:188:1743":{"id":"0:188:1743","crate_id":0,"name":"print","span":{"filename":"src/lib.rs","begin":[974,4],"end":[1002,5]},"visibility":"public","docs":"Prints the contents of the given buffer.\n\nIt is safe to call this from multiple threads simultaneously. In\nparticular, all buffers are written atomically. No interleaving will\noccur.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Buffer","id":"0:189:1738","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3435:3651":{"id":"2:3435:3651","crate_id":2,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3437:1234"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13636:59666":{"id":"2:13636:59666","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47617:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13645:59668":{"id":"2:13645:59668","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"prim@char":"1:15989:2182","str::matches":"1:15995:2187","self::pattern":"2:13202:2364","`DoubleEndedIterator`":"2:8591:120"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:49802:2383","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:2359","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13661:59675":{"id":"2:13661:59675","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:0:2052":{"id":"0:0:2052","crate_id":0,"name":"termcolor","span":{"filename":"src/lib.rs","begin":[1,0],"end":[2260,1]},"visibility":"public","docs":"This crate provides a cross platform abstraction for writing colored text to\na terminal. Colors are written using either ANSI escape sequences or by\ncommunicating with a Windows console. Much of this API was motivated by use\ninside command line applications, where colors or styles can be configured\nby the end user and/or the environment.\n\nThis crate also provides platform independent support for writing colored text\nto an in memory buffer. While this is easy to do with ANSI escape sequences\n(because they are in the buffer themselves), it is trickier to do with the\nWindows console API, which requires synchronous communication.\n\n# Organization\n\nThe `WriteColor` trait extends the `io::Write` trait with methods for setting\ncolors or resetting them.\n\n`StandardStream` and `StandardStreamLock` both satisfy `WriteColor` and are\nanalogous to `std::io::Stdout` and `std::io::StdoutLock`, or `std::io::Stderr`\nand `std::io::StderrLock`.\n\n`Buffer` is an in memory buffer that supports colored text. In a parallel\nprogram, each thread might write to its own buffer. A buffer can be printed to\nusing a `BufferWriter`. The advantage of this design is that each thread can\nwork in parallel on a buffer without having to synchronize access to global\nresources such as the Windows console. Moreover, this design also prevents\ninterleaving of buffer output.\n\n`Ansi` and `NoColor` both satisfy `WriteColor` for arbitrary implementors of\n`io::Write`. These types are useful when you know exactly what you need. An\nanalogous type for the Windows console is not provided since it cannot exist.\n\n# Example: using `StandardStream`\n\nThe `StandardStream` type in this crate works similarly to `std::io::Stdout`,\nexcept it is augmented with methods for coloring by the `WriteColor` trait.\nFor example, to write some green text:\n\n```rust,no_run\n# fn test() -> Result<(), Box<::std::error::Error>> {\nuse std::io::Write;\nuse termcolor::{Color, ColorChoice, ColorSpec, StandardStream, WriteColor};\n\nlet mut stdout = StandardStream::stdout(ColorChoice::Always);\nstdout.set_color(ColorSpec::new().set_fg(Some(Color::Green)))?;\nwriteln!(&mut stdout, \"green text!\")?;\n# Ok(()) }\n```\n\nNote that any text written to the terminal now will be colored\ngreen when using ANSI escape sequences, even if it is written via\nstderr, and even if stderr had previously been set to `Color::Red`.\nUsers will need to manage any color changes themselves by calling\n[`WriteColor::set_color`](trait.WriteColor.html#tymethod.set_color), and this\nmay include calling [`WriteColor::reset`](trait.WriteColor.html#tymethod.reset)\nbefore the program exits to a shell.\n\n# Example: using `BufferWriter`\n\nA `BufferWriter` can create buffers and write buffers to stdout or stderr. It\ndoes *not* implement `io::Write` or `WriteColor` itself. Instead, `Buffer`\nimplements `io::Write` and `io::WriteColor`.\n\nThis example shows how to print some green text to stderr.\n\n```rust,no_run\n# fn test() -> Result<(), Box<::std::error::Error>> {\nuse std::io::Write;\nuse termcolor::{BufferWriter, Color, ColorChoice, ColorSpec, WriteColor};\n\nlet mut bufwtr = BufferWriter::stderr(ColorChoice::Always);\nlet mut buffer = bufwtr.buffer();\nbuffer.set_color(ColorSpec::new().set_fg(Some(Color::Green)))?;\nwriteln!(&mut buffer, \"green text!\")?;\nbufwtr.print(&buffer)?;\n# Ok(()) }\n```\n\n# Detecting presence of a terminal\n\nIn many scenarios when using color, one often wants to enable colors\nautomatically when writing to a terminal and disable colors automatically when\nwriting to anything else. The typical way to achieve this in Unix environments\nis via libc's\n[`isatty`](https://man7.org/linux/man-pages/man3/isatty.3.html)\nfunction.\nUnfortunately, this notoriously does not work well in Windows environments. To\nwork around that, the currently recommended solution is to use the\n[`atty`](https://crates.io/crates/atty)\ncrate, which goes out of its way to get this as right as possible in Windows\nenvironments.\n\nFor example, in a command line application that exposes a `--color` flag,\nyour logic for how to enable colors might look like this:\n\n```rust,ignore\nuse atty;\nuse termcolor::{ColorChoice, StandardStream};\n\nlet preference = argv.get_flag(\"color\").unwrap_or(\"auto\");\nlet choice = match preference {\n    \"always\" => ColorChoice::Always,\n    \"ansi\" => ColorChoice::AlwaysAnsi,\n    \"auto\" => {\n        if atty::is(atty::Stream::Stdout) {\n            ColorChoice::Auto\n        } else {\n            ColorChoice::Never\n        }\n    }\n    _ => ColorChoice::Never,\n};\nlet stdout = StandardStream::stdout(choice);\n// ... write to stdout\n```\n\nCurrently, `termcolor` does not provide anything to do this for you.","links":{},"attrs":["#![deny(missing_docs)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:29:1573","0:329:1602","0:90:1652","0:92:1660","0:95:1663","0:177:1718","0:189:1738","0:217:1667","0:237:1668","0:357:1583","0:376:1816","0:414:1960"],"is_stripped":false}},"a:2:9408:2511-0:217:1667":{"id":"a:2:9408:2511-0:217:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"W"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9408:2511","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:2511","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoColor","id":"0:217:1667","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13565":{"id":"2:13565","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:12662:1340","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:13566:793","2:13567:1744","2:13568:59658","2:13569:59659","2:13571:59660","2:13574:1814","2:13575:59661","2:13576:304","2:13577:54942","2:13578:54939","2:13580:1795","2:13582:54940","2:13584:54941","2:13586:3366","2:13587:59662","2:13588:54961","2:13589:54962","2:13590:1970","2:13591:3707","2:13592:3371","2:13593:31914","2:13594:31904","2:13595:4442","2:13596:59663","2:13597:31899","2:13598:1979","2:13601:1962","2:13604:54977","2:13607:2870","2:13611:2832","2:13615:1966","2:13618:31771","2:13621:54971","2:13624:59664","2:13627:59665","2:13630:54973","2:13633:54975","2:13636:59666","2:13639:59667","2:13642:2265","2:13645:59668","2:13648:59669","2:13651:59670","2:13654:59671","2:13656:59672","2:13658:59673","2:13660:59674","2:13661:59675","2:13662:59676","2:13665:59677","2:13668:14473","2:13671:54978","2:13674:59678","2:13677:59679","2:13680:59680","2:13683:2010","2:13685:4139","2:13686:54859","2:13687:54860","2:13688:54861","2:13689:59681","2:13691:3263","2:13692:59682"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:223:920":{"id":"0:223:920","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[1203,4],"end":[1205,5]},"visibility":"public","docs":"Create a new writer that satisfies `WriteColor` but drops all color\ninformation.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["wtr",{"kind":"generic","inner":"W"}]],"output":{"kind":"resolved_path","inner":{"name":"NoColor","id":"0:217:1667","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13677:59679":{"id":"2:13677:59679","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:13202:2364","prim@char":"1:15989:2182"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:92:1660":{"id":"a:2:3281:220-0:92:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStreamLock","id":"0:92:1660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:34":{"id":"0:34","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[175,0],"end":[188,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"WriteColor","id":"0:29:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_synchronous"],"trait":{"name":"WriteColor","id":"0:29:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"T"}}},"items":["0:37:1575","0:38:1581","0:39:1586","0:40:1596"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3201:2826":{"id":"2:3201:2826","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3175:135"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13674:59678":{"id":"2:13674:59678","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:15989:2182","self::pattern":"2:13202:2364"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:2359","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:189:1738":{"id":"b:2:3198-0:189:1738","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Buffer","id":"0:189:1738","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:2826"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13621:54971":{"id":"2:13621:54971","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"prim@char":"1:15989:2182","`DoubleEndedIterator`":"2:8591:120","str::split":"1:15995:2187","self::pattern":"2:13202:2364"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:49598:2384","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:2359","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13582:54940":{"id":"2:13582:54940","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11082:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11082:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:13624:59664":{"id":"2:13624:59664","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:13202:2364","str::split":"1:15995:2187","`DoubleEndedIterator`":"2:8591:120","str::rsplit_terminator":"1:15995:2187","prim@char":"1:15989:2182"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:49630:2388","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:329:1602":{"id":"b:2:3213-0:329:1602","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:329:1602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2872-0:177:1718":{"id":"b:2:2872-0:177:1718","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:2355","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferWriter","id":"0:177:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:53252"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4002-0:177:1718":{"id":"b:2:4002-0:177:1718","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferWriter","id":"0:177:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3213-0:376:1816":{"id":"b:2:3213-0:376:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:376:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:275:1896":{"id":"0:275:1896","crate_id":0,"name":"bg","span":{"filename":"src/lib.rs","begin":[1624,4],"end":[1626,5]},"visibility":"public","docs":"Get the background color.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47617:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Color","id":"0:376:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3372:3440":{"id":"2:3372:3440","crate_id":2,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3374:1356"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:5837:2363":{"id":"5:5837:2363","crate_id":5,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5839:181","5:5840:32927"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2866:2355":{"id":"2:2866:2355","crate_id":2,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2868:53252"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:247":{"id":"0:247","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1283,0],"end":[1293,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:4723:1567","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["by_ref","write_vectored","write_all_vectored","write_fmt","write_all","is_write_vectored"],"trait":{"name":"Write","id":"1:4723:1567","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Ansi","id":"0:237:1668","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["0:249:1647","0:250:1649"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3505:2319":{"id":"2:3505:2319","crate_id":2,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3506:545"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Deref","id":"2:3492:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:255:1586":{"id":"0:255:1586","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[1328,4],"end":[1330,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:379:1844":{"id":"0:379:1844","crate_id":0,"name":"Blue","span":{"filename":"src/lib.rs","begin":[1808,4],"end":[1808,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:225:1695":{"id":"0:225:1695","crate_id":0,"name":"get_ref","span":{"filename":"src/lib.rs","begin":[1213,4],"end":[1215,5]},"visibility":"public","docs":"Return a reference to the inner writer.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"W"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:400:1544":{"id":"0:400:1544","crate_id":0,"name":"2","span":{"filename":"src/lib.rs","begin":[1816,16],"end":[1816,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"2:3182:227":{"id":"2:3182:227","crate_id":2,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3184:127","2:3185:1416"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:9365:3286":{"id":"1:9365:3286","crate_id":1,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9366:56680","1:9367:56681","1:9368:56682","1:9369:56683","1:9370:56684","1:9371:39111","1:9372:56679"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10587:3238","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:8616:2472":{"id":"2:8616:2472","crate_id":2,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8617:793","2:8618:1744"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8748:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:185:1640":{"id":"0:185:1640","crate_id":0,"name":"stderr","span":{"filename":"src/lib.rs","begin":[939,4],"end":[941,5]},"visibility":"public","docs":"Create a new `BufferWriter` that writes to stderr with the given\ncolor preferences.\n\nOn Windows, if coloring is desired and a Windows console could not be\nfound, then ANSI escape sequences are used instead.\n\nThe specific color/style settings can be configured when writing to\nthe buffers themselves.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["choice",{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:329:1602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"BufferWriter","id":"0:177:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13642:2265":{"id":"2:13642:2265","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"str::matches":"1:15995:2187","prim@char":"1:15989:2182","`DoubleEndedIterator`":"2:8591:120","self::pattern":"2:13202:2364"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:49784:2382","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:424":{"id":"0:424","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1925,27],"end":[1925,36]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:414:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13593:31914":{"id":"2:13593:31914","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"1:15995:2187"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:49854:2368","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23618:15976":{"id":"2:23618:15976","crate_id":2,"name":"SimdOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23619:58438","2:23620:58439","2:23621:58440"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdPartialOrd","id":"2:23613:3759","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3208-0:189:1738":{"id":"b:2:3208-0:189:1738","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Buffer","id":"0:189:1738","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:340":{"id":"0:340","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[206,16],"end":[206,20]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:329:1602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3310:2470-0:90:1652":{"id":"a:2:3310:2470-0:90:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2470","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStream","id":"0:90:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2869-0:92:1660":{"id":"b:2:2869-0:92:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStreamLock","id":"0:92:1660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2871:2251"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8556:2473":{"id":"2:8556:2473","crate_id":2,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8558:2833","2:8560:2834","2:8561:2835"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8510:3724":{"id":"2:8510:3724","crate_id":2,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8512:2881"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3417:3634":{"id":"2:3417:3634","crate_id":2,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3419:181","2:3420:1236"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:409":{"id":"0:409","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1805,29],"end":[1805,31]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:376:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:308:126":{"id":"0:308:126","crate_id":0,"name":"Err","span":{"filename":"src/lib.rs","begin":[1985,4],"end":[1985,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:414:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:3247:115":{"id":"2:3247:115","crate_id":2,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3248:59"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:305:660":{"id":"0:305:660","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1957,4],"end":[1981,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:92:1660":{"id":"0:92:1660","crate_id":0,"name":"StandardStreamLock","span":{"filename":"src/lib.rs","begin":[410,0],"end":[412,1]},"visibility":"public","docs":"`StandardStreamLock` is a locked reference to a `StandardStream`.\n\nThis implements the `io::Write` and `WriteColor` traits, and is constructed\nvia the `Write::lock` method.\n\nThe lifetime `'a` refers to the lifetime of the corresponding\n`StandardStream`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:9407:2512-0:92:1660","a:2:3269:211-0:92:1660","a:2:9408:2511-0:92:1660","a:2:3310:2470-0:92:1660","a:2:3281:220-0:92:1660","b:2:2869-0:92:1660","b:2:4002-0:92:1660","b:2:3202-0:92:1660","b:2:3213-0:92:1660","b:2:3198-0:92:1660","b:2:2872-0:92:1660","b:2:3208-0:92:1660","0:137","0:141"]}},"0:30:1575":{"id":"0:30:1575","crate_id":0,"name":"supports_color","span":{"filename":"src/lib.rs","begin":[142,4],"end":[142,37]},"visibility":"default","docs":"Returns true if and only if the underlying writer supports colors.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:3198-0:376:1816":{"id":"b:2:3198-0:376:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:376:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:2826"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3198-0:414:1960":{"id":"b:2:3198-0:414:1960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:414:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:2826"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23613:3759":{"id":"2:23613:3759","crate_id":2,"name":"SimdPartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23614:1270","2:23615:1269","2:23616:1267","2:23617:1266"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdPartialEq","id":"2:23025:3866","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3198-0:329:1602":{"id":"b:2:3198-0:329:1602","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:329:1602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:2826"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13598:1979":{"id":"2:13598:1979","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"self::pattern":"2:13202:2364","prim@char":"1:15989:2182"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9035:3601":{"id":"2:9035:3601","crate_id":2,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Step","id":"2:8071:3602","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13590:1970":{"id":"2:13590:1970","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:15989:2182"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49550:2371","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10451:2899":{"id":"2:10451:2899","crate_id":2,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10452:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:278:1902":{"id":"0:278:1902","crate_id":0,"name":"set_bold","span":{"filename":"src/lib.rs","begin":[1644,4],"end":[1647,5]},"visibility":"public","docs":"Set whether the text is bolded or not.\n\nNote that the bold setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:357:1583":{"id":"0:357:1583","crate_id":0,"name":"ColorSpec","span":{"filename":"src/lib.rs","begin":[1580,0],"end":[1589,1]},"visibility":"public","docs":"A color specification.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:271","a:2:9407:2512-0:357:1583","a:2:3269:211-0:357:1583","a:2:9408:2511-0:357:1583","a:2:3310:2470-0:357:1583","a:2:3281:220-0:357:1583","b:2:2869-0:357:1583","b:2:4002-0:357:1583","b:2:3202-0:357:1583","b:2:3213-0:357:1583","b:2:3198-0:357:1583","b:2:2872-0:357:1583","b:2:3208-0:357:1583","b:5:787-0:357:1583","0:366","0:368","0:370","0:371","0:373","0:374","0:269"]}},"b:2:2869-0:237:1668":{"id":"b:2:2869-0:237:1668","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Ansi","id":"0:237:1668","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:2871:2251"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3310:2470-0:189:1738":{"id":"a:2:3310:2470-0:189:1738","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2470","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Buffer","id":"0:189:1738","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3310:2470-0:92:1660":{"id":"a:2:3310:2470-0:92:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2470","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStreamLock","id":"0:92:1660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:395:1542":{"id":"0:395:1542","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[1815,12],"end":[1815,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"b:2:3202-0:189:1738":{"id":"b:2:3202-0:189:1738","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Buffer","id":"0:189:1738","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:417":{"id":"0:417","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1925,9],"end":[1925,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:414:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:418:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10459:2902":{"id":"2:10459:2902","crate_id":2,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10460:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6415:1397":{"id":"5:6415:1397","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8361:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:120:1642":{"id":"0:120:1642","crate_id":0,"name":"lock","span":{"filename":"src/lib.rs","begin":[483,4],"end":[485,5]},"visibility":"public","docs":"Lock the underlying writer.\n\nThe lock guard returned also satisfies `io::Write` and\n`WriteColor`.\n\nThis method is **not reentrant**. It may panic if `lock` is called\nwhile a `StandardStreamLock` is still alive.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"StandardStreamLock","id":"0:92:1660","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:210:1647":{"id":"0:210:1647","crate_id":0,"name":"write","span":{"filename":"src/lib.rs","begin":[1140,4],"end":[1147,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:290:1780":{"id":"0:290:1780","crate_id":0,"name":"clear","span":{"filename":"src/lib.rs","begin":[1758,4],"end":[1766,5]},"visibility":"public","docs":"Clears this color specification so that it has no color/style settings.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8543:136":{"id":"2:8543:136","crate_id":2,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8545:684"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:249:1647":{"id":"0:249:1647","crate_id":0,"name":"write","span":{"filename":"src/lib.rs","begin":[1285,4],"end":[1287,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13686:54859":{"id":"2:13686:54859","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13665:59677":{"id":"2:13665:59677","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:15989:2182","self::pattern":"2:13202:2364"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:273:1815":{"id":"0:273:1815","crate_id":0,"name":"fg","span":{"filename":"src/lib.rs","begin":[1613,4],"end":[1615,5]},"visibility":"public","docs":"Get the foreground color.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47617:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Color","id":"0:376:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8547:151":{"id":"2:8547:151","crate_id":2,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8548:2836","2:8549:2837","2:8550:768"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:208:1788":{"id":"0:208:1788","crate_id":0,"name":"as_mut_slice","span":{"filename":"src/lib.rs","begin":[1128,4],"end":[1135,5]},"visibility":"public","docs":"Return the underlying data of the buffer as a mutable slice.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2967:184":{"id":"2:2967:184","crate_id":2,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2969:997","2:2970:826","2:2971:792","2:2972:713","2:2973:696"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:5811:3224":{"id":"1:5811:3224","crate_id":1,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5812:56465"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10587:3238","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:29:1573":{"id":"0:29:1573","crate_id":0,"name":"WriteColor","span":{"filename":"src/lib.rs","begin":[140,0],"end":[173,1]},"visibility":"public","docs":"This trait describes the behavior of writers that support colored output.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:30:1575","0:31:1581","0:32:1586","0:33:1596"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:4723:1567","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:34","0:41","0:132","0:141","0:150","0:212","0:231","0:251","0:265"]}},"b:2:2869-0:376:1816":{"id":"b:2:2869-0:376:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:376:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2251"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3202-0:92:1660":{"id":"b:2:3202-0:92:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStreamLock","id":"0:92:1660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23285:3758":{"id":"2:23285:3758","crate_id":2,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdElement","id":"2:23922:3754","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23276:3238","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:9028:2356":{"id":"2:9028:2356","crate_id":2,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8748:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:119:1640":{"id":"0:119:1640","crate_id":0,"name":"stderr","span":{"filename":"src/lib.rs","begin":[471,4],"end":[474,5]},"visibility":"public","docs":"Create a new `StandardStream` with the given color preferences that\nwrites to standard error.\n\nOn Windows, if coloring is desired and a Windows console could not be\nfound, then ANSI escape sequences are used instead.\n\nThe specific color/style settings can be configured when writing via\nthe `WriteColor` trait.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["choice",{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:329:1602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"StandardStream","id":"0:90:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:371":{"id":"0:371","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1579,23],"end":[1579,25]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:153:1586":{"id":"0:153:1586","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[700,4],"end":[702,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:95:1663":{"id":"0:95:1663","crate_id":0,"name":"BufferedStandardStream","span":{"filename":"src/lib.rs","begin":[415,0],"end":[417,1]},"visibility":"public","docs":"Like `StandardStream`, but does buffered writing.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:124","a:2:9407:2512-0:95:1663","a:2:3269:211-0:95:1663","a:2:9408:2511-0:95:1663","a:2:3310:2470-0:95:1663","a:2:3281:220-0:95:1663","b:2:2869-0:95:1663","b:2:4002-0:95:1663","b:2:3202-0:95:1663","b:2:3213-0:95:1663","b:2:3198-0:95:1663","b:2:2872-0:95:1663","b:2:3208-0:95:1663","0:147","0:150"]}},"0:302:1983":{"id":"0:302:1983","crate_id":0,"name":"description","span":{"filename":"src/lib.rs","begin":[1946,4],"end":[1953,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:789:2889":{"id":"5:789:2889","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"2:13683:2010":{"id":"2:13683:2010","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:13141:1568","`FromStr`":"2:13141:1568"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47742:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"2:13141:1568","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:13141:1568","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9407:2512-0:92:1660":{"id":"a:2:9407:2512-0:92:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:2512","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStreamLock","id":"0:92:1660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:404:408":{"id":"0:404:408","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[1805,9],"end":[1805,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Color","id":"0:376:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:213:1575":{"id":"0:213:1575","crate_id":0,"name":"supports_color","span":{"filename":"src/lib.rs","begin":[1162,4],"end":[1169,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:418:408":{"id":"0:418:408","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[1925,9],"end":[1925,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:414:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:131:1649":{"id":"0:131:1649","crate_id":0,"name":"flush","span":{"filename":"src/lib.rs","begin":[612,4],"end":[614,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9407:2512-0:414:1960":{"id":"a:2:9407:2512-0:414:1960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:2512","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:414:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:375:604":{"id":"0:375:604","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[1579,27],"end":[1579,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:177:1718":{"id":"a:2:3281:220-0:177:1718","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferWriter","id":"0:177:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13633:54975":{"id":"2:13633:54975","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"self::pattern":"2:13202:2364","prim@char":"1:15989:2182","str::splitn":"1:15995:2187"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:49702:2385","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:2359","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:92:1660":{"id":"b:2:2872-0:92:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:2355","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStreamLock","id":"0:92:1660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2874:53252"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3389:3635":{"id":"2:3389:3635","crate_id":2,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3390:181","2:3391:952"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2957:177":{"id":"2:2957:177","crate_id":2,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2958:415","2:2959:2816","2:2960:2813","2:2961:2825"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2967:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3310:2470-0:237:1668":{"id":"a:2:3310:2470-0:237:1668","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3310:2470","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2470","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Ansi","id":"0:237:1668","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13578:54939":{"id":"2:13578:54939","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:47617:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47617:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11082:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11082:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:346":{"id":"0:346","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[206,33],"end":[206,42]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:329:1602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3310:2470-0:177:1718":{"id":"a:2:3310:2470-0:177:1718","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2470","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferWriter","id":"0:177:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3310:2470-0:95:1663":{"id":"a:2:3310:2470-0:95:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2470","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferedStandardStream","id":"0:95:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3310:2470-0:217:1667":{"id":"a:2:3310:2470-0:217:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3310:2470","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2470","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoColor","id":"0:217:1667","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3213-0:189:1738":{"id":"b:2:3213-0:189:1738","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Buffer","id":"0:189:1738","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3178:228":{"id":"2:3178:228","crate_id":2,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3180:127","2:3181:1417"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:90:1652":{"id":"0:90:1652","crate_id":0,"name":"StandardStream","span":{"filename":"src/lib.rs","begin":[399,0],"end":[401,1]},"visibility":"public","docs":"Satisfies `io::Write` and `WriteColor`, and supports optional coloring\nto either of the standard output streams, stdout and stderr.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:117","a:2:9407:2512-0:90:1652","a:2:3269:211-0:90:1652","a:2:9408:2511-0:90:1652","a:2:3310:2470-0:90:1652","a:2:3281:220-0:90:1652","b:2:2869-0:90:1652","b:2:4002-0:90:1652","b:2:3202-0:90:1652","b:2:3213-0:90:1652","b:2:3198-0:90:1652","b:2:2872-0:90:1652","b:2:3208-0:90:1652","0:129","0:132"]}},"2:3516:2471":{"id":"2:3516:2471","crate_id":2,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3517:578"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:285:1586":{"id":"0:285:1586","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[1701,4],"end":[1703,5]},"visibility":"public","docs":"Get whether reset is enabled or not.\n\nreset is enabled by default. When disabled and using ANSI escape\nsequences, a \"reset\" code will be emitted every time a `ColorSpec`'s\nsettings are applied.\n\nNote that the reset setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:189:1738":{"id":"b:2:2869-0:189:1738","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Buffer","id":"0:189:1738","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2251"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3213-0:95:1663":{"id":"b:2:3213-0:95:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferedStandardStream","id":"0:95:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13630:54973":{"id":"2:13630:54973","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:15989:2182","str::rsplitn":"1:15995:2187","self::pattern":"2:13202:2364"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:49684:2386","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:405":{"id":"0:405","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1805,16],"end":[1805,20]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:376:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2872-0:329:1602":{"id":"b:2:2872-0:329:1602","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:2355","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:329:1602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:53252"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:421":{"id":"0:421","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1925,23],"end":[1925,25]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:414:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13915:138":{"id":"2:13915:138","crate_id":2,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13916:181","2:13917:1013"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:244:1784":{"id":"0:244:1784","crate_id":0,"name":"into_inner","span":{"filename":"src/lib.rs","begin":[1268,4],"end":[1270,5]},"visibility":"public","docs":"Consume this `Ansi` value and return the inner writer.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"W"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:217:1667":{"id":"b:2:4002-0:217:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoColor","id":"0:217:1667","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:46:1596":{"id":"0:46:1596","crate_id":0,"name":"is_synchronous","span":{"filename":"src/lib.rs","begin":[200,4],"end":[202,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:92:1660":{"id":"a:2:3269:211-0:92:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStreamLock","id":"0:92:1660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:3202-0:177:1718":{"id":"b:2:3202-0:177:1718","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferWriter","id":"0:177:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:276:1898":{"id":"0:276:1898","crate_id":0,"name":"set_bg","span":{"filename":"src/lib.rs","begin":[1629,4],"end":[1632,5]},"visibility":"public","docs":"Set the background color.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["color",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47617:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Color","id":"0:376:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13227:2359":{"id":"2:13227:2359","crate_id":2,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13229:2827","2:13230:58632","2:13231:58633"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Searcher","id":"2:13221:2360","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:344":{"id":"0:344","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[206,29],"end":[206,31]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:329:1602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:189:1738":{"id":"0:189:1738","crate_id":0,"name":"Buffer","span":{"filename":"src/lib.rs","begin":[1016,0],"end":[1016,31]},"visibility":"public","docs":"Write colored text to memory.\n\n`Buffer` is a platform independent abstraction for printing colored text to\nan in memory buffer. When the buffer is printed using a `BufferWriter`, the\ncolor information will be applied to the output device (a tty on Unix and a\nconsole on Windows).\n\nA `Buffer` is typically created by calling the `BufferWriter.buffer`\nmethod, which will take color preferences and the environment into\naccount. However, buffers can also be manually created using `no_color`,\n`ansi` or `console` (on Windows).","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:199","a:2:9407:2512-0:189:1738","a:2:3269:211-0:189:1738","a:2:9408:2511-0:189:1738","a:2:3310:2470-0:189:1738","a:2:3281:220-0:189:1738","b:2:2869-0:189:1738","b:2:4002-0:189:1738","b:2:3202-0:189:1738","b:2:3213-0:189:1738","b:2:3198-0:189:1738","b:2:2872-0:189:1738","b:2:3208-0:189:1738","0:209","0:212"]}},"0:145:1586":{"id":"0:145:1586","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[663,4],"end":[665,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13567:1744":{"id":"2:13567:1744","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2921:183":{"id":"2:2921:183","crate_id":2,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2923:604","2:2924:907"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:336:1614":{"id":"0:336:1614","crate_id":0,"name":"Never","span":{"filename":"src/lib.rs","begin":[219,4],"end":[219,9]},"visibility":"default","docs":"Never emit colors.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:23237:15957":{"id":"2:23237:15957","crate_id":2,"name":"ToBitMask","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23238:6316","2:23239:58754","2:23240:58755"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23230:3238","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:4002-0:95:1663":{"id":"b:2:4002-0:95:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferedStandardStream","id":"0:95:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:143:1575":{"id":"0:143:1575","crate_id":0,"name":"supports_color","span":{"filename":"src/lib.rs","begin":[653,4],"end":[655,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13688:54861":{"id":"2:13688:54861","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:95:1663":{"id":"b:2:3202-0:95:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferedStandardStream","id":"0:95:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:334:1612":{"id":"0:334:1612","crate_id":0,"name":"Auto","span":{"filename":"src/lib.rs","begin":[217,4],"end":[217,8]},"visibility":"default","docs":"Try to use colors, but don't force the issue. If the console isn't\navailable on Windows, or if TERM=dumb, or if `NO_COLOR` is defined, for\nexample, then don't use colors.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"1:6981:3233":{"id":"1:6981:3233","crate_id":1,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6982:56421"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:129":{"id":"0:129","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[605,0],"end":[615,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["by_ref","write_vectored","write_all_vectored","write_fmt","write_all","is_write_vectored"],"trait":{"name":"Write","id":"1:4723:1567","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStream","id":"0:90:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:130:1647","0:131:1649"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:40:1596":{"id":"0:40:1596","crate_id":0,"name":"is_synchronous","span":{"filename":"src/lib.rs","begin":[185,4],"end":[187,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6459:3244":{"id":"1:6459:3244","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6460:3546","1:6461:3547","1:6462:7892","1:6463:57396","1:6465:57400","1:6467:57397","1:6468:57398","1:6470:57399"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10587:3238","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:370":{"id":"0:370","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1579,23],"end":[1579,25]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13596:59663":{"id":"2:13596:59663","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:49844:2379","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4723:1567":{"id":"1:4723:1567","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4724:1647","1:4725:2821","1:4727:2822","1:4728:1649","1:4729:1745","1:4730:2823","1:4731:2756","1:4740:2824"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3269:211-0:177:1718":{"id":"a:2:3269:211-0:177:1718","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferWriter","id":"0:177:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:241":{"id":"0:241","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1260,0],"end":[1281,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Write","id":"1:4723:1567","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Ansi","id":"0:237:1668","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["0:243:920","0:244:1784","0:245:1695","0:246:1795"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:254:1581":{"id":"0:254:1581","crate_id":0,"name":"set_color","span":{"filename":"src/lib.rs","begin":[1302,4],"end":[1325,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["spec",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:376:1816":{"id":"0:376:1816","crate_id":0,"name":"Color","span":{"filename":"src/lib.rs","begin":[1806,0],"end":[1819,1]},"visibility":"public","docs":"The set of available colors for the terminal foreground/background.\n\nThe `Ansi256` and `Rgb` colors will only output the correct codes when\npaired with the `Ansi` `WriteColor` implementation.\n\nThe `Ansi256` and `Rgb` color types are not supported when writing colors\non Windows using the console. If they are used on Windows, then they are\nsilently ignored and no colors will be emitted.\n\nThis set may expand over time.\n\nThis type has a `FromStr` impl that can parse colors from their human\nreadable form. The format is as follows:\n\n1. Any of the explicitly listed colors in English. They are matched\n   case insensitively.\n2. A single 8-bit integer, in either decimal or hexadecimal format.\n3. A triple of 8-bit integers separated by a comma, where each integer is\n   in decimal or hexadecimal format.\n\nHexadecimal numbers are written with a `0x` prefix.","links":{},"attrs":["#[allow(missing_docs)]"],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":true,"variants":["0:377:1843","0:379:1844","0:381:1846","0:383:1847","0:385:1848","0:387:1850","0:389:1852","0:391:1854","0:393:1856","0:396:1857"],"impls":["a:2:9407:2512-0:376:1816","a:2:3269:211-0:376:1816","a:2:9408:2511-0:376:1816","a:2:3310:2470-0:376:1816","a:2:3281:220-0:376:1816","b:2:2869-0:376:1816","b:2:4002-0:376:1816","b:2:3202-0:376:1816","b:2:3213-0:376:1816","b:2:3198-0:376:1816","b:2:2872-0:376:1816","b:2:3208-0:376:1816","b:5:787-0:376:1816","0:403","0:405","0:406","0:408","0:409","0:411","0:412","0:307"]}},"b:2:3208-0:414:1960":{"id":"b:2:3208-0:414:1960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:414:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13591:3707":{"id":"2:13591:3707","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:15989:2182"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49556:2370","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:343":{"id":"0:343","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[206,29],"end":[206,31]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:329:1602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3269:211-0:237:1668":{"id":"a:2:3269:211-0:237:1668","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Ansi","id":"0:237:1668","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9408:2511-0:329:1602":{"id":"a:2:9408:2511-0:329:1602","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:2511","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:329:1602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:265":{"id":"0:265","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1453,0],"end":[1465,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["is_synchronous"],"trait":{"name":"WriteColor","id":"0:29:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"io::Sink","id":"1:11094:1859","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:266:1575","0:267:1581","0:268:1586"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13569:59659":{"id":"2:13569:59659","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3281:220":{"id":"2:3281:220","crate_id":2,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6084:60317":{"id":"5:6084:60317","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:1600","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8106:3169","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:1600","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8106:3169","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13595:4442":{"id":"2:13595:4442","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:49834:2317","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:124":{"id":"0:124","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[523,0],"end":[551,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"BufferedStandardStream","id":"0:95:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:125:1639","0:126:1640"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:398:1542":{"id":"0:398:1542","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[1816,8],"end":[1816,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"0:209":{"id":"0:209","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1138,0],"end":[1158,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["by_ref","write_vectored","write_all_vectored","write_fmt","write_all","is_write_vectored"],"trait":{"name":"Write","id":"1:4723:1567","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Buffer","id":"0:189:1738","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:210:1647","0:211:1649"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:403":{"id":"0:403","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1805,9],"end":[1805,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:376:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:404:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:9031:3599":{"id":"2:9031:3599","crate_id":2,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8748:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3525:132":{"id":"2:3525:132","crate_id":2,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3527:181","2:3528:378"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:282:1911":{"id":"0:282:1911","crate_id":0,"name":"set_italic","span":{"filename":"src/lib.rs","begin":[1674,4],"end":[1677,5]},"visibility":"public","docs":"Set whether the text is italicized or not.\n\nNote that the italic setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:177:1718":{"id":"b:2:3198-0:177:1718","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferWriter","id":"0:177:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:2826"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4002-0:90:1652":{"id":"b:2:4002-0:90:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStream","id":"0:90:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:420:660":{"id":"0:420:660","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1925,16],"end":[1925,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:357:1583":{"id":"b:2:2869-0:357:1583","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2251"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:419":{"id":"0:419","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1925,16],"end":[1925,21]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:414:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:420:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:230:1649":{"id":"0:230:1649","crate_id":0,"name":"flush","span":{"filename":"src/lib.rs","begin":[1230,4],"end":[1232,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:217:1667":{"id":"b:2:3208-0:217:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoColor","id":"0:217:1667","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:408":{"id":"0:408","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1805,29],"end":[1805,31]},"visibility":"crate","docs":null,"links":{},"attrs":["#[allow(missing_docs)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:376:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13141:1568":{"id":"2:13141:1568","crate_id":2,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13142:126","2:13143:1990"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:287:1811":{"id":"0:287:1811","crate_id":0,"name":"intense","span":{"filename":"src/lib.rs","begin":[1729,4],"end":[1731,5]},"visibility":"public","docs":"Get whether this is intense or not.\n\nOn Unix-like systems, this will output the ANSI escape sequence\nthat will print a high-intensity version of the color\nspecified.\n\nOn Windows systems, this will output the ANSI escape sequence\nthat will print a brighter version of the color specified.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:357:1583":{"id":"b:2:2872-0:357:1583","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:2355","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:53252"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3213-0:357:1583":{"id":"b:2:3213-0:357:1583","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13639:59667":{"id":"2:13639:59667","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47617:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:2359","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6085:2318":{"id":"5:6085:2318","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:8361:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8361:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8748:157":{"id":"2:8748:157","crate_id":2,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8749:2836","2:8750:922","2:8751:2838","2:8754:2839","2:8755:495","2:8757:1886","2:8760:2840","2:8761:2841","2:8762:2842","2:8763:2843","2:8765:2844","2:8767:2845","2:8768:2846","2:8770:841","2:8773:2847","2:8780:2848","2:8782:2849","2:8785:2042","2:8786:2850","2:8787:2851","2:8789:2852","2:8791:2853","2:8794:1308","2:8795:2854","2:8796:2855","2:8800:2856","2:8803:2857","2:8804:2858","2:8805:2859","2:8807:2824","2:8808:1968","2:8810:2860","2:8813:2861","2:8815:2862","2:8825:2863","2:8840:2864","2:8842:2865","2:8846:2866","2:8855:2867","2:8858:2868","2:8860:2869","2:8863:276","2:8870:294","2:8877:2870","2:8884:2871","2:8893:2872","2:8903:1014","2:8910:2873","2:8917:2816","2:8918:2813","2:8919:2818","2:8931:2817","2:8938:2815","2:8950:2814","2:8957:2874","2:8958:2875","2:8963:2876","2:8966:2877","2:8969:2878","2:8970:2879","2:8972:2880","2:8974:2881","2:8976:415","2:8979:2882","2:8982:997","2:8985:2883","2:8988:604","2:8991:2884","2:8994:907","2:8996:826","2:8998:792","2:9000:713","2:9002:696","2:9004:2885","2:9005:2886","2:9013:2887"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13662:59676":{"id":"2:13662:59676","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"self::pattern":"2:13202:2364","prim@char":"1:15989:2182"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:13232:2357","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:204:793":{"id":"0:204:793","crate_id":0,"name":"len","span":{"filename":"src/lib.rs","begin":[1085,4],"end":[1092,5]},"visibility":"public","docs":"Returns the length of this buffer in bytes.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13656:59672":{"id":"2:13656:59672","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:37:1575":{"id":"0:37:1575","crate_id":0,"name":"supports_color","span":{"filename":"src/lib.rs","begin":[176,4],"end":[178,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:790:2890":{"id":"5:790:2890","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:14390:3168":{"id":"2:14390:3168","crate_id":2,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14391:57341","2:14392:57342","2:14393:57343","2:14394:57344","2:14395:57345","2:14396:57346","2:14397:2824"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3281:220-0:414:1960":{"id":"a:2:3281:220-0:414:1960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:414:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13587:59662":{"id":"2:13587:59662","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:15995:2187","crate::ops::IndexMut":"2:3581:3165","str::slice_unchecked":"1:15995:2187"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"5:6106:56018":{"id":"5:6106:56018","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:15995:2187"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8361:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9407:2512-0:90:1652":{"id":"a:2:9407:2512-0:90:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:2512","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStream","id":"0:90:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13648:59669":{"id":"2:13648:59669","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"prim@char":"1:15989:2182","str::rmatch_indices":"1:15995:2187","self::pattern":"2:13202:2364","`DoubleEndedIterator`":"2:8591:120"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:49730:2380","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:396:1857":{"id":"0:396:1857","crate_id":0,"name":"Rgb","span":{"filename":"src/lib.rs","begin":[1816,4],"end":[1816,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"primitive","inner":"u8"},{"kind":"primitive","inner":"u8"},{"kind":"primitive","inner":"u8"}]}},"2:13660:59674":{"id":"2:13660:59674","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:288:1933":{"id":"0:288:1933","crate_id":0,"name":"set_intense","span":{"filename":"src/lib.rs","begin":[1741,4],"end":[1744,5]},"visibility":"public","docs":"Set whether the text is intense or not.\n\nOn Unix-like systems, this will output the ANSI escape sequence\nthat will print a high-intensity version of the color\nspecified.\n\nOn Windows systems, this will output the ANSI escape sequence\nthat will print a brighter version of the color specified.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:217:1667":{"id":"0:217:1667","crate_id":0,"name":"NoColor","span":{"filename":"src/lib.rs","begin":[1198,0],"end":[1198,25]},"visibility":"public","docs":"Satisfies `WriteColor` but ignores all color options.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:221","a:2:9407:2512-0:217:1667","a:2:3269:211-0:217:1667","a:2:9408:2511-0:217:1667","a:2:3310:2470-0:217:1667","a:2:3281:220-0:217:1667","b:2:2869-0:217:1667","b:2:4002-0:217:1667","b:2:3202-0:217:1667","b:2:3213-0:217:1667","b:2:3198-0:217:1667","b:2:2872-0:217:1667","b:2:3208-0:217:1667","0:227","0:231"]}},"0:235:1586":{"id":"0:235:1586","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[1247,4],"end":[1249,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3717:4046":{"id":"2:3717:4046","crate_id":2,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"RangeBounds","id":"2:3648:3166","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:234:1581":{"id":"0:234:1581","crate_id":0,"name":"set_color","span":{"filename":"src/lib.rs","begin":[1242,4],"end":[1244,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["_",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3212:1417":{"id":"2:3212:1417","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47742:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:330:1605":{"id":"0:330:1605","crate_id":0,"name":"Always","span":{"filename":"src/lib.rs","begin":[210,4],"end":[210,10]},"visibility":"default","docs":"Try very hard to emit colors. This includes emitting ANSI colors\non Windows if the console API is unavailable.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:212":{"id":"0:212","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1160,0],"end":[1195,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["is_synchronous"],"trait":{"name":"WriteColor","id":"0:29:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Buffer","id":"0:189:1738","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:213:1575","0:214:1581","0:215:1586","0:216:1596"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3213-0:237:1668":{"id":"b:2:3213-0:237:1668","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Ansi","id":"0:237:1668","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13571:59660":{"id":"2:13571:59660","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"1:15995:2187"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13212:2358":{"id":"2:13212:2358","crate_id":2,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13214:2360","2:13215:58874","2:13216:58875","2:13217:58876","2:13218:58878","2:13219:58877","2:13220:58879"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:787-0:329:1602":{"id":"b:5:787-0:329:1602","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:329:1602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:2889","5:790:2890","5:791:2891"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:422":{"id":"0:422","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1925,23],"end":[1925,25]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:414:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13689:59681":{"id":"2:13689:59681","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"1:15989:2182"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:49879:2375","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13607:2870":{"id":"2:13607:2870","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"prim@char":"1:15989:2182","`None`":"2:47617:176","self::pattern":"2:13202:2364"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47617:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:7817:3419":{"id":"1:7817:3419","crate_id":1,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7818:56701"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:132":{"id":"0:132","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[617,0],"end":[637,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["is_synchronous"],"trait":{"name":"WriteColor","id":"0:29:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStream","id":"0:90:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:133:1575","0:134:1581","0:135:1586","0:136:1596"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4002-0:92:1660":{"id":"b:2:4002-0:92:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStreamLock","id":"0:92:1660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:134:1581":{"id":"0:134:1581","crate_id":0,"name":"set_color","span":{"filename":"src/lib.rs","begin":[624,4],"end":[626,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["spec",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13588:54961":{"id":"2:13588:54961","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"1:15995:2187"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6812:3244":{"id":"1:6812:3244","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6813:7893"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10587:3238","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10447:119":{"id":"2:10447:119","crate_id":2,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10448:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6885:3248":{"id":"1:6885:3248","crate_id":1,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6886:56998"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2869-0:90:1652":{"id":"b:2:2869-0:90:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStream","id":"0:90:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2251"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:387:1850":{"id":"0:387:1850","crate_id":0,"name":"Magenta","span":{"filename":"src/lib.rs","begin":[1812,4],"end":[1812,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"1:4666:2304":{"id":"1:4666:2304","crate_id":1,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4667:3481","1:4668:56830","1:4670:56831","1:4671:56833","1:4672:2305","1:4673:56832","1:4674:54719","1:4676:56834","1:4677:2824","1:4678:3371","1:4679:2843","1:4681:2854"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13692:59682":{"id":"2:13692:59682","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:15989:2182"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:49897:2377","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9407:2512-0:189:1738":{"id":"a:2:9407:2512-0:189:1738","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:2512","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Buffer","id":"0:189:1738","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13597:31899":{"id":"2:13597:31899","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:49872:2365","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8506:3726":{"id":"2:8506:3726","crate_id":2,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8508:2880"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:135:1586":{"id":"0:135:1586","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[629,4],"end":[631,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:189:1738":{"id":"a:2:3281:220-0:189:1738","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Buffer","id":"0:189:1738","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:787-0:414:1960":{"id":"b:5:787-0:414:1960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:414:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:2889","5:790:2890","5:791:2891"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:199":{"id":"0:199","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1032,0],"end":[1136,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Buffer","id":"0:189:1738","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:201:1769","0:202:1768","0:203:1744","0:204:793","0:205:1780","0:206:1784","0:207:1786","0:208:1788"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:23025:3866":{"id":"2:23025:3866","crate_id":2,"name":"SimdPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23026:3757","2:23027:1247","2:23028:1272"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2872-0:217:1667":{"id":"b:2:2872-0:217:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:2355","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoColor","id":"0:217:1667","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:2874:53252"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9408:2511-0:177:1718":{"id":"a:2:9408:2511-0:177:1718","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:2511","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferWriter","id":"0:177:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3358:3669":{"id":"2:3358:3669","crate_id":2,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3360:181","2:3361:1102"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:412":{"id":"0:412","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1805,33],"end":[1805,42]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Color","id":"0:376:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:376:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:413:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:414:1960":{"id":"0:414:1960","crate_id":0,"name":"ParseColorError","span":{"filename":"src/lib.rs","begin":[1926,0],"end":[1929,1]},"visibility":"public","docs":"An error from parsing an invalid color specification.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:299","a:2:9407:2512-0:414:1960","a:2:3269:211-0:414:1960","a:2:9408:2511-0:414:1960","a:2:3310:2470-0:414:1960","a:2:3281:220-0:414:1960","b:2:2869-0:414:1960","b:2:4002-0:414:1960","b:2:3202-0:414:1960","b:2:3213-0:414:1960","b:2:3198-0:414:1960","b:2:2872-0:414:1960","b:2:3208-0:414:1960","b:5:787-0:414:1960","b:5:6413-0:414:1960","0:417","0:419","0:421","0:422","0:424","0:425","0:301","0:304"]}},"2:13580:1795":{"id":"2:13580:1795","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:47617:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47617:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11082:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11082:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:274:1893":{"id":"0:274:1893","crate_id":0,"name":"set_fg","span":{"filename":"src/lib.rs","begin":[1618,4],"end":[1621,5]},"visibility":"public","docs":"Set the foreground color.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["color",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47617:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Color","id":"0:376:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3278:217":{"id":"2:3278:217","crate_id":2,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3310:2470-0:357:1583":{"id":"a:2:3310:2470-0:357:1583","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2470","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:226:1795":{"id":"0:226:1795","crate_id":0,"name":"get_mut","span":{"filename":"src/lib.rs","begin":[1218,4],"end":[1220,5]},"visibility":"public","docs":"Return a mutable reference to the inner writer.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"W"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:406":{"id":"0:406","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1805,22],"end":[1805,27]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:376:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:407:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:245:1695":{"id":"0:245:1695","crate_id":0,"name":"get_ref","span":{"filename":"src/lib.rs","begin":[1273,4],"end":[1275,5]},"visibility":"public","docs":"Return a reference to the inner writer.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"W"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6481:3241":{"id":"1:6481:3241","crate_id":1,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6482:54821","1:6483:7239","1:6484:54822","1:6485:54823","1:6486:54824","1:6487:54825"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10587:3238","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:5819:3226":{"id":"1:5819:3226","crate_id":1,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5820:5320"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:224:1784":{"id":"0:224:1784","crate_id":0,"name":"into_inner","span":{"filename":"src/lib.rs","begin":[1208,4],"end":[1210,5]},"visibility":"public","docs":"Consume this `NoColor` value and return the inner writer.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"W"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13601:1962":{"id":"2:13601:1962","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:15989:2182","self::pattern":"2:13202:2364"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:289:1935":{"id":"0:289:1935","crate_id":0,"name":"is_none","span":{"filename":"src/lib.rs","begin":[1747,4],"end":[1755,5]},"visibility":"public","docs":"Returns true if this color specification has no colors or styles.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9408:2511-0:357:1583":{"id":"a:2:9408:2511-0:357:1583","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:2511","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3198-0:217:1667":{"id":"b:2:3198-0:217:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoColor","id":"0:217:1667","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:3201:2826"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13589:54962":{"id":"2:13589:54962","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"1:15995:2187"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:414:1960":{"id":"b:2:3213-0:414:1960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:414:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3202-0:357:1583":{"id":"b:2:3202-0:357:1583","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:6413-0:414:1960":{"id":"b:5:6413-0:414:1960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10447:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6411:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:414:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:6415:1397"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:147":{"id":"0:147","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[673,0],"end":[683,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["by_ref","write_vectored","write_all_vectored","write_fmt","write_all","is_write_vectored"],"trait":{"name":"Write","id":"1:4723:1567","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferedStandardStream","id":"0:95:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:148:1647","0:149:1649"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3208-0:92:1660":{"id":"b:2:3208-0:92:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStreamLock","id":"0:92:1660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13221:2360":{"id":"2:13221:2360","crate_id":2,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13223:3700","2:13224:922","2:13225:58120","2:13226:58121"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3208-0:376:1816":{"id":"b:2:3208-0:376:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:376:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3310:2470-0:414:1960":{"id":"a:2:3310:2470-0:414:1960","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2470","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:414:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9408:2511-0:90:1652":{"id":"a:2:9408:2511-0:90:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:2511","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStream","id":"0:90:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3648:3166":{"id":"2:3648:3166","crate_id":2,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3650:58321","2:3651:58322","2:3652:1979"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:13687:54860":{"id":"2:13687:54860","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:348:604":{"id":"0:348:604","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[206,33],"end":[206,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:329:1602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:201:1769":{"id":"0:201:1769","crate_id":0,"name":"no_color","span":{"filename":"src/lib.rs","begin":[1064,4],"end":[1066,5]},"visibility":"public","docs":"Create a buffer that drops all color information.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Buffer","id":"0:189:1738","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6091:1991":{"id":"5:6091:1991","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:8361:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8361:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3216:127":{"id":"2:3216:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:38930:3202","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:399:1543":{"id":"0:399:1543","crate_id":0,"name":"1","span":{"filename":"src/lib.rs","begin":[1816,12],"end":[1816,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"2:10455:2901":{"id":"2:10455:2901","crate_id":2,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10456:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:268:1586":{"id":"0:268:1586","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[1462,4],"end":[1464,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:182":{"id":"0:182","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[867,0],"end":[1003,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"BufferWriter","id":"0:177:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:184:1639","0:185:1640","0:186:1720","0:187:1737","0:188:1743"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10678:142":{"id":"2:10678:142","crate_id":2,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10679:715","2:10681:57031"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3198-0:95:1663":{"id":"b:2:3198-0:95:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferedStandardStream","id":"0:95:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:2826"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13654:59671":{"id":"2:13654:59671","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13615:1966":{"id":"2:13615:1966","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"str::split_whitespace":"1:15995:2187","`DoubleEndedIterator`":"2:8591:120","self::pattern":"2:13202:2364","str::rsplit":"1:15995:2187","prim@char":"1:15989:2182"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:49580:2316","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:206:1784":{"id":"0:206:1784","crate_id":0,"name":"into_inner","span":{"filename":"src/lib.rs","begin":[1108,4],"end":[1115,5]},"visibility":"public","docs":"Consume this buffer and return the underlying raw data.\n\nOn Windows, this unrecoverably drops all color information associated\nwith the buffer.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:117":{"id":"0:117","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[449,0],"end":[486,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"StandardStream","id":"0:90:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:118:1639","0:119:1640","0:120:1642"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:256:1596":{"id":"0:256:1596","crate_id":0,"name":"is_synchronous","span":{"filename":"src/lib.rs","begin":[1333,4],"end":[1335,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:118:1639":{"id":"0:118:1639","crate_id":0,"name":"stdout","span":{"filename":"src/lib.rs","begin":[458,4],"end":[461,5]},"visibility":"public","docs":"Create a new `StandardStream` with the given color preferences that\nwrites to standard output.\n\nOn Windows, if coloring is desired and a Windows console could not be\nfound, then ANSI escape sequences are used instead.\n\nThe specific color/style settings can be configured when writing via\nthe `WriteColor` trait.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["choice",{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:329:1602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"StandardStream","id":"0:90:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13577:54942":{"id":"2:13577:54942","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:16006:2196"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3269:211":{"id":"2:3269:211","crate_id":2,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2869-0:177:1718":{"id":"b:2:2869-0:177:1718","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferWriter","id":"0:177:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2251"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3202-0:329:1602":{"id":"b:2:3202-0:329:1602","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:329:1602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3729:224":{"id":"2:3729:224","crate_id":2,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3730:181","2:3731:3734","2:3732:686","2:3733:369"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FromResidual","id":"2:3734:137","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3729:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:283:1806":{"id":"0:283:1806","crate_id":0,"name":"underline","span":{"filename":"src/lib.rs","begin":[1682,4],"end":[1684,5]},"visibility":"public","docs":"Get whether this is underline or not.\n\nNote that the underline setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13232:2357":{"id":"2:13232:2357","crate_id":2,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:2359","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:137":{"id":"0:137","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[639,0],"end":[649,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["by_ref","write_vectored","write_all_vectored","write_fmt","write_all","is_write_vectored"],"trait":{"name":"Write","id":"1:4723:1567","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStreamLock","id":"0:92:1660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:139:1647","0:140:1649"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8591:120":{"id":"2:8591:120","crate_id":2,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8592:2827","2:8593:2828","2:8594:2829","2:8595:2830","2:8599:2831","2:8602:2832"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8748:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3522:131":{"id":"2:3522:131","crate_id":2,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3524:377"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3525:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:6083":{"id":"5:6083","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5903:1340","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:6084:60317","5:6085:2318","5:6088:60318","5:6091:1991","5:6103:60319","5:6104:60320","5:6105:2333","5:6106:56018","5:6107:56019"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9407:2512-0:376:1816":{"id":"a:2:9407:2512-0:376:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:2512","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:376:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3519:130":{"id":"2:3519:130","crate_id":2,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3521:376"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3522:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:45:1586":{"id":"0:45:1586","crate_id":0,"name":"reset","span":{"filename":"src/lib.rs","begin":[197,4],"end":[199,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:90:1652":{"id":"b:2:3198-0:90:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStream","id":"0:90:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:2826"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:373":{"id":"0:373","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1579,27],"end":[1579,36]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:149:1649":{"id":"0:149:1649","crate_id":0,"name":"flush","span":{"filename":"src/lib.rs","begin":[680,4],"end":[682,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:2470-0:376:1816":{"id":"a:2:3310:2470-0:376:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2470","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:376:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13604:54977":{"id":"2:13604:54977","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"self::pattern":"2:13202:2364","prim@char":"1:15989:2182"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:2359","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6579:3281":{"id":"1:6579:3281","crate_id":1,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6580:56491","1:6581:56492"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3202-0:90:1652":{"id":"b:2:3202-0:90:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStream","id":"0:90:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:253:1575":{"id":"0:253:1575","crate_id":0,"name":"supports_color","span":{"filename":"src/lib.rs","begin":[1297,4],"end":[1299,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6707:3221":{"id":"1:6707:3221","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6708:56498","1:6709:7161","1:6710:7162","1:6711:7164","1:6712:7163","1:6713:7165","1:6714:7166","1:6715:7168","1:6716:5362","1:6717:7171","1:6718:7172","1:6719:7173","1:6720:7174","1:6721:7175","1:6722:7176","1:6723:7169","1:6724:7170"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:207:1786":{"id":"0:207:1786","crate_id":0,"name":"as_slice","span":{"filename":"src/lib.rs","begin":[1118,4],"end":[1125,5]},"visibility":"public","docs":"Return the underlying data of the buffer.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:246:1795":{"id":"0:246:1795","crate_id":0,"name":"get_mut","span":{"filename":"src/lib.rs","begin":[1278,4],"end":[1280,5]},"visibility":"public","docs":"Return a mutable reference to the inner writer.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"W"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3492:116":{"id":"2:3492:116","crate_id":2,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3493:221","2:3494:543"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:272:920":{"id":"0:272:920","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[1608,4],"end":[1610,5]},"visibility":"public","docs":"Create a new color specification that has no colors or styles.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:383:1847":{"id":"0:383:1847","crate_id":0,"name":"Red","span":{"filename":"src/lib.rs","begin":[1810,4],"end":[1810,7]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:368":{"id":"0:368","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1579,16],"end":[1579,21]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:369:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:148:1647":{"id":"0:148:1647","crate_id":0,"name":"write","span":{"filename":"src/lib.rs","begin":[675,4],"end":[677,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["b",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13576:304":{"id":"2:13576:304","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"`u8`":"1:16006:2196","str::as_mut_ptr":"1:15995:2187"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3277:218":{"id":"2:3277:218","crate_id":2,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3281:220-0:95:1663":{"id":"a:2:3281:220-0:95:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferedStandardStream","id":"0:95:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:187:1737":{"id":"0:187:1737","crate_id":0,"name":"buffer","span":{"filename":"src/lib.rs","begin":[956,4],"end":[958,5]},"visibility":"public","docs":"Creates a new `Buffer` with the current color preferences.\n\nA `Buffer` satisfies both `io::Write` and `WriteColor`. A `Buffer` can\nbe printed using the `print` method.","links":{},"attrs":["#[cfg(not(windows))]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Buffer","id":"0:189:1738","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:12649:4132":{"id":"2:12649:4132","crate_id":2,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12650:2836","2:12651:1786"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3577:3164":{"id":"2:3577:3164","crate_id":2,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3579:181","2:3580:753"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:43:1575":{"id":"0:43:1575","crate_id":0,"name":"supports_color","span":{"filename":"src/lib.rs","begin":[191,4],"end":[193,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:377:1843":{"id":"0:377:1843","crate_id":0,"name":"Black","span":{"filename":"src/lib.rs","begin":[1807,4],"end":[1807,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:304":{"id":"0:304","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1956,0],"end":[1982,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10447:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:414:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:305:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3440:3654":{"id":"2:3440:3654","crate_id":2,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3442:1237"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3396:3329":{"id":"2:3396:3329","crate_id":2,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3398:181","2:3399:351"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3380:3678":{"id":"2:3380:3678","crate_id":2,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3382:559"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:125:1639":{"id":"0:125:1639","crate_id":0,"name":"stdout","span":{"filename":"src/lib.rs","begin":[532,4],"end":[536,5]},"visibility":"public","docs":"Create a new `BufferedStandardStream` with the given color preferences\nthat writes to standard output via a buffered writer.\n\nOn Windows, if coloring is desired and a Windows console could not be\nfound, then ANSI escape sequences are used instead.\n\nThe specific color/style settings can be configured when writing via\nthe `WriteColor` trait.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["choice",{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:329:1602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"BufferedStandardStream","id":"0:95:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9408:2511-0:376:1816":{"id":"a:2:9408:2511-0:376:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:2511","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:376:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3406:3331":{"id":"2:3406:3331","crate_id":2,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3408:181","2:3409:356"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3202-0:237:1668":{"id":"b:2:3202-0:237:1668","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Ansi","id":"0:237:1668","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3384:3680":{"id":"2:3384:3680","crate_id":2,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3386:1103"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:231":{"id":"0:231","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1235,0],"end":[1255,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:4723:1567","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_synchronous"],"trait":{"name":"WriteColor","id":"0:29:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoColor","id":"0:217:1667","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["0:233:1575","0:234:1581","0:235:1586","0:236:1596"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3734:137":{"id":"2:3734:137","crate_id":2,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3736:687"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3729:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:4000:68":{"id":"2:4000:68","crate_id":2,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4001:1429"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"0:299":{"id":"0:299","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1938,0],"end":[1943,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:414:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:300:1982"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:269":{"id":"0:269","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1591,0],"end":[1604,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:270:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:267:1581":{"id":"0:267:1581","crate_id":0,"name":"set_color","span":{"filename":"src/lib.rs","begin":[1458,4],"end":[1460,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["_",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:237:1668":{"id":"b:2:3198-0:237:1668","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Ansi","id":"0:237:1668","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:3201:2826"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:146:1596":{"id":"0:146:1596","crate_id":0,"name":"is_synchronous","span":{"filename":"src/lib.rs","begin":[668,4],"end":[670,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8071:3602":{"id":"2:8071:3602","crate_id":2,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8072:58649","2:8073:58650","2:8074:58647","2:8075:58645","2:8076:58651","2:8077:58648","2:8078:58646"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2967:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3310:2470-0:329:1602":{"id":"a:2:3310:2470-0:329:1602","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2470","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:329:1602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3423:3645":{"id":"2:3423:3645","crate_id":2,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3425:352"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:31:1581":{"id":"0:31:1581","crate_id":0,"name":"set_color","span":{"filename":"src/lib.rs","begin":[151,4],"end":[151,64]},"visibility":"default","docs":"Set the color settings of the writer.\n\nSubsequent writes to this writer will use these settings until either\n`reset` is called or new color settings are set.\n\nIf there was a problem setting the color settings, then an error is\nreturned.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["spec",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:9407:2512-0:357:1583":{"id":"a:2:9407:2512-0:357:1583","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:2512","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:10449:2898":{"id":"2:10449:2898","crate_id":2,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10450:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:347":{"id":"0:347","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[206,33],"end":[206,42]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:329:1602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:329:1602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:348:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13586:3366":{"id":"2:13586:3366","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"str::slice_mut_unchecked":"1:15995:2187","`str`":"1:15995:2187","crate::ops::Index":"2:3577:3164"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9407:2512-0:177:1718":{"id":"a:2:9407:2512-0:177:1718","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:2512","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferWriter","id":"0:177:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3310:2470":{"id":"2:3310:2470","crate_id":2,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5763:3221":{"id":"1:5763:3221","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5764:6816","1:5765:56704","1:5766:5320","1:5767:56705","1:5768:3546","1:5769:3547","1:5770:56706","1:5771:1304","1:5772:56707","1:5773:56708","1:5774:56709","1:5775:56710","1:5776:56711","1:5777:56712","1:5778:56713","1:5779:56714"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3269:211-0:376:1816":{"id":"a:2:3269:211-0:376:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:376:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3213-0:217:1667":{"id":"b:2:3213-0:217:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoColor","id":"0:217:1667","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3269:211-0:217:1667":{"id":"a:2:3269:211-0:217:1667","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoColor","id":"0:217:1667","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2869-0:95:1663":{"id":"b:2:2869-0:95:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferedStandardStream","id":"0:95:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2251"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:329:1602":{"id":"0:329:1602","crate_id":0,"name":"ColorChoice","span":{"filename":"src/lib.rs","begin":[207,0],"end":[220,1]},"visibility":"public","docs":"ColorChoice represents the color preferences of an end user.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:330:1605","0:332:1608","0:334:1612","0:336:1614"],"impls":["a:2:9407:2512-0:329:1602","a:2:3269:211-0:329:1602","a:2:9408:2511-0:329:1602","a:2:3310:2470-0:329:1602","a:2:3281:220-0:329:1602","b:2:2869-0:329:1602","b:2:4002-0:329:1602","b:2:3202-0:329:1602","b:2:3213-0:329:1602","b:2:3198-0:329:1602","b:2:2872-0:329:1602","b:2:3208-0:329:1602","b:5:787-0:329:1602","0:338","0:340","0:341","0:343","0:344","0:346","0:347"]}},"2:3104:3658":{"id":"2:3104:3658","crate_id":2,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:3103:3238","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13691:3263":{"id":"2:13691:3263","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:15989:2182"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:49888:2376","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23088:3289":{"id":"2:23088:3289","crate_id":2,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23078:3238","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3274:1599":{"id":"2:3274:1599","crate_id":2,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:301":{"id":"0:301","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1945,0],"end":[1954,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["source","type_id","description","provide","cause"],"trait":{"name":"Error","id":"1:2572:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseColorError","id":"0:414:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:302:1983"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3427:3647":{"id":"2:3427:3647","crate_id":2,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3429:354"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3213-0:177:1718":{"id":"b:2:3213-0:177:1718","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferWriter","id":"0:177:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5675:3253":{"id":"1:5675:3253","crate_id":1,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5676:4865","1:5677:1814"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10587:3238","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3347:3664":{"id":"2:3347:3664","crate_id":2,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3349:181","2:3350:892"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:787-0:376:1816":{"id":"b:5:787-0:376:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:376:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:2889","5:790:2890","5:791:2891"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3208-0:177:1718":{"id":"b:2:3208-0:177:1718","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferWriter","id":"0:177:1718","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3281:220-0:90:1652":{"id":"a:2:3281:220-0:90:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StandardStream","id":"0:90:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9407:2512-0:95:1663":{"id":"a:2:9407:2512-0:95:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:2512","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"BufferedStandardStream","id":"0:95:1663","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:221":{"id":"0:221","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1200,0],"end":[1221,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Write","id":"1:4723:1567","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"NoColor","id":"0:217:1667","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["0:223:920","0:224:1784","0:225:1695","0:226:1795"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2869-0:329:1602":{"id":"b:2:2869-0:329:1602","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorChoice","id":"0:329:1602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2251"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:277:1800":{"id":"0:277:1800","crate_id":0,"name":"bold","span":{"filename":"src/lib.rs","begin":[1637,4],"end":[1639,5]},"visibility":"public","docs":"Get whether this is bold or not.\n\nNote that the bold setting has no effect in a Windows console.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:136:1596":{"id":"0:136:1596","crate_id":0,"name":"is_synchronous","span":{"filename":"src/lib.rs","begin":[634,4],"end":[636,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:237:1668":{"id":"b:2:3208-0:237:1668","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Ansi","id":"0:237:1668","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3269:211-0:357:1583":{"id":"a:2:3269:211-0:357:1583","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ColorSpec","id":"0:357:1583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:6103:60319":{"id":"5:6103:60319","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:8361:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8361:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:791:2891":{"id":"5:791:2891","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:227":{"id":"0:227","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1223,0],"end":[1233,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:4723:1567","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["by_ref","write_vectored","write_all_vectored","write_fmt","write_all","is_write_vectored"],"trait":{"name":"Write","id":"1:4723:1567","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoColor","id":"0:217:1667","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["0:229:1647","0:230:1649"],"negative":false,"synthetic":false,"blanket_impl":null}}},"paths":{"1:5398:3524":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"2:10449:2898":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"6:5405:7054":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"16:6949:4799":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"17:12170:5479":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"5:1694:4217":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"17:4008:7776":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"6:5541:7094":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"1:7277:7882":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:48922:7450":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"2:24311:38826":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"2:48617:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"6:5447:7073":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:46084:199":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"0:396:1857":{"crate_id":0,"path":["termcolor","Color","Rgb"],"kind":"variant"},"2:3297:2809":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"5:8138:4239":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"1:4432:2330":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"2:4783:3627":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:13655:3406":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"16:5498:4541":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"5:8115:2837":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"1:15988:2181":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"1:15994:2186":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:49566:2314":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"2:24327:38835":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:45906:3631":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"2:46772:3819":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"16:5869:189":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"1:8712:2410":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"17:12183:5481":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"17:10516:5258":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"1:6221:3542":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"2:3525:132":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:12085:7613":{"crate_id":1,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"5:5833:2362":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:4965:2912":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"2:46904:2313":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"6:5311:7003":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:9035:3601":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"18:896:4949":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"13:0:2152":{"crate_id":13,"path":["std_detect"],"kind":"module"},"16:3366:4767":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"16:3461:4763":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"1:7754:3413":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:11262:3291":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"5:1472:3304":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"2:25001:4025":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"14:11:7846":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"2:48668:107":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"2:47140:7442":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"2:23922:3754":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"17:10340:4899":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"1:13564:3069":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"1:8995:2423":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"17:10093:4923":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"2:8616:2472":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"5:3362:3327":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"2:3522:131":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"17:13735:5925":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"6:4012:6711":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"1:1507:3299":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"16:5374:4535":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"16:5745:4551":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"16:6468:4569":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"1:8930:2412":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"9:900:6372":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"2:2397:3167":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"2:53616:7526":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"6:6856:7288":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"16:6089:4558":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"16:6381:4502":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"5:3970:5046":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:46424:3882":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"2:47785:3291":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"5:1441:3303":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"6:4373:6843":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"12:2036:2837":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"17:10660:46860":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:53459:7515":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"18:766:5161":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"1:4471:1633":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"1:11261:3272":{"crate_id":1,"path":["std","net","ip","Ipv6Addr"],"kind":"struct"},"16:4775:6024":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"17:13873:5960":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"5:7824:5060":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"1:15316:3273":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:5631:779":{"crate_id":2,"path":["core","iter"],"kind":"module"},"2:48635:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"16:6873:2508":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"1:12260:3354":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:52865:3807":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"17:13529:5853":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"17:13774:5936":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"2:3516:2471":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:50140:3693":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:12994:2367":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"12:2072:3328":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"7:38:44340":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"1:15468:54685":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"2:48398:2901":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"5:2262:4222":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"2:49598:2384":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"2:46914:3829":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"6:3883:6625":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:12026:5453":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"2:49879:2375":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"17:9746:7779":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"17:8929:46669":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"2:13141:1568":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"17:11514:5353":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"17:12302:5498":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"2:3178:228":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"12:1256:3306":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"2:52239:3801":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"2:48754:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"1:2159:2837":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"17:11822:5422":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"1:15990:2183":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"2:2194:7315":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"2:2967:184":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"12:2040:3174":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"5:6475:3174":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"5:8338:4186":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"6:4434:6867":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"6:4277:6791":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:22684:2812":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"2:4066:3205":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"0:379:1844":{"crate_id":0,"path":["termcolor","Color","Blue"],"kind":"variant"},"2:51314:3792":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:14030:3412":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"1:11437:3525":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"17:10775:7804":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"2:22712:58149":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"1:13935:54742":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"6:4526:6904":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"2:24090:4022":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:5990:3581":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"2:38993:2810":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:11172:3266":{"crate_id":1,"path":["std","net","addr","SocketAddr"],"kind":"enum"},"6:4005:6707":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"16:5273:5243":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"6:527:6413":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"17:10530:5298":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"2:47810:178":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:11195:3267":{"crate_id":1,"path":["std","net","addr","SocketAddrV4"],"kind":"struct"},"1:15971:53297":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"2:4051:3206":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"2:5034:3945":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"16:4803:6025":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"2:28180:3729":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"16:2754:4743":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"1:12139:3345":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"17:9587:60844":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"2:57757:7535":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"1:14238:1634":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"16:3077:4813":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"16:7051:4578":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"16:3243:4760":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"5:3336:3326":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"12:2392:6315":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"1:12027:3414":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"2:49445:3831":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"9:776:4310":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"17:9948:7783":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"17:12957:5652":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"1:8760:2422":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"16:2772:4776":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"16:4381:6012":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"17:13917:5975":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"16:7754:4592":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"17:9183:4833":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"17:10503:4847":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"1:10588:3444":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"17:10975:7816":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"1:11429:3536":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"16:6482:4784":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"17:10571:4917":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"17:10851:5294":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"17:12634:5575":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:32284:4075":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"12:2398:6316":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"17:12262:5491":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"2:3423:3645":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:15987:2180":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"2:47095:7437":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"17:10937:7813":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"6:586:6450":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"1:2502:1565":{"crate_id":1,"path":["std","error"],"kind":"module"},"6:3896:6634":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:3812:3619":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:4510:1634":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"2:46020:195":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"2:14:1647":{"crate_id":2,"path":["core","write"],"kind":"macro"},"2:48680:127":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"16:4316:6010":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"6:6016:7151":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"17:10211:7791":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"2:53499:7519":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"17:9646:60841":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"17:9786:7780":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"2:4921:3944":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"5:8355:7313":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"17:10304:4823":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"1:8402:3468":{"crate_id":1,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"1:5763:3221":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"17:11890:5424":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"1:6721:7175":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"2:48702:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"2:48045:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"6:6097:7181":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"1:9656:5092":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"5:3396:3328":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:51437:3776":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"5:4215:3174":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"4:0:2153":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"17:4157:4918":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"17:11615:5372":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"1:12226:2411":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"17:10166:5256":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"6:6671:7278":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"1:1075:3261":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"2:51783:3780":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"16:7131:4585":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"1:12279:3435":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"2:32424:3162":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"2:3347:3664":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"2:3342:3332":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"2:24356:7346":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"2:51415:3772":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"6:1537:6485":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"1:2456:3076":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"6:4464:6882":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"17:9275:5243":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"1:16012:2202":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"16:6035:4528":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"6:4386:6848":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"12:856:3294":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"2:46883:3828":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"2:12105:3985":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"2:49730:2380":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:4473:1644":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"1:4080:127":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"12:1147:3305":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"16:3521:6003":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"17:13377:5811":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"17:10028:7785":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"1:14798:3071":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"5:3488:3172":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"17:12496:5547":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:49834:2317":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"2:47102:2412":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"6:1600:6521":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"6:571:6441":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"6:6007:7150":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:13930:150":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"5:8130:3174":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"17:681:5316":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"2:49408:3977":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"2:3740:3734":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:32524:58609":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum32"],"kind":"enum"},"17:11985:5449":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"5:8325:4185":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"17:11085:4890":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"18:790:4940":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"18:645:4953":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"1:5085:3377":{"crate_id":1,"path":["std","net","ip","display_buffer","IpDisplayBuffer"],"kind":"struct"},"17:10913:7811":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"17:9958:60842":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"1:11159:2316":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"2:23285:3758":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:13418:3538":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"1:4434:2331":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"2:9911:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"17:12512:5549":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"17:9796:60843":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"1:10900:2327":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"17:8954:4835":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"1:5982:3579":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"17:10407:4894":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"2:13212:2358":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"16:7247:4523":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"1:1428:3292":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"17:13016:5704":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:46725:3833":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"6:157:39477":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"2:5185:2467":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"17:13247:5782":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"2:50028:3690":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:4885:3943":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"2:47111:7438":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"6:1740:6609":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"1:9365:3286":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"17:10048:7787":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"17:13421:5822":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"16:6691:4574":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"2:11311:2316":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"6:6153:7204":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"1:14571:3231":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"2:10461:2903":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"2:50314:3998":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:10609:3452":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"2:11431:3969":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"17:2484:46760":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"5:8203:2837":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"1:14929:5102":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"2:14390:3168":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"6:612:6463":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"17:12442:5539":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"16:6173:4562":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"5:5875:5055":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"2:48171:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:4300:2337":{"crate_id":1,"path":["std","io","readbuf","ReadBuf"],"kind":"struct"},"2:56396:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"0:90:1652":{"crate_id":0,"path":["termcolor","StandardStream"],"kind":"struct"},"1:11207:3268":{"crate_id":1,"path":["std","net","addr","SocketAddrV6"],"kind":"struct"},"5:2553:4225":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"16:5396:4536":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"1:1132:3208":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"2:9916:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:5880:3573":{"crate_id":1,"path":["std","os","unix","net","addr","AsciiEscaped"],"kind":"struct"},"2:51637:3800":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"6:4315:6811":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:46544:4122":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"2:46712:2312":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"17:12318:5503":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"1:15110:7626":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"2:50076:3691":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"2:3505:2319":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"5:8176:4154":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"17:11335:4828":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"2:2292:3744":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"17:12130:5474":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"17:13953:5979":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"12:1121:3304":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"12:1162:4392":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"5:3748:160":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"16:7079:4580":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"2:46842:3824":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"5:6954:4140":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"1:12125:3342":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"2:49863:2366":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"2:46537:4121":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"16:6286:4412":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:47734:188":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"16:5639:4545":{"crate_id":16,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"2:48377:2899":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"17:11754:5402":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"1:12015:181":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"2:2283:3743":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"2:52475:3781":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"5:7780:234":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:12920:3991":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"2:53488:7518":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"18:801:4941":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"6:5331:7019":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"1:9196:7883":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"17:12282:5497":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"2:10451:2899":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"0:393:1856":{"crate_id":0,"path":["termcolor","Color","Ansi256"],"kind":"variant"},"16:5566:4543":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"1:3351:3495":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"1:10688:3307":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"2:5165:2915":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"1:5974:3578":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"5:1215:4219":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"6:4110:6757":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"12:928:3295":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"5:2218:4158":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"6:4340:6824":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"1:4639:2296":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"1:11369:3526":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:6774:58425":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"1:16013:2203":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"18:152:52963":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"2:11559:2385":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"6:3877:6624":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"6:6205:7244":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"0:217:1667":{"crate_id":0,"path":["termcolor","NoColor"],"kind":"struct"},"1:11278:3376":{"crate_id":1,"path":["std","net","ip","Ipv6MulticastScope"],"kind":"enum"},"1:1190:10723":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"2:46464:4124":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:3746:3736":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"5:4443:3291":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"6:5547:7095":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:46873:3827":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"2:4000:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"6:1567:6498":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"6:6931:7297":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"5:6652:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"2:5584:10725":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"1:14802:3256":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"17:10545:7796":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"6:4179:6784":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:3427:3647":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"6:4332:6820":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"1:4512:1645":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"2:2926:124":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"17:12143:5266":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"2:3431:3649":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"16:6656:4789":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"1:15999:2189":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:24737:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"5:8295:4184":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"2:3279:106":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"15:0:2160":{"crate_id":15,"path":["addr2line"],"kind":"module"},"17:10464:4841":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"2:56383:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:10586:7801":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"16:7281:4494":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"1:5675:3253":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"1:3339:3489":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"17:11922:5434":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"2:24363:4080":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"16:5427:4538":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"17:12250:5490":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:24803:3471":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"1:2572:127":{"crate_id":1,"path":["std","error","Error"],"kind":"trait"},"2:11587:3973":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"17:10949:7814":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"12:1666:4405":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"1:16014:2204":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"16:3051:4812":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:3411:3640":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"2:49161:4137":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:4397:3509":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"2:3729:224":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:820:5095":{"crate_id":1,"path":["std","thread","local","os","Key"],"kind":"struct"},"17:11797:5418":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"6:3907:6642":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"5:69:3171":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"1:15062:7625":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"6:6925:7296":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"18:837:2360":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"1:14232:2330":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"16:6331:4411":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"17:10899:7807":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"2:49802:2383":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"17:10801:4914":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"17:13196:5768":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"17:13938:5978":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"5:923:4236":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:46924:3830":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"12:2052:3325":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"2:50355:4062":{"crate_id":2,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"16:7741:4591":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"1:10449:5096":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"17:11457:5337":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"16:5668:4547":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"6:5247:6969":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"17:11102:46677":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"2:8506:3726":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"6:6937:7298":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:3175:135":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:49630:2388":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:14006:187":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"16:5238:45093":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"1:15992:2184":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"10:0:2156":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"9:41:4313":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"18:704:5151":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"1:11680:3393":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"2:56461:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:23088:3289":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"5:432:1600":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"17:9004:46670":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"2:47129:7440":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"6:6184:7230":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"1:15995:2187":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"2:48939:146":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"5:8438:3172":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"16:3314:4741":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"2:46795:3821":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"2:56435:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:2937:179":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"9:686:4261":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"2:4:979":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"17:11305:5589":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"1:5741:3218":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"1:15459:7628":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"17:12469:5543":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"5:3044:59534":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"6:5178:6937":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"1:12158:3346":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"2:50306:4003":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"6:1680:6579":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"12:2419:3170":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"17:13452:5830":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"6:3960:6685":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:49319:3971":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"2:46179:2913":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"17:12921:5621":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"2:13915:138":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"2:52445:3778":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:2177:3326":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"6:545:6421":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"6:6135:7193":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"17:12770:5599":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"2:3182:227":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"2:3734:137":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"2:48129:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"16:4439:6014":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"12:1784:5044":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"17:12557:5556":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"16:2959:4753":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"1:12738:3478":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"2:12673:2003":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"1:14235:1633":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"6:6214:7247":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:51252:3771":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"16:7141:4586":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"17:10223:4838":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"17:11212:4888":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"17:1236:7775":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"1:7685:3410":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"6:5567:7109":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"2:14041:7863":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"12:979:3302":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"6:5216:6956":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:3492:116":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:7817:3419":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"2:7896:3841":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1:2027:145":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"1:8510:3344":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"6:4392:6851":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"1:11363:3525":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"1:12401:3076":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"1:15081:3354":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"1:15220:3369":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"2:49370:1669":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"6:4296:6803":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"1:8503:3343":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"16:6159:4492":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"2:23141:3757":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"6:593:6453":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"2:48738:2897":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"17:11474:5342":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"1:2594:7881":{"crate_id":1,"path":["std","error","from","StringError"],"kind":"struct"},"16:7659:4590":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"17:12348:5522":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"17:10445:5204":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"1:4032:3434":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"17:12117:5471":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"12:0:2158":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"2:32472:58606":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum16"],"kind":"enum"},"2:3581:3165":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"2:5111:2913":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"18:739:7769":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"2:49500:3983":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"6:5455:7075":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"14:250:6265":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"5:4628:235":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"5:5788:5046":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"1:10824:3478":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"1:4394:3508":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"6:1727:6606":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:3401:3330":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"5:8361:216":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"16:7379:4512":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"1:6719:7173":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"5:6672:2406":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"17:9291:5244":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"16:7200:4507":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"6:533:6416":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"5:2200:5048":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"6:4198:6785":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"16:3265:4761":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"9:927:44444":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"1:12078:54716":{"crate_id":1,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"2:49702:2385":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"17:11530:5357":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"1:1530:3302":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"1:1157:10722":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"6:6896:7289":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:15188:3361":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"16:3297:4814":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"2:51474:3761":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:1524:3301":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"0:330:1605":{"crate_id":0,"path":["termcolor","ColorChoice","Always"],"kind":"variant"},"2:13232:2357":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:9082:2416":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"17:13908:5973":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"17:13215:5769":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"2:13227:2359":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"6:5288:6990":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"2:50561:3203":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"2:48914:3316":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"17:12543:5554":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"2:53403:3802":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:6881:3234":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"6:672:39811":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"16:7063:4579":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"6:161:39478":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"12:880:3172":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"5:8106:3169":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"1:16008:2198":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"2:10453:2900":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"17:13887:5967":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"2:51807:3762":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2:5605:3876":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"17:13840:5953":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"6:634:6476":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"12:353:6311":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"17:10558:7799":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"2:24836:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"17:13565:5862":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"17:9988:46722":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"1:12731:128":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"2:23812:3288":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"17:13612:5875":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"1:11514:2501":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"6:1626:6537":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:47742:205":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"17:11017:127":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"6:1551:6490":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"2:3389:3635":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"6:0:798":{"crate_id":6,"path":["libc"],"kind":"module"},"2:51492:7465":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"17:9636:7777":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"6:4075:6738":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"6:5260:6978":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:51761:3777":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"17:11068:4834":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"2:48650:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"2:22697:58149":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"2:51685:3785":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"2:2957:177":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"2:49897:2377":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:14566:7618":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"2:53514:7520":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:51206:3791":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"9:603:8127":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"14:56:5337":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"1:9085:2417":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"17:2512:4896":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"16:6407:4567":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"17:10187:7789":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"2:2187:578":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"16:7169:4505":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"5:2777:4224":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"17:11256:5313":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"2:10455:2901":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"2:14314:141":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"17:12527:5553":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"12:472:60833":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"2:49888:2376":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"2:10459:2902":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"2:52163:3794":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:6981:3233":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"16:7309:4493":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"6:6229:7254":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:46484:4118":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"1:3323:3484":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"6:5439:7071":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"0:391:1854":{"crate_id":0,"path":["termcolor","Color","White"],"kind":"variant"},"11:46:6321":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"5:374:4165":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"2:47683:2508":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"16:5530:4542":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"17:10962:7815":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"2:48969:7455":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:50532:158":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:10730:2312":{"crate_id":1,"path":["std","error","Chain"],"kind":"struct"},"16:5605:4544":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"2:6514:3820":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"2:51853:3766":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:49580:2316":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"12:1682:4406":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"2:50290:4000":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"2:3364:3672":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"5:3329:3291":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"16:3576:5171":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"16:3743:6005":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"1:14099:5101":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"2:3775:3618":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:9649:54753":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"5:8160:2837":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"1:16005:2195":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"17:11701:5389":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:46734:3836":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"5:7379:2837":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"17:13233:5777":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"6:1764:6618":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:53007:3775":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"2:53479:7517":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"17:13557:5860":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"6:4516:6899":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"6:3981:6693":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"2:11573:3972":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:53195:3779":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"16:7792:4526":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"2:46824:3823":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"17:12674:5580":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"2:12959:3993":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:11443:3545":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"2:46563:3886":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:12063:7612":{"crate_id":1,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"1:4078:205":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"16:7415:4510":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:50175:3696":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"2:51230:3783":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"2:23078:3238":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"2:22729:58276":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"1:16000:2190":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"17:11810:5419":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"16:2792:4475":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"2:49398:3976":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"2:3169:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"16:4840:6026":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"5:1011:3291":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"6:5210:6955":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"6:4135:6770":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"1:1041:3284":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"0:385:1848":{"crate_id":0,"path":["termcolor","Color","Cyan"],"kind":"variant"},"17:11354:4827":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"1:3366:1566":{"crate_id":1,"path":["std","io"],"kind":"module"},"2:46454:4123":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"17:13073:5743":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"6:6643:7275":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"2:23237:15957":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"6:4474:6883":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:2888:104":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"17:13155:5755":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"17:11784:5414":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"2:50549:3204":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"2:3368:3439":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"2:4670:2296":{"crate_id":2,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"12:787:3296":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"17:10198:7790":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"6:3972:6688":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"2:48255:2407":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"9:27:4312":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"16:5326:4532":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"1:2188:3328":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"12:971:3301":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"2:32464:4065":{"crate_id":2,"path":["core","mem","valid_align","ValidAlign"],"kind":"struct"},"2:9028:2356":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"2:10728:3660":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"11:54:4382":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"17:13495:5845":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"6:5204:6952":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"6:618:6466":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"16:6931:4798":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"2:10440:109":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"1:1459:3294":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"1:12240:1569":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"12:114:60836":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"16:4660:6020":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"17:12585:5562":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"2:49538:2374":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"6:4454:6876":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:46781:7433":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:11622:3390":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"2:14278:201":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"1:3197:3481":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"16:7295:4495":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"2:50458:201":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"1:8154:3468":{"crate_id":1,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"18:611:4951":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"17:13331:5802":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"17:11725:5391":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"1:14313:3133":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"17:13029:5711":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"1:6481:3241":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"17:13472:5837":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"16:6433:4568":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"16:6907:4576":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"1:10974:3432":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"17:11907:5430":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"1:4741:2308":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"17:2314:4898":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"17:10390:4844":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"2:22952:3878":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"18:678:142":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:3417:3634":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:7139:2500":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"5:4306:3292":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"17:10394:4895":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"16:3686:6004":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"16:4628:6019":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"2:13427:7862":{"crate_id":2,"path":["core","str","lossy","Utf8Lossy"],"kind":"struct"},"17:13257:5783":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"1:12055:3416":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:8543:136":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:46040:198":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:4748:2311":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"17:11968:5446":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"2:46577:100":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"17:13859:5958":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"2:56026:3858":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"16:7110:4583":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"17:11956:5444":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"17:12573:5560":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"17:10240:4877":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"2:51982:7468":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:7814:3417":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"6:4493:6891":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"1:11094:1859":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"2:3519:130":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"1:15036:53295":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"2:23276:3238":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"16:4467:6015":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"6:3987:6695":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"8:0:2154":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"17:9883:60845":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"2:47961:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"9:722:4264":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"1:3341:3490":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"12:399:4398":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"6:5998:7144":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"0:177:1718":{"crate_id":0,"path":["termcolor","BufferWriter"],"kind":"struct"},"17:13507:5848":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"2:23824:58152":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"12:764:3292":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:50310:4004":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:12769:7888":{"crate_id":1,"path":["std","sys","unix","fs","TimespecDebugAdapter"],"kind":"struct"},"2:46594:4052":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:9661:54752":{"crate_id":1,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"17:13094:5748":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"0:92:1660":{"crate_id":0,"path":["termcolor","StandardStreamLock"],"kind":"struct"},"1:11115:2309":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"5:7642:3179":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"6:6120:7188":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"16:4411:6013":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"2:3376:3676":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"16:3155:4756":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"17:11013:7819":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"17:10788:7806":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"1:4607:2336":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"5:7620:3178":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"5:5889:5058":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"16:6342:4566":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"6:6250:7266":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"17:12646:5576":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"18:0:2163":{"crate_id":18,"path":["memchr"],"kind":"module"},"17:11653:5376":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"17:9920:7782":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"5:8121:4238":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"2:49550:2371":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"16:5784:4552":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"2:5208:2916":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:1472:3174":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"2:10688:146":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"6:4061:6730":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"1:4684:2306":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:14111:58631":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"16:6630:4787":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"16:2905:4752":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"1:8861:7883":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"6:4048:6725":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"0:387:1850":{"crate_id":0,"path":["termcolor","Color","Magenta"],"kind":"variant"},"16:3199:4758":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"6:4321:6814":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"9:996:4329":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:3277:218":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:1446:3293":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"18:866:4947":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"5:4242:5046":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"17:10318:4845":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"5:1939:3172":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"2:51539:3805":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"16:4975:6030":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"2:11545:2386":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"6:4410:6857":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"6:4020:6713":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"6:1576:6504":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"1:1633:3304":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"15:230:4414":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"2:10457:189":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"2:53365:3782":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"17:13428:5823":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"16:3103:4766":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"6:5301:6996":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"12:1183:4393":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"5:4599:5049":{"crate_id":5,"path":["alloc","collections","vec_deque","spec_extend","spec_extend","WrapAddOnDrop"],"kind":"struct"},"2:46501:2376":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:24182:3927":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"5:1195:59402":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"16:6717:4575":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"16:7826:3854":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"2:46667:7868":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"17:10253:4880":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"2:10390:1567":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"17:10489:5257":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"6:4098:6751":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"16:2883:4770":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"5:2310:4246":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"1:8215:5077":{"crate_id":1,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"17:10598:7802":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"16:2839:4750":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"18:668:4955":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:11354:2367":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"17:9836:60848":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"17:12360:5524":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"2:13965:59267":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:11146:2313":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"17:10988:7817":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"17:9259:5242":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"2:3758:3737":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"0:414:1960":{"crate_id":0,"path":["termcolor","ParseColorError"],"kind":"struct"},"17:510:7773":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"1:1501:3298":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"2:24902:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"2:48391:2900":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"2:21:672":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"1:10667:10719":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"1:1642:3305":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"2:46893:3834":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2:2219:1050":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"2:51904:7466":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"17:9579:128":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"1:3561:2324":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"6:4256:6790":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"1:3658:5076":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"16:5855:4553":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"17:10622:5259":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"5:1486:3306":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"17:12406:5534":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:51354:7463":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2:49997:3686":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"12:1238:4395":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"2:10122:3954":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"14:231:4146":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"2:2062:2296":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"2:22899:3865":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"12:2280:3305":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"17:12731:5588":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"2:52005:7469":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"2:8591:120":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"5:7111:5060":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"2:2508:3628":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"17:10058:4928":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"2:8748:157":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:16001:2191":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"9:1056:4323":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"18:661:4954":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"6:4509:6896":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"6:5478:7081":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"9:809:3388":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"6:6268:7269":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:3577:3164":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"16:7090:4581":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"5:920:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"17:12482:5544":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"16:7100:4582":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"2:53655:7527":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"16:6679:4791":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"12:162:4396":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"12:183:4400":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"0:376:1816":{"crate_id":0,"path":["termcolor","Color"],"kind":"enum"},"1:7997:5077":{"crate_id":1,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"1:16006:2196":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2:8250:2335":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:10836:3480":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"2:46523:2375":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"6:1694:6590":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"5:5536:2406":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"1:15376:3524":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"2:48961:7454":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"5:3894:4212":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"5:5415:2296":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"1:10846:3232":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"5:8262:3314":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"1:2183:3327":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"16:6099:4559":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"16:6012:4487":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"6:4028:6716":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"1:8661:2408":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"1:7529:119":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"2:13221:2360":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"2:53578:7524":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"18:637:5151":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"1:10399:7895":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"1:9161:2419":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"16:7323:4511":{"crate_id":16,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"17:11234:4886":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"1:12245:2413":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"2:3406:3331":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:53593:7525":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"16:3007:4754":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:4378:2837":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"17:10610:7803":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"17:11282:46678":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"6:4055:6728":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"18:720:5152":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"1:1152:7876":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"1:10587:3238":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"1:15483:4423":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"5:8383:4144":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"18:829:4944":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"16:6518:4504":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"16:2733:4727":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"17:9206:46675":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"2:50011:3689":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"5:2330:4221":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"16:6595:4503":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"17:11628:5374":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"18:136:52962":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"18:849:4945":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"17:10082:4922":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"5:5093:660":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"16:4871:6027":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"6:5398:7053":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"1:1302:143":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"5:8309:4052":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"6:6034:7160":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"6:5229:6957":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:3337:3438":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"17:9676:60840":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"1:10474:5098":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"1:14620:118":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"1:14584:7623":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"2:45996:194":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"2:8510:3724":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:11166:2317":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"2:3247:115":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"17:10814:4915":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"2:22752:58274":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"2:9408:2511":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"6:5974:7127":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"17:13708:5913":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"1:3194:3479":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"5:8372:4143":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"2:24290:38834":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:696:3443":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:51284:3804":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"6:4425:6861":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"2:46165:3854":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"1:7949:3467":{"crate_id":1,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"17:13660:5912":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"12:952:3300":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"2:46833:3839":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"5:6688:4168":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"16:7121:4584":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"2:22731:58272":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:15955:8135":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"17:13584:5867":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"2:52085:3806":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"5:3370:3325":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"1:10614:3466":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"1:6885:3248":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"2:8556:2473":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"17:10422:7792":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"17:11002:7818":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"18:774:5151":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"1:15739:5105":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"16:3478:4762":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"17:12746:5589":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"17:10104:4924":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"6:4538:6909":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"1:6809:3259":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"5:1618:2837":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"0:377:1843":{"crate_id":0,"path":["termcolor","Color","Black"],"kind":"variant"},"1:16007:2197":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"5:1091:5046":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"16:5649:4546":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"6:1634:6542":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"17:10068:4817":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"16:5257:5242":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:3281:220":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"1:11461:3258":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"12:777:2837":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"16:4271:6009":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"1:12250:2420":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"16:5941:4556":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"1:5952:3576":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"17:2543:4839":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"16:5303:4531":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"1:3200:2305":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"2:24273:7334":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:1017:3468":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"9:234:4288":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"2:45933:3875":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"17:10291:4820":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"17:9087:46673":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"0:332:1608":{"crate_id":0,"path":["termcolor","ColorChoice","AlwaysAnsi"],"kind":"variant"},"6:4356:6832":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"1:15996:2188":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"2:10595:7861":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"2:46106:4045":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"17:13539:5856":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"16:3402:4476":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"9:963:4328":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"18:782:5151":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"5:1597:3291":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:46610:4053":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"17:12237:5489":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"2:48087:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"17:13755:5931":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"1:14596:3480":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"16:6141:4561":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"0:389:1852":{"crate_id":0,"path":["termcolor","Color","Yellow"],"kind":"variant"},"2:3440:3654":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"2:48213:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:6104:3533":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"17:299:7772":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"16:7155:4587":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"1:0:1331":{"crate_id":1,"path":["std"],"kind":"module"},"2:49648:2387":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"2:46476:2377":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:2934:180":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"2:5101:3951":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"1:7463:185":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"17:12700:5582":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"2:24671:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"6:4067:6733":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:23613:3759":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"1:10979:2328":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"2:4740:3752":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"17:10136:7781":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"17:13817:5952":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"6:4416:6858":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"1:10829:3231":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"2:24265:7333":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"6:1704:6596":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"1:10721:3071":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"2:50154:3694":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"17:9517:2314":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"1:14627:2307":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"1:1488:3295":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:53117:3795":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:49748:2381":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"6:4160:6783":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"2:3352:3666":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"1:1438:2837":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"6:513:6405":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"2:46145:3207":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"1:14815:3416":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"17:11168:5310":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"5:8197:2837":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"17:12222:5486":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"2:24161:7323":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"16:5923:4555":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"17:13361:5807":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"17:13281:5785":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"2:51385:3784":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2:24019:4021":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"17:9826:4845":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"1:9616:5091":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"5:3951:3172":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"1:15012:3414":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"6:4088:6744":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"17:10015:7784":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"5:8146:59456":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"2:48951:3388":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"0:95:1663":{"crate_id":0,"path":["termcolor","BufferedStandardStream"],"kind":"struct"},"17:13794:5939":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"1:11136:2312":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"18:694:4956":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:49960:3682":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:2793:3201":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"2:24:600":{"crate_id":2,"path":["core","env"],"kind":"macro"},"2:3372:3440":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"17:9756:60847":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"5:7257:5046":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"17:10643:5261":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"2:52321:3786":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"17:13961:5982":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"12:1881:145":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"0:29:1573":{"crate_id":0,"path":["termcolor","WriteColor"],"kind":"trait"},"1:7637:3407":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"6:3933:6662":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"1:10682:10721":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"17:9930:60839":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"6:4308:6810":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"17:11671:5385":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"17:12209:5484":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"16:5348:4533":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"2:24935:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"17:542:4462":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"1:14637:53299":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"1:10725:4228":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"6:6027:7156":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"16:6050:4557":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"2:51829:3765":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:13957:3413":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"16:2813:4769":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"2:8001:3814":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"11:0:2157":{"crate_id":11,"path":["adler"],"kind":"module"},"2:8071:3602":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"1:10698:3308":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"2:3103:3238":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"17:9396:5246":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"17:13515:5851":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"16:7768:4496":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"17:12620:5574":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"2:14217:3629":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"2:46397:2376":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"5:3882:2327":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"2:50103:3692":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"17:11494:5352":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"1:1518:3300":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"1:12740:5100":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"16:4495:6016":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"17:13306:5794":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"2:51455:7464":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"1:12203:3349":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"2:37750:178":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:51731:3773":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"2:46763:3818":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"12:2412:6318":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"1:10705:3064":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"2:49379:3974":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"2:56422:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"16:4573:6017":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"1:13583:54538":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"16:6604:4573":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"1:15338:3523":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"16:5959:4480":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"16:5176:6031":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"16:6549:4506":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:50165:3695":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"17:12003:5450":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"16:5412:4537":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"9:749:4265":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"1:12067:53298":{"crate_id":1,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"0:334:1612":{"crate_id":0,"path":["termcolor","ColorChoice","Auto"],"kind":"variant"},"16:5948:4749":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"12:933:3298":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"16:5362:4534":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:24214:7328":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"2:56409:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"6:5186:6939":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:4728:3751":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:10388:5316":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"2:51585:3793":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:6812:3244":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"1:1619:3303":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"2:49844:2379":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"2:46743:3816":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"2:10389:205":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"2:47649:2836":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"6:4532:6906":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"1:11582:3388":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"1:6003:3582":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"2:49556:2370":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:8311:3468":{"crate_id":1,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"5:1843:5046":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"2:47725:3138":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"2:11073:3238":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"17:12070:5463":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"16:7355:4490":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"12:2066:3327":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"6:5390:7052":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"16:6643:4788":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:50302:4005":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"17:12093:5469":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"2:22750:58277":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"2:12072:3984":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"12:559:143":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"2:49458:3979":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"17:12383:5533":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"2:48384:2898":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"2:24377:4038":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"2:13202:2364":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"1:10969:3431":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"16:3340:4742":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:3648:3166":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"6:4379:6846":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"16:6504:4571":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"17:13138:5753":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"2:10723:3315":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"16:2861:4751":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"1:2166:3172":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"17:12758:5592":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:46138:3738":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"16:7369:4491":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"16:7782:4497":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"2:47919:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:1415:3291":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"16:6026:4485":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"2:3275:2807":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"1:894:3447":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"2:46412:3881":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"0:336:1614":{"crate_id":0,"path":["termcolor","ColorChoice","Never"],"kind":"variant"},"17:11547:5359":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"2:24250:3923":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:11374:3527":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"12:815:3297":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"2:32624:58607":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum64"],"kind":"enum"},"2:51140:7461":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"2:3274:1599":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"17:10476:4846":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"1:5669:3255":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"6:607:6461":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"2:46582:4051":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"16:3221:4759":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"5:4515:4197":{"crate_id":5,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"6:5582:7120":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:8307:58716":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"17:12716:5584":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"17:12196:5482":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"5:4699:5051":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"16:3029:4755":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"16:7471:4486":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"17:11640:5375":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"17:13167:5760":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"2:23918:3238":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"17:12687:5581":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"12:2404:60831":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"17:9131:46674":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"17:11937:5439":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"17:12417:5536":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"2:50519:4010":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"17:12015:5452":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"16:5721:4550":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"1:14561:7616":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"18:811:4942":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"6:4242:6789":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"6:1748:6613":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"17:13721:5919":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"2:46530:4120":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"1:8432:4211":{"crate_id":1,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"17:13899:5969":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:45980:196":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"2:50476:190":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"6:6954:7303":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"6:5982:7132":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"1:16004:2194":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"1:12255:2421":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"1:14604:129":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"1:15044:3435":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"7:0:1481":{"crate_id":7,"path":["unwind"],"kind":"module"},"12:1703:4407":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"5:1685:194":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"17:13463:5834":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"1:13782:3421":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"12:869:3174":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"5:1560:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"18:651:4950":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"1:11307:7590":{"crate_id":1,"path":["std","net","ip","fmt","Span"],"kind":"struct"},"17:9033:46671":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"2:51951:7467":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:8049:3468":{"crate_id":1,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"6:4346:6826":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:13278:3685":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"2:49471:3980":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:14945:5103":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"1:6959:3249":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"16:4903:6028":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"17:3743:4911":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"16:5698:4549":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"17:13522:5852":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"17:13785:5937":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"17:12157:5478":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"2:3380:3678":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"2:46753:3817":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"12:2045:3172":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"1:11153:2314":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"18:754:60855":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"17:10831:4845":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"2:50511:4009":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"17:12431:5538":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"17:10455:4842":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"6:4485:6889":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"1:1651:3306":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"18:729:60853":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"17:9431:5247":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"1:3325:3485":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"2:47666:3292":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"17:13345:5804":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"1:11605:3389":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:24968:164":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"2:46062:197":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"2:2921:183":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"6:4440:6868":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:8323:2402":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"15:248:4415":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"6:6902:7290":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"2:23230:3238":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"17:13147:5754":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"6:5240:6965":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"1:4723:1567":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"1:9883:5095":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"12:940:3299":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"1:9755:3518":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"5:7212:3174":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"2:51184:3803":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:11664:3391":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"16:7449:4498":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2:49684:2386":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"2:23025:3866":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"0:383:1847":{"crate_id":0,"path":["termcolor","Color","Red"],"kind":"variant"},"1:14951:5104":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"1:2397:3059":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"1:11674:3291":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"5:994:4237":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"5:1235:4220":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"14:47:7846":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"16:6310:4565":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"6:3966:6686":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"17:13323:5799":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"2:3358:3669":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:7033:3838":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:47658:3291":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"1:12171:3347":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"0:381:1846":{"crate_id":0,"path":["termcolor","Color","Green"],"kind":"variant"},"6:5426:7067":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"5:7849:5066":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"6:4362:6835":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:46172:3855":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"17:9361:5245":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"16:5443:4539":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"6:5378:7045":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"6:1558:6493":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"16:6190:4563":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"1:16011:2201":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"2:32820:3719":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"6:521:6410":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"6:6665:7276":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"17:13404:5815":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"9:469:8117":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"17:10435:4843":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"2:46403:7422":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"2:50294:4002":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"16:3770:6006":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"17:10266:4817":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"0:357:1583":{"crate_id":0,"path":["termcolor","ColorSpec"],"kind":"struct"},"1:9788:5093":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockReadGuard"],"kind":"struct"},"1:15397:3531":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"2:9409:2510":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"18:621:5150":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"0:0:2052":{"crate_id":0,"path":["termcolor"],"kind":"module"},"1:16009:2199":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"5:783:222":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"18:857:4946":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"1:12298:3436":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"6:4208:6786":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"2:47793:3292":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"3:321:205":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"2:47617:176":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"16:4942:6029":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"17:607:7774":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"6:6080:7179":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"6:6967:7304":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"2:52659:3787":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"14:0:2159":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"16:7684:4500":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:3104:3658":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"2:3559:3874":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"1:5797:3222":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:24770:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"17:10364:4897":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"2:2866:2355":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"6:5366:7040":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:3166:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"2:24238:3922":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"6:4402:6854":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"2:2863:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"12:379:4399":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"2:51160:7462":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"18:712:2812":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"17:8902:46668":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"2:49490:3982":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"2:47801:2837":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"17:0:2162":{"crate_id":17,"path":["object"],"kind":"module"},"1:10599:54686":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"17:13602:5870":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"6:5419:7065":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"2:9529:2358":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"2:49872:2365":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"2:46861:3826":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"16:5516:4732":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"16:3177:4757":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"2:23287:3757":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:14546:3260":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"17:9466:5248":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"17:9326:4825":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"2:49388:3975":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"1:15993:2185":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"2:3287:1677":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"1:5811:3224":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"1:10859:129":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"5:6411:223":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"12:2253:3303":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:3269:211":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"6:539:6418":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"17:9160:4887":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"1:5008:3264":{"crate_id":1,"path":["std","net","addr","ToSocketAddrs"],"kind":"trait"},"6:6114:7186":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"16:547:4734":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"1:11423:3580":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"6:1531:6482":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"1:13919:3411":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"2:9031:3599":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"2:32458:3163":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:6717:7171":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"5:1457:3305":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:11221:3270":{"crate_id":1,"path":["std","net","ip","IpAddr"],"kind":"enum"},"2:51336:3796":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:11087:2335":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:8547:151":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"2:24704:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"1:9793:5094":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockWriteGuard"],"kind":"struct"},"1:12187:3348":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"2:53257:3799":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"5:3759:3291":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"6:1721:6603":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"17:13352:5806":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"5:5315:200":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"17:13595:5868":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"17:11314:4829":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"2:47877:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:3396:3329":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"16:4599:6018":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"17:11945:5441":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"9:0:2155":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"1:2362:600":{"crate_id":1,"path":["std","env"],"kind":"module"},"1:2155:3291":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"5:3038:2889":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"5:1663:3296":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2:53540:7522":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"19:117:5146":{"crate_id":19,"path":["panic_unwind","dwarf","eh","EHContext"],"kind":"struct"},"6:4142:6772":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"1:15960:10724":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"16:5902:4554":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"1:1493:3296":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"2:50188:7871":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunk"],"kind":"struct"},"2:37774:2812":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"6:3920:6652":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"6:4218:6787":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"19:0:994":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"17:11742:5399":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"1:15989:2182":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"1:8825:162":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"1:7671:3409":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"17:10127:4845":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"6:5149:6913":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"1:2395:3058":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"5:8250:3170":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"6:1912:40785":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"2:13432:39074":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunksIter"],"kind":"struct"},"9:157:4280":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"6:4081:6741":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:7954:54751":{"crate_id":1,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"16:3494:5167":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"12:750:3291":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"1:7308:7882":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"16:7184:4800":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"1:3682:2320":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"13:232:6310":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:46224:3902":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"16:3908:6007":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"2:5030:2914":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"17:11563:5364":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"1:10639:3133":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:6591:3835":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"12:895:4384":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"5:6257:3178":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"2:22988:3730":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"5:4643:5051":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"1:9489:8168":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"16:2937:4775":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"2:10447:119":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"1:12117:3291":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"17:11433:5336":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"2:46657:5068":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"16:4689:6021":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"2:50318:3999":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"17:10925:7812":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"1:11411:3266":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"18:744:60852":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"1:5522:3531":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"1:16003:2193":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"17:13129:5749":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:53525:7521":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"2:46507:4119":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"2:10678:142":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"6:6243:7263":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"1:2751:3200":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"17:10874:5295":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"17:11591:5368":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"17:13271:5784":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"17:10115:4925":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"1:5757:3220":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"16:5289:4488":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"2:23618:15976":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"2:7810:2844":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"2:5408:4115":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"6:4038:6722":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"6:3993:6698":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"16:6858:4795":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"5:3839:5046":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"17:9064:46672":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"1:6883:3247":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"1:15173:3360":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"17:11579:5365":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"5:1674:3297":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"2:24198:7325":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"16:6557:4572":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"2:3384:3680":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"2:3717:4046":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"5:792:108":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"2:25370:3934":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"17:9561:4836":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"5:3341:4155":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"2:24869:165":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"6:1662:6567":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:5807:3223":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"16:7702:4499":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"1:4666:2304":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"16:7721:4501":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"1:15024:3415":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"16:7208:4588":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"6:1733:3537":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"13:120:44988":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"2:50298:4001":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:46804:3822":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"6:6129:7192":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:47835:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"2:10443:109":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"17:10147:5254":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"2:52209:3798":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"2:4752:102":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"12:1103:3303":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"9:1020:4330":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"2:12649:4132":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"6:1544:6488":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"6:1621:6535":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"2:46440:3884":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2:12883:3990":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"16:7868:127":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"17:11130:5308":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"7:85:44347":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"12:432:4397":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"2:11393:3968":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"16:5217:4744":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"16:5460:4540":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"1:5749:3219":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"1:6579:3281":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"2:56448:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:49165:4136":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"6:580:6447":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"18:885:4948":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"1:11418:3577":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"17:9873:7781":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"1:3736:2326":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"1:2171:3325":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"5:6764:2296":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"1:9740:3517":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"16:7264:194":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"16:7025:4481":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"17:9716:60846":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"17:13747:5928":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"2:10127:3955":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"16:6490:4570":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"1:5395:3523":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"17:10039:7786":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"2:14227:4011":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"5:3048:59533":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"6:4446:6871":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"5:8168:194":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"2:2269:3739":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:2433:3069":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"16:5685:4548":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"1:8410:3388":{"crate_id":1,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"1:16002:2192":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"6:6908:7291":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"2:53441:3767":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"6:565:6438":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"6:5488:7083":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:5039:3946":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"2:51615:3797":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:3192:128":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"2:50286:3997":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"1:4732:57642":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"17:13440:5829":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"6:4270:3544":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"6:88:39411":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"14:244:6263":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"2:10400:134":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"12:843:3293":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"6:1669:6571":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"1:10819:3285":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"16:7238:4509":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:46703:3832":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"9:1075:4331":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"2:47120:2336":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"3:0:430":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"16:3129:4765":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"17:13763:5932":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"2:47674:2837":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:0:488":{"crate_id":2,"path":["core"],"kind":"module"},"17:13037:5713":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"6:5433:7068":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"1:15214:3368":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"2:3435:3651":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:1149:7874":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"6:5293:6991":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"1:10884:3502":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"5:3375:4156":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"5:3040:7309":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"17:9706:7778":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"1:11532:3378":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"5:1644:3294":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2:2769:579":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:3278:217":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"17:9240:4824":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"6:6688:7287":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"5:5837:2363":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"6:1588:6513":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"1:15118:3423":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"2:46687:3831":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:11103:2307":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"0:237:1668":{"crate_id":0,"path":["termcolor","Ansi"],"kind":"struct"},"2:23001:3238":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"5:1607:3292":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"1:3648:1638":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"5:8455:3173":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"14:189:7846":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:52509:3763":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"17:8849:4884":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"16:7637:4589":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"17:13293:5788":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"2:48930:3661":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"16:4198:6008":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"2:5156:3952":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:48641:133":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"1:7354:186":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"12:2059:3326":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"2:50468:7460":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"1:783:5095":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"9:692:4263":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"17:11181:5312":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"5:3772:3292":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"5:1653:3295":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"12:466:60832":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"1:11487:3246":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"2:49480:3981":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:11244:3271":{"crate_id":1,"path":["std","net","ip","Ipv4Addr"],"kind":"struct"},"1:6707:3221":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"1:5819:3226":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"17:11713:5390":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"2:48003:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"6:4116:6760":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"17:13573:5863":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"16:4351:6011":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"2:12943:3992":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"14:194:45016":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"2:3172:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"6:4148:6774":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"1:12009:3412":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"17:13975:5985":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"5:3039:59531":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"6:626:6471":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"12:2032:3291":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"2:46813:3837":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"2:11286:3292":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"17:11031:46676":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"17:11409:5322":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"0:189:1738":{"crate_id":0,"path":["termcolor","Buffer"],"kind":"struct"},"17:12892:5601":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"1:10876:118":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"16:4743:6023":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"2:57736:7534":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"1:10892:2325":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"1:7699:3411":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"1:6341:3543":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"12:1203:4394":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"6:1526:6480":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:49784:2382":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"5:1635:3293":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"16:6533:4782":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"17:13180:5765":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"16:6980:4577":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"6:1606:6523":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"1:1482:3172":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"2:52399:3774":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"14:216:45022":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"1:11350:7596":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"16:6075:4489":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"2:12205:5074":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"1:2458:3077":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"2:50322:121":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"2:23082:3287":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:8668:2409":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"6:1712:6597":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:11327:53291":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"17:12607:5573":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"0:329:1602":{"crate_id":0,"path":["termcolor","ColorChoice"],"kind":"enum"},"2:24638:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"1:11465:7160":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"5:0:277":{"crate_id":5,"path":["alloc"],"kind":"module"},"1:16010:2200":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"17:12455:5541":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"2:53563:7523":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"17:13549:5859":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"1:8947:3558":{"crate_id":1,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"2:47716:2509":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:1497:3297":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"1:4400:3510":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"17:11689:5386":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:11466:2384":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"12:2269:3304":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"1:2162:3174":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"16:4716:6022":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"1:6459:3244":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"2:49854:2368":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:11691:3394":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"6:6914:7292":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"16:5998:4508":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"6:6943:7299":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"16:5887:4739":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"17:11603:5369":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"6:6979:7306":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"1:7651:3408":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"16:6130:4560":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"17:1311:4929":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:38930:3202":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"17:12048:5462":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"1:12041:3415":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"6:4287:6798":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"17:12660:5577":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"2:50343:3441":{"crate_id":2,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"1:8496:202":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:46852:3825":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:15494:4423":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"1:12133:2837":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"6:4230:6788":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"6:6057:7178":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"1:15202:3362":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"17:11381:5318":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"2:24389:4037":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"6:601:6458":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"16:0:2161":{"crate_id":16,"path":["gimli"],"kind":"module"},"17:294:7771":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"18:169:52964":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"6:4127:6765":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"5:7453:5046":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2:11082:214":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"16:6060:4529":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"2:53468:7516":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"5:8278:101":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"17:13369:5809":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"2:9407:2512":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"16:6277:4564":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"16:2981:4764":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"15:269:4419":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"18:820:4943":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:3310:2470":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"1:900:3448":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"5:3300:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"17:11769:5408":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"17:11142:5309":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"2:49524:2378":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"17:13481:5838":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"17:9539:4885":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2:53319:3764":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"2:49419:3978":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"6:5274:6989":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"2:49982:3683":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"2:11504:3970":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"}},"external_crates":{"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"}},"format_version":18}